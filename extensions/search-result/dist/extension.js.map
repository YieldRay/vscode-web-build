{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://search-result/./src/extension.ts","webpack://search-result/external commonjs \"vscode\"","webpack://search-result/../../node_modules/path-browserify/index.js","webpack://search-result/webpack/bootstrap","webpack://search-result/webpack/startup"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as pathUtils from 'path';\n\nconst FILE_LINE_REGEX = /^(\\S.*):$/;\nconst RESULT_LINE_REGEX = /^(\\s+)(\\d+)(: |  )(\\s*)(.*)$/;\nconst ELISION_REGEX = /⟪ ([0-9]+) characters skipped ⟫/g;\nconst SEARCH_RESULT_SELECTOR = { language: 'search-result', exclusive: true };\nconst DIRECTIVES = ['# Query:', '# Flags:', '# Including:', '# Excluding:', '# ContextLines:'];\nconst FLAGS = ['RegExp', 'CaseSensitive', 'IgnoreExcludeSettings', 'WordMatch'];\n\nlet cachedLastParse: { version: number; parse: ParsedSearchResults; uri: vscode.Uri } | undefined;\nlet documentChangeListener: vscode.Disposable | undefined;\n\n\nexport function activate(context: vscode.ExtensionContext) {\n\n\tconst contextLineDecorations = vscode.window.createTextEditorDecorationType({ opacity: '0.7' });\n\tconst matchLineDecorations = vscode.window.createTextEditorDecorationType({ fontWeight: 'bold' });\n\n\tconst decorate = (editor: vscode.TextEditor) => {\n\t\tconst parsed = parseSearchResults(editor.document).filter(isResultLine);\n\t\tconst contextRanges = parsed.filter(line => line.isContext).map(line => line.prefixRange);\n\t\tconst matchRanges = parsed.filter(line => !line.isContext).map(line => line.prefixRange);\n\t\teditor.setDecorations(contextLineDecorations, contextRanges);\n\t\teditor.setDecorations(matchLineDecorations, matchRanges);\n\t};\n\n\tif (vscode.window.activeTextEditor && vscode.window.activeTextEditor.document.languageId === 'search-result') {\n\t\tdecorate(vscode.window.activeTextEditor);\n\t}\n\n\tcontext.subscriptions.push(\n\n\t\tvscode.languages.registerDocumentSymbolProvider(SEARCH_RESULT_SELECTOR, {\n\t\t\tprovideDocumentSymbols(document: vscode.TextDocument, token: vscode.CancellationToken): vscode.DocumentSymbol[] {\n\t\t\t\tconst results = parseSearchResults(document, token)\n\t\t\t\t\t.filter(isFileLine)\n\t\t\t\t\t.map(line => new vscode.DocumentSymbol(\n\t\t\t\t\t\tline.path,\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tvscode.SymbolKind.File,\n\t\t\t\t\t\tline.allLocations.map(({ originSelectionRange }) => originSelectionRange!).reduce((p, c) => p.union(c), line.location.originSelectionRange!),\n\t\t\t\t\t\tline.location.originSelectionRange!,\n\t\t\t\t\t));\n\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}),\n\n\t\tvscode.languages.registerCompletionItemProvider(SEARCH_RESULT_SELECTOR, {\n\t\t\tprovideCompletionItems(document: vscode.TextDocument, position: vscode.Position): vscode.CompletionItem[] {\n\n\t\t\t\tconst line = document.lineAt(position.line);\n\t\t\t\tif (position.line > 3) { return []; }\n\t\t\t\tif (position.character === 0 || (position.character === 1 && line.text === '#')) {\n\t\t\t\t\tconst header = Array.from({ length: DIRECTIVES.length }).map((_, i) => document.lineAt(i).text);\n\n\t\t\t\t\treturn DIRECTIVES\n\t\t\t\t\t\t.filter(suggestion => header.every(line => line.indexOf(suggestion) === -1))\n\t\t\t\t\t\t.map(flag => ({ label: flag, insertText: (flag.slice(position.character)) + ' ' }));\n\t\t\t\t}\n\n\t\t\t\tif (line.text.indexOf('# Flags:') === -1) { return []; }\n\n\t\t\t\treturn FLAGS\n\t\t\t\t\t.filter(flag => line.text.indexOf(flag) === -1)\n\t\t\t\t\t.map(flag => ({ label: flag, insertText: flag + ' ' }));\n\t\t\t}\n\t\t}, '#'),\n\n\t\tvscode.languages.registerDefinitionProvider(SEARCH_RESULT_SELECTOR, {\n\t\t\tprovideDefinition(document: vscode.TextDocument, position: vscode.Position, token: vscode.CancellationToken): vscode.DefinitionLink[] {\n\t\t\t\tconst lineResult = parseSearchResults(document, token)[position.line];\n\t\t\t\tif (!lineResult) { return []; }\n\t\t\t\tif (lineResult.type === 'file') {\n\t\t\t\t\treturn lineResult.allLocations.map(l => ({ ...l, originSelectionRange: lineResult.location.originSelectionRange }));\n\t\t\t\t}\n\n\t\t\t\tconst location = lineResult.locations.find(l => l.originSelectionRange.contains(position));\n\t\t\t\tif (!location) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst targetPos = new vscode.Position(\n\t\t\t\t\tlocation.targetSelectionRange.start.line,\n\t\t\t\t\tlocation.targetSelectionRange.start.character + (position.character - location.originSelectionRange.start.character)\n\t\t\t\t);\n\t\t\t\treturn [{\n\t\t\t\t\t...location,\n\t\t\t\t\ttargetSelectionRange: new vscode.Range(targetPos, targetPos),\n\t\t\t\t}];\n\t\t\t}\n\t\t}),\n\n\t\tvscode.languages.registerDocumentLinkProvider(SEARCH_RESULT_SELECTOR, {\n\t\t\tasync provideDocumentLinks(document: vscode.TextDocument, token: vscode.CancellationToken): Promise<vscode.DocumentLink[]> {\n\t\t\t\treturn parseSearchResults(document, token)\n\t\t\t\t\t.filter(isFileLine)\n\t\t\t\t\t.map(({ location }) => ({ range: location.originSelectionRange!, target: location.targetUri }));\n\t\t\t}\n\t\t}),\n\n\t\tvscode.window.onDidChangeActiveTextEditor(editor => {\n\t\t\tif (editor?.document.languageId === 'search-result') {\n\t\t\t\t// Clear the parse whenever we open a new editor.\n\t\t\t\t// Conservative because things like the URI might remain constant even if the contents change, and re-parsing even large files is relatively fast.\n\t\t\t\tcachedLastParse = undefined;\n\n\t\t\t\tdocumentChangeListener?.dispose();\n\t\t\t\tdocumentChangeListener = vscode.workspace.onDidChangeTextDocument(doc => {\n\t\t\t\t\tif (doc.document.uri === editor.document.uri) {\n\t\t\t\t\t\tdecorate(editor);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tdecorate(editor);\n\t\t\t}\n\t\t}),\n\n\t\t{ dispose() { cachedLastParse = undefined; documentChangeListener?.dispose(); } }\n\t);\n}\n\n\nfunction relativePathToUri(path: string, resultsUri: vscode.Uri): vscode.Uri | undefined {\n\n\tconst userDataPrefix = '(Settings) ';\n\tif (path.startsWith(userDataPrefix)) {\n\t\treturn vscode.Uri.file(path.slice(userDataPrefix.length)).with({ scheme: 'vscode-userdata' });\n\t}\n\n\tif (pathUtils.isAbsolute(path)) {\n\t\tif (/^[\\\\\\/]Untitled-\\d*$/.test(path)) {\n\t\t\treturn vscode.Uri.file(path.slice(1)).with({ scheme: 'untitled', path: path.slice(1) });\n\t\t}\n\t\treturn vscode.Uri.file(path);\n\t}\n\n\tif (path.indexOf('~/') === 0) {\n\t\tconst homePath = process.env.HOME || process.env.HOMEPATH || '';\n\t\treturn vscode.Uri.file(pathUtils.join(homePath, path.slice(2)));\n\t}\n\n\tconst uriFromFolderWithPath = (folder: vscode.WorkspaceFolder, path: string): vscode.Uri =>\n\t\tvscode.Uri.joinPath(folder.uri, path);\n\n\tif (vscode.workspace.workspaceFolders) {\n\t\tconst multiRootFormattedPath = /^(.*) • (.*)$/.exec(path);\n\t\tif (multiRootFormattedPath) {\n\t\t\tconst [, workspaceName, workspacePath] = multiRootFormattedPath;\n\t\t\tconst folder = vscode.workspace.workspaceFolders.filter(wf => wf.name === workspaceName)[0];\n\t\t\tif (folder) {\n\t\t\t\treturn uriFromFolderWithPath(folder, workspacePath);\n\t\t\t}\n\t\t}\n\t\telse if (vscode.workspace.workspaceFolders.length === 1) {\n\t\t\treturn uriFromFolderWithPath(vscode.workspace.workspaceFolders[0], path);\n\t\t} else if (resultsUri.scheme !== 'untitled') {\n\t\t\t// We're in a multi-root workspace, but the path is not multi-root formatted\n\t\t\t// Possibly a saved search from a single root session. Try checking if the search result document's URI is in a current workspace folder.\n\t\t\tconst prefixMatch = vscode.workspace.workspaceFolders.filter(wf => resultsUri.toString().startsWith(wf.uri.toString()))[0];\n\t\t\tif (prefixMatch) {\n\t\t\t\treturn uriFromFolderWithPath(prefixMatch, path);\n\t\t\t}\n\t\t}\n\t}\n\n\tconsole.error(`Unable to resolve path ${path}`);\n\treturn undefined;\n}\n\ntype ParsedSearchFileLine = { type: 'file'; location: vscode.LocationLink; allLocations: vscode.LocationLink[]; path: string };\ntype ParsedSearchResultLine = { type: 'result'; locations: Required<vscode.LocationLink>[]; isContext: boolean; prefixRange: vscode.Range };\ntype ParsedSearchResults = Array<ParsedSearchFileLine | ParsedSearchResultLine>;\nconst isFileLine = (line: ParsedSearchResultLine | ParsedSearchFileLine): line is ParsedSearchFileLine => line.type === 'file';\nconst isResultLine = (line: ParsedSearchResultLine | ParsedSearchFileLine): line is ParsedSearchResultLine => line.type === 'result';\n\n\nfunction parseSearchResults(document: vscode.TextDocument, token?: vscode.CancellationToken): ParsedSearchResults {\n\n\tif (cachedLastParse && cachedLastParse.uri === document.uri && cachedLastParse.version === document.version) {\n\t\treturn cachedLastParse.parse;\n\t}\n\n\tconst lines = document.getText().split(/\\r?\\n/);\n\tconst links: ParsedSearchResults = [];\n\n\tlet currentTarget: vscode.Uri | undefined = undefined;\n\tlet currentTargetLocations: vscode.LocationLink[] | undefined = undefined;\n\n\tfor (let i = 0; i < lines.length; i++) {\n\t\t// TODO: This is probably always false, given we're pegging the thread...\n\t\tif (token?.isCancellationRequested) { return []; }\n\t\tconst line = lines[i];\n\n\t\tconst fileLine = FILE_LINE_REGEX.exec(line);\n\t\tif (fileLine) {\n\t\t\tconst [, path] = fileLine;\n\n\t\t\tcurrentTarget = relativePathToUri(path, document.uri);\n\t\t\tif (!currentTarget) { continue; }\n\t\t\tcurrentTargetLocations = [];\n\n\t\t\tconst location: vscode.LocationLink = {\n\t\t\t\ttargetRange: new vscode.Range(0, 0, 0, 1),\n\t\t\t\ttargetUri: currentTarget,\n\t\t\t\toriginSelectionRange: new vscode.Range(i, 0, i, line.length),\n\t\t\t};\n\n\n\t\t\tlinks[i] = { type: 'file', location, allLocations: currentTargetLocations, path };\n\t\t}\n\n\t\tif (!currentTarget) { continue; }\n\n\t\tconst resultLine = RESULT_LINE_REGEX.exec(line);\n\t\tif (resultLine) {\n\t\t\tconst [, indentation, _lineNumber, separator] = resultLine;\n\t\t\tconst lineNumber = +_lineNumber - 1;\n\t\t\tconst metadataOffset = (indentation + _lineNumber + separator).length;\n\t\t\tconst targetRange = new vscode.Range(Math.max(lineNumber - 3, 0), 0, lineNumber + 3, line.length);\n\n\t\t\tconst locations: Required<vscode.LocationLink>[] = [];\n\n\t\t\tlet lastEnd = metadataOffset;\n\t\t\tlet offset = 0;\n\t\t\tELISION_REGEX.lastIndex = metadataOffset;\n\t\t\tfor (let match: RegExpExecArray | null; (match = ELISION_REGEX.exec(line));) {\n\t\t\t\tlocations.push({\n\t\t\t\t\ttargetRange,\n\t\t\t\t\ttargetSelectionRange: new vscode.Range(lineNumber, offset, lineNumber, offset),\n\t\t\t\t\ttargetUri: currentTarget,\n\t\t\t\t\toriginSelectionRange: new vscode.Range(i, lastEnd, i, ELISION_REGEX.lastIndex - match[0].length),\n\t\t\t\t});\n\n\t\t\t\toffset += (ELISION_REGEX.lastIndex - lastEnd - match[0].length) + Number(match[1]);\n\t\t\t\tlastEnd = ELISION_REGEX.lastIndex;\n\t\t\t}\n\n\t\t\tif (lastEnd < line.length) {\n\t\t\t\tlocations.push({\n\t\t\t\t\ttargetRange,\n\t\t\t\t\ttargetSelectionRange: new vscode.Range(lineNumber, offset, lineNumber, offset),\n\t\t\t\t\ttargetUri: currentTarget,\n\t\t\t\t\toriginSelectionRange: new vscode.Range(i, lastEnd, i, line.length),\n\t\t\t\t});\n\t\t\t}\n\t\t\t// only show result lines in file-level peek\n\t\t\tif (separator.includes(':')) {\n\t\t\t\tcurrentTargetLocations?.push(...locations);\n\t\t\t}\n\n\t\t\t// Allow line number, indentation, etc to take you to definition as well.\n\t\t\tconst convenienceLocation: Required<vscode.LocationLink> = {\n\t\t\t\ttargetRange,\n\t\t\t\ttargetSelectionRange: new vscode.Range(lineNumber, 0, lineNumber, 1),\n\t\t\t\ttargetUri: currentTarget,\n\t\t\t\toriginSelectionRange: new vscode.Range(i, 0, i, metadataOffset - 1),\n\t\t\t};\n\t\t\tlocations.push(convenienceLocation);\n\t\t\tlinks[i] = { type: 'result', locations, isContext: separator === ' ', prefixRange: new vscode.Range(i, 0, i, metadataOffset) };\n\t\t}\n\t}\n\n\tcachedLastParse = {\n\t\tversion: document.version,\n\t\tparse: links,\n\t\turi: document.uri\n\t};\n\n\treturn links;\n}\n","module.exports = require(\"vscode\");","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(256);\n"],"names":["context","contextLineDecorations","vscode","window","createTextEditorDecorationType","opacity","matchLineDecorations","fontWeight","decorate","editor","parsed","parseSearchResults","document","filter","isResultLine","contextRanges","line","isContext","map","prefixRange","matchRanges","setDecorations","activeTextEditor","languageId","subscriptions","push","languages","registerDocumentSymbolProvider","SEARCH_RESULT_SELECTOR","provideDocumentSymbols","token","isFileLine","DocumentSymbol","path","SymbolKind","File","allLocations","originSelectionRange","reduce","p","c","union","location","registerCompletionItemProvider","provideCompletionItems","position","lineAt","character","text","header","Array","from","length","DIRECTIVES","_","i","suggestion","every","indexOf","flag","label","insertText","slice","FLAGS","registerDefinitionProvider","provideDefinition","lineResult","type","l","locations","find","contains","targetPos","Position","targetSelectionRange","start","Range","registerDocumentLinkProvider","async","range","target","targetUri","onDidChangeActiveTextEditor","cachedLastParse","undefined","documentChangeListener","dispose","workspace","onDidChangeTextDocument","doc","uri","FILE_LINE_REGEX","RESULT_LINE_REGEX","ELISION_REGEX","language","exclusive","relativePathToUri","resultsUri","startsWith","Uri","file","userDataPrefix","with","scheme","pathUtils","isAbsolute","test","homePath","HOME","HOMEPATH","join","uriFromFolderWithPath","folder","joinPath","workspaceFolders","multiRootFormattedPath","exec","workspaceName","workspacePath","wf","name","prefixMatch","toString","console","error","version","parse","lines","getText","split","links","currentTarget","currentTargetLocations","isCancellationRequested","fileLine","targetRange","resultLine","indentation","_lineNumber","separator","lineNumber","metadataOffset","Math","max","lastEnd","offset","lastIndex","match","Number","includes","convenienceLocation","module","exports","require","assertPath","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","process","normalize","trailingSeparator","joined","arg","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","root","base","_format","ret","delimiter","win32","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}