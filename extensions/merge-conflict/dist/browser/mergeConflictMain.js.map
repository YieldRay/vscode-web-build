{"version":3,"file":"mergeConflictMain.js","mappings":"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","sources":["webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Constants.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/__DynamicConstants.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/DataSanitizer.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Event.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Trace.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/HelperFuncs.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/PageView.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/PageViewPerformance.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Exception.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/DataPoint.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Metric.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/UrlHelperFuncs.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Util.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/RemoteDependencyData.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Offline.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Enums.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/StorageHelperFuncs.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/RequestResponseHeaders.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/Contracts/ContextTagKeys.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/PartAExtensions.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/Envelope.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/Data.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/InternalConstants.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/__DynamicConstants.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/EnvelopeCreator.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/SendBuffer.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/Sender.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/Serializer.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/Sample.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/ConnectionStringParser.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-web-basic/dist-es5/index.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-web-basic/dist-es5/__DynamicConstants.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/Contracts/SeverityLevel.js","webpack://merge-conflict/./node_modules/@nevware21/ts-utils/dist/es5/mod/ts-utils.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/TelemetryHelpers.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-shims/dist-es5/TsLibShims.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/UnloadHandlerContainer.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/SenderPostManager.js","webpack://merge-conflict/./src/contentProvider.ts","webpack://merge-conflict/./node_modules/@microsoft/1ds-core-js/dist-es5/InternalConstants.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-core-js/dist-es5/AppInsightsCore.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-core-js/dist-es5/Enums.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-core-js/dist-es5/ValueSanitizer.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Interfaces/IChannelControls.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/LoggingEnums.js","webpack://merge-conflict/./src/codelensProvider.ts","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/ConfigDefaults.js","webpack://merge-conflict/./src/mergeDecorator.ts","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/ResponseHelpers.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/NotificationManager.js","webpack://merge-conflict/external commonjs \"vscode\"","webpack://merge-conflict/./node_modules/@microsoft/1ds-core-js/dist-es5/__DynamicConstants.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/W3cTraceParent.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/ProcessTelemetryContext.js","webpack://merge-conflict/./src/documentTracker.ts","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/ConfigDefaultHelpers.js","webpack://merge-conflict/./src/documentMergeConflict.ts","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AppInsightsCore.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/TelemetryInitializerPlugin.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-common/dist-es5/applicationinsights-common.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/EventsDiscardedReason.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/HelperFuncs.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DiagnosticLogger.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AsyncUtils.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DataCacheHelper.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/EnumHelperFuncs.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-core-js/dist-es5/Utils.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/InitActiveStatusEnum.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/CookieMgr.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-shims/dist-es5/Constants.js","webpack://merge-conflict/./src/services.ts","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/EventHelpers.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/__DynamicConstants.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/InternalConstants.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/RandomHelper.js","webpack://merge-conflict/./src/commandHandler.ts","webpack://merge-conflict/./src/mergeConflictMain.ts","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/EnvUtils.js","webpack://merge-conflict/./src/mergeConflictParser.ts","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/Constants.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DbgExtensionUtils.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/PerfManager.js","webpack://merge-conflict/./node_modules/@nevware21/ts-async/dist/es5/mod/ts-async.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/BaseTelemetryPlugin.js","webpack://merge-conflict/./node_modules/@microsoft/dynamicproto-js/dist-es5/DynamicProto.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-post-js/dist-es5/DataModels.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-post-js/dist-es5/InternalConstants.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-post-js/dist-es5/__DynamicConstants.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-post-js/dist-es5/EventBatch.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-post-js/dist-es5/ClockSkewManager.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-post-js/dist-es5/KillSwitch.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-post-js/dist-es5/RetryPolicy.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-post-js/dist-es5/Serializer.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-post-js/dist-es5/HttpManager.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-post-js/dist-es5/TimeoutOverrideWrapper.js","webpack://merge-conflict/./node_modules/@microsoft/1ds-post-js/dist-es5/PostChannel.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/UnloadHookContainer.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicSupport.js","webpack://merge-conflict/./src/delayer.ts","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AggregationError.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicProperty.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicState.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicConfig.js","webpack://merge-conflict/./node_modules/@vscode/extension-telemetry/dist/browser/common/baseTelemetrySender.js","webpack://merge-conflict/./node_modules/@vscode/extension-telemetry/dist/browser/common/util.js","webpack://merge-conflict/./node_modules/@vscode/extension-telemetry/dist/browser/common/baseTelemetryReporter.js","webpack://merge-conflict/./node_modules/@vscode/extension-telemetry/dist/browser/browser/telemetryReporter.js","webpack://merge-conflict/./node_modules/@vscode/extension-telemetry/dist/browser/common/appInsightsClientFactory.js","webpack://merge-conflict/./node_modules/@vscode/extension-telemetry/dist/browser/common/1dsClientFactory.js","webpack://merge-conflict/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/CoreUtils.js","webpack://merge-conflict/webpack/bootstrap","webpack://merge-conflict/webpack/runtime/define property getters","webpack://merge-conflict/webpack/runtime/global","webpack://merge-conflict/webpack/runtime/hasOwnProperty shorthand","webpack://merge-conflict/webpack/runtime/make namespace object","webpack://merge-conflict/webpack/startup"],"sourcesContent":["/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\nexport var DEFAULT_BREEZE_PATH = \"/v2/track\";\r\nexport var strNotSpecified = \"not_specified\";\r\nexport var strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_SPLIT = \"split\"; // Count: 6\r\nexport var _DYN_LENGTH = \"length\"; // Count: 41\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 6\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 9\r\nexport var _DYN_PUSH = \"push\"; // Count: 5\r\nexport var _DYN_REMOVE_ITEM = \"removeItem\"; // Count: 3\r\nexport var _DYN_NAME = \"name\"; // Count: 11\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 10\r\nexport var _DYN_COUNT = \"count\"; // Count: 8\r\nexport var _DYN_PRE_TRIGGER_DATE = \"preTriggerDate\"; // Count: 4\r\nexport var _DYN_DISABLED = \"disabled\"; // Count: 3\r\nexport var _DYN_INTERVAL = \"interval\"; // Count: 3\r\nexport var _DYN_DAYS_OF_MONTH = \"daysOfMonth\"; // Count: 3\r\nexport var _DYN_DATE = \"date\"; // Count: 5\r\nexport var _DYN_GET_UTCDATE = \"getUTCDate\"; // Count: 3\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 4\r\nexport var _DYN_PATHNAME = \"pathname\"; // Count: 4\r\nexport var _DYN_CORRELATION_HEADER_E0 = \"correlationHeaderExcludePatterns\"; // Count: 2\r\nexport var _DYN_EXTENSION_CONFIG = \"extensionConfig\"; // Count: 4\r\nexport var _DYN_EXCEPTIONS = \"exceptions\"; // Count: 6\r\nexport var _DYN_PARSED_STACK = \"parsedStack\"; // Count: 13\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 9\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 9\r\nexport var _DYN_SIZE_IN_BYTES = \"sizeInBytes\"; // Count: 11\r\nexport var _DYN_TYPE_NAME = \"typeName\"; // Count: 11\r\nexport var _DYN_SEVERITY_LEVEL = \"severityLevel\"; // Count: 5\r\nexport var _DYN_PROBLEM_GROUP = \"problemGroup\"; // Count: 3\r\nexport var _DYN_IS_MANUAL = \"isManual\"; // Count: 3\r\nexport var _DYN__CREATE_FROM_INTERFA1 = \"CreateFromInterface\"; // Count: 2\r\nexport var _DYN_ASSEMBLY = \"assembly\"; // Count: 7\r\nexport var _DYN_FILE_NAME = \"fileName\"; // Count: 8\r\nexport var _DYN_HAS_FULL_STACK = \"hasFullStack\"; // Count: 6\r\nexport var _DYN_LEVEL = \"level\"; // Count: 5\r\nexport var _DYN_METHOD = \"method\"; // Count: 7\r\nexport var _DYN_LINE = \"line\"; // Count: 6\r\nexport var _DYN_DURATION = \"duration\"; // Count: 4\r\nexport var _DYN_RECEIVED_RESPONSE = \"receivedResponse\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, getJSON, hasJSON, isObject, objForEachKey, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { asString, strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_STRINGIFY, _DYN_TO_STRING } from \"../../__DynamicConstants\";\r\nexport function dataSanitizeKeyAndAddUniqueness(logger, key, map) {\r\n    var origLength = key[_DYN_LENGTH /* @min:%2elength */];\r\n    var field = dataSanitizeKey(logger, key);\r\n    // validation truncated the length.  We need to add uniqueness\r\n    if (field[_DYN_LENGTH /* @min:%2elength */] !== origLength) {\r\n        var i = 0;\r\n        var uniqueField = field;\r\n        while (map[uniqueField] !== undefined) {\r\n            i++;\r\n            uniqueField = strSubstring(field, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ - 3) + dsPadNumber(i);\r\n        }\r\n        field = uniqueField;\r\n    }\r\n    return field;\r\n}\r\nexport function dataSanitizeKey(logger, name) {\r\n    var nameTrunc;\r\n    if (name) {\r\n        // Remove any leading or trailing whitespace\r\n        name = strTrim(asString(name));\r\n        // truncate the string to 150 chars\r\n        if (name[_DYN_LENGTH /* @min:%2elength */] > 150 /* DataSanitizerValues.MAX_NAME_LENGTH */) {\r\n            nameTrunc = strSubstring(name, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 57 /* _eInternalMessageId.NameTooLong */, \"name is too long.  It has been truncated to \" + 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ + \" characters.\", { name: name }, true);\r\n        }\r\n    }\r\n    return nameTrunc || name;\r\n}\r\nexport function dataSanitizeString(logger, value, maxLength) {\r\n    if (maxLength === void 0) { maxLength = 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; }\r\n    var valueTrunc;\r\n    if (value) {\r\n        maxLength = maxLength ? maxLength : 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; // in case default parameters dont work\r\n        value = strTrim(asString(value));\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            valueTrunc = strSubstring(value, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 61 /* _eInternalMessageId.StringValueTooLong */, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n        }\r\n    }\r\n    return valueTrunc || value;\r\n}\r\nexport function dataSanitizeUrl(logger, url) {\r\n    return dataSanitizeInput(logger, url, 2048 /* DataSanitizerValues.MAX_URL_LENGTH */, 66 /* _eInternalMessageId.UrlTooLong */);\r\n}\r\nexport function dataSanitizeMessage(logger, message) {\r\n    var messageTrunc;\r\n    if (message) {\r\n        if (message[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */) {\r\n            messageTrunc = strSubstring(message, 0, 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 56 /* _eInternalMessageId.MessageTruncated */, \"message is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */ + \" characters.\", { message: message }, true);\r\n        }\r\n    }\r\n    return messageTrunc || message;\r\n}\r\nexport function dataSanitizeException(logger, exception) {\r\n    var exceptionTrunc;\r\n    if (exception) {\r\n        // Make surte its a string\r\n        var value = \"\" + exception;\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */) {\r\n            exceptionTrunc = strSubstring(value, 0, 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 52 /* _eInternalMessageId.ExceptionTruncated */, \"exception is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */ + \" characters.\", { exception: exception }, true);\r\n        }\r\n    }\r\n    return exceptionTrunc || exception;\r\n}\r\nexport function dataSanitizeProperties(logger, properties) {\r\n    if (properties) {\r\n        var tempProps_1 = {};\r\n        objForEachKey(properties, function (prop, value) {\r\n            if (isObject(value) && hasJSON()) {\r\n                // Stringify any part C properties\r\n                try {\r\n                    value = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"custom property is not valid\", { exception: e }, true);\r\n                }\r\n            }\r\n            value = dataSanitizeString(logger, value, 8192 /* DataSanitizerValues.MAX_PROPERTY_LENGTH */);\r\n            prop = dataSanitizeKeyAndAddUniqueness(logger, prop, tempProps_1);\r\n            tempProps_1[prop] = value;\r\n        });\r\n        properties = tempProps_1;\r\n    }\r\n    return properties;\r\n}\r\nexport function dataSanitizeMeasurements(logger, measurements) {\r\n    if (measurements) {\r\n        var tempMeasurements_1 = {};\r\n        objForEachKey(measurements, function (measure, value) {\r\n            measure = dataSanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements_1);\r\n            tempMeasurements_1[measure] = value;\r\n        });\r\n        measurements = tempMeasurements_1;\r\n    }\r\n    return measurements;\r\n}\r\nexport function dataSanitizeId(logger, id) {\r\n    return id ? dataSanitizeInput(logger, id, 128 /* DataSanitizerValues.MAX_ID_LENGTH */, 69 /* _eInternalMessageId.IdTooLong */)[_DYN_TO_STRING /* @min:%2etoString */]() : id;\r\n}\r\nexport function dataSanitizeInput(logger, input, maxLength, _msgId) {\r\n    var inputTrunc;\r\n    if (input) {\r\n        input = strTrim(asString(input));\r\n        if (input[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            inputTrunc = strSubstring(input, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n        }\r\n    }\r\n    return inputTrunc || input;\r\n}\r\nexport function dsPadNumber(num) {\r\n    var s = \"00\" + num;\r\n    return strSubstr(s, s[_DYN_LENGTH /* @min:%2elength */] - 3);\r\n}\r\n//# sourceMappingURL=DataSanitizer.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Event = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}());\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_PROPERTIES, _DYN_SEVERITY_LEVEL } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties } from \"./Common/DataSanitizer\";\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        message = message || strNotSpecified;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, message);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (severityLevel) {\r\n            _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n        }\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}());\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar strEmpty = \"\";\r\nexport function stringToBoolOrDefault(str, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = false; }\r\n    if (str === undefined || str === null) {\r\n        return defaultValue;\r\n    }\r\n    return str.toString()[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Convert ms to c# time span format\r\n */\r\nexport function msToTimeSpan(totalms) {\r\n    if (isNaN(totalms) || totalms < 0) {\r\n        totalms = 0;\r\n    }\r\n    totalms = Math.round(totalms);\r\n    var ms = strEmpty + totalms % 1000;\r\n    var sec = strEmpty + Math.floor(totalms / 1000) % 60;\r\n    var min = strEmpty + Math.floor(totalms / (1000 * 60)) % 60;\r\n    var hour = strEmpty + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n    var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n    ms = ms[_DYN_LENGTH /* @min:%2elength */] === 1 ? \"00\" + ms : ms[_DYN_LENGTH /* @min:%2elength */] === 2 ? \"0\" + ms : ms;\r\n    sec = sec[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + sec : sec;\r\n    min = min[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + min : min;\r\n    hour = hour[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + hour : hour;\r\n    return (days > 0 ? days + \".\" : strEmpty) + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n}\r\nexport function getExtensionByName(extensions, identifier) {\r\n    var extension = null;\r\n    arrForEach(extensions, function (value) {\r\n        if (value.identifier === identifier) {\r\n            extension = value;\r\n            return -1;\r\n        }\r\n    });\r\n    return extension;\r\n}\r\nexport function isCrossOriginError(message, url, lineNumber, columnNumber, error) {\r\n    return !error && isString(message) && (message === \"Script error.\" || message === \"Script error\");\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeId, dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageView = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            id: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = dataSanitizeId(logger, id);\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(durationMs);\r\n        }\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}());\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES, _DYN_RECEIVED_RESPONSE } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageViewPerformance = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            perfTotal: 0 /* FieldType.Default */,\r\n            networkConnect: 0 /* FieldType.Default */,\r\n            sentRequest: 0 /* FieldType.Default */,\r\n            receivedResponse: 0 /* FieldType.Default */,\r\n            domProcessing: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _self.domProcessing = cs4BaseData.domProcessing;\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = cs4BaseData[_DYN_DURATION /* @min:%2eduration */];\r\n            _self.networkConnect = cs4BaseData.networkConnect;\r\n            _self.perfTotal = cs4BaseData.perfTotal;\r\n            _self[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */] = cs4BaseData[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */];\r\n            _self.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}());\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, arrMap, isArray, isError, isFunction, isNullOrUndefined, isObject, isString, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getWindow, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_ASSEMBLY, _DYN_EXCEPTIONS, _DYN_FILE_NAME, _DYN_HAS_FULL_STACK, _DYN_IS_MANUAL, _DYN_LENGTH, _DYN_LEVEL, _DYN_LINE, _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_METHOD, _DYN_NAME, _DYN_PARSED_STACK, _DYN_PROBLEM_GROUP, _DYN_PROPERTIES, _DYN_PUSH, _DYN_SEVERITY_LEVEL, _DYN_SIZE_IN_BYTES, _DYN_SPLIT, _DYN_STRINGIFY, _DYN_TO_STRING, _DYN_TYPE_NAME, _DYN__CREATE_FROM_INTERFA1 } from \"../__DynamicConstants\";\r\nimport { dataSanitizeException, dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar NoMethod = \"<no_method>\";\r\nvar strError = \"error\";\r\nvar strStack = \"stack\";\r\nvar strStackDetails = \"stackDetails\";\r\nvar strErrorSrc = \"errorSrc\";\r\nvar strMessage = \"message\";\r\nvar strDescription = \"description\";\r\nfunction _stringify(value, convertToString) {\r\n    var result = value;\r\n    if (result && !isString(result)) {\r\n        if (JSON && JSON[_DYN_STRINGIFY /* @min:%2estringify */]) {\r\n            result = JSON[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            if (convertToString && (!result || result === \"{}\")) {\r\n                if (isFunction(value[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n                    result = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                }\r\n                else {\r\n                    result = \"\" + value;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result = \"\" + value + \" - (Missing JSON.stringify)\";\r\n        }\r\n    }\r\n    return result || \"\";\r\n}\r\nfunction _formatMessage(theEvent, errorType) {\r\n    var evtMessage = theEvent;\r\n    if (theEvent) {\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            evtMessage = theEvent[strMessage] || theEvent[strDescription] || evtMessage;\r\n        }\r\n        // Make sure the message is a string\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            // tslint:disable-next-line: prefer-conditional-expression\r\n            evtMessage = _stringify(evtMessage, true);\r\n        }\r\n        if (theEvent[\"filename\"]) {\r\n            // Looks like an event object with filename\r\n            evtMessage = evtMessage + \" @\" + (theEvent[\"filename\"] || \"\") + \":\" + (theEvent[\"lineno\"] || \"?\") + \":\" + (theEvent[\"colno\"] || \"?\");\r\n        }\r\n    }\r\n    // Automatically add the error type to the message if it does already appear to be present\r\n    if (errorType && errorType !== \"String\" && errorType !== \"Object\" && errorType !== \"Error\" && strIndexOf(evtMessage || \"\", errorType) === -1) {\r\n        evtMessage = errorType + \": \" + evtMessage;\r\n    }\r\n    return evtMessage || \"\";\r\n}\r\nfunction _isExceptionDetailsInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return \"hasFullStack\" in value && \"typeName\" in value;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isExceptionInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return (\"ver\" in value && \"exceptions\" in value && \"properties\" in value);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isStackDetails(details) {\r\n    return details && details.src && isString(details.src) && details.obj && isArray(details.obj);\r\n}\r\nfunction _convertStackObj(errorStack) {\r\n    var src = errorStack || \"\";\r\n    if (!isString(src)) {\r\n        if (isString(src[strStack])) {\r\n            src = src[strStack];\r\n        }\r\n        else {\r\n            src = \"\" + src;\r\n        }\r\n    }\r\n    var items = src[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    return {\r\n        src: src,\r\n        obj: items\r\n    };\r\n}\r\nfunction _getOperaStack(errorMessage) {\r\n    var stack = [];\r\n    var lines = errorMessage[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    for (var lp = 0; lp < lines[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n        var entry = lines[lp];\r\n        if (lines[lp + 1]) {\r\n            entry += \"@\" + lines[lp + 1];\r\n            lp++;\r\n        }\r\n        stack[_DYN_PUSH /* @min:%2epush */](entry);\r\n    }\r\n    return {\r\n        src: errorMessage,\r\n        obj: stack\r\n    };\r\n}\r\nfunction _getStackFromErrorObj(errorObj) {\r\n    var details = null;\r\n    if (errorObj) {\r\n        try {\r\n            /* Using bracket notation is support older browsers (IE 7/8 -- dont remember the version) that throw when using dot\r\n            notation for undefined objects and we don't want to loose the error from being reported */\r\n            if (errorObj[strStack]) {\r\n                // Chrome/Firefox\r\n                details = _convertStackObj(errorObj[strStack]);\r\n            }\r\n            else if (errorObj[strError] && errorObj[strError][strStack]) {\r\n                // Edge error event provides the stack and error object\r\n                details = _convertStackObj(errorObj[strError][strStack]);\r\n            }\r\n            else if (errorObj[\"exception\"] && errorObj.exception[strStack]) {\r\n                details = _convertStackObj(errorObj.exception[strStack]);\r\n            }\r\n            else if (_isStackDetails(errorObj)) {\r\n                details = errorObj;\r\n            }\r\n            else if (_isStackDetails(errorObj[strStackDetails])) {\r\n                details = errorObj[strStackDetails];\r\n            }\r\n            else if (getWindow() && getWindow()[\"opera\"] && errorObj[strMessage]) {\r\n                // Opera\r\n                details = _getOperaStack(errorObj[_DYN_MESSAGE /* @min:%2emessage */]);\r\n            }\r\n            else if (errorObj[\"reason\"] && errorObj.reason[strStack]) {\r\n                // UnhandledPromiseRejection\r\n                details = _convertStackObj(errorObj.reason[strStack]);\r\n            }\r\n            else if (isString(errorObj)) {\r\n                details = _convertStackObj(errorObj);\r\n            }\r\n            else {\r\n                var evtMessage = errorObj[strMessage] || errorObj[strDescription] || \"\";\r\n                if (isString(errorObj[strErrorSrc])) {\r\n                    if (evtMessage) {\r\n                        evtMessage += \"\\n\";\r\n                    }\r\n                    evtMessage += \" from \" + errorObj[strErrorSrc];\r\n                }\r\n                if (evtMessage) {\r\n                    details = _convertStackObj(evtMessage);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // something unexpected happened so to avoid failing to report any error lets swallow the exception\r\n            // and fallback to the callee/caller method\r\n            details = _convertStackObj(e);\r\n        }\r\n    }\r\n    return details || {\r\n        src: \"\",\r\n        obj: null\r\n    };\r\n}\r\nfunction _formatStackTrace(stackDetails) {\r\n    var stack = \"\";\r\n    if (stackDetails) {\r\n        if (stackDetails.obj) {\r\n            arrForEach(stackDetails.obj, function (entry) {\r\n                stack += entry + \"\\n\";\r\n            });\r\n        }\r\n        else {\r\n            stack = stackDetails.src || \"\";\r\n        }\r\n    }\r\n    return stack;\r\n}\r\nfunction _parseStack(stack) {\r\n    var parsedStack;\r\n    var frames = stack.obj;\r\n    if (frames && frames[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        parsedStack = [];\r\n        var level_1 = 0;\r\n        var totalSizeInBytes_1 = 0;\r\n        arrForEach(frames, function (frame) {\r\n            var theFrame = frame[_DYN_TO_STRING /* @min:%2etoString */]();\r\n            if (_StackFrame.regex.test(theFrame)) {\r\n                var parsedFrame = new _StackFrame(theFrame, level_1++);\r\n                totalSizeInBytes_1 += parsedFrame[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                parsedStack[_DYN_PUSH /* @min:%2epush */](parsedFrame);\r\n            }\r\n        });\r\n        // DP Constraint - exception parsed stack must be < 32KB\r\n        // remove frames from the middle to meet the threshold\r\n        var exceptionParsedStackThreshold = 32 * 1024;\r\n        if (totalSizeInBytes_1 > exceptionParsedStackThreshold) {\r\n            var left = 0;\r\n            var right = parsedStack[_DYN_LENGTH /* @min:%2elength */] - 1;\r\n            var size = 0;\r\n            var acceptedLeft = left;\r\n            var acceptedRight = right;\r\n            while (left < right) {\r\n                // check size\r\n                var lSize = parsedStack[left][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                var rSize = parsedStack[right][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                size += lSize + rSize;\r\n                if (size > exceptionParsedStackThreshold) {\r\n                    // remove extra frames from the middle\r\n                    var howMany = acceptedRight - acceptedLeft + 1;\r\n                    parsedStack.splice(acceptedLeft, howMany);\r\n                    break;\r\n                }\r\n                // update pointers\r\n                acceptedLeft = left;\r\n                acceptedRight = right;\r\n                left++;\r\n                right--;\r\n            }\r\n        }\r\n    }\r\n    return parsedStack;\r\n}\r\nfunction _getErrorType(errorType) {\r\n    // Gets the Error Type by passing the constructor (used to get the true type of native error object).\r\n    var typeName = \"\";\r\n    if (errorType) {\r\n        typeName = errorType.typeName || errorType[_DYN_NAME /* @min:%2ename */] || \"\";\r\n        if (!typeName) {\r\n            try {\r\n                var funcNameRegex = /function (.{1,200})\\(/;\r\n                var results = (funcNameRegex).exec((errorType).constructor[_DYN_TO_STRING /* @min:%2etoString */]());\r\n                typeName = (results && results[_DYN_LENGTH /* @min:%2elength */] > 1) ? results[1] : \"\";\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n            }\r\n        }\r\n    }\r\n    return typeName;\r\n}\r\n/**\r\n * Formats the provided errorObj for display and reporting, it may be a String, Object, integer or undefined depending on the browser.\r\n * @param errorObj - The supplied errorObj\r\n */\r\nexport function _formatErrorCode(errorObj) {\r\n    if (errorObj) {\r\n        try {\r\n            if (!isString(errorObj)) {\r\n                var errorType = _getErrorType(errorObj);\r\n                var result = _stringify(errorObj, false);\r\n                if (!result || result === \"{}\") {\r\n                    if (errorObj[strError]) {\r\n                        // Looks like an MS Error Event\r\n                        errorObj = errorObj[strError];\r\n                        errorType = _getErrorType(errorObj);\r\n                    }\r\n                    result = _stringify(errorObj, true);\r\n                }\r\n                if (strIndexOf(result, errorType) !== 0 && errorType !== \"String\") {\r\n                    return errorType + \":\" + result;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n        }\r\n    }\r\n    // Fallback to just letting the object format itself into a string\r\n    return \"\" + (errorObj || \"\");\r\n}\r\nvar Exception = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            exceptions: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n        if (!_isExceptionInternal(exception)) {\r\n            if (!properties) {\r\n                properties = {};\r\n            }\r\n            if (id) {\r\n                properties.id = id;\r\n            }\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = [new _ExceptionDetails(logger, exception, properties)];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n            }\r\n            if (id) {\r\n                _self.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */] || [];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = exception[_DYN_PROPERTIES /* @min:%2eproperties */];\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = exception[_DYN_MEASUREMENTS /* @min:%2emeasurements */];\r\n            if (exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */]) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */];\r\n            }\r\n            if (exception.id) {\r\n                _self.id = exception.id;\r\n                exception[_DYN_PROPERTIES /* @min:%2eproperties */].id = exception.id;\r\n            }\r\n            if (exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */]) {\r\n                _self[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */] = exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */];\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!isNullOrUndefined(exception[_DYN_IS_MANUAL /* @min:%2eisManual */])) {\r\n                _self[_DYN_IS_MANUAL /* @min:%2eisManual */] = exception[_DYN_IS_MANUAL /* @min:%2eisManual */];\r\n            }\r\n        }\r\n    }\r\n    Exception.CreateAutoException = function (message, url, lineNumber, columnNumber, error, evt, stack, errorSrc) {\r\n        var _a;\r\n        var errorType = _getErrorType(error || evt || message);\r\n        return _a = {},\r\n            _a[_DYN_MESSAGE /* @min:message */] = _formatMessage(message, errorType),\r\n            _a.url = url,\r\n            _a.lineNumber = lineNumber,\r\n            _a.columnNumber = columnNumber,\r\n            _a.error = _formatErrorCode(error || evt || message),\r\n            _a.evt = _formatErrorCode(evt || message),\r\n            _a[_DYN_TYPE_NAME /* @min:typeName */] = errorType,\r\n            _a.stackDetails = _getStackFromErrorObj(stack || error || evt),\r\n            _a.errorSrc = errorSrc,\r\n            _a;\r\n    };\r\n    Exception.CreateFromInterface = function (logger, exception, properties, measurements) {\r\n        var exceptions = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */]\r\n            && arrMap(exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */], function (ex) { return _ExceptionDetails[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](logger, ex); });\r\n        var exceptionData = new Exception(logger, __assign(__assign({}, exception), { exceptions: exceptions }), properties, measurements);\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a;\r\n        var _b = this, exceptions = _b.exceptions, properties = _b.properties, measurements = _b.measurements, severityLevel = _b.severityLevel, problemGroup = _b.problemGroup, id = _b.id, isManual = _b.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && arrMap(exceptions, function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return _a = {\r\n                ver: \"4.0\"\r\n            },\r\n            _a[_DYN_EXCEPTIONS /* @min:exceptions */] = exceptionDetailsInterface,\r\n            _a.severityLevel = severityLevel,\r\n            _a.properties = properties,\r\n            _a.measurements = measurements,\r\n            _a.problemGroup = problemGroup,\r\n            _a.id = id,\r\n            _a.isManual = isManual,\r\n            _a;\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        var _a;\r\n        return {\r\n            exceptions: [\r\n                (_a = {},\r\n                    _a[_DYN_HAS_FULL_STACK /* @min:hasFullStack */] = true,\r\n                    _a.message = message,\r\n                    _a.stack = details,\r\n                    _a.typeName = typeName,\r\n                    _a)\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    Exception.formatError = _formatErrorCode;\r\n    return Exception;\r\n}());\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function () {\r\n    function _ExceptionDetails(logger, exception, properties) {\r\n        this.aiDataContract = {\r\n            id: 0 /* FieldType.Default */,\r\n            outerId: 0 /* FieldType.Default */,\r\n            typeName: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            hasFullStack: 0 /* FieldType.Default */,\r\n            stack: 0 /* FieldType.Default */,\r\n            parsedStack: 2 /* FieldType.Array */\r\n        };\r\n        var _self = this;\r\n        if (!_isExceptionDetailsInternal(exception)) {\r\n            var error = exception;\r\n            var evt = error && error.evt;\r\n            if (!isError(error)) {\r\n                error = error[strError] || evt || error;\r\n            }\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = dataSanitizeString(logger, _getErrorType(error)) || strNotSpecified;\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, _formatMessage(exception || error, _self[_DYN_TYPE_NAME /* @min:%2etypeName */])) || strNotSpecified;\r\n            var stack = exception[strStackDetails] || _getStackFromErrorObj(exception);\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = _parseStack(stack);\r\n            // after parsedStack is inited, iterate over each frame object, sanitize its assembly field\r\n            if (isArray(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */])) {\r\n                arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) {\r\n                    frame[_DYN_ASSEMBLY /* @min:%2eassembly */] = dataSanitizeString(logger, frame[_DYN_ASSEMBLY /* @min:%2eassembly */]);\r\n                    frame[_DYN_FILE_NAME /* @min:%2efileName */] = dataSanitizeString(logger, frame[_DYN_FILE_NAME /* @min:%2efileName */]);\r\n                });\r\n            }\r\n            _self[strStack] = dataSanitizeException(logger, _formatStackTrace(stack));\r\n            _self.hasFullStack = isArray(_self.parsedStack) && _self.parsedStack[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n            if (properties) {\r\n                properties[_DYN_TYPE_NAME /* @min:%2etypeName */] = properties[_DYN_TYPE_NAME /* @min:%2etypeName */] || _self[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = exception[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = exception[_DYN_MESSAGE /* @min:%2emessage */];\r\n            _self[strStack] = exception[strStack];\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] || [];\r\n            _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */] = exception[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */];\r\n        }\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var _a;\r\n        var _self = this;\r\n        var parsedStack = _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = (_a = {\r\n                id: _self.id,\r\n                outerId: _self.outerId,\r\n                typeName: _self[_DYN_TYPE_NAME /* @min:%2etypeName */],\r\n                message: _self[_DYN_MESSAGE /* @min:%2emessage */],\r\n                hasFullStack: _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */],\r\n                stack: _self[strStack]\r\n            },\r\n            _a[_DYN_PARSED_STACK /* @min:parsedStack */] = parsedStack || undefined,\r\n            _a);\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return _StackFrame[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](frame); }))\r\n            || exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */];\r\n        var exceptionDetails = new _ExceptionDetails(logger, __assign(__assign({}, exception), { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    return _ExceptionDetails;\r\n}());\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function () {\r\n    function _StackFrame(sourceFrame, level) {\r\n        this.aiDataContract = {\r\n            level: 1 /* FieldType.Required */,\r\n            method: 1 /* FieldType.Required */,\r\n            assembly: 0 /* FieldType.Default */,\r\n            fileName: 0 /* FieldType.Default */,\r\n            line: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        // Not converting this to isString() as typescript uses this logic to \"understand\" the different\r\n        // types for the 2 different code paths\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = level;\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = NoMethod;\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = strTrim(frame);\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = \"\";\r\n            _self[_DYN_LINE /* @min:%2eline */] = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches[_DYN_LENGTH /* @min:%2elength */] >= 5) {\r\n                _self[_DYN_METHOD /* @min:%2emethod */] = strTrim(matches[2]) || _self[_DYN_METHOD /* @min:%2emethod */];\r\n                _self[_DYN_FILE_NAME /* @min:%2efileName */] = strTrim(matches[4]);\r\n                _self[_DYN_LINE /* @min:%2eline */] = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = sourceFrame[_DYN_LEVEL /* @min:%2elevel */];\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = sourceFrame[_DYN_METHOD /* @min:%2emethod */];\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = sourceFrame[_DYN_ASSEMBLY /* @min:%2eassembly */];\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = sourceFrame[_DYN_FILE_NAME /* @min:%2efileName */];\r\n            _self[_DYN_LINE /* @min:%2eline */] = sourceFrame[_DYN_LINE /* @min:%2eline */];\r\n            _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        }\r\n        _self.sizeInBytes += _self.method[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.fileName[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.assembly[_DYN_LENGTH /* @min:%2elength */];\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] += _StackFrame.baseSize;\r\n        _self.sizeInBytes += _self.level.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.line.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        var _self = this;\r\n        return {\r\n            level: _self[_DYN_LEVEL /* @min:%2elevel */],\r\n            method: _self[_DYN_METHOD /* @min:%2emethod */],\r\n            assembly: _self[_DYN_ASSEMBLY /* @min:%2eassembly */],\r\n            fileName: _self[_DYN_FILE_NAME /* @min:%2efileName */],\r\n            line: _self[_DYN_LINE /* @min:%2eline */]\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?[\\s]{0,50}([^\\@\\()]+?)[\\s]{0,50}(\\@|\\()([^\\(\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}());\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            name: 1 /* FieldType.Required */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 1 /* FieldType.Required */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */\r\n        };\r\n        /**\r\n         * Metric type. Single measurement or the aggregated value.\r\n         */\r\n        this.kind = 0 /* DataPointType.Measurement */;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_COUNT, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { DataPoint } from \"./Common/DataPoint\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Metric = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, stdDev, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            metrics: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        var dataPoint = new DataPoint();\r\n        dataPoint[_DYN_COUNT /* @min:%2ecount */] = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        dataPoint.value = value;\r\n        dataPoint.stdDev = isNaN(stdDev) || stdDev === null ? undefined : stdDev;\r\n        _self.metrics = [dataPoint];\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}());\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PATHNAME, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _document = getDocument() || {};\r\nvar _htmlAnchorIdx = 0;\r\n// Use an array of temporary values as it's possible for multiple calls to parseUrl() will be called with different URLs\r\n// Using a cache size of 5 for now as it current depth usage is at least 2, so adding a minor buffer to handle future updates\r\nvar _htmlAnchorElement = [null, null, null, null, null];\r\nexport function urlParseUrl(url) {\r\n    var anchorIdx = _htmlAnchorIdx;\r\n    var anchorCache = _htmlAnchorElement;\r\n    var tempAnchor = anchorCache[anchorIdx];\r\n    if (!_document.createElement) {\r\n        // Always create the temp instance if createElement is not available\r\n        tempAnchor = { host: urlParseHost(url, true) };\r\n    }\r\n    else if (!anchorCache[anchorIdx]) {\r\n        // Create and cache the unattached anchor instance\r\n        tempAnchor = anchorCache[anchorIdx] = _document.createElement(\"a\");\r\n    }\r\n    tempAnchor.href = url;\r\n    // Move the cache index forward\r\n    anchorIdx++;\r\n    if (anchorIdx >= anchorCache[_DYN_LENGTH /* @min:%2elength */]) {\r\n        anchorIdx = 0;\r\n    }\r\n    _htmlAnchorIdx = anchorIdx;\r\n    return tempAnchor;\r\n}\r\nexport function urlGetAbsoluteUrl(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a.href;\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetPathName(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a[_DYN_PATHNAME /* @min:%2epathname */];\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetCompleteUrl(method, absoluteUrl) {\r\n    if (method) {\r\n        return method.toUpperCase() + \" \" + absoluteUrl;\r\n    }\r\n    return absoluteUrl;\r\n}\r\n// Fallback method to grab host from url if document.createElement method is not available\r\nexport function urlParseHost(url, inclPort) {\r\n    var fullHost = urlParseFullHost(url, inclPort) || \"\";\r\n    if (fullHost) {\r\n        var match = fullHost.match(/(www\\d{0,5}\\.)?([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 3 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            return match[2] + (match[3] || \"\");\r\n        }\r\n    }\r\n    return fullHost;\r\n}\r\nexport function urlParseFullHost(url, inclPort) {\r\n    var result = null;\r\n    if (url) {\r\n        var match = url.match(/(\\w{1,150}):\\/\\/([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 2 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            result = match[2] || \"\";\r\n            if (inclPort && match[_DYN_LENGTH /* @min:%2elength */] > 2) {\r\n                var protocol = (match[1] || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                var port = match[3] || \"\";\r\n                // IE includes the standard port so pass it off if it's the same as the protocol\r\n                if (protocol === \"http\" && port === \":80\") {\r\n                    port = \"\";\r\n                }\r\n                else if (protocol === \"https\" && port === \":443\") {\r\n                    port = \"\";\r\n                }\r\n                result += port;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=UrlHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dateNow, getPerformance, isNullOrUndefined, isValidSpanId, isValidTraceId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH } from \"./Constants\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { urlParseFullHost, urlParseUrl } from \"./UrlHelperFuncs\";\r\nimport { _DYN_CORRELATION_HEADER_E0, _DYN_LENGTH, _DYN_NAME, _DYN_PATHNAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\n// listing only non-geo specific locations\r\nvar _internalEndpoints = [\r\n    DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH,\r\n    \"https://breeze.aimon.applicationinsights.io\" + DEFAULT_BREEZE_PATH,\r\n    \"https://dc-int.services.visualstudio.com\" + DEFAULT_BREEZE_PATH\r\n];\r\nvar _correlationIdPrefix = \"cid-v1:\";\r\nexport function isInternalApplicationInsightsEndpoint(endpointUrl) {\r\n    return arrIndexOf(_internalEndpoints, endpointUrl[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()) !== -1;\r\n}\r\nexport function correlationIdSetPrefix(prefix) {\r\n    _correlationIdPrefix = prefix;\r\n}\r\nexport function correlationIdGetPrefix() {\r\n    return _correlationIdPrefix;\r\n}\r\n/**\r\n * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.\r\n * Headers are always included if the current domain matches the request domain. If they do not match (CORS),\r\n * they are regex-ed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.\r\n * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must\r\n * manually supply domains to include correlation headers on. Else, no headers will be included at all.\r\n */\r\nexport function correlationIdCanIncludeCorrelationHeader(config, requestUrl, currentHost) {\r\n    if (!requestUrl || (config && config.disableCorrelationHeaders)) {\r\n        return false;\r\n    }\r\n    if (config && config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */]) {\r\n        for (var i = 0; i < config.correlationHeaderExcludePatterns[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            if (config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */][i].test(requestUrl)) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    var requestHost = urlParseUrl(requestUrl).host[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    if (requestHost && (strIndexOf(requestHost, \":443\") !== -1 || strIndexOf(requestHost, \":80\") !== -1)) {\r\n        // [Bug #1260] IE can include the port even for http and https URLs so if present\r\n        // try and parse it to remove if it matches the default protocol port\r\n        requestHost = (urlParseFullHost(requestUrl, true) || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    }\r\n    if ((!config || !config.enableCorsCorrelation) && (requestHost && requestHost !== currentHost)) {\r\n        return false;\r\n    }\r\n    var includedDomains = config && config.correlationHeaderDomains;\r\n    if (includedDomains) {\r\n        var matchExists_1;\r\n        arrForEach(includedDomains, function (domain) {\r\n            var regex = new RegExp(domain.toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n            matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n        });\r\n        if (!matchExists_1) {\r\n            return false;\r\n        }\r\n    }\r\n    var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n    if (!excludedDomains || excludedDomains[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < excludedDomains[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n        if (regex.test(requestHost)) {\r\n            return false;\r\n        }\r\n    }\r\n    // if we don't know anything about the requestHost, require the user to use included/excludedDomains.\r\n    // Previously we always returned false for a falsy requestHost\r\n    return requestHost && requestHost[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\n/**\r\n * Combines target appId and target role name from response header.\r\n */\r\nexport function correlationIdGetCorrelationContext(responseHeader) {\r\n    if (responseHeader) {\r\n        var correlationId = correlationIdGetCorrelationContextValue(responseHeader, RequestHeaders[1 /* eRequestHeaders.requestContextTargetKey */]);\r\n        if (correlationId && correlationId !== _correlationIdPrefix) {\r\n            return correlationId;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Gets key from correlation response header\r\n */\r\nexport function correlationIdGetCorrelationContextValue(responseHeader, key) {\r\n    if (responseHeader) {\r\n        var keyValues = responseHeader[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        for (var i = 0; i < keyValues[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            var keyValue = keyValues[i][_DYN_SPLIT /* @min:%2esplit */](\"=\");\r\n            if (keyValue[_DYN_LENGTH /* @min:%2elength */] === 2 && keyValue[0] === key) {\r\n                return keyValue[1];\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName) {\r\n    var target, name = commandName, data = commandName;\r\n    if (absoluteUrl && absoluteUrl[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        var parsedUrl = urlParseUrl(absoluteUrl);\r\n        target = parsedUrl.host;\r\n        if (!name) {\r\n            if (parsedUrl[_DYN_PATHNAME /* @min:%2epathname */] != null) {\r\n                var pathName = (parsedUrl.pathname[_DYN_LENGTH /* @min:%2elength */] === 0) ? \"/\" : parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                if (pathName.charAt(0) !== \"/\") {\r\n                    pathName = \"/\" + pathName;\r\n                }\r\n                data = parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                name = dataSanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n            }\r\n            else {\r\n                name = dataSanitizeString(logger, absoluteUrl);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        target = commandName;\r\n        name = commandName;\r\n    }\r\n    return {\r\n        target: target,\r\n        name: name,\r\n        data: data\r\n    };\r\n}\r\nexport function dateTimeUtilsNow() {\r\n    // returns the window or webworker performance object\r\n    var perf = getPerformance();\r\n    if (perf && perf.now && perf.timing) {\r\n        var now = perf.now() + perf.timing.navigationStart;\r\n        // Known issue with IE where this calculation can be negative, so if it is then ignore and fallback\r\n        if (now > 0) {\r\n            return now;\r\n        }\r\n    }\r\n    return dateNow();\r\n}\r\nexport function dateTimeUtilsDuration(start, end) {\r\n    var result = null;\r\n    if (start !== 0 && end !== 0 && !isNullOrUndefined(start) && !isNullOrUndefined(end)) {\r\n        result = end - start;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext from an optional telemetryTrace\r\n * @param telemetryTrace - The telemetryTrace instance that is being wrapped\r\n * @param parentCtx - An optional parent distributed trace instance, almost always undefined as this scenario is only used in the case of multiple property handlers.\r\n * @returns A new IDistributedTraceContext instance that is backed by the telemetryTrace or temporary object\r\n */\r\nexport function createDistributedTraceContextFromTrace(telemetryTrace, parentCtx) {\r\n    var trace = telemetryTrace || {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace.traceID;\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace.traceID = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace.parentID;\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace.parentID = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace.traceFlags;\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace.traceFlags = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Util.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { AjaxHelperParseDependencyPath } from \"../Util\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar RemoteDependencyData = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        this.aiDataContract = {\r\n            id: 1 /* FieldType.Required */,\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            resultCode: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            success: 0 /* FieldType.Default */,\r\n            data: 0 /* FieldType.Default */,\r\n            target: 0 /* FieldType.Default */,\r\n            type: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 0 /* FieldType.Default */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */,\r\n            dependencyKind: 0 /* FieldType.Default */,\r\n            dependencySource: 0 /* FieldType.Default */,\r\n            commandName: 0 /* FieldType.Default */,\r\n            dependencyTypeName: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = id;\r\n        _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(value);\r\n        _self.success = success;\r\n        _self.resultCode = resultCode + \"\";\r\n        _self.type = dataSanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _self.data = dataSanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _self.target = dataSanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _self.target = \"\".concat(_self.target, \" | \").concat(correlationContext);\r\n        }\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, dependencyFields[_DYN_NAME /* @min:%2ename */]);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}());\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, createUniqueNamespace, eventOff, eventOn, getDocument, getNavigator, getWindow, isNullOrUndefined, isUndefined, mergeEvtNamespace } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_PUSH } from \"./__DynamicConstants\";\r\nfunction _disableEvents(target, evtNamespace) {\r\n    eventOff(target, null, null, evtNamespace);\r\n}\r\n/**\r\n * Create a new OfflineListener instance to monitor browser online / offline events\r\n * @param parentEvtNamespace - The parent event namespace to append to any specific events for this instance\r\n */\r\nexport function createOfflineListener(parentEvtNamespace) {\r\n    var _document = getDocument();\r\n    var _navigator = getNavigator(); // Gets the window.navigator or workerNavigator depending on the global\r\n    var _isListening = false;\r\n    var listenerList = [];\r\n    // Set the initial state\r\n    // rState is changed by the browser, both via events and when we check the navigator.onLine property\r\n    var rState = 1 /* eOfflineValue.Online */;\r\n    if (_navigator && !isNullOrUndefined(_navigator.onLine) && !_navigator.onLine) { // navigator.onLine is undefined in react-native\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n    }\r\n    // ustate is changed by the user calling setOnlineState\r\n    var uState = 0 /* eOfflineValue.Unknown */;\r\n    // current state would be updated each time rState or uState is changed\r\n    // it is a resolved value of rState and uState\r\n    var _currentState = calCurrentState();\r\n    var _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"OfflineListener\"), parentEvtNamespace);\r\n    try {\r\n        if (_enableEvents(getWindow())) {\r\n            _isListening = true;\r\n        }\r\n        if (_document) {\r\n            // Also attach to the document.body or document\r\n            var target = _document.body || _document;\r\n            if (target.ononline) {\r\n                if (_enableEvents(target)) {\r\n                    _isListening = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // this makes react-native less angry\r\n        _isListening = false;\r\n    }\r\n    function _enableEvents(target) {\r\n        var enabled = false;\r\n        if (target) {\r\n            enabled = eventOn(target, \"online\", _setOnline, _evtNamespace);\r\n            if (enabled) {\r\n                eventOn(target, \"offline\", _setOffline, _evtNamespace);\r\n            }\r\n        }\r\n        return enabled;\r\n    }\r\n    function _isOnline() {\r\n        return _currentState;\r\n    }\r\n    function calCurrentState() {\r\n        if (uState === 2 /* eOfflineValue.Offline */ || rState === 2 /* eOfflineValue.Offline */) {\r\n            return false;\r\n        }\r\n        return true; // if both unknown, then we assume the network is good\r\n    }\r\n    function listnerNoticeCheck() {\r\n        // we were offline and are now online or we were online and now offline\r\n        var newState = calCurrentState();\r\n        if (_currentState !== newState) {\r\n            _currentState = newState; // use the resolved state to update\r\n            // send all the callbacks with the current state\r\n            arrForEach(listenerList, function (callback) {\r\n                var offlineState = {\r\n                    isOnline: _currentState,\r\n                    rState: rState,\r\n                    uState: uState\r\n                };\r\n                try {\r\n                    callback(offlineState);\r\n                }\r\n                catch (e) {\r\n                    // Do nothing, just making sure we run all of the callbacks\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function setOnlineState(newState) {\r\n        uState = newState;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOnline() {\r\n        rState = 1 /* eOfflineValue.Online */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOffline() {\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _unload() {\r\n        var win = getWindow();\r\n        if (win && _isListening) {\r\n            _disableEvents(win, _evtNamespace);\r\n            if (_document) {\r\n                // Also attach to the document.body or document\r\n                var target = _document.body || _document;\r\n                if (!isUndefined(target.ononline)) {\r\n                    _disableEvents(target, _evtNamespace);\r\n                }\r\n            }\r\n            _isListening = false;\r\n        }\r\n    }\r\n    function addListener(callback) {\r\n        listenerList[_DYN_PUSH /* @min:%2epush */](callback);\r\n        // Define rm as an instance of IUnloadHook\r\n        return {\r\n            rm: function () {\r\n                var index = listenerList.indexOf(callback);\r\n                if (index > -1) {\r\n                    return listenerList.splice(index, 1);\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    return {\r\n        isOnline: _isOnline,\r\n        isListening: function () { return _isListening; },\r\n        unload: _unload,\r\n        addListener: addListener,\r\n        setOnlineState: setOnlineState\r\n    };\r\n}\r\n//# sourceMappingURL=Offline.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\nexport var StorageType = createEnumStyle({\r\n    LocalStorage: 0 /* eStorageType.LocalStorage */,\r\n    SessionStorage: 1 /* eStorageType.SessionStorage */\r\n});\r\nexport var DistributedTracingModes = createEnumStyle({\r\n    AI: 0 /* eDistributedTracingModes.AI */,\r\n    AI_AND_W3C: 1 /* eDistributedTracingModes.AI_AND_W3C */,\r\n    W3C: 2 /* eDistributedTracingModes.W3C */\r\n});\r\n/**\r\n * The EventPersistence contains a set of values that specify the event's persistence.\r\n */\r\nexport var EventPersistence = createEnumStyle({\r\n    /**\r\n     * Normal persistence.\r\n     */\r\n    Normal: 1 /* EventPersistenceValue.Normal */,\r\n    /**\r\n     * Critical persistence.\r\n     */\r\n    Critical: 2 /* EventPersistenceValue.Critical */\r\n});\r\n//# sourceMappingURL=Enums.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, dumpObj, getExceptionName, getGlobal, getGlobalInst, isNullOrUndefined, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { StorageType } from \"./Enums\";\r\nimport { _DYN_PUSH, _DYN_REMOVE_ITEM, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar _canUseLocalStorage = undefined;\r\nvar _canUseSessionStorage = undefined;\r\nvar _storagePrefix = \"\";\r\n/**\r\n * Gets the localStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getLocalStorageObject() {\r\n    if (utlCanUseLocalStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n * @param storageType - Type of storage\r\n * @return {Storage} Returns storage object verified that it is usable\r\n */\r\nfunction _getVerifiedStorageObject(storageType) {\r\n    try {\r\n        if (isNullOrUndefined(getGlobal())) {\r\n            return null;\r\n        }\r\n        var uid = (new Date)[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        var storage = getGlobalInst(storageType === StorageType.LocalStorage ? \"localStorage\" : \"sessionStorage\");\r\n        var name_1 = _storagePrefix + uid;\r\n        storage.setItem(name_1, uid);\r\n        var fail = storage.getItem(name_1) !== uid;\r\n        storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name_1);\r\n        if (!fail) {\r\n            return storage;\r\n        }\r\n    }\r\n    catch (exception) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Gets the sessionStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getSessionStorageObject() {\r\n    if (utlCanUseSessionStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Disables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlDisableStorage() {\r\n    _canUseLocalStorage = false;\r\n    _canUseSessionStorage = false;\r\n}\r\nexport function utlSetStoragePrefix(storagePrefix) {\r\n    _storagePrefix = storagePrefix || \"\";\r\n}\r\n/**\r\n * Re-enables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlEnableStorage() {\r\n    _canUseLocalStorage = utlCanUseLocalStorage(true);\r\n    _canUseSessionStorage = utlCanUseSessionStorage(true);\r\n}\r\n/**\r\n * Returns whether LocalStorage can be used, if the reset parameter is passed a true this will override\r\n * any previous disable calls.\r\n * @param reset - Should the usage be reset and determined only based on whether LocalStorage is available\r\n */\r\nexport function utlCanUseLocalStorage(reset) {\r\n    if (reset || _canUseLocalStorage === undefined) {\r\n        _canUseLocalStorage = !!_getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return _canUseLocalStorage;\r\n}\r\nexport function utlGetLocalStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 1 /* _eInternalMessageId.BrowserCannotReadLocalStorage */, \"Browser failed read of local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetLocalStorage(logger, name, data) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 3 /* _eInternalMessageId.BrowserCannotWriteLocalStorage */, \"Browser failed write to local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 5 /* _eInternalMessageId.BrowserFailedRemovalFromLocalStorage */, \"Browser failed removal of local storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlCanUseSessionStorage(reset) {\r\n    if (reset || _canUseSessionStorage === undefined) {\r\n        _canUseSessionStorage = !!_getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return _canUseSessionStorage;\r\n}\r\nexport function utlGetSessionStorageKeys() {\r\n    var keys = [];\r\n    if (utlCanUseSessionStorage()) {\r\n        objForEachKey(getGlobalInst(\"sessionStorage\"), function (key) {\r\n            keys[_DYN_PUSH /* @min:%2epush */](key);\r\n        });\r\n    }\r\n    return keys;\r\n}\r\nexport function utlGetSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 2 /* _eInternalMessageId.BrowserCannotReadSessionStorage */, \"Browser failed read of session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetSessionStorage(logger, name, data) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 4 /* _eInternalMessageId.BrowserCannotWriteSessionStorage */, \"Browser failed write to session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 6 /* _eInternalMessageId.BrowserFailedRemovalFromSessionStorage */, \"Browser failed removal of session storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=StorageHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createValueMap } from \"@microsoft/applicationinsights-core-js\";\r\nexport var RequestHeaders = createValueMap({\r\n    requestContextHeader: [0 /* eRequestHeaders.requestContextHeader */, \"Request-Context\"],\r\n    requestContextTargetKey: [1 /* eRequestHeaders.requestContextTargetKey */, \"appId\"],\r\n    requestContextAppIdFormat: [2 /* eRequestHeaders.requestContextAppIdFormat */, \"appId=cid-v1:\"],\r\n    requestIdHeader: [3 /* eRequestHeaders.requestIdHeader */, \"Request-Id\"],\r\n    traceParentHeader: [4 /* eRequestHeaders.traceParentHeader */, \"traceparent\"],\r\n    traceStateHeader: [5 /* eRequestHeaders.traceStateHeader */, \"tracestate\"],\r\n    sdkContextHeader: [6 /* eRequestHeaders.sdkContextHeader */, \"Sdk-Context\"],\r\n    sdkContextHeaderAppIdRequest: [7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */, \"appId\"],\r\n    requestContextHeaderLowerCase: [8 /* eRequestHeaders.requestContextHeaderLowerCase */, \"request-context\"]\r\n});\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { createClassFromInterface } from \"@microsoft/applicationinsights-core-js\";\r\nfunction _aiNameFunc(baseName) {\r\n    var aiName = \"ai.\" + baseName + \".\";\r\n    return function (name) {\r\n        return aiName + name;\r\n    };\r\n}\r\nvar _aiApplication = _aiNameFunc(\"application\");\r\nvar _aiDevice = _aiNameFunc(\"device\");\r\nvar _aiLocation = _aiNameFunc(\"location\");\r\nvar _aiOperation = _aiNameFunc(\"operation\");\r\nvar _aiSession = _aiNameFunc(\"session\");\r\nvar _aiUser = _aiNameFunc(\"user\");\r\nvar _aiCloud = _aiNameFunc(\"cloud\");\r\nvar _aiInternal = _aiNameFunc(\"internal\");\r\nvar ContextTagKeys = /** @class */ (function (_super) {\r\n    __extends(ContextTagKeys, _super);\r\n    function ContextTagKeys() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return ContextTagKeys;\r\n}(createClassFromInterface({\r\n    applicationVersion: _aiApplication(\"ver\"),\r\n    applicationBuild: _aiApplication(\"build\"),\r\n    applicationTypeId: _aiApplication(\"typeId\"),\r\n    applicationId: _aiApplication(\"applicationId\"),\r\n    applicationLayer: _aiApplication(\"layer\"),\r\n    deviceId: _aiDevice(\"id\"),\r\n    deviceIp: _aiDevice(\"ip\"),\r\n    deviceLanguage: _aiDevice(\"language\"),\r\n    deviceLocale: _aiDevice(\"locale\"),\r\n    deviceModel: _aiDevice(\"model\"),\r\n    deviceFriendlyName: _aiDevice(\"friendlyName\"),\r\n    deviceNetwork: _aiDevice(\"network\"),\r\n    deviceNetworkName: _aiDevice(\"networkName\"),\r\n    deviceOEMName: _aiDevice(\"oemName\"),\r\n    deviceOS: _aiDevice(\"os\"),\r\n    deviceOSVersion: _aiDevice(\"osVersion\"),\r\n    deviceRoleInstance: _aiDevice(\"roleInstance\"),\r\n    deviceRoleName: _aiDevice(\"roleName\"),\r\n    deviceScreenResolution: _aiDevice(\"screenResolution\"),\r\n    deviceType: _aiDevice(\"type\"),\r\n    deviceMachineName: _aiDevice(\"machineName\"),\r\n    deviceVMName: _aiDevice(\"vmName\"),\r\n    deviceBrowser: _aiDevice(\"browser\"),\r\n    deviceBrowserVersion: _aiDevice(\"browserVersion\"),\r\n    locationIp: _aiLocation(\"ip\"),\r\n    locationCountry: _aiLocation(\"country\"),\r\n    locationProvince: _aiLocation(\"province\"),\r\n    locationCity: _aiLocation(\"city\"),\r\n    operationId: _aiOperation(\"id\"),\r\n    operationName: _aiOperation(\"name\"),\r\n    operationParentId: _aiOperation(\"parentId\"),\r\n    operationRootId: _aiOperation(\"rootId\"),\r\n    operationSyntheticSource: _aiOperation(\"syntheticSource\"),\r\n    operationCorrelationVector: _aiOperation(\"correlationVector\"),\r\n    sessionId: _aiSession(\"id\"),\r\n    sessionIsFirst: _aiSession(\"isFirst\"),\r\n    sessionIsNew: _aiSession(\"isNew\"),\r\n    userAccountAcquisitionDate: _aiUser(\"accountAcquisitionDate\"),\r\n    userAccountId: _aiUser(\"accountId\"),\r\n    userAgent: _aiUser(\"userAgent\"),\r\n    userId: _aiUser(\"id\"),\r\n    userStoreRegion: _aiUser(\"storeRegion\"),\r\n    userAuthUserId: _aiUser(\"authUserId\"),\r\n    userAnonymousUserAcquisitionDate: _aiUser(\"anonUserAcquisitionDate\"),\r\n    userAuthenticatedUserAcquisitionDate: _aiUser(\"authUserAcquisitionDate\"),\r\n    cloudName: _aiCloud(\"name\"),\r\n    cloudRole: _aiCloud(\"role\"),\r\n    cloudRoleVer: _aiCloud(\"roleVer\"),\r\n    cloudRoleInstance: _aiCloud(\"roleInstance\"),\r\n    cloudEnvironment: _aiCloud(\"environment\"),\r\n    cloudLocation: _aiCloud(\"location\"),\r\n    cloudDeploymentUnit: _aiCloud(\"deploymentUnit\"),\r\n    internalNodeName: _aiInternal(\"nodeName\"),\r\n    internalSdkVersion: _aiInternal(\"sdkVersion\"),\r\n    internalAgentVersion: _aiInternal(\"agentVersion\"),\r\n    internalSnippet: _aiInternal(\"snippet\"),\r\n    internalSdkSrc: _aiInternal(\"sdkSrc\")\r\n})));\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { ContextTagKeys } from \"./Contracts/ContextTagKeys\";\r\nexport var Extensions = {\r\n    UserExt: \"user\",\r\n    DeviceExt: \"device\",\r\n    TraceExt: \"trace\",\r\n    WebExt: \"web\",\r\n    AppExt: \"app\",\r\n    OSExt: \"os\",\r\n    SessionExt: \"ses\",\r\n    SDKExt: \"sdk\"\r\n};\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strNotSpecified } from \"../../Constants\";\r\nimport { _DYN_NAME } from \"../../__DynamicConstants\";\r\nimport { dataSanitizeString } from \"./DataSanitizer\";\r\nvar Envelope = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = this;\r\n        var _self = this;\r\n        _self.ver = 1;\r\n        _self.sampleRate = 100.0;\r\n        _self.tags = {};\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self.data = data;\r\n        _self.time = toISOString(new Date());\r\n        _self.aiDataContract = {\r\n            time: 1 /* FieldType.Required */,\r\n            iKey: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? 4 /* FieldType.Hidden */ : 1 /* FieldType.Required */;\r\n            },\r\n            tags: 1 /* FieldType.Required */,\r\n            data: 1 /* FieldType.Required */\r\n        };\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Data = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            baseType: 1 /* FieldType.Required */,\r\n            baseData: 1 /* FieldType.Required */\r\n        };\r\n        this.baseType = baseType;\r\n        this.baseData = data;\r\n    }\r\n    return Data;\r\n}());\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_DURATION = \"duration\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TAGS = \"tags\"; // Count: 17\r\nexport var _DYN_DEVICE_TYPE = \"deviceType\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 15\r\nexport var _DYN_NAME = \"name\"; // Count: 8\r\nexport var _DYN_TRACE_ID = \"traceID\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 38\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 5\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 7\r\nexport var _DYN_DATA_TYPE = \"dataType\"; // Count: 10\r\nexport var _DYN_ENVELOPE_TYPE = \"envelopeType\"; // Count: 7\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 7\r\nexport var _DYN__GET = \"_get\"; // Count: 5\r\nexport var _DYN_ENQUEUE = \"enqueue\"; // Count: 7\r\nexport var _DYN_COUNT = \"count\"; // Count: 7\r\nexport var _DYN_EVENTS_LIMIT_IN_MEM = \"eventsLimitInMem\"; // Count: 2\r\nexport var _DYN_PUSH = \"push\"; // Count: 9\r\nexport var _DYN_ITEM = \"item\"; // Count: 6\r\nexport var _DYN_EMIT_LINE_DELIMITED_0 = \"emitLineDelimitedJson\"; // Count: 3\r\nexport var _DYN_CLEAR = \"clear\"; // Count: 6\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 3\r\nexport var _DYN_MARK_AS_SENT = \"markAsSent\"; // Count: 4\r\nexport var _DYN_CLEAR_SENT = \"clearSent\"; // Count: 5\r\nexport var _DYN_BUFFER_OVERRIDE = \"bufferOverride\"; // Count: 3\r\nexport var _DYN__BUFFER__KEY = \"BUFFER_KEY\"; // Count: 5\r\nexport var _DYN__SENT__BUFFER__KEY = \"SENT_BUFFER_KEY\"; // Count: 8\r\nexport var _DYN_CONCAT = \"concat\"; // Count: 6\r\nexport var _DYN__MAX__BUFFER__SIZE = \"MAX_BUFFER_SIZE\"; // Count: 5\r\nexport var _DYN_TRIGGER_SEND = \"triggerSend\"; // Count: 5\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 16\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 3\r\nexport var _DYN__SENDER = \"_sender\"; // Count: 5\r\nexport var _DYN_ENDPOINT_URL = \"endpointUrl\"; // Count: 5\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 5\r\nexport var _DYN_CUSTOM_HEADERS = \"customHeaders\"; // Count: 3\r\nexport var _DYN_MAX_BATCH_SIZE_IN_BY1 = \"maxBatchSizeInBytes\"; // Count: 2\r\nexport var _DYN_ONUNLOAD_DISABLE_BEA2 = \"onunloadDisableBeacon\"; // Count: 3\r\nexport var _DYN_IS_BEACON_API_DISABL3 = \"isBeaconApiDisabled\"; // Count: 3\r\nexport var _DYN_ALWAYS_USE_XHR_OVERR4 = \"alwaysUseXhrOverride\"; // Count: 2\r\nexport var _DYN_DISABLE_XHR = \"disableXhr\"; // Count: 3\r\nexport var _DYN_ENABLE_SESSION_STORA5 = \"enableSessionStorageBuffer\"; // Count: 2\r\nexport var _DYN__BUFFER = \"_buffer\"; // Count: 9\r\nexport var _DYN_ONUNLOAD_DISABLE_FET6 = \"onunloadDisableFetch\"; // Count: 2\r\nexport var _DYN_DISABLE_SEND_BEACON_7 = \"disableSendBeaconSplit\"; // Count: 2\r\nexport var _DYN_ENABLE_SEND_PROMISE = \"enableSendPromise\"; // Count: 2\r\nexport var _DYN_GET_SENDER_INST = \"getSenderInst\"; // Count: 4\r\nexport var _DYN_UNLOAD_TRANSPORTS = \"unloadTransports\"; // Count: 2\r\nexport var _DYN_CONVERT_UNDEFINED = \"convertUndefined\"; // Count: 2\r\nexport var _DYN_MAX_BATCH_INTERVAL = \"maxBatchInterval\"; // Count: 2\r\nexport var _DYN_SERIALIZE = \"serialize\"; // Count: 4\r\nexport var _DYN__ON_ERROR = \"_onError\"; // Count: 7\r\nexport var _DYN__ON_PARTIAL_SUCCESS = \"_onPartialSuccess\"; // Count: 3\r\nexport var _DYN__ON_SUCCESS = \"_onSuccess\"; // Count: 6\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_ITEMS_ACCEPTED = \"itemsAccepted\"; // Count: 3\r\nexport var _DYN_ORI_PAYLOAD = \"oriPayload\"; // Count: 3\r\nexport var _DYN_BASE_TYPE = \"baseType\"; // Count: 4\r\nexport var _DYN_SAMPLE_RATE = \"sampleRate\"; // Count: 4\r\nexport var _DYN_EVENTS_SEND_REQUEST = \"eventsSendRequest\"; // Count: 2\r\nexport var _DYN_GET_SAMPLING_SCORE = \"getSamplingScore\"; // Count: 2\r\nexport var _DYN_GET_HASH_CODE_SCORE = \"getHashCodeScore\"; // Count: 4\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { CtxTagKeys, Data, Envelope, Event, Exception, HttpMethod, Metric, PageView, PageViewPerformance, RemoteDependencyData, SampleRate, Trace, dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, _warnToConsole, getJSON, hasJSON, isNullOrUndefined, isNumber, isString, isTruthy, objForEachKey, optimizeObject, setValue, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { STR_DURATION } from \"./InternalConstants\";\r\nimport { _DYN_DATA, _DYN_DATA_TYPE, _DYN_DEVICE_TYPE, _DYN_ENVELOPE_TYPE, _DYN_LENGTH, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_STRINGIFY, _DYN_TAGS, _DYN_TO_STRING, _DYN_TRACE_ID } from \"./__DynamicConstants\";\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar strBaseType = \"baseType\";\r\nvar strBaseData = \"baseData\";\r\nvar strProperties = \"properties\";\r\nvar strTrue = \"true\";\r\nfunction _setValueIf(target, field, value) {\r\n    return setValue(target, field, value, isTruthy);\r\n}\r\n/*\r\n * Maps Part A data from CS 4.0\r\n */\r\nfunction _extractPartAExtensions(logger, item, env) {\r\n    // todo: switch to keys from common in this method\r\n    var envTags = env[_DYN_TAGS /* @min:%2etags */] = env[_DYN_TAGS /* @min:%2etags */] || {};\r\n    var itmExt = item.ext = item.ext || {};\r\n    var itmTags = item[_DYN_TAGS /* @min:%2etags */] = item[_DYN_TAGS /* @min:%2etags */] || [];\r\n    var extUser = itmExt.user;\r\n    if (extUser) {\r\n        _setValueIf(envTags, CtxTagKeys.userAuthUserId, extUser.authId);\r\n        _setValueIf(envTags, CtxTagKeys.userId, extUser.id || extUser.localId);\r\n    }\r\n    var extApp = itmExt.app;\r\n    if (extApp) {\r\n        _setValueIf(envTags, CtxTagKeys.sessionId, extApp.sesId);\r\n    }\r\n    var extDevice = itmExt.device;\r\n    if (extDevice) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceId, extDevice.id || extDevice.localId);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice.deviceClass);\r\n        _setValueIf(envTags, CtxTagKeys.deviceIp, extDevice.ip);\r\n        _setValueIf(envTags, CtxTagKeys.deviceModel, extDevice.model);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice[_DYN_DEVICE_TYPE /* @min:%2edeviceType */]);\r\n    }\r\n    var web = item.ext.web;\r\n    if (web) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceLanguage, web.browserLang);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowserVersion, web.browserVer);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowser, web.browser);\r\n        var envData = env[_DYN_DATA /* @min:%2edata */] = env[_DYN_DATA /* @min:%2edata */] || {};\r\n        var envBaseData = envData[strBaseData] = envData[strBaseData] || {};\r\n        var envProps = envBaseData[strProperties] = envBaseData[strProperties] || {};\r\n        _setValueIf(envProps, \"domain\", web.domain);\r\n        _setValueIf(envProps, \"isManual\", web.isManual ? strTrue : null);\r\n        _setValueIf(envProps, \"screenRes\", web.screenRes);\r\n        _setValueIf(envProps, \"userConsent\", web.userConsent ? strTrue : null);\r\n    }\r\n    var extOs = itmExt.os;\r\n    if (extOs) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceOS, extOs[_DYN_NAME /* @min:%2ename */]);\r\n        _setValueIf(envTags, CtxTagKeys.deviceOSVersion, extOs.osVer);\r\n    }\r\n    // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n    var extTrace = itmExt.trace;\r\n    if (extTrace) {\r\n        _setValueIf(envTags, CtxTagKeys.operationParentId, extTrace.parentID);\r\n        _setValueIf(envTags, CtxTagKeys.operationName, dataSanitizeString(logger, extTrace[_DYN_NAME /* @min:%2ename */]));\r\n        _setValueIf(envTags, CtxTagKeys.operationId, extTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n    }\r\n    // Sample 4.0 schema\r\n    //  {\r\n    //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n    //     \"name\" : \"MetricWithNamespace\",\r\n    //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n    //     \"ext\": {  \"cloud\": {\r\n    //          \"role\": \"WATSON3\",\r\n    //          \"roleInstance\": \"CO4AEAP00000260\"\r\n    //      },\r\n    //      \"device\": {}, \"correlation\": {} },\r\n    //      \"tags\": [\r\n    //        { \"amazon.region\" : \"east2\" },\r\n    //        { \"os.expid\" : \"wp:02df239\" }\r\n    //     ]\r\n    //   }\r\n    var tgs = {};\r\n    // deals with tags.push({object})\r\n    for (var i = itmTags[_DYN_LENGTH /* @min:%2elength */] - 1; i >= 0; i--) {\r\n        var tg = itmTags[i];\r\n        objForEachKey(tg, function (key, value) {\r\n            tgs[key] = value;\r\n        });\r\n        itmTags.splice(i, 1);\r\n    }\r\n    // deals with tags[key]=value (and handles hasOwnProperty)\r\n    objForEachKey(itmTags, function (tg, value) {\r\n        tgs[tg] = value;\r\n    });\r\n    var theTags = __assign(__assign({}, envTags), tgs);\r\n    if (!theTags[CtxTagKeys.internalSdkVersion]) {\r\n        // Append a version in case it is not already set\r\n        theTags[CtxTagKeys.internalSdkVersion] = dataSanitizeString(logger, \"javascript:\".concat(EnvelopeCreator.Version), 64);\r\n    }\r\n    env[_DYN_TAGS /* @min:%2etags */] = optimizeObject(theTags);\r\n}\r\nfunction _extractPropsAndMeasurements(data, properties, measurements) {\r\n    if (!isNullOrUndefined(data)) {\r\n        objForEachKey(data, function (key, value) {\r\n            if (isNumber(value)) {\r\n                measurements[key] = value;\r\n            }\r\n            else if (isString(value)) {\r\n                properties[key] = value;\r\n            }\r\n            else if (hasJSON()) {\r\n                properties[key] = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue) {\r\n    if (!isNullOrUndefined(properties)) {\r\n        objForEachKey(properties, function (key, value) {\r\n            properties[key] = value || customUndefinedValue;\r\n        });\r\n    }\r\n}\r\n// TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\nfunction _createEnvelope(logger, envelopeType, telemetryItem, data) {\r\n    var envelope = new Envelope(logger, data, envelopeType);\r\n    _setValueIf(envelope, \"sampleRate\", telemetryItem[SampleRate]);\r\n    if ((telemetryItem[strBaseData] || {}).startTime) {\r\n        // Starting from Version 3.0.3, the time property will be assigned by the startTime value,\r\n        // which records the loadEvent time for the pageView event.\r\n        envelope.time = toISOString(telemetryItem[strBaseData].startTime);\r\n    }\r\n    envelope.iKey = telemetryItem.iKey;\r\n    var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n    envelope[_DYN_NAME /* @min:%2ename */] = envelope[_DYN_NAME /* @min:%2ename */].replace(\"{0}\", iKeyNoDashes);\r\n    // extract all extensions from ctx\r\n    _extractPartAExtensions(logger, telemetryItem, envelope);\r\n    // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n    telemetryItem[_DYN_TAGS /* @min:%2etags */] = telemetryItem[_DYN_TAGS /* @min:%2etags */] || [];\r\n    return optimizeObject(envelope);\r\n}\r\nfunction EnvelopeCreatorInit(logger, telemetryItem) {\r\n    if (isNullOrUndefined(telemetryItem[strBaseData])) {\r\n        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 46 /* _eInternalMessageId.TelemetryEnvelopeInvalid */, \"telemetryItem.baseData cannot be null.\");\r\n    }\r\n}\r\nexport var EnvelopeCreator = {\r\n    Version: '3.3.4'\r\n};\r\nexport function DependencyEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    if (isNullOrUndefined(bd)) {\r\n        _warnToConsole(logger, \"Invalid input for dependency data\");\r\n        return null;\r\n    }\r\n    var method = bd[strProperties] && bd[strProperties][HttpMethod] ? bd[strProperties][HttpMethod] : \"GET\";\r\n    var remoteDepData = new RemoteDependencyData(logger, bd.id, bd.target, bd[_DYN_NAME /* @min:%2ename */], bd[STR_DURATION /* @min:%2eduration */], bd.success, bd.responseCode, method, bd.type, bd.correlationContext, customProperties, customMeasurements);\r\n    var data = new Data(RemoteDependencyData[_DYN_DATA_TYPE /* @min:%2edataType */], remoteDepData);\r\n    return _createEnvelope(logger, RemoteDependencyData[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function EventEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customProperties = {};\r\n    var customMeasurements = {};\r\n    if (telemetryItem[strBaseType] !== Event[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n        customProperties[\"baseTypeSource\"] = telemetryItem[strBaseType]; // save the passed in base type as a property\r\n    }\r\n    if (telemetryItem[strBaseType] === Event[_DYN_DATA_TYPE /* @min:%2edataType */]) { // take collection\r\n        customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n        customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    }\r\n    else { // if its not a known type, convert to custom event\r\n        if (telemetryItem[strBaseData]) {\r\n            _extractPropsAndMeasurements(telemetryItem[strBaseData], customProperties, customMeasurements);\r\n        }\r\n    }\r\n    // Extract root level properties from part C telemetryItem.data\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var eventName = telemetryItem[strBaseData][_DYN_NAME /* @min:%2ename */];\r\n    var eventData = new Event(logger, eventName, customProperties, customMeasurements);\r\n    var data = new Data(Event[_DYN_DATA_TYPE /* @min:%2edataType */], eventData);\r\n    return _createEnvelope(logger, Event[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function ExceptionEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Extract root level properties from part C telemetryItem.data\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    var exData = Exception.CreateFromInterface(logger, bd, customProperties, customMeasurements);\r\n    var data = new Data(Exception[_DYN_DATA_TYPE /* @min:%2edataType */], exData);\r\n    return _createEnvelope(logger, Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function MetricEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var baseData = telemetryItem[strBaseData];\r\n    var props = baseData[strProperties] || {};\r\n    var measurements = baseData[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseMetricData = new Metric(logger, baseData[_DYN_NAME /* @min:%2ename */], baseData.average, baseData.sampleCount, baseData.min, baseData.max, baseData.stdDev, props, measurements);\r\n    var data = new Data(Metric[_DYN_DATA_TYPE /* @min:%2edataType */], baseMetricData);\r\n    return _createEnvelope(logger, Metric[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n    var duration;\r\n    var baseData = telemetryItem[strBaseData];\r\n    if (!isNullOrUndefined(baseData) &&\r\n        !isNullOrUndefined(baseData[strProperties]) &&\r\n        !isNullOrUndefined(baseData[strProperties][STR_DURATION])) { // from part B properties\r\n        duration = baseData[strProperties][STR_DURATION];\r\n        delete baseData[strProperties][STR_DURATION];\r\n    }\r\n    else if (!isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */]) &&\r\n        !isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION])) { // from custom properties\r\n        duration = telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n        delete telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n    var currentContextId;\r\n    if (((telemetryItem.ext || {}).trace || {})[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n        currentContextId = telemetryItem.ext.trace[_DYN_TRACE_ID /* @min:%2etraceID */];\r\n    }\r\n    var id = bd.id || currentContextId;\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.refUri)) {\r\n        properties[\"refUri\"] = bd.refUri;\r\n    }\r\n    // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.pageType)) {\r\n        properties[\"pageType\"] = bd.pageType;\r\n    }\r\n    // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.isLoggedIn)) {\r\n        properties[\"isLoggedIn\"] = bd.isLoggedIn[_DYN_TO_STRING /* @min:%2etoString */]();\r\n    }\r\n    // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd[strProperties])) {\r\n        var pageTags = bd[strProperties];\r\n        objForEachKey(pageTags, function (key, value) {\r\n            properties[key] = value;\r\n        });\r\n    }\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var pageViewData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n    var data = new Data(PageView[_DYN_DATA_TYPE /* @min:%2edataType */], pageViewData);\r\n    return _createEnvelope(logger, PageView[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewPerformanceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var bd = telemetryItem[strBaseData];\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri || bd.url;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n    var data = new Data(PageViewPerformance[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, PageViewPerformance[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function TraceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var message = telemetryItem[strBaseData].message;\r\n    var severityLevel = telemetryItem[strBaseData].severityLevel;\r\n    var props = telemetryItem[strBaseData][strProperties] || {};\r\n    var measurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseData = new Trace(logger, message, severityLevel, props, measurements);\r\n    var data = new Data(Trace[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, Trace[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\n//# sourceMappingURL=EnvelopeCreator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlGetSessionStorage, utlRemoveSessionStorage, utlSetSessionStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, arrForEach, arrIndexOf, dumpObj, getExceptionName, getJSON, isArray, isFunction, isNullOrUndefined, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_ITEM, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_PUSH, _DYN_STRINGIFY, _DYN__BUFFER__KEY, _DYN__GET, _DYN__MAX__BUFFER__SIZE, _DYN__SENT__BUFFER__KEY } from \"./__DynamicConstants\";\r\nvar BaseSendBuffer = /** @class */ (function () {\r\n    function BaseSendBuffer(logger, config) {\r\n        var _buffer = [];\r\n        var _bufferFullMessageSent = false;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        this[_DYN__GET /* @min:%2e_get */] = function () {\r\n            return _buffer;\r\n        };\r\n        this._set = function (buffer) {\r\n            _buffer = buffer;\r\n            return _buffer;\r\n        };\r\n        dynamicProto(BaseSendBuffer, this, function (_self) {\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= config[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 105 /* _eInternalMessageId.InMemoryStorageBufferFull */, \"Maximum in-memory buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _buffer[_DYN_PUSH /* @min:%2epush */](payload);\r\n                return;\r\n            };\r\n            _self[_DYN_COUNT /* @min:%2ecount */] = function () {\r\n                return _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.size = function () {\r\n                var size = _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n                for (var lp = 0; lp < _buffer[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    size += (_buffer[lp].item)[_DYN_LENGTH /* @min:%2elength */];\r\n                }\r\n                if (!config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */]) {\r\n                    size += 2;\r\n                }\r\n                return size;\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _buffer = [];\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self.getItems = function () {\r\n                return _buffer.slice(0);\r\n            };\r\n            _self.batchPayloads = function (payloads) {\r\n                if (payloads && payloads[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var payloadStr_1 = [];\r\n                    arrForEach(payloads, function (payload) {\r\n                        payloadStr_1[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                    });\r\n                    var batch = config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */] ?\r\n                        payloadStr_1.join(\"\\n\") :\r\n                        \"[\" + payloadStr_1.join(\",\") + \"]\";\r\n                    return batch;\r\n                }\r\n                return null;\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                var items = _buffer.slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                var newBuffer = !!canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(items, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                return newBuffer;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for BaseSendBuffer.prototype.enqueue.\r\n// Removed Stub for BaseSendBuffer.prototype.count.\r\n// Removed Stub for BaseSendBuffer.prototype.size.\r\n// Removed Stub for BaseSendBuffer.prototype.clear.\r\n// Removed Stub for BaseSendBuffer.prototype.getItems.\r\n// Removed Stub for BaseSendBuffer.prototype.batchPayloads.\r\n// Removed Stub for BaseSendBuffer.prototype.createNew.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseSendBuffer.__ieDyn=1;\n\n    return BaseSendBuffer;\r\n}());\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function (_super) {\r\n    __extends(ArraySendBuffer, _super);\r\n    function ArraySendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        dynamicProto(ArraySendBuffer, _this, function (_self, _base) {\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                // not supported\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for ArraySendBuffer.prototype.markAsSent.\r\n// Removed Stub for ArraySendBuffer.prototype.clearSent.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ArraySendBuffer.__ieDyn=1;\n\n    return ArraySendBuffer;\r\n}(BaseSendBuffer));\r\nexport { ArraySendBuffer };\r\nvar PREVIOUS_KEYS = [\"AI_buffer\", \"AI_sentBuffer\"];\r\n/*\r\n * Session storage buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function (_super) {\r\n    __extends(SessionStorageSendBuffer, _super);\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        var _bufferFullMessageSent = false;\r\n        //Note: should not use config.namePrefix directly, because it will always refers to the latest namePrefix\r\n        var _namePrefix = config === null || config === void 0 ? void 0 : config.namePrefix;\r\n        // TODO: add remove buffer override as well\r\n        var _b = config[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */] || { getItem: utlGetSessionStorage, setItem: utlSetSessionStorage }, getItem = _b.getItem, setItem = _b.setItem;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        dynamicProto(SessionStorageSendBuffer, _this, function (_self, _base) {\r\n            var bufferItems = _getBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */]);\r\n            var itemsInSentBuffer = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n            var previousItems = _getPreviousEvents();\r\n            var notDeliveredItems = itemsInSentBuffer[_DYN_CONCAT /* @min:%2econcat */](previousItems);\r\n            var buffer = _self._set(bufferItems[_DYN_CONCAT /* @min:%2econcat */](notDeliveredItems));\r\n            // If the buffer has too many items, drop items from the end.\r\n            if (buffer[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                buffer[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n            }\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], buffer);\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Maximum buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _base[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], _self._set(_removePayloadsFromBuffer(payload, _self[_DYN__GET /* @min:%2e_get */]())));\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                if (sentElements instanceof Array && payload instanceof Array) {\r\n                    sentElements = sentElements[_DYN_CONCAT /* @min:%2econcat */](payload);\r\n                    if (sentElements[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                        // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                        // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Sent buffer reached its maximum size: \" + sentElements[_DYN_LENGTH /* @min:%2elength */], true);\r\n                        sentElements[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n                    }\r\n                    _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n                }\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                sentElements = _removePayloadsFromBuffer(payload, sentElements);\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                canUseSessionStorage = !!canUseSessionStorage;\r\n                var unsentItems = _self[_DYN__GET /* @min:%2e_get */]().slice(0);\r\n                var sentItems = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]).slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                // to make sure that we do not send duplicated payloads when it is switched back to previous one\r\n                _self[_DYN_CLEAR /* @min:%2eclear */]();\r\n                var newBuffer = canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(unsentItems, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                if (canUseSessionStorage) {\r\n                    // arr buffer will clear all payloads if markAsSent() is called\r\n                    newBuffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](sentItems);\r\n                }\r\n                return newBuffer;\r\n            };\r\n            function _removePayloadsFromBuffer(payloads, buffer) {\r\n                var remaining = [];\r\n                var payloadStr = [];\r\n                arrForEach(payloads, function (payload) {\r\n                    payloadStr[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                });\r\n                arrForEach(buffer, function (value) {\r\n                    if (!isFunction(value) && arrIndexOf(payloadStr, value[_DYN_ITEM /* @min:%2eitem */]) === -1) {\r\n                        remaining[_DYN_PUSH /* @min:%2epush */](value);\r\n                    }\r\n                });\r\n                return remaining;\r\n            }\r\n            function _getBuffer(key) {\r\n                var prefixedKey = key;\r\n                prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                return _getBufferBase(prefixedKey);\r\n            }\r\n            function _getBufferBase(key) {\r\n                try {\r\n                    var bufferJson = getItem(logger, key);\r\n                    if (bufferJson) {\r\n                        var buffer_1 = getJSON().parse(bufferJson);\r\n                        if (isString(buffer_1)) {\r\n                            // When using some version prototype.js the stringify / parse cycle does not decode array's correctly\r\n                            buffer_1 = getJSON().parse(buffer_1);\r\n                        }\r\n                        if (buffer_1 && isArray(buffer_1)) {\r\n                            return buffer_1;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 42 /* _eInternalMessageId.FailedToRestoreStorageBuffer */, \" storage key: \" + key + \", \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            function _setBuffer(key, buffer) {\r\n                var prefixedKey = key;\r\n                try {\r\n                    prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                    var bufferJson = JSON[_DYN_STRINGIFY /* @min:%2estringify */](buffer);\r\n                    setItem(logger, prefixedKey, bufferJson);\r\n                }\r\n                catch (e) {\r\n                    // if there was an error, clear the buffer\r\n                    // telemetry is stored in the _buffer array so we won't loose any items\r\n                    setItem(logger, prefixedKey, JSON[_DYN_STRINGIFY /* @min:%2estringify */]([]));\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \" storage key: \" + prefixedKey + \", \" + getExceptionName(e) + \". Buffer cleared\", { exception: dumpObj(e) });\r\n                }\r\n            }\r\n            // this removes buffer with prefix+key\r\n            function _getPreviousEvents() {\r\n                var items = [];\r\n                try {\r\n                    arrForEach(PREVIOUS_KEYS, function (key) {\r\n                        var events = _getItemsFromPreviousKey(key);\r\n                        items = items[_DYN_CONCAT /* @min:%2econcat */](events);\r\n                        // to make sure that we also transfer items from old prefixed + key buffer\r\n                        if (_namePrefix) {\r\n                            var prefixedKey = _namePrefix + \"_\" + key;\r\n                            var prefixEvents = _getItemsFromPreviousKey(prefixedKey);\r\n                            items = items[_DYN_CONCAT /* @min:%2econcat */](prefixEvents);\r\n                        }\r\n                    });\r\n                    return items;\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \"Transfer events from previous buffers: \" + getExceptionName(e) + \". previous Buffer items can not be removed\", { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            // transform string[] to IInternalStorageItem[]\r\n            function _getItemsFromPreviousKey(key) {\r\n                try {\r\n                    var items = _getBufferBase(key);\r\n                    var transFormedItems_1 = [];\r\n                    arrForEach(items, function (item) {\r\n                        var internalItem = {\r\n                            item: item,\r\n                            cnt: 0 // previous events will be default to 0 count\r\n                        };\r\n                        transFormedItems_1[_DYN_PUSH /* @min:%2epush */](internalItem);\r\n                    });\r\n                    // remove the session storage if we can add events back\r\n                    utlRemoveSessionStorage(logger, key);\r\n                    return transFormedItems_1;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return [];\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for SessionStorageSendBuffer.prototype.enqueue.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clear.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.markAsSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clearSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.createNew.\r\n    var _a;\r\n    _a = SessionStorageSendBuffer;\r\n    SessionStorageSendBuffer.VERSION = \"_1\";\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\" + _a.VERSION;\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\" + _a.VERSION;\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}(BaseSendBuffer));\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BreezeChannelIdentifier, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, Event, Exception, Metric, PageView, PageViewPerformance, ProcessLegacy, RemoteDependencyData, RequestHeaders, SampleRate, Trace, createOfflineListener, isInternalApplicationInsightsEndpoint, utlCanUseSessionStorage, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { ActiveStatus, BaseTelemetryPlugin, SenderPostManager, _throwInternal, _warnToConsole, arrForEach, cfgDfBoolean, cfgDfValidate, createProcessTelemetryContext, createUniqueNamespace, dateNow, dumpObj, formatErrorMessageXdr, formatErrorMessageXhr, getExceptionName, getIEVersion, isArray, isBeaconsSupported, isFetchSupported, isNullOrUndefined, mergeEvtNamespace, objExtend, onConfigChange, parseResponse, prependTransports, runTargetUnload } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isNumber, isPromiseLike, isString, isTruthy, objDeepFreeze, objDefine, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from \"./EnvelopeCreator\";\r\nimport { ArraySendBuffer, SessionStorageSendBuffer } from \"./SendBuffer\";\r\nimport { Serializer } from \"./Serializer\";\r\nimport { Sample } from \"./TelemetryProcessors/Sample\";\r\nimport { _DYN_ALWAYS_USE_XHR_OVERR4, _DYN_BASE_TYPE, _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONVERT_UNDEFINED, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_CUSTOM_HEADERS, _DYN_DATA, _DYN_DIAG_LOG, _DYN_DISABLE_SEND_BEACON_7, _DYN_DISABLE_XHR, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENABLE_SEND_PROMISE, _DYN_ENABLE_SESSION_STORA5, _DYN_ENDPOINT_URL, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_EVENTS_SEND_REQUEST, _DYN_GET_SENDER_INST, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_BEACON_API_DISABL3, _DYN_ITEM, _DYN_ITEMS_ACCEPTED, _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_MAX_BATCH_INTERVAL, _DYN_MAX_BATCH_SIZE_IN_BY1, _DYN_ONUNLOAD_DISABLE_BEA2, _DYN_ONUNLOAD_DISABLE_FET6, _DYN_ORI_PAYLOAD, _DYN_PUSH, _DYN_SAMPLE_RATE, _DYN_SERIALIZE, _DYN_TAGS, _DYN_TRIGGER_SEND, _DYN_UNLOAD_TRANSPORTS, _DYN__BUFFER, _DYN__ON_ERROR, _DYN__ON_PARTIAL_SUCCESS, _DYN__ON_SUCCESS, _DYN__SENDER } from \"./__DynamicConstants\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar EMPTY_STR = \"\";\r\nvar FetchSyncRequestSizeLimitBytes = 65000; // approx 64kb (the current Edge, Firefox and Chrome max limit)\r\nfunction _getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nfunction isOverrideFn(httpXHROverride) {\r\n    return httpXHROverride && httpXHROverride.sendPOST;\r\n}\r\nvar defaultAppInsightsChannelConfig = objDeepFreeze((_a = {\r\n        // Use the default value (handles empty string in the configuration)\r\n        endpointUrl: cfgDfValidate(isTruthy, DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH)\r\n    },\r\n    _a[_DYN_EMIT_LINE_DELIMITED_0 /* @min:emitLineDelimitedJson */] = cfgDfBoolean(),\r\n    _a[_DYN_MAX_BATCH_INTERVAL /* @min:maxBatchInterval */] = 15000,\r\n    _a[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:maxBatchSizeInBytes */] = 102400,\r\n    _a.disableTelemetry = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_SESSION_STORA5 /* @min:enableSessionStorageBuffer */] = cfgDfBoolean(true),\r\n    _a.isRetryDisabled = cfgDfBoolean(),\r\n    _a[_DYN_IS_BEACON_API_DISABL3 /* @min:isBeaconApiDisabled */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_SEND_BEACON_7 /* @min:disableSendBeaconSplit */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:onunloadDisableFetch */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:onunloadDisableBeacon */] = cfgDfBoolean(),\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a.namePrefix = UNDEFINED_VALUE,\r\n    _a.samplingPercentage = cfgDfValidate(_chkSampling, 100),\r\n    _a[_DYN_CUSTOM_HEADERS /* @min:customHeaders */] = UNDEFINED_VALUE,\r\n    _a[_DYN_CONVERT_UNDEFINED /* @min:convertUndefined */] = UNDEFINED_VALUE,\r\n    _a[_DYN_EVENTS_LIMIT_IN_MEM /* @min:eventsLimitInMem */] = 10000,\r\n    _a[_DYN_BUFFER_OVERRIDE /* @min:bufferOverride */] = false,\r\n    _a.httpXHROverride = { isVal: isOverrideFn, v: UNDEFINED_VALUE },\r\n    _a[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:alwaysUseXhrOverride */] = cfgDfBoolean(),\r\n    _a.transports = UNDEFINED_VALUE,\r\n    _a.retryCodes = UNDEFINED_VALUE,\r\n    _a.maxRetryCnt = { isVal: isNumber, v: 10 },\r\n    _a));\r\nfunction _chkSampling(value) {\r\n    return !isNaN(value) && value > 0 && value <= 100;\r\n}\r\nvar EnvelopeTypeCreator = (_b = {},\r\n    _b[Event.dataType] = EventEnvelopeCreator,\r\n    _b[Trace.dataType] = TraceEnvelopeCreator,\r\n    _b[PageView.dataType] = PageViewEnvelopeCreator,\r\n    _b[PageViewPerformance.dataType] = PageViewPerformanceEnvelopeCreator,\r\n    _b[Exception.dataType] = ExceptionEnvelopeCreator,\r\n    _b[Metric.dataType] = MetricEnvelopeCreator,\r\n    _b[RemoteDependencyData.dataType] = DependencyEnvelopeCreator,\r\n    _b);\r\nvar Sender = /** @class */ (function (_super) {\r\n    __extends(Sender, _super);\r\n    function Sender() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 1001;\r\n        _this.identifier = BreezeChannelIdentifier;\r\n        // Don't set the defaults here, set them in the _initDefaults() as this is also called during unload\r\n        var _consecutiveErrors; // How many times in a row a retryable error condition has occurred.\r\n        var _retryAt; // The time to retry at in milliseconds from 1970/01/01 (this makes the timer calculation easy).\r\n        var _lastSend; // The time of the last send operation.\r\n        var _paused; // Flag indicating that the sending should be paused\r\n        var _timeoutHandle; // Handle to the timer for delayed sending of batches of data.\r\n        var _serializer;\r\n        var _stamp_specific_redirects;\r\n        var _headers;\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _syncUnloadSender; // The identified sender to use for the synchronous unload stage\r\n        var _offlineListener;\r\n        var _evtNamespace;\r\n        var _endpointUrl;\r\n        var _orgEndpointUrl;\r\n        var _maxBatchSizeInBytes;\r\n        var _beaconSupported;\r\n        var _beaconOnUnloadSupported;\r\n        var _beaconNormalSupported;\r\n        var _customHeaders;\r\n        var _disableTelemetry;\r\n        var _instrumentationKey;\r\n        var _convertUndefined;\r\n        var _isRetryDisabled;\r\n        var _maxBatchInterval;\r\n        var _sessionStorageUsed;\r\n        var _bufferOverrideUsed;\r\n        var _namePrefix;\r\n        var _enableSendPromise;\r\n        var _alwaysUseCustomSend;\r\n        var _disableXhr;\r\n        var _fetchKeepAlive;\r\n        var _xhrSend;\r\n        var _fallbackSend;\r\n        var _disableBeaconSplit;\r\n        var _sendPostMgr;\r\n        var _retryCodes;\r\n        dynamicProto(Sender, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.pause = function () {\r\n                _clearScheduledTimer();\r\n                _paused = true;\r\n            };\r\n            _self.resume = function () {\r\n                if (_paused) {\r\n                    _paused = false;\r\n                    _retryAt = null;\r\n                    // flush if we have exceeded the max-size already\r\n                    _checkMaxSize();\r\n                    _setupTimer();\r\n                }\r\n            };\r\n            _self.flush = function (isAsync, callBack, sendReason) {\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_paused) {\r\n                    // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                    _clearScheduledTimer();\r\n                    try {\r\n                        return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](isAsync, null, sendReason || 1 /* SendRequestReason.ManualFlush */);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 22 /* _eInternalMessageId.FlushFailed */, \"flush failed, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            };\r\n            _self.onunloadFlush = function () {\r\n                if (!_paused) {\r\n                    if (_beaconSupported || _alwaysUseCustomSend) {\r\n                        try {\r\n                            return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, _doUnloadSend, 2 /* SendRequestReason.Unload */);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"failed to flush with beacon sender on page unload, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                    else {\r\n                        _self.flush(false);\r\n                    }\r\n                }\r\n            };\r\n            _self.addHeader = function (name, value) {\r\n                _headers[name] = value;\r\n            };\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                if (_self.isInitialized()) {\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _base[_DYN_INITIALIZE /* @min:%2einitialize */](config, core, extensions, pluginChain);\r\n                var identifier = _self.identifier;\r\n                _serializer = new Serializer(core.logger);\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = 0;\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _stamp_specific_redirects = 0;\r\n                var diagLog = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"Sender\"), core.evtNamespace && core.evtNamespace());\r\n                _offlineListener = createOfflineListener(_evtNamespace);\r\n                // This function will be re-called whenever any referenced configuration is changed\r\n                _self._addHook(onConfigChange(config, function (details) {\r\n                    var config = details.cfg;\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    // getExtCfg only finds undefined values from core\r\n                    var senderConfig = ctx.getExtCfg(identifier, defaultAppInsightsChannelConfig);\r\n                    var curExtUrl = senderConfig[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                    // if it is not inital change (_endpointUrl has value)\r\n                    // if current sender endpoint url is not changed directly\r\n                    // means ExtCfg is not changed directly\r\n                    // then we need to monitor endpoint url changes from core\r\n                    if (_endpointUrl && curExtUrl === _endpointUrl) {\r\n                        var coreUrl = config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                        // if core endpoint url is changed\r\n                        if (coreUrl && coreUrl !== curExtUrl) {\r\n                            // and endpoint promise changes is handled by this as well\r\n                            senderConfig[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = coreUrl;\r\n                        }\r\n                    }\r\n                    if (isPromiseLike(senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */])) {\r\n                        // if it is promise, means the endpoint url is from core.endpointurl\r\n                        senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    }\r\n                    objDefine(_self, \"_senderConfig\", {\r\n                        g: function () {\r\n                            return senderConfig;\r\n                        }\r\n                    });\r\n                    // Only update the endpoint if the original config !== the current config\r\n                    // This is so any redirect endpointUrl is not overwritten\r\n                    if (_orgEndpointUrl !== senderConfig[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */]) {\r\n                        if (_orgEndpointUrl) {\r\n                            // TODO: add doc to remind users to flush before changing endpoint, otherwise all unsent payload will be sent to new endpoint\r\n                        }\r\n                        _endpointUrl = _orgEndpointUrl = senderConfig[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                    }\r\n                    // or is not string\r\n                    if (core.activeStatus() === ActiveStatus.PENDING) {\r\n                        // waiting for core promises to be resolved\r\n                        // NOTE: if active status is set to pending, stop sending, clear timer here\r\n                        _self.pause();\r\n                    }\r\n                    else if (core.activeStatus() === ActiveStatus.ACTIVE) {\r\n                        // core status changed from pending to other status\r\n                        _self.resume();\r\n                    }\r\n                    if (_customHeaders && _customHeaders !== senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */]) {\r\n                        // Removing any previously defined custom headers as they have changed\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            delete _headers[customHeader.header];\r\n                        });\r\n                    }\r\n                    _maxBatchSizeInBytes = senderConfig[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:%2emaxBatchSizeInBytes */];\r\n                    _beaconSupported = (senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false || senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false) && isBeaconsSupported();\r\n                    _beaconOnUnloadSupported = senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false && isBeaconsSupported();\r\n                    _beaconNormalSupported = senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false && isBeaconsSupported();\r\n                    _alwaysUseCustomSend = senderConfig[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:%2ealwaysUseXhrOverride */];\r\n                    _disableXhr = !!senderConfig[_DYN_DISABLE_XHR /* @min:%2edisableXhr */];\r\n                    _retryCodes = senderConfig.retryCodes;\r\n                    var bufferOverride = senderConfig[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */];\r\n                    var canUseSessionStorage = !!senderConfig[_DYN_ENABLE_SESSION_STORA5 /* @min:%2eenableSessionStorageBuffer */] &&\r\n                        (!!bufferOverride || utlCanUseSessionStorage());\r\n                    var namePrefix = senderConfig.namePrefix;\r\n                    //Note: emitLineDelimitedJson and eventsLimitInMem is directly accessed via config in senderBuffer\r\n                    //Therefore, if canUseSessionStorage is not changed, we do not need to re initialize a new one\r\n                    var shouldUpdate = (canUseSessionStorage !== _sessionStorageUsed)\r\n                        || (canUseSessionStorage && (_namePrefix !== namePrefix)) // prefixName is only used in session storage\r\n                        || (canUseSessionStorage && (_bufferOverrideUsed !== bufferOverride));\r\n                    if (_self[_DYN__BUFFER /* @min:%2e_buffer */]) {\r\n                        // case1 (Pre and Now enableSessionStorageBuffer settings are same)\r\n                        // if namePrefix changes, transfer current buffer to new buffer\r\n                        // else no action needed\r\n                        //case2 (Pre and Now enableSessionStorageBuffer settings are changed)\r\n                        // transfer current buffer to new buffer\r\n                        if (shouldUpdate) {\r\n                            try {\r\n                                _self._buffer = _self._buffer[_DYN_CREATE_NEW /* @min:%2ecreateNew */](diagLog, senderConfig, canUseSessionStorage);\r\n                            }\r\n                            catch (e) {\r\n                                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"failed to transfer telemetry to different buffer storage, telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                            }\r\n                        }\r\n                        _checkMaxSize();\r\n                    }\r\n                    else {\r\n                        _self[_DYN__BUFFER /* @min:%2e_buffer */] = canUseSessionStorage\r\n                            ? new SessionStorageSendBuffer(diagLog, senderConfig) : new ArraySendBuffer(diagLog, senderConfig);\r\n                    }\r\n                    _namePrefix = namePrefix;\r\n                    _sessionStorageUsed = canUseSessionStorage;\r\n                    _bufferOverrideUsed = bufferOverride;\r\n                    _fetchKeepAlive = !senderConfig[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:%2eonunloadDisableFetch */] && isFetchSupported(true);\r\n                    _disableBeaconSplit = !!senderConfig[_DYN_DISABLE_SEND_BEACON_7 /* @min:%2edisableSendBeaconSplit */];\r\n                    _self._sample = new Sample(senderConfig.samplingPercentage, diagLog);\r\n                    _instrumentationKey = senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    if (!isPromiseLike(_instrumentationKey) && !_validateInstrumentationKey(_instrumentationKey, config)) {\r\n                        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, \"Invalid Instrumentation key \" + _instrumentationKey);\r\n                    }\r\n                    _customHeaders = senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */];\r\n                    if (isString(_endpointUrl) && !isInternalApplicationInsightsEndpoint(_endpointUrl) && _customHeaders && _customHeaders[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            _this.addHeader(customHeader.header, customHeader.value);\r\n                        });\r\n                    }\r\n                    else {\r\n                        _customHeaders = null;\r\n                    }\r\n                    _enableSendPromise = senderConfig[_DYN_ENABLE_SEND_PROMISE /* @min:%2eenableSendPromise */];\r\n                    var sendPostConfig = _getSendPostMgrConfig();\r\n                    // only init it once\r\n                    if (!_sendPostMgr) {\r\n                        _sendPostMgr = new SenderPostManager();\r\n                        _sendPostMgr[_DYN_INITIALIZE /* @min:%2einitialize */](sendPostConfig, diagLog);\r\n                    }\r\n                    else {\r\n                        _sendPostMgr.SetConfig(sendPostConfig);\r\n                    }\r\n                    var customInterface = senderConfig.httpXHROverride;\r\n                    var httpInterface = null;\r\n                    var syncInterface = null;\r\n                    // User requested transport(s) values > Beacon > Fetch > XHR\r\n                    // Beacon would be filtered out if user has set disableBeaconApi to true at _getSenderInterface\r\n                    var theTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */], senderConfig.transports);\r\n                    httpInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](theTransports, false);\r\n                    var xhrInterface = _sendPostMgr && _sendPostMgr.getFallbackInst();\r\n                    _xhrSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync);\r\n                    };\r\n                    _fallbackSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync, false);\r\n                    };\r\n                    httpInterface = _alwaysUseCustomSend ? customInterface : (httpInterface || customInterface || xhrInterface);\r\n                    _self[_DYN__SENDER /* @min:%2e_sender */] = function (payload, isAsync) {\r\n                        return _doSend(httpInterface, payload, isAsync);\r\n                    };\r\n                    if (_fetchKeepAlive) {\r\n                        // Try and use the fetch with keepalive\r\n                        _syncUnloadSender = _fetchKeepAliveSender;\r\n                    }\r\n                    var syncTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */], senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */]);\r\n                    if (!_fetchKeepAlive) {\r\n                        // remove fetch from theTransports\r\n                        syncTransports = syncTransports.filter(function (transport) { return transport !== 2 /* TransportType.Fetch */; });\r\n                    }\r\n                    syncInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](syncTransports, true);\r\n                    syncInterface = _alwaysUseCustomSend ? customInterface : (syncInterface || customInterface);\r\n                    if ((_alwaysUseCustomSend || senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */] || !_syncUnloadSender) && syncInterface) {\r\n                        _syncUnloadSender = function (payload, isAsync) {\r\n                            return _doSend(syncInterface, payload, isAsync);\r\n                        };\r\n                    }\r\n                    if (!_syncUnloadSender) {\r\n                        _syncUnloadSender = _xhrSend;\r\n                    }\r\n                    _disableTelemetry = senderConfig.disableTelemetry;\r\n                    _convertUndefined = senderConfig[_DYN_CONVERT_UNDEFINED /* @min:%2econvertUndefined */] || UNDEFINED_VALUE;\r\n                    _isRetryDisabled = senderConfig.isRetryDisabled;\r\n                    _maxBatchInterval = senderConfig[_DYN_MAX_BATCH_INTERVAL /* @min:%2emaxBatchInterval */];\r\n                }));\r\n            };\r\n            _self.processTelemetry = function (telemetryItem, itemCtx) {\r\n                var _a;\r\n                itemCtx = _self._getTelCtx(itemCtx);\r\n                var diagLogger = itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var isValidate = _validate(telemetryItem, diagLogger);\r\n                    if (!isValidate) {\r\n                        return;\r\n                    }\r\n                    var aiEnvelope = _getEnvelope(telemetryItem, diagLogger);\r\n                    if (!aiEnvelope) {\r\n                        return;\r\n                    }\r\n                    // check if the incoming payload is too large, truncate if necessary\r\n                    var payload = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](aiEnvelope);\r\n                    // flush if we would exceed the max-size limit by adding this item\r\n                    var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                    _checkMaxSize(payload);\r\n                    var payloadItem = (_a = {},\r\n                        _a[_DYN_ITEM /* @min:item */] = payload,\r\n                        _a.cnt = 0 // inital cnt will always be 0\r\n                    ,\r\n                        _a);\r\n                    // enqueue the payload\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payloadItem);\r\n                    // ensure an invocation timeout is set\r\n                    _setupTimer();\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                // hand off the telemetry item to the next plugin\r\n                _self.processNext(telemetryItem, itemCtx);\r\n            };\r\n            _self.isCompletelyIdle = function () {\r\n                return !_paused && _syncFetchPayload === 0 && _self._buffer[_DYN_COUNT /* @min:%2ecount */]() === 0;\r\n            };\r\n            _self.getOfflineListener = function () {\r\n                return _offlineListener;\r\n            };\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            _self._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n                // since version 3.2.0, this function is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xhrReadyStateChange(xhr, payload, countOfItemsInPayload);\r\n            };\r\n            /**\r\n             * Immediately send buffered data\r\n             * @param async - {boolean} - Indicates if the events should be sent asynchronously\r\n             * @param forcedSender - {SenderFunction} - Indicates the forcedSender, undefined if not passed\r\n             */\r\n            _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */] = function (async, forcedSender, sendReason) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                if (!_paused) {\r\n                    try {\r\n                        var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                        // Send data only if disableTelemetry is false\r\n                        if (!_disableTelemetry) {\r\n                            if (buffer[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                var payload = buffer.getItems();\r\n                                _notifySendRequest(sendReason || 0 /* SendRequestReason.Undefined */, async);\r\n                                // invoke send\r\n                                if (forcedSender) {\r\n                                    result = forcedSender.call(_self, payload, async);\r\n                                }\r\n                                else {\r\n                                    result = _self[_DYN__SENDER /* @min:%2e_sender */](payload, async);\r\n                                }\r\n                            }\r\n                            // update lastSend time to enable throttling\r\n                            _lastSend = +new Date;\r\n                        }\r\n                        else {\r\n                            buffer[_DYN_CLEAR /* @min:%2eclear */]();\r\n                        }\r\n                        _clearScheduledTimer();\r\n                    }\r\n                    catch (e) {\r\n                        /* Ignore this error for IE under v10 */\r\n                        var ieVer = getIEVersion();\r\n                        if (!ieVer || ieVer > 9) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Telemetry transmission failed, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            _self.getOfflineSupport = function () {\r\n                var _a;\r\n                return _a = {\r\n                        getUrl: function () {\r\n                            return _endpointUrl;\r\n                        },\r\n                        createPayload: _createPayload\r\n                    },\r\n                    _a[_DYN_SERIALIZE /* @min:serialize */] = _serialize,\r\n                    _a.batch = _batch,\r\n                    _a.shouldProcess = function (evt) {\r\n                        return !!_validate(evt);\r\n                    },\r\n                    _a;\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _self.onunloadFlush();\r\n                runTargetUnload(_offlineListener, false);\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * error handler\r\n             */\r\n            _self[_DYN__ON_ERROR /* @min:%2e_onError */] = function (payload, message, event) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onError(payload, message, event);\r\n            };\r\n            /**\r\n             * partial success handler\r\n             */\r\n            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */] = function (payload, results) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onPartialSuccess(payload, results);\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */] = function (payload, countOfItemsInPayload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onSuccess(payload, countOfItemsInPayload);\r\n                //_self._buffer && _self._buffer.clearSent(payload);\r\n            };\r\n            /**\r\n             * xdr state changes\r\n             */\r\n            _self._xdrOnLoad = function (xdr, payload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xdrOnLoad(xdr, payload);\r\n            };\r\n            function _xdrOnLoad(xdr, payload) {\r\n                var responseText = _getResponseText(xdr);\r\n                if (xdr && (responseText + \"\" === \"200\" || responseText === \"\")) {\r\n                    _consecutiveErrors = 0;\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, 0);\r\n                }\r\n                else {\r\n                    var results = parseResponse(responseText);\r\n                    if (results && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] > results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]\r\n                        && !_isRetryDisabled) {\r\n                        _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, results);\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, formatErrorMessageXdr(xdr));\r\n                    }\r\n                }\r\n            }\r\n            function _getSendPostMgrConfig() {\r\n                var _a;\r\n                try {\r\n                    var onCompleteFuncs = {\r\n                        xdrOnComplete: function (xdr, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xdrOnLoad(xdr, data);\r\n                        },\r\n                        fetchOnComplete: function (response, onComplete, resValue, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _checkResponsStatus(response.status, data, response.url, data[_DYN_LENGTH /* @min:%2elength */], response.statusText, resValue || \"\");\r\n                        },\r\n                        xhrOnComplete: function (request, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xhrReadyStateChange(request, data, data[_DYN_LENGTH /* @min:%2elength */]);\r\n                        },\r\n                        beaconOnRetry: function (data, onComplete, canSend) {\r\n                            return _onBeaconRetry(data, onComplete, canSend);\r\n                        }\r\n                    };\r\n                    var config = (_a = {},\r\n                        _a[_DYN_ENABLE_SEND_PROMISE /* @min:enableSendPromise */] = _enableSendPromise,\r\n                        _a.isOneDs = false,\r\n                        _a.disableCredentials = false,\r\n                        _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = _disableXhr,\r\n                        _a.disableBeacon = !_beaconNormalSupported,\r\n                        _a.disableBeaconSync = !_beaconOnUnloadSupported,\r\n                        _a.senderOnCompleteCallBack = onCompleteFuncs,\r\n                        _a);\r\n                    return config;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            function _xhrReadyStateChange(xhr, payload, countOfItemsInPayload) {\r\n                if (xhr.readyState === 4) {\r\n                    _checkResponsStatus(xhr.status, payload, xhr.responseURL, countOfItemsInPayload, formatErrorMessageXhr(xhr), _getResponseText(xhr) || xhr.response);\r\n                }\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(payload, message, event) {\r\n                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            /**\r\n             * partial success handler\r\n             */\r\n            function _onPartialSuccess(payload, results) {\r\n                var failed = [];\r\n                var retry = [];\r\n                // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n                var errors = results.errors.reverse();\r\n                for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n                    var error = errors_1[_i];\r\n                    var extracted = payload.splice(error.index, 1)[0];\r\n                    if (_isRetriable(error.statusCode)) {\r\n                        retry[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                    else {\r\n                        // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                        failed[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                }\r\n                if (payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]);\r\n                }\r\n                if (failed[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_ERROR /* @min:%2e_onError */](failed, formatErrorMessageXhr(null, [\"partial success\", results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */], \"of\", results.itemsReceived].join(\" \")));\r\n                }\r\n                if (retry[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _resendPayload(retry);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Partial success. \" +\r\n                        \"Delivered: \" + payload[_DYN_LENGTH /* @min:%2elength */] + \", Failed: \" + failed[_DYN_LENGTH /* @min:%2elength */] +\r\n                        \". Will retry to send \" + retry[_DYN_LENGTH /* @min:%2elength */] + \" our of \" + results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] + \" items\");\r\n                }\r\n            }\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(payload, countOfItemsInPayload) {\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            function _getPayloadArr(payload) {\r\n                try {\r\n                    if (payload) {\r\n                        var internalPayload = payload;\r\n                        var arr = internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                        if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                            return arr;\r\n                        }\r\n                        return null;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _validate(telemetryItem, diagLogger) {\r\n                if (_disableTelemetry) {\r\n                    // Do not send/save data\r\n                    return false;\r\n                }\r\n                // validate input\r\n                if (!telemetryItem) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 7 /* _eInternalMessageId.CannotSendEmptyTelemetry */, \"Cannot send empty telemetry\");\r\n                    return false;\r\n                }\r\n                // validate event\r\n                if (telemetryItem.baseData && !telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 70 /* _eInternalMessageId.InvalidEvent */, \"Cannot send telemetry without baseData and baseType\");\r\n                    return false;\r\n                }\r\n                if (!telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    // Default\r\n                    telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */] = \"EventData\";\r\n                }\r\n                // ensure a sender was constructed\r\n                if (!_self[_DYN__SENDER /* @min:%2e_sender */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender was not initialized\");\r\n                    return false;\r\n                }\r\n                // check if this item should be sampled in, else add sampleRate tag\r\n                if (!_isSampledIn(telemetryItem)) {\r\n                    // Item is sampled out, do not send it\r\n                    diagLogger && _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 33 /* _eInternalMessageId.TelemetrySampledAndNotSent */, \"Telemetry item was sampled out and not sent\", { SampleRate: _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] });\r\n                    return false;\r\n                }\r\n                else {\r\n                    telemetryItem[SampleRate] = _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */];\r\n                }\r\n                return true;\r\n            }\r\n            function _getEnvelope(telemetryItem, diagLogger) {\r\n                // construct an envelope that Application Insights endpoint can understand\r\n                // if ikey of telemetry is provided and not empty, envelope will use this iKey instead of senderConfig iKey\r\n                var defaultEnvelopeIkey = telemetryItem.iKey || _instrumentationKey;\r\n                var aiEnvelope = Sender.constructEnvelope(telemetryItem, defaultEnvelopeIkey, diagLogger, _convertUndefined);\r\n                if (!aiEnvelope) {\r\n                    _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 47 /* _eInternalMessageId.CreateEnvelopeError */, \"Unable to create an AppInsights envelope\");\r\n                    return;\r\n                }\r\n                var doNotSendItem = false;\r\n                // this is for running in legacy mode, where customer may already have a custom initializer present\r\n                if (telemetryItem[_DYN_TAGS /* @min:%2etags */] && telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy]) {\r\n                    arrForEach(telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy], function (callBack) {\r\n                        try {\r\n                            if (callBack && callBack(aiEnvelope) === false) {\r\n                                doNotSendItem = true;\r\n                                _warnToConsole(diagLogger, \"Telemetry processor check returns false\");\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            // log error but dont stop executing rest of the telemetry initializers\r\n                            // doNotSendItem = true;\r\n                            _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"One of telemetry initializers failed, telemetry item will not be sent: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n                        }\r\n                    });\r\n                    delete telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy];\r\n                }\r\n                if (doNotSendItem) {\r\n                    return; // do not send, no need to execute next plugin\r\n                }\r\n                return aiEnvelope;\r\n            }\r\n            function _serialize(item) {\r\n                var rlt = EMPTY_STR;\r\n                var diagLogger = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var valid = _validate(item, diagLogger);\r\n                    var envelope = null;\r\n                    if (valid) {\r\n                        envelope = _getEnvelope(item, diagLogger);\r\n                    }\r\n                    if (envelope) {\r\n                        rlt = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](envelope);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return rlt;\r\n            }\r\n            function _batch(arr) {\r\n                var rlt = EMPTY_STR;\r\n                if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    rlt = \"[\" + arr.join(\",\") + \"]\";\r\n                }\r\n                return rlt;\r\n            }\r\n            function _createPayload(data) {\r\n                var _a;\r\n                var headers = _getHeaders();\r\n                return _a = {\r\n                        urlString: _endpointUrl\r\n                    },\r\n                    _a[_DYN_DATA /* @min:data */] = data,\r\n                    _a.headers = headers,\r\n                    _a;\r\n            }\r\n            function _isSampledIn(envelope) {\r\n                return _self._sample.isSampledIn(envelope);\r\n            }\r\n            function _getOnComplete(payload, status, headers, response) {\r\n                // ***********************************************************************************************\r\n                //TODO: handle other status codes\r\n                if (status === 200 && payload) {\r\n                    _self._onSuccess(payload, payload[_DYN_LENGTH /* @min:%2elength */]);\r\n                }\r\n                else {\r\n                    response && _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, response);\r\n                }\r\n            }\r\n            function _doSend(sendInterface, payload, isAsync, markAsSent) {\r\n                if (markAsSent === void 0) { markAsSent = true; }\r\n                var onComplete = function (status, headers, response) {\r\n                    return _getOnComplete(payload, status, headers, response);\r\n                };\r\n                var payloadData = _getPayload(payload);\r\n                var sendPostFunc = sendInterface && sendInterface.sendPOST;\r\n                if (sendPostFunc && payloadData) {\r\n                    // ***********************************************************************************************\r\n                    // mark payload as sent at the beginning of calling each send function\r\n                    if (markAsSent) {\r\n                        _self._buffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](payload);\r\n                    }\r\n                    return sendPostFunc(payloadData, onComplete, !isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            function _getPayload(payload) {\r\n                var _a;\r\n                if (isArray(payload) && payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var batch = _self[_DYN__BUFFER /* @min:%2e_buffer */].batchPayloads(payload);\r\n                    var headers = _getHeaders();\r\n                    var payloadData = (_a = {},\r\n                        _a[_DYN_DATA /* @min:data */] = batch,\r\n                        _a.urlString = _endpointUrl,\r\n                        _a.headers = headers,\r\n                        _a.disableXhrSync = _disableXhr,\r\n                        _a.disableFetchKeepAlive = !_fetchKeepAlive,\r\n                        _a[_DYN_ORI_PAYLOAD /* @min:oriPayload */] = payload,\r\n                        _a);\r\n                    return payloadData;\r\n                }\r\n                return null;\r\n            }\r\n            function _getHeaders() {\r\n                try {\r\n                    var headers = _headers || {};\r\n                    if (isInternalApplicationInsightsEndpoint(_endpointUrl)) {\r\n                        headers[RequestHeaders[6 /* eRequestHeaders.sdkContextHeader */]] = RequestHeaders[7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */];\r\n                    }\r\n                    return headers;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _checkMaxSize(incomingPayload) {\r\n                var incomingSize = incomingPayload ? incomingPayload[_DYN_LENGTH /* @min:%2elength */] : 0;\r\n                if ((_self[_DYN__BUFFER /* @min:%2e_buffer */].size() + incomingSize) > _maxBatchSizeInBytes) {\r\n                    if (!_offlineListener || _offlineListener.isOnline()) { // only trigger send when currently online\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 10 /* SendRequestReason.MaxBatchSize */);\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _checkResponsStatus(status, payload, responseUrl, countOfItemsInPayload, errorMessage, res) {\r\n                var response = null;\r\n                if (!_self._appId) {\r\n                    response = parseResponse(res);\r\n                    if (response && response.appId) {\r\n                        _self._appId = response.appId;\r\n                    }\r\n                }\r\n                if ((status < 200 || status >= 300) && status !== 0) {\r\n                    // Update End Point url if permanent redirect or moved permanently\r\n                    // Updates the end point url before retry\r\n                    if (status === 301 || status === 307 || status === 308) {\r\n                        if (!_checkAndUpdateEndPointUrl(responseUrl)) {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (_offlineListener && !_offlineListener.isOnline()) { // offline\r\n                        // Note: Don't check for status == 0, since adblock gives this code\r\n                        if (!_isRetryDisabled) {\r\n                            var offlineBackOffMultiplier = 10; // arbritrary number\r\n                            _resendPayload(payload, offlineBackOffMultiplier);\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". Offline - Response Code: \".concat(status, \". Offline status: \").concat(!_offlineListener.isOnline(), \". Will retry to send \").concat(payload.length, \" items.\"));\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (!_isRetryDisabled && _isRetriable(status)) {\r\n                        _resendPayload(payload);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" +\r\n                            \"Response code \" + status + \". Will retry to send \" + payload[_DYN_LENGTH /* @min:%2elength */] + \" items.\");\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                    }\r\n                }\r\n                else {\r\n                    // check if the xhr's responseURL or fetch's response.url is same as endpoint url\r\n                    // TODO after 10 redirects force send telemetry with 'redirect=false' as query parameter.\r\n                    _checkAndUpdateEndPointUrl(responseUrl);\r\n                    if (status === 206) {\r\n                        if (!response) {\r\n                            response = parseResponse(res);\r\n                        }\r\n                        if (response && !_isRetryDisabled) {\r\n                            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, response);\r\n                        }\r\n                        else {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _consecutiveErrors = 0;\r\n                        _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, countOfItemsInPayload);\r\n                    }\r\n                }\r\n            }\r\n            function _checkAndUpdateEndPointUrl(responseUrl) {\r\n                // Maximum stamp specific redirects allowed(uncomment this when breeze is ready with not allowing redirects feature)\r\n                if (_stamp_specific_redirects >= 10) {\r\n                    //  _self._senderConfig.endpointUrl = () => Sender._getDefaultAppInsightsChannelConfig().endpointUrl()+\"/?redirect=false\";\r\n                    //  _stamp_specific_redirects = 0;\r\n                    return false;\r\n                }\r\n                if (!isNullOrUndefined(responseUrl) && responseUrl !== \"\") {\r\n                    if (responseUrl !== _endpointUrl) {\r\n                        _endpointUrl = responseUrl;\r\n                        ++_stamp_specific_redirects;\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            function _doUnloadSend(payload, isAsync) {\r\n                if (_syncUnloadSender) {\r\n                    // We are unloading so always call the sender with sync set to false\r\n                    _syncUnloadSender(payload, false);\r\n                }\r\n                else {\r\n                    // Fallback to the previous beacon Sender (which causes a CORB warning on chrome now)\r\n                    var beaconInst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([3 /* TransportType.Beacon */], true);\r\n                    return _doSend(beaconInst, payload, isAsync);\r\n                }\r\n            }\r\n            function _onBeaconRetry(payload, onComplete, canSend) {\r\n                var internalPayload = payload;\r\n                var data = internalPayload && internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                if (!_disableBeaconSplit) {\r\n                    // Failed to send entire payload so try and split data and try to send as much events as possible\r\n                    var droppedPayload = [];\r\n                    for (var lp = 0; lp < data[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        var thePayload = data[lp];\r\n                        var arr = [thePayload];\r\n                        var item = _getPayload(arr);\r\n                        if (!canSend(item, onComplete)) {\r\n                            // Can't send anymore, so split the batch and drop the rest\r\n                            droppedPayload[_DYN_PUSH /* @min:%2epush */](thePayload);\r\n                        }\r\n                        else {\r\n                            _self._onSuccess(arr, arr[_DYN_LENGTH /* @min:%2elength */]);\r\n                        }\r\n                    }\r\n                    if (droppedPayload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _fallbackSend && _fallbackSend(droppedPayload, true);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                    }\r\n                }\r\n                else {\r\n                    _fallbackSend && _fallbackSend(data, true);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                }\r\n            }\r\n            function _isStringArr(arr) {\r\n                try {\r\n                    if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        return (isString(arr[0]));\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    //TODO: log, sender use IInternalStorageItem instead of string since 3.1.3\r\n                }\r\n                return null;\r\n            }\r\n            function _fetchKeepAliveSender(payload, isAsync) {\r\n                var transport = null;\r\n                if (isArray(payload)) {\r\n                    var payloadSize = payload[_DYN_LENGTH /* @min:%2elength */];\r\n                    for (var lp = 0; lp < payload[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        payloadSize += payload[lp].item[_DYN_LENGTH /* @min:%2elength */];\r\n                    }\r\n                    var syncFetchPayload = _sendPostMgr.getSyncFetchPayload();\r\n                    if ((syncFetchPayload + payloadSize) <= FetchSyncRequestSizeLimitBytes) {\r\n                        transport = 2 /* TransportType.Fetch */;\r\n                    }\r\n                    else if (isBeaconsSupported()) {\r\n                        // Fallback to beacon sender as we at least get told which events can't be scheduled\r\n                        transport = 3 /* TransportType.Beacon */;\r\n                    }\r\n                    else {\r\n                        // Payload is going to be too big so just try and send via XHR\r\n                        transport = 1 /* TransportType.Xhr */;\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n                    }\r\n                    var inst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([transport], true);\r\n                    return _doSend(inst, payload, isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n             * @param payload\r\n             */\r\n            function _resendPayload(payload, linearFactor) {\r\n                if (linearFactor === void 0) { linearFactor = 1; }\r\n                if (!payload || payload[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    return;\r\n                }\r\n                var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n                _consecutiveErrors++;\r\n                for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n                    var item = payload_1[_i];\r\n                    item.cnt = item.cnt || 0; // to make sure we have cnt for each payload\r\n                    item.cnt++; // when resend, increase cnt\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](item);\r\n                }\r\n                // setup timer\r\n                _setRetryTime(linearFactor);\r\n                _setupTimer();\r\n            }\r\n            /**\r\n             * Calculates the time to wait before retrying in case of an error based on\r\n             * http://en.wikipedia.org/wiki/Exponential_backoff\r\n             */\r\n            function _setRetryTime(linearFactor) {\r\n                var SlotDelayInSeconds = 10;\r\n                var delayInSeconds;\r\n                if (_consecutiveErrors <= 1) {\r\n                    delayInSeconds = SlotDelayInSeconds;\r\n                }\r\n                else {\r\n                    var backOffSlot = (Math.pow(2, _consecutiveErrors) - 1) / 2;\r\n                    // tslint:disable-next-line:insecure-random\r\n                    var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n                    backOffDelay = linearFactor * backOffDelay;\r\n                    delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n                }\r\n                // TODO: Log the backoff time like the C# version does.\r\n                var retryAfterTimeSpan = dateNow() + (delayInSeconds * 1000);\r\n                // TODO: Log the retry at time like the C# version does.\r\n                _retryAt = retryAfterTimeSpan;\r\n            }\r\n            /**\r\n             * Sets up the timer which triggers actually sending the data.\r\n             */\r\n            function _setupTimer() {\r\n                if (!_timeoutHandle && !_paused) {\r\n                    var retryInterval = _retryAt ? Math.max(0, _retryAt - dateNow()) : 0;\r\n                    var timerValue = Math.max(_maxBatchInterval, retryInterval);\r\n                    _timeoutHandle = scheduleTimeout(function () {\r\n                        _timeoutHandle = null;\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 1 /* SendRequestReason.NormalSchedule */);\r\n                    }, timerValue);\r\n                }\r\n            }\r\n            function _clearScheduledTimer() {\r\n                _timeoutHandle && _timeoutHandle.cancel();\r\n                _timeoutHandle = null;\r\n                _retryAt = null;\r\n            }\r\n            /**\r\n             * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n             * @param statusCode\r\n             */\r\n            function _isRetriable(statusCode) {\r\n                // retryCodes = [] means should not retry\r\n                if (!isNullOrUndefined(_retryCodes)) {\r\n                    return _retryCodes[_DYN_LENGTH /* @min:%2elength */] && _retryCodes.indexOf(statusCode) > -1;\r\n                }\r\n                return statusCode === 401 // Unauthorized\r\n                    // Removing as private links can return a 403 which causes excessive retries and session storage usage\r\n                    // || statusCode === 403 // Forbidden\r\n                    || statusCode === 408 // Timeout\r\n                    || statusCode === 429 // Too many requests.\r\n                    || statusCode === 500 // Internal server error.\r\n                    || statusCode === 502 // Bad Gateway.\r\n                    || statusCode === 503 // Service unavailable.\r\n                    || statusCode === 504; // Gateway timeout.\r\n            }\r\n            // Using function lookups for backward compatibility as the getNotifyMgr() did not exist until after v2.5.6\r\n            function _getNotifyMgr() {\r\n                var func = \"getNotifyMgr\";\r\n                if (_self.core[func]) {\r\n                    return _self.core[func]();\r\n                }\r\n                // using _self.core['_notificationManager'] for backward compatibility\r\n                return _self.core[\"_notificationManager\"];\r\n            }\r\n            function _notifySendRequest(sendRequest, isAsync) {\r\n                var manager = _getNotifyMgr();\r\n                if (manager && manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */]) {\r\n                    try {\r\n                        manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendRequest, isAsync);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, \"send request notification failed: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            }\r\n            /**\r\n             * Validate UUID Format\r\n             * Specs taken from https://tools.ietf.org/html/rfc4122 and breeze repo\r\n             */\r\n            function _validateInstrumentationKey(instrumentationKey, config) {\r\n                var disableValidation = config.disableInstrumentationKeyValidation;\r\n                var disableIKeyValidationFlag = isNullOrUndefined(disableValidation) ? false : disableValidation;\r\n                if (disableIKeyValidationFlag) {\r\n                    return true;\r\n                }\r\n                var UUID_Regex = \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\";\r\n                var regexp = new RegExp(UUID_Regex);\r\n                return regexp.test(instrumentationKey);\r\n            }\r\n            function _initDefaults() {\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _self[_DYN__BUFFER /* @min:%2e_buffer */] = null;\r\n                _self._appId = null;\r\n                _self._sample = null;\r\n                _headers = {};\r\n                _offlineListener = null;\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = null;\r\n                _paused = false;\r\n                _timeoutHandle = null;\r\n                _serializer = null;\r\n                _stamp_specific_redirects = 0;\r\n                _syncFetchPayload = 0;\r\n                _syncUnloadSender = null;\r\n                _evtNamespace = null;\r\n                _endpointUrl = null;\r\n                _orgEndpointUrl = null;\r\n                _maxBatchSizeInBytes = 0;\r\n                _beaconSupported = false;\r\n                _customHeaders = null;\r\n                _disableTelemetry = false;\r\n                _instrumentationKey = null;\r\n                _convertUndefined = UNDEFINED_VALUE;\r\n                _isRetryDisabled = false;\r\n                _sessionStorageUsed = null;\r\n                _namePrefix = UNDEFINED_VALUE;\r\n                _disableXhr = false;\r\n                _fetchKeepAlive = false;\r\n                _disableBeaconSplit = false;\r\n                _xhrSend = null;\r\n                _fallbackSend = null;\r\n                _sendPostMgr = null;\r\n                objDefine(_self, \"_senderConfig\", {\r\n                    g: function () {\r\n                        return objExtend({}, defaultAppInsightsChannelConfig);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Sender.constructEnvelope = function (orig, iKey, logger, convertUndefined) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !isNullOrUndefined(iKey)) {\r\n            envelope = __assign(__assign({}, orig), { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        var creator = EnvelopeTypeCreator[envelope.baseType] || EventEnvelopeCreator;\r\n        return creator(logger, envelope, convertUndefined);\r\n    };\r\n// Removed Stub for Sender.prototype.pause.\r\n// Removed Stub for Sender.prototype.resume.\r\n// Removed Stub for Sender.prototype.flush.\r\n// Removed Stub for Sender.prototype.onunloadFlush.\r\n// Removed Stub for Sender.prototype.initialize.\r\n// Removed Stub for Sender.prototype.processTelemetry.\r\n// Removed Stub for Sender.prototype._xhrReadyStateChange.\r\n// Removed Stub for Sender.prototype.triggerSend.\r\n// Removed Stub for Sender.prototype._onError.\r\n// Removed Stub for Sender.prototype._onPartialSuccess.\r\n// Removed Stub for Sender.prototype._onSuccess.\r\n// Removed Stub for Sender.prototype._xdrOnLoad.\r\n// Removed Stub for Sender.prototype.addHeader.\r\n// Removed Stub for Sender.prototype.isCompletelyIdle.\r\n// Removed Stub for Sender.prototype.getOfflineSupport.\r\n// Removed Stub for Sender.prototype.getOfflineListener.\r\n    return Sender;\r\n}(BaseTelemetryPlugin));\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _throwInternal, getJSON, isArray, isFunction, isObject, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PUSH, _DYN_SERIALIZE, _DYN_STRINGIFY, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            /**\r\n             * Serializes the current object to a JSON string.\r\n             */\r\n            _self[_DYN_SERIALIZE /* @min:%2eserialize */] = function (input) {\r\n                var output = _serializeObject(input, \"root\");\r\n                try {\r\n                    return getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](output);\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                }\r\n            };\r\n            function _serializeObject(source, name) {\r\n                var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n                var output = {};\r\n                if (!source) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (source[circularReferenceCheck]) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 50 /* _eInternalMessageId.CircularReferenceDetected */, \"Circular reference detected while serializing object\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (!source.aiDataContract) {\r\n                    // special case for measurements/properties/tags\r\n                    if (name === \"measurements\") {\r\n                        output = _serializeStringMap(source, \"number\", name);\r\n                    }\r\n                    else if (name === \"properties\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (name === \"tags\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (isArray(source)) {\r\n                        output = _serializeArray(source, name);\r\n                    }\r\n                    else {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                        try {\r\n                            // verify that the object can be stringified\r\n                            getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](source);\r\n                            output = source;\r\n                        }\r\n                        catch (e) {\r\n                            // if serialization fails return an empty string\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                        }\r\n                    }\r\n                    return output;\r\n                }\r\n                source[circularReferenceCheck] = true;\r\n                objForEachKey(source.aiDataContract, function (field, contract) {\r\n                    var isRequired = (isFunction(contract)) ? (contract() & 1 /* FieldType.Required */) : (contract & 1 /* FieldType.Required */);\r\n                    var isHidden = (isFunction(contract)) ? (contract() & 4 /* FieldType.Hidden */) : (contract & 4 /* FieldType.Hidden */);\r\n                    var isArray = contract & 2 /* FieldType.Array */;\r\n                    var isPresent = source[field] !== undefined;\r\n                    var isObj = isObject(source[field]) && source[field] !== null;\r\n                    if (isRequired && !isPresent && !isArray) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 24 /* _eInternalMessageId.MissingRequiredFieldSpecification */, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                        // If not in debug mode, continue and hope the error is permissible\r\n                    }\r\n                    else if (!isHidden) { // Don't serialize hidden fields\r\n                        var value = void 0;\r\n                        if (isObj) {\r\n                            if (isArray) {\r\n                                // special case; recurse on each object in the source array\r\n                                value = _serializeArray(source[field], field);\r\n                            }\r\n                            else {\r\n                                // recurse on the source object in this field\r\n                                value = _serializeObject(source[field], field);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // assign the source field to the output even if undefined or required\r\n                            value = source[field];\r\n                        }\r\n                        // only emit this field if the value is defined\r\n                        if (value !== undefined) {\r\n                            output[field] = value;\r\n                        }\r\n                    }\r\n                });\r\n                delete source[circularReferenceCheck];\r\n                return output;\r\n            }\r\n            function _serializeArray(sources, name) {\r\n                var output;\r\n                if (!!sources) {\r\n                    if (!isArray(sources)) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 54 /* _eInternalMessageId.ItemNotInArray */, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n                    }\r\n                    else {\r\n                        output = [];\r\n                        for (var i = 0; i < sources[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                            var source = sources[i];\r\n                            var item = _serializeObject(source, name + \"[\" + i + \"]\");\r\n                            output[_DYN_PUSH /* @min:%2epush */](item);\r\n                        }\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            function _serializeStringMap(map, expectedType, name) {\r\n                var output;\r\n                if (map) {\r\n                    output = {};\r\n                    objForEachKey(map, function (field, value) {\r\n                        if (expectedType === \"string\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else if (!value[_DYN_TO_STRING /* @min:%2etoString */]) {\r\n                                output[field] = \"invalid field: toString() is not defined.\";\r\n                            }\r\n                            else {\r\n                                output[field] = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                            }\r\n                        }\r\n                        else if (expectedType === \"number\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else {\r\n                                var num = parseFloat(value);\r\n                                output[field] = num;\r\n                            }\r\n                        }\r\n                        else {\r\n                            output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, output[field], null, true);\r\n                        }\r\n                    });\r\n                }\r\n                return output;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Serializer.prototype.serialize.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    Serializer.__ieDyn=1;\n\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _DYN_CONCAT, _DYN_LENGTH } from \"../../__DynamicConstants\";\r\n// (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\nvar MIN_INPUT_LENGTH = 8;\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input === \"\") {\r\n            return 0;\r\n        }\r\n        while (input[_DYN_LENGTH /* @min:%2elength */] < MIN_INPUT_LENGTH) {\r\n            input = input[_DYN_CONCAT /* @min:%2econcat */](input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ContextTagKeys } from \"@microsoft/applicationinsights-common\";\r\nimport { _DYN_GET_HASH_CODE_SCORE, _DYN_GET_SAMPLING_SCORE, _DYN_TAGS, _DYN_TRACE_ID } from \"../../__DynamicConstants\";\r\nimport { HashCodeScoreGenerator } from \"./HashCodeScoreGenerator\";\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        var _self = this;\r\n        var hashCodeGenerator = new HashCodeScoreGenerator();\r\n        var keys = new ContextTagKeys();\r\n        _self[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */] = function (item) {\r\n            var score = 0;\r\n            if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.userId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.userId]);\r\n            }\r\n            else if (item.ext && item.ext.user && item.ext.user.id) {\r\n                score = hashCodeGenerator[_DYN_GET_HASH_CODE_SCORE /* @min:%2egetHashCodeScore */](item.ext.user.id);\r\n            }\r\n            else if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.operationId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.operationId]);\r\n            }\r\n            else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n                score = hashCodeGenerator.getHashCodeScore(item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n            }\r\n            else {\r\n                // tslint:disable-next-line:insecure-random\r\n                score = (Math.random() * 100);\r\n            }\r\n            return score;\r\n        };\r\n    }\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { Metric } from \"@microsoft/applicationinsights-common\";\r\nimport { safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_DATA_TYPE, _DYN_GET_SAMPLING_SCORE, _DYN_SAMPLE_RATE } from \"../__DynamicConstants\";\r\nimport { SamplingScoreGenerator } from \"./SamplingScoreGenerators/SamplingScoreGenerator\";\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        var _logger = logger || safeGetLogger(null);\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            _logger.throwInternal(2 /* eLoggingSeverity.WARNING */, 58 /* _eInternalMessageId.SampleRateOutOfRange */, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            sampleRate = 100;\r\n        }\r\n        this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */]; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */](envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrReduce, objKeys, strEndsWith } from \"@microsoft/applicationinsights-core-js\";\r\nimport { DEFAULT_BREEZE_ENDPOINT } from \"./Constants\";\r\nimport { _DYN_INGESTIONENDPOINT, _DYN_LENGTH, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _FIELDS_SEPARATOR = \";\";\r\nvar _FIELD_KEY_VALUE_SEPARATOR = \"=\";\r\nexport function parseConnectionString(connectionString) {\r\n    if (!connectionString) {\r\n        return {};\r\n    }\r\n    var kvPairs = connectionString[_DYN_SPLIT /* @min:%2esplit */](_FIELDS_SEPARATOR);\r\n    var result = arrReduce(kvPairs, function (fields, kv) {\r\n        var kvParts = kv[_DYN_SPLIT /* @min:%2esplit */](_FIELD_KEY_VALUE_SEPARATOR);\r\n        if (kvParts[_DYN_LENGTH /* @min:%2elength */] === 2) { // only save fields with valid formats\r\n            var key = kvParts[0][_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n            var value = kvParts[1];\r\n            fields[key] = value;\r\n        }\r\n        return fields;\r\n    }, {});\r\n    if (objKeys(result)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // this is a valid connection string, so parse the results\r\n        if (result.endpointsuffix) {\r\n            // apply the default endpoints\r\n            var locationPrefix = result.location ? result.location + \".\" : \"\";\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || (\"https://\" + locationPrefix + \"dc.\" + result.endpointsuffix);\r\n        }\r\n        // apply user override endpoint or the default endpoints\r\n        result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || DEFAULT_BREEZE_ENDPOINT;\r\n        if (strEndsWith(result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */], \"/\")) {\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */].slice(0, -1);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport var ConnectionStringParser = {\r\n    parse: parseConnectionString\r\n};\r\n//# sourceMappingURL=ConnectionStringParser.js.map","/*\n * Application Insights JavaScript Web SDK - Basic, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nimport { DEFAULT_BREEZE_PATH, parseConnectionString } from \"@microsoft/applicationinsights-common\";\r\nimport { AppInsightsCore, cfgDfValidate, createDynamicConfig, onConfigChange, proxyFunctions } from \"@microsoft/applicationinsights-core-js\";\r\nimport { createSyncPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { isNullOrUndefined, isPromiseLike, isString, objDefine, throwError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_CONNECTION_STRING, _DYN_ENDPOINT_URL, _DYN_INGESTIONENDPOINT, _DYN_INSTRUMENTATIONKEY0, _DYN_INSTRUMENTATION_KEY, _DYN_USER_OVERRIDE_ENDPOI1 } from \"./__DynamicConstants\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar defaultConfigValues = (_a = {\r\n        diagnosticLogInterval: cfgDfValidate(_chkDiagLevel, 10000)\r\n    },\r\n    _a[_DYN_CONNECTION_STRING /* @min:connectionString */] = UNDEFINED_VALUE,\r\n    _a[_DYN_ENDPOINT_URL /* @min:endpointUrl */] = UNDEFINED_VALUE,\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a.extensionConfig = {},\r\n    _a);\r\nfunction _chkDiagLevel(value) {\r\n    // Make sure we have a value > 0\r\n    return value && value > 0;\r\n}\r\n/**\r\n * @export\r\n * @class ApplicationInsights\r\n */\r\nvar ApplicationInsights = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ApplicationInsights.\r\n     * @param config\r\n     * @memberof ApplicationInsights\r\n     */\r\n    function ApplicationInsights(config) {\r\n        var core = new AppInsightsCore();\r\n        var _config;\r\n        // initialize the queue and config in case they are undefined\r\n        if (isNullOrUndefined(config) ||\r\n            (isNullOrUndefined(config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */]) && isNullOrUndefined(config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */]))) {\r\n            throwError(\"Invalid input configuration\");\r\n        }\r\n        dynamicProto(ApplicationInsights, this, function (_self) {\r\n            // Define _self.config\r\n            objDefine(_self, \"config\", {\r\n                g: function () { return _config; }\r\n            });\r\n            _initialize();\r\n            _self.initialize = _initialize;\r\n            _self.track = _track;\r\n            proxyFunctions(_self, core, [\r\n                \"flush\",\r\n                \"pollInternalLogs\",\r\n                \"stopPollingInternalLogs\",\r\n                \"unload\",\r\n                \"getPlugin\",\r\n                \"addPlugin\",\r\n                \"evtNamespace\",\r\n                \"addUnloadCb\",\r\n                \"onCfgChange\",\r\n                \"getTraceCtx\",\r\n                \"updateCfg\",\r\n                \"addTelemetryInitializer\"\r\n            ]);\r\n            function _initialize() {\r\n                var cfgHandler = createDynamicConfig(config || {}, defaultConfigValues);\r\n                _config = cfgHandler.cfg;\r\n                core.addUnloadHook(onConfigChange(cfgHandler, function () {\r\n                    var configCs = _config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */];\r\n                    if (isPromiseLike(configCs)) {\r\n                        var ikeyPromise = createSyncPromise(function (resolve, reject) {\r\n                            doAwaitResponse(configCs, function (res) {\r\n                                var curCs = res.value;\r\n                                var ikey = _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                                if (!res.rejected && curCs) {\r\n                                    // replace cs with resolved values in case of circular promises\r\n                                    _config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */] = curCs;\r\n                                    var resolvedCs = parseConnectionString(curCs);\r\n                                    ikey = resolvedCs[_DYN_INSTRUMENTATIONKEY0 /* @min:%2einstrumentationkey */] || ikey;\r\n                                }\r\n                                resolve(ikey);\r\n                            });\r\n                        });\r\n                        var urlPromise = createSyncPromise(function (resolve, reject) {\r\n                            doAwaitResponse(configCs, function (res) {\r\n                                var curCs = res.value;\r\n                                var url = _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                                if (!res.rejected && curCs) {\r\n                                    var resolvedCs = parseConnectionString(curCs);\r\n                                    var ingest = resolvedCs[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */];\r\n                                    url = ingest ? ingest + DEFAULT_BREEZE_PATH : url;\r\n                                }\r\n                                resolve(url);\r\n                            });\r\n                        });\r\n                        _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = ikeyPromise;\r\n                        _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] || urlPromise;\r\n                    }\r\n                    if (isString(configCs)) {\r\n                        var cs = parseConnectionString(configCs);\r\n                        var ingest = cs[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */];\r\n                        _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] ? _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] : (ingest + DEFAULT_BREEZE_PATH); // only add /v2/track when from connectionstring\r\n                        _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = cs[_DYN_INSTRUMENTATIONKEY0 /* @min:%2einstrumentationkey */] || _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    }\r\n                    // userOverrideEndpointUrl have the highest priority\r\n                    _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] ? _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] : _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                }));\r\n                // initialize core\r\n                core.initialize(_config, [new Sender()]);\r\n            }\r\n        });\r\n        function _track(item) {\r\n            if (item) {\r\n                // to pass sender.processTelemetry()\r\n                item.baseData = item.baseData || {};\r\n                item.baseType = item.baseType || \"EventData\";\r\n            }\r\n            core.track(item);\r\n        }\r\n    }\r\n// Removed Stub for ApplicationInsights.prototype.initialize.\r\n// Removed Stub for ApplicationInsights.prototype.track.\r\n// Removed Stub for ApplicationInsights.prototype.flush.\r\n// Removed Stub for ApplicationInsights.prototype.pollInternalLogs.\r\n// Removed Stub for ApplicationInsights.prototype.stopPollingInternalLogs.\r\n// Removed Stub for ApplicationInsights.prototype.unload.\r\n// Removed Stub for ApplicationInsights.prototype.getPlugin.\r\n// Removed Stub for ApplicationInsights.prototype.addPlugin.\r\n// Removed Stub for ApplicationInsights.prototype.evtNamespace.\r\n// Removed Stub for ApplicationInsights.prototype.addUnloadCb.\r\n// Removed Stub for ApplicationInsights.prototype.getTraceCtx.\r\n// Removed Stub for ApplicationInsights.prototype.addTelemetryInitializer.\r\n// Removed Stub for ApplicationInsights.prototype.updateCfg.\r\n// Removed Stub for ApplicationInsights.prototype.onCfgChange.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ApplicationInsights.__ieDyn=1;\n\n    return ApplicationInsights;\r\n}());\r\nexport { ApplicationInsights };\r\nexport { AppInsightsCore, arrForEach, isNullOrUndefined, throwError, proxyFunctions } from \"@microsoft/applicationinsights-core-js\";\r\nexport { SeverityLevel } from \"@microsoft/applicationinsights-common\";\r\nexport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\n//# sourceMappingURL=index.js.map","/*\n * Application Insights JavaScript Web SDK - Basic, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 6\r\nexport var _DYN_CONNECTION_STRING = \"connectionString\"; // Count: 4\r\nexport var _DYN_INSTRUMENTATIONKEY0 = \"instrumentationkey\"; // Count: 2\r\nexport var _DYN_ENDPOINT_URL = \"endpointUrl\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 2\r\nexport var _DYN_USER_OVERRIDE_ENDPOI1 = \"userOverrideEndpointUrl\"; // Count: 5\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel = createEnumStyle({\r\n    Verbose: 0 /* eSeverityLevel.Verbose */,\r\n    Information: 1 /* eSeverityLevel.Information */,\r\n    Warning: 2 /* eSeverityLevel.Warning */,\r\n    Error: 3 /* eSeverityLevel.Error */,\r\n    Critical: 4 /* eSeverityLevel.Critical */\r\n});\r\n//# sourceMappingURL=SeverityLevel.js.map","/*! https://github.com/nevware21/ts-utils v0.11.6 */\n/*\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureRef(value, name) {\n    return value[name];\n}\n\nvar UNDEF_VALUE = undefined;\nvar NULL_VALUE = null;\nvar EMPTY = \"\";\nvar FUNCTION = \"function\";\nvar OBJECT = \"object\";\nvar PROTOTYPE = \"prototype\";\nvar __PROTO__ = \"__proto__\";\nvar UNDEFINED = \"undefined\";\nvar CONSTRUCTOR = \"constructor\";\nvar SYMBOL = \"Symbol\";\nvar POLYFILL_TAG = \"_polyfill\";\nvar LENGTH = \"length\";\nvar NAME = \"name\";\nvar CALL = \"call\";\nvar TO_STRING = \"toString\";\nvar ObjClass = ( /*#__PURE__*/_pureAssign(Object));\nvar ObjProto = ( /*#__PURE__*/_pureRef(ObjClass, PROTOTYPE));\nvar StrCls = ( /*#__PURE__*/_pureAssign(String));\nvar StrProto = ( /*#__PURE__*/_pureRef(StrCls, PROTOTYPE));\nvar MathCls = ( /*#__PURE__*/_pureAssign(Math));\nvar ArrCls = ( /*#__PURE__*/_pureAssign(Array));\nvar ArrProto = ( /*#__PURE__*/_pureRef(ArrCls, PROTOTYPE));\nvar ArrSlice = ( /*#__PURE__*/_pureRef(ArrProto, \"slice\"));\n\nfunction safe(func, argArray) {\n    try {\n        return {\n            v: func.apply(this, argArray)\n        };\n    }\n    catch (e) {\n        return { e: e };\n    }\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGet(cb, defValue) {\n    var result = safe(cb);\n    return result.e ? defValue : result.v;\n}\n\nvar _primitiveTypes;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createIs(theType) {\n    return function (value) {\n        return typeof value === theType;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createObjIs(theName) {\n    var theType = \"[object \" + theName + \"]\";\n    return function (value) {\n        return !!(value && objToString(value) === theType);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objToString(value) {\n    return ObjProto[TO_STRING].call(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTypeof(value, theType) {\n    return typeof value === theType;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isUndefined(value) {\n    return typeof value === UNDEFINED || value === UNDEFINED;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictUndefined(arg) {\n    return !isDefined(arg);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNullOrUndefined(value) {\n    return value === NULL_VALUE || isUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictNullOrUndefined(value) {\n    return value === NULL_VALUE || !isDefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isDefined(arg) {\n    return !!arg || arg !== UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitive(value) {\n    return value === NULL_VALUE || isPrimitiveType(typeof value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitiveType(theType) {\n    !_primitiveTypes && (_primitiveTypes = [\"string\", \"number\", \"boolean\", UNDEFINED, \"symbol\", \"bigint\"]);\n    return !!(theType !== OBJECT && _primitiveTypes.indexOf(theType) !== -1);\n}\nvar isString = ( /*#__PURE__*/_createIs(\"string\"));\nvar isFunction = ( /*#__PURE__*/_createIs(FUNCTION));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isObject(value) {\n    if (!value && isNullOrUndefined(value)) {\n        return false;\n    }\n    return !!value && typeof value === OBJECT;\n}\nvar isArray = ( /* #__PURE__*/_pureRef(ArrCls, \"isArray\"));\nvar isDate = ( /*#__PURE__*/_createObjIs(\"Date\"));\nvar isNumber = ( /*#__PURE__*/_createIs(\"number\"));\nvar isBoolean = ( /*#__PURE__*/_createIs(\"boolean\"));\nvar isRegExp = ( /*#__PURE__*/_createObjIs(\"RegExp\"));\nvar isFile = ( /*#__PURE__*/_createObjIs(\"File\"));\nvar isFormData = ( /*#__PURE__*/_createObjIs(\"FormData\"));\nvar isBlob = ( /*#__PURE__*/_createObjIs(\"Blob\"));\nvar isArrayBuffer = ( /*#__PURE__*/_createObjIs(\"ArrayBuffer\"));\nvar isError = ( /*#__PURE__*/_createObjIs(\"Error\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromiseLike(value) {\n    return !!(value && value.then && isFunction(value.then));\n}\nvar isThenable = isPromiseLike;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromise(value) {\n    return !!(value && value.then && value.catch && isFunction(value.then) && isFunction(value.catch));\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNotTruthy(value) {\n    return !value || !isTruthy(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTruthy(value) {\n    return !(!value || safeGet(function () { return !(value && (0 + value)); }, !value));\n}\n\nvar objGetOwnPropertyDescriptor = ( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyDescriptor\"));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction objHasOwnProperty(obj, prop) {\n    return !!obj && ObjProto.hasOwnProperty[CALL](obj, prop);\n}\n\nvar objHasOwn = ( /*#__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"hasOwn\")), polyObjHasOwn));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjHasOwn(obj, prop) {\n    return objHasOwnProperty(obj, prop) || !!objGetOwnPropertyDescriptor(obj, prop);\n}\n\nfunction objForEachKey(theObject, callbackfn, thisArg) {\n    if (theObject && isObject(theObject)) {\n        for (var prop in theObject) {\n            if (objHasOwn(theObject, prop)) {\n                if (callbackfn[CALL](thisArg || theObject, prop, theObject[prop]) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar propMap = {\n    e: \"enumerable\",\n    c: \"configurable\",\n    v: \"value\",\n    w: \"writable\",\n    g: \"get\",\n    s: \"set\"\n};\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createProp(value) {\n    var prop = {};\n    prop[propMap[\"c\"]] = true;\n    prop[propMap[\"e\"]] = true;\n    if (value.l) {\n        prop.get = function () { return value.l.v; };\n        var desc = objGetOwnPropertyDescriptor(value.l, \"v\");\n        if (desc && desc.set) {\n            prop.set = function (newValue) {\n                value.l.v = newValue;\n            };\n        }\n    }\n    objForEachKey(value, function (key, value) {\n        prop[propMap[key]] = isStrictUndefined(value) ? prop[propMap[key]] : value;\n    });\n    return prop;\n}\nvar objDefineProp = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperty\"));\nvar objDefineProperties = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperties\"));\nfunction objDefineGet(target, key, value, configurable, enumerable) {\n    var _a;\n    return objDefineProp(target, key, _createProp((_a = {\n            e: enumerable,\n            c: configurable\n        },\n        _a[isFunction(value) ? \"g\" : \"v\"] = value,\n        _a)));\n}\nfunction objDefineAccessors(target, prop, getProp, setProp, configurable, enumerable) {\n    var desc = {\n        e: enumerable,\n        c: configurable\n    };\n    if (getProp) {\n        desc.g = getProp;\n    }\n    if (setProp) {\n        desc.s = setProp;\n    }\n    return objDefineProp(target, prop, _createProp(desc));\n}\nfunction objDefine(target, key, propDesc) {\n    return objDefineProp(target, key, _createProp(propDesc));\n}\nfunction objDefineProps(target, propDescMap) {\n    var props = {};\n    objForEachKey(propDescMap, function (key, value) {\n        props[key] = _createProp(value);\n    });\n    return objDefineProperties(target, props);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createKeyValueMap(values, keyType, valueType, completeFn, writable) {\n    var theMap = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(theMap, key, keyType ? value : key, writable);\n        _assignMapValue(theMap, value, valueType ? value : key, writable);\n    });\n    return completeFn ? completeFn(theMap) : theMap;\n}\nfunction _assignMapValue(theMap, key, value, writable) {\n    objDefineProp(theMap, key, {\n        value: value,\n        enumerable: true,\n        writable: !!writable\n    });\n}\n\nvar asString = ( /* #__PURE__ */_pureAssign(StrCls));\n\nvar ERROR_TYPE = \"[object Error]\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction dumpObj(object, format) {\n    var propertyValueDump = EMPTY;\n    var objType = ObjProto[TO_STRING][CALL](object);\n    if (objType === ERROR_TYPE) {\n        object = { stack: asString(object.stack), message: asString(object.message), name: asString(object.name) };\n    }\n    try {\n        propertyValueDump = JSON.stringify(object, NULL_VALUE, format ? ((typeof format === \"number\") ? format : 4) : UNDEF_VALUE);\n        propertyValueDump = (propertyValueDump ? propertyValueDump.replace(/\"(\\w+)\"\\s*:\\s{0,1}/g, \"$1: \") : NULL_VALUE) || asString(object);\n    }\n    catch (e) {\n        propertyValueDump = \" - \" + dumpObj(e, format);\n    }\n    return objType + \": \" + propertyValueDump;\n}\n\nfunction throwError(message) {\n    throw new Error(message);\n}\nfunction throwTypeError(message) {\n    throw new TypeError(message);\n}\nfunction throwRangeError(message) {\n    throw new RangeError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjKeys(obj) {\n    if (!isObject(obj) || obj === NULL_VALUE) {\n        throwTypeError(\"non-object \" + dumpObj(obj));\n    }\n    var result = [];\n    for (var prop in obj) {\n        if (objHasOwn(obj, prop)) {\n            result.push(prop);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjEntries(value) {\n    var result = [];\n    objForEachKey(value, function (key, value) {\n        result.push([key, value]);\n    });\n    return result;\n}\n\nvar _objFreeze = ( /* #__PURE__ */_pureRef(ObjClass, \"freeze\"));\nfunction _doNothing(value) {\n    return value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getProto(value) {\n    return value[__PROTO__] || NULL_VALUE;\n}\nvar objAssign = ( /*#__PURE__*/_pureRef(ObjClass, \"assign\"));\nvar objKeys = ( /*#__PURE__*/_pureRef(ObjClass, \"keys\"));\nfunction objDeepFreeze(value) {\n    if (_objFreeze) {\n        objForEachKey(value, function (key, value) {\n            if (isArray(value) || isObject(value)) {\n                objDeepFreeze(value);\n            }\n        });\n    }\n    return objFreeze(value);\n}\nvar objFreeze = ( /* #__PURE__*/_pureAssign(_objFreeze, _doNothing));\nvar objSeal = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"seal\")), _doNothing));\nvar objGetPrototypeOf = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"getPrototypeOf\")), _getProto));\nvar objEntries = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"entries\")), polyObjEntries));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnum(values) {\n    return _createKeyValueMap(values, 1 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumKeyMap(values) {\n    return _createKeyValueMap(values, 0 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumValueMap(values) {\n    return _createKeyValueMap(values, 1 , 1 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createSimpleMap(values) {\n    var mapClass = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(mapClass, key, value[1]);\n        _assignMapValue(mapClass, value[0], value[1]);\n    });\n    return objFreeze(mapClass);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createTypeMap(values) {\n    return createSimpleMap(values);\n}\n\nvar _wellKnownSymbolMap = /*#__PURE__*/ createEnumKeyMap({\n    asyncIterator: 0 ,\n    hasInstance: 1 ,\n    isConcatSpreadable: 2 ,\n    iterator: 3 ,\n    match: 4 ,\n    matchAll: 5 ,\n    replace: 6 ,\n    search: 7 ,\n    species: 8 ,\n    split: 9 ,\n    toPrimitive: 10 ,\n    toStringTag: 11 ,\n    unscopables: 12\n});\n\nvar GLOBAL_CONFIG_KEY = \"__tsUtils$gblCfg\";\nvar _globalCfg;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalValue() {\n    var result;\n    if (typeof globalThis !== UNDEFINED) {\n        result = globalThis;\n    }\n    if (!result && typeof self !== UNDEFINED) {\n        result = self;\n    }\n    if (!result && typeof window !== UNDEFINED) {\n        result = window;\n    }\n    if (!result && typeof global !== UNDEFINED) {\n        result = global;\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalConfig() {\n    if (!_globalCfg) {\n        var gbl = safe(_getGlobalValue).v || {};\n        _globalCfg = gbl[GLOBAL_CONFIG_KEY] = gbl[GLOBAL_CONFIG_KEY] || {};\n    }\n    return _globalCfg;\n}\n\nvar _unwrapFunction = ( _unwrapFunctionWithPoly);\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapFunctionWithPoly(funcName, clsProto, polyFunc) {\n    var clsFn = clsProto ? clsProto[funcName] : NULL_VALUE;\n    return function (thisArg) {\n        var theFunc = (thisArg ? thisArg[funcName] : NULL_VALUE) || clsFn;\n        if (theFunc || polyFunc) {\n            var theArgs = arguments;\n            return (theFunc || polyFunc).apply(thisArg, theFunc ? ArrSlice[CALL](theArgs, 1) : theArgs);\n        }\n        throwTypeError(\"\\\"\" + asString(funcName) + \"\\\" not defined for \" + dumpObj(thisArg));\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapProp(propName) {\n    return function (thisArg) {\n        return thisArg[propName];\n    };\n}\n\nvar mathMin = ( /*#__PURE__*/_pureRef(MathCls, \"min\"));\nvar mathMax = ( /*#__PURE__*/_pureRef(MathCls, \"max\"));\n\nvar strSlice = ( /*#__PURE__*/_unwrapFunction(\"slice\", StrProto));\n\nvar strSubstring = ( /*#__PURE__*/_unwrapFunction(\"substring\", StrProto));\nvar strSubstr = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"substr\", StrProto, polyStrSubstr));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSubstr(value, start, length) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"Invalid \" + dumpObj(value));\n    }\n    if (length < 0) {\n        return EMPTY;\n    }\n    start = start || 0;\n    if (start < 0) {\n        start = mathMax(start + value[LENGTH], 0);\n    }\n    if (isUndefined(length)) {\n        return strSlice(value, start);\n    }\n    return strSlice(value, start, start + length);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLeft(value, count) {\n    return strSubstring(value, 0, count);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strRight(value, count) {\n    return count <= 0 ? EMPTY : (value[LENGTH] > count ? strSlice(value, -count) : value);\n}\n\nvar UNIQUE_REGISTRY_ID = \"_urid\";\nvar _polySymbols;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _globalSymbolRegistry() {\n    if (!_polySymbols) {\n        var gblCfg = _getGlobalConfig();\n        _polySymbols = gblCfg.gblSym = gblCfg.gblSym || { k: {}, s: {} };\n    }\n    return _polySymbols;\n}\nvar _wellKnownSymbolCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyNewSymbol(description) {\n    var theSymbol = {\n        description: asString(description),\n        toString: function () { return SYMBOL + \"(\" + description + \")\"; }\n    };\n    theSymbol[POLYFILL_TAG] = true;\n    return theSymbol;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolFor(key) {\n    var registry = _globalSymbolRegistry();\n    if (!objHasOwn(registry.k, key)) {\n        var newSymbol_1 = polyNewSymbol(key);\n        var regId_1 = objKeys(registry.s).length;\n        newSymbol_1[UNIQUE_REGISTRY_ID] = function () { return regId_1 + \"_\" + newSymbol_1[TO_STRING](); };\n        registry.k[key] = newSymbol_1;\n        registry.s[newSymbol_1[UNIQUE_REGISTRY_ID]()] = asString(key);\n    }\n    return registry.k[key];\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolKeyFor(sym) {\n    if (!sym || !sym[TO_STRING] || strSubstring(sym[TO_STRING](), 0, 6) != SYMBOL) {\n        throwTypeError(sym + \" is not a symbol\");\n    }\n    var regId = sym[POLYFILL_TAG] && sym[UNIQUE_REGISTRY_ID] && sym[UNIQUE_REGISTRY_ID]();\n    return regId ? _globalSymbolRegistry().s[regId] : undefined;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyGetKnownSymbol(name) {\n    !_wellKnownSymbolCache && (_wellKnownSymbolCache = {});\n    var result;\n    var knownName = _wellKnownSymbolMap[name];\n    if (knownName) {\n        result = _wellKnownSymbolCache[knownName] = _wellKnownSymbolCache[knownName] || polyNewSymbol(SYMBOL + \".\" + knownName);\n    }\n    return result;\n}\n\nvar _globalLazyTestHooks;\nfunction _initTestHooks() {\n    _globalLazyTestHooks = _getGlobalConfig();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getLazy(cb) {\n    var lazyValue = {};\n    !_globalLazyTestHooks && _initTestHooks();\n    lazyValue.b = _globalLazyTestHooks.lzy;\n    objDefineProp(lazyValue, \"v\", {\n        configurable: true,\n        get: function () {\n            var result = cb();\n            if (!_globalLazyTestHooks.lzy) {\n                objDefineProp(lazyValue, \"v\", {\n                    value: result\n                });\n            }\n            lazyValue.b = _globalLazyTestHooks.lzy;\n            return result;\n        }\n    });\n    return lazyValue;\n}\nfunction setBypassLazyCache(newValue) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _globalLazyTestHooks.lzy = newValue;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCachedValue(value) {\n    return objDefineProp({\n        toJSON: function () { return value; }\n    }, \"v\", { value: value });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createDeferredCachedValue(cb) {\n    var theValue = {\n        toJSON: function () { return theValue.v; }\n    };\n    return objDefineProp(theValue, \"v\", {\n        get: function () {\n            var result = cb();\n            cb = NULL_VALUE;\n            objDefineProp(theValue, \"v\", { value: result });\n            return result;\n        },\n        configurable: true\n    });\n}\n\nvar WINDOW = \"window\";\nvar _cachedGlobal;\nfunction _getGlobalInstFn(getFn, theArgs) {\n    var cachedValue;\n    return function () {\n        !_globalLazyTestHooks && _initTestHooks();\n        if (!cachedValue || _globalLazyTestHooks.lzy) {\n            cachedValue = createCachedValue(safe(getFn, theArgs).v);\n        }\n        return cachedValue.v;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction lazySafeGetInst(name) {\n    return getLazy(function () { return safe((getInst), [name]).v || UNDEF_VALUE; });\n}\nfunction getGlobal(useCached) {\n    !_globalLazyTestHooks && _initTestHooks();\n    if (!_cachedGlobal || useCached === false || _globalLazyTestHooks.lzy) {\n        _cachedGlobal = createCachedValue(safe(_getGlobalValue).v || NULL_VALUE);\n    }\n    return _cachedGlobal.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getInst(name, useCached) {\n    var gbl;\n    if (!_cachedGlobal || useCached === false) {\n        gbl = getGlobal(useCached);\n    }\n    else {\n        gbl = _cachedGlobal.v;\n    }\n    if (gbl && gbl[name]) {\n        return gbl[name];\n    }\n    if (name === WINDOW) {\n        try {\n            return window;\n        }\n        catch (e) {\n        }\n    }\n    return NULL_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasDocument() {\n    return !!( /*#__PURE__*/getDocument());\n}\nvar getDocument = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"document\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasWindow() {\n    return !!( /*#__PURE__*/getWindow());\n}\nvar getWindow = ( /*#__PURE__*/_getGlobalInstFn(getInst, [WINDOW]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasNavigator() {\n    return !!( /*#__PURE__*/getNavigator());\n}\nvar getNavigator = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"navigator\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasHistory() {\n    return !!( /*#__PURE__*/getHistory());\n}\nvar getHistory = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"history\"]));\nvar isNode = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return (process && (process.versions || {}).node); }).v);\n}));\nvar isWebWorker = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return self && self instanceof WorkerGlobalScope; }).v);\n}));\n\nvar _symbol;\nvar _symbolFor;\nvar _symbolKeyFor;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _initSymbol() {\n    _symbol = ( /*#__PURE__*/createCachedValue(safe((getInst), [SYMBOL]).v));\n    return _symbol;\n}\nfunction _getSymbolKey(key) {\n    var gblSym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return (gblSym.v ? gblSym.v[key] : UNDEF_VALUE);\n}\nvar isSymbol = ( /*#__PURE__*/_createIs(\"symbol\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasSymbol() {\n    return !!( /*#__PURE__*/getSymbol());\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getSymbol() {\n    !_globalLazyTestHooks && _initTestHooks();\n    return ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol()).v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getKnownSymbol(name, noPoly) {\n    var knownName = _wellKnownSymbolMap[name];\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v[knownName || name] : (!noPoly ? polyGetKnownSymbol(name) : UNDEF_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction newSymbol(description, noPoly) {\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v(description) : (!noPoly ? polyNewSymbol(description) : NULL_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolFor(key) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolFor = ((!_globalLazyTestHooks.lzy ? _symbolFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"for\"]).v)));\n    return (_symbolFor.v || polySymbolFor)(key);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolKeyFor(sym) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolKeyFor = ((!_globalLazyTestHooks.lzy ? _symbolKeyFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"keyFor\"]).v)));\n    return (_symbolKeyFor.v || polySymbolKeyFor)(sym);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterator(value) {\n    return !!value && isFunction(value.next);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterable(value) {\n    return !isStrictNullOrUndefined(value) && isFunction(value[getKnownSymbol(3 )]);\n}\n\nvar _iterSymbol$1;\nfunction iterForOf(iter, callbackfn, thisArg) {\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterSymbol$1 && (_iterSymbol$1 = createCachedValue(getKnownSymbol(3 )));\n            iter = iter[_iterSymbol$1.v] ? iter[_iterSymbol$1.v]() : NULL_VALUE;\n        }\n        if (isIterator(iter)) {\n            var err = UNDEF_VALUE;\n            var iterResult = UNDEF_VALUE;\n            try {\n                var count = 0;\n                while (!(iterResult = iter.next()).done) {\n                    if (callbackfn[CALL](thisArg || iter, iterResult.value, count, iter) === -1) {\n                        break;\n                    }\n                    count++;\n                }\n            }\n            catch (failed) {\n                err = { e: failed };\n                if (iter.throw) {\n                    iterResult = NULL_VALUE;\n                    iter.throw(err);\n                }\n            }\n            finally {\n                try {\n                    if (iterResult && !iterResult.done) {\n                        iter.return && iter.return(iterResult);\n                    }\n                }\n                finally {\n                    if (err) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw err.e;\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction fnApply(fn, thisArg, argArray) {\n    return fn.apply(thisArg, argArray);\n}\nfunction fnCall(fn, thisArg) {\n    return fn.apply(thisArg, ArrSlice[CALL](arguments, 2));\n}\nfunction fnBind(fn, thisArg) {\n    return fn.bind.apply(fn, ArrSlice[CALL](arguments, 1));\n}\n\nfunction arrAppend(target, elms) {\n    if (!isUndefined(elms) && target) {\n        if (isArray(elms)) {\n            fnApply(target.push, target, elms);\n        }\n        else if (isIterator(elms) || isIterable(elms)) {\n            iterForOf(elms, function (elm) {\n                target.push(elm);\n            });\n        }\n        else {\n            target.push(elms);\n        }\n    }\n    return target;\n}\n\nvar arrEvery = /*#__PURE__*/ _unwrapFunction(\"every\", ArrProto);\nvar arrFilter = /*#__PURE__*/ _unwrapFunction(\"filter\", ArrProto);\n\nfunction arrForEach(theArray, callbackfn, thisArg) {\n    if (theArray) {\n        var len = theArray[LENGTH] >>> 0;\n        for (var idx = 0; idx < len; idx++) {\n            if (idx in theArray) {\n                if (callbackfn[CALL](thisArg || theArray, theArray[idx], idx, theArray) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar arrIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", ArrProto));\nvar arrLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", ArrProto));\n\nvar arrMap = ( /*#__PURE__*/_unwrapFunction(\"map\", ArrProto));\n\nfunction arrSlice(theArray, start, end) {\n    return ((theArray ? theArray[\"slice\"] : NULL_VALUE) || ArrSlice).apply(theArray, ArrSlice[CALL](arguments, 1));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyIsArray(value) {\n    if (isNullOrUndefined(value)) {\n        return false;\n    }\n    return objToString(value) === \"[object Array]\";\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyArrIncludes(theArray, searchElement, fromIndex) {\n    return arrIndexOf(theArray, searchElement, fromIndex) !== -1;\n}\nfunction polyArrFind(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    arrForEach(theArray, function (value, index) {\n        if (callbackFn[CALL](thisArg | theArray, value, index, theArray)) {\n            result = index;\n            return -1;\n        }\n    });\n    return result;\n}\nfunction polyArrFindLast(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindLastIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindLastIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    var len = theArray[LENGTH] >>> 0;\n    for (var idx = len - 1; idx >= 0; idx--) {\n        if (idx in theArray && callbackFn[CALL](thisArg | theArray, theArray[idx], idx, theArray)) {\n            result = idx;\n            break;\n        }\n    }\n    return result;\n}\nfunction polyArrFrom(theValue, mapFn, thisArg) {\n    if (isArray(theValue)) {\n        var result_1 = arrSlice(theValue);\n        return mapFn ? arrMap(result_1, mapFn, thisArg) : result_1;\n    }\n    var result = [];\n    iterForOf(theValue, function (value, cnt) {\n        return result.push(mapFn ? mapFn[CALL](thisArg, value, cnt) : value);\n    });\n    return result;\n}\n\nvar arrFind = /*#__PURE__*/ _unwrapFunctionWithPoly(\"find\", ArrProto, polyArrFind);\nvar arrFindIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findIndex\", ArrProto, polyArrFindIndex);\nvar arrFindLast = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLast\", ArrProto, polyArrFindLast);\nvar arrFindLastIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLastIndex\", ArrProto, polyArrFindLastIndex);\n\nvar arrFrom = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ArrCls, \"from\")), polyArrFrom));\n\nvar arrIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", ArrProto, polyArrIncludes));\nvar arrContains = arrIncludes;\n\nvar arrReduce = ( /*#__PURE__*/_unwrapFunction(\"reduce\", ArrProto));\n\nvar arrSome = ( /*#__PURE__*/_unwrapFunction(\"some\", ArrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFnDeferredProxy(hostFn, funcName) {\n    return function () {\n        var theArgs = ArrSlice[CALL](arguments);\n        var theHost = hostFn();\n        return fnApply(theHost[funcName], theHost, theArgs);\n    };\n}\nfunction createProxyFuncs(target, host, funcDefs) {\n    if (target && host && isArray(funcDefs)) {\n        var isDeferred_1 = isFunction(host);\n        arrForEach(funcDefs, function (funcDef) {\n            var targetName = (funcDef.as || funcDef.n);\n            if (funcDef.rp === false && target[targetName]) {\n                return;\n            }\n            target[targetName] = isDeferred_1 ?\n                createFnDeferredProxy(host, funcDef.n) :\n                fnBind(host[funcDef.n], host);\n        });\n    }\n    return target;\n}\n\nvar _iterSymbol;\n/*#__NO_SIDE_EFFECTS__*/\nfunction readArgs(theArgs, start, end) {\n    if (!objHasOwn(theArgs, LENGTH)) {\n        !_iterSymbol && (_iterSymbol = createCachedValue(hasSymbol() && getKnownSymbol(3 )));\n        var iterFn = void 0;\n        if (_iterSymbol.v) {\n            iterFn = theArgs[_iterSymbol.v];\n        }\n        if (iterFn) {\n            var values_1 = [];\n            var from_1 = (start === UNDEF_VALUE || start < 0) ? 0 : start;\n            var to_1 = end < 0 || start < 0 ? UNDEF_VALUE : end;\n            iterForOf(iterFn[CALL](theArgs), function (value, cnt) {\n                if (to_1 !== UNDEF_VALUE && cnt >= to_1) {\n                    return -1;\n                }\n                if (cnt >= from_1) {\n                    values_1.push(value);\n                }\n            });\n            if ((start === UNDEF_VALUE || start >= 0) && (end === UNDEF_VALUE || end >= 0)) {\n                return values_1;\n            }\n            theArgs = values_1;\n        }\n    }\n    return arrSlice(theArgs, start, end);\n}\n\nvar objCreate = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"create\")), polyObjCreate));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjCreate(obj) {\n    if (!obj) {\n        return {};\n    }\n    var type = typeof obj;\n    if (type !== OBJECT && type !== FUNCTION) {\n        throwTypeError(\"Prototype must be an Object or function: \" + dumpObj(obj));\n    }\n    function tempFunc() { }\n    tempFunc[PROTOTYPE] = obj;\n    return new tempFunc();\n}\n\nvar _isProtoArray;\nfunction objSetPrototypeOf(obj, proto) {\n    var fn = ObjClass[\"setPrototypeOf\"] ||\n        function (d, b) {\n            var _a;\n            !_isProtoArray && (_isProtoArray = createCachedValue((_a = {}, _a[__PROTO__] = [], _a) instanceof Array));\n            _isProtoArray.v ? d[__PROTO__] = b : objForEachKey(b, function (key, value) { return d[key] = value; });\n        };\n    return fn(obj, proto);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createCustomError(name, d, b) {\n    safe(objDefine, [d, NAME, { v: name, c: true, e: false }]);\n    d = objSetPrototypeOf(d, b);\n    function __() {\n        this[CONSTRUCTOR] = d;\n        safe(objDefine, [this, NAME, { v: name, c: true, e: false }]);\n    }\n    d[PROTOTYPE] = b === NULL_VALUE ? objCreate(b) : (__[PROTOTYPE] = b[PROTOTYPE], new __());\n    return d;\n}\nfunction _setName(baseClass, name) {\n    name && (baseClass[NAME] = name);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCustomError(name, constructCb, errorBase) {\n    var theBaseClass = errorBase || Error;\n    var orgName = theBaseClass[PROTOTYPE][NAME];\n    var captureFn = Error.captureStackTrace;\n    return _createCustomError(name, function () {\n        var _this = this;\n        var theArgs = arguments;\n        try {\n            safe(_setName, [theBaseClass, name]);\n            var _self = fnApply(theBaseClass, _this, ArrSlice[CALL](theArgs)) || _this;\n            if (_self !== _this) {\n                var orgProto = objGetPrototypeOf(_this);\n                if (orgProto !== objGetPrototypeOf(_self)) {\n                    objSetPrototypeOf(_self, orgProto);\n                }\n            }\n            captureFn && captureFn(_self, _this[CONSTRUCTOR]);\n            constructCb && constructCb(_self, theArgs);\n            return _self;\n        }\n        finally {\n            safe(_setName, [theBaseClass, orgName]);\n        }\n    }, theBaseClass);\n}\nvar _unsupportedError;\nfunction throwUnsupported(message) {\n    if (!_unsupportedError) {\n        _unsupportedError = createCustomError(\"UnsupportedError\");\n    }\n    throw new _unsupportedError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction utcNow() {\n    return (Date.now || polyUtcNow)();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyUtcNow() {\n    return new Date().getTime();\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTrimFn(exp) {\n    return function _doTrim(value) {\n        if (isNullOrUndefined(value)) {\n            throwTypeError(\"strTrim called [\" + dumpObj(value) + \"]\");\n        }\n        if (value && value.replace) {\n            value = value.replace(exp, EMPTY);\n        }\n        return value;\n    };\n}\nvar polyStrTrim = ( /*#__PURE__*/_createTrimFn(/^\\s+|(?=\\s)\\s+$/g));\nvar polyStrTrimStart = ( /*#__PURE__*/_createTrimFn(/^\\s+/g));\nvar polyStrTrimEnd = ( /*#__PURE__*/_createTrimFn(/(?=\\s)\\s+$/g));\n\nvar strTrim = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trim\", StrProto, polyStrTrim));\nvar strTrimStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimStart\", StrProto, polyStrTrimStart));\nvar strTrimLeft = ( /*#__PURE__*/_pureAssign(strTrimStart));\nvar strTrimEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimEnd\", StrProto, polyStrTrimEnd));\nvar strTrimRight = ( /*#__PURE__*/_pureAssign(strTrimEnd));\n\nvar strUpper = ( /*#__PURE__*/_unwrapFunction(\"toUpperCase\", StrProto));\nvar strLower = ( /*#__PURE__*/_unwrapFunction(\"toLowerCase\", StrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _convertCase(value, newPrefix, upperWord) {\n    return strTrim(asString(value)).replace(/((_|\\W)+(\\w){0,1}|([a-z])([A-Z]))/g, function (_match, _g1, _g2, wordStart, upperPrefix, upperLetter) {\n        var convertMatch = wordStart || upperLetter || EMPTY;\n        if (upperWord) {\n            convertMatch = strUpper(convertMatch);\n        }\n        return (upperPrefix || EMPTY) + newPrefix + convertMatch;\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLetterCase(value) {\n    return asString(value).replace(/(_|\\b)\\w/g, strUpper);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strCamelCase(value, upperFirst) {\n    var result = _convertCase(value, \"\", true);\n    return result.replace(/^\\w/, upperFirst ? strUpper : strLower);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strKebabCase(value, scream) {\n    var result = _convertCase(value, \"-\");\n    return (scream ? strUpper : strLower)(result);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strSnakeCase(value, scream) {\n    var result = _convertCase(value, \"_\");\n    return (scream ? strUpper : strLower)(result);\n}\n\nvar mathFloor = ( /*#__PURE__*/_pureRef(MathCls, \"floor\"));\nvar mathCeil = ( /*#__PURE__*/_pureRef(MathCls, \"ceil\"));\n\nvar mathTrunc = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(MathCls, \"trunc\")), polyMathTrunc));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyMathTrunc(value) {\n    var theValue = +value;\n    return (theValue > 0 ? mathFloor : mathCeil)(theValue);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction mathToInt(value, throwInfinity) {\n    var result = +value;\n    if (result == Infinity && throwInfinity) {\n        throwRangeError(\"invalid value [\" + dumpObj(value) + \"]\");\n    }\n    return result !== result || result === 0 ? 0 : mathTrunc(result);\n}\n\nvar strRepeat = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"repeat\", StrProto, polyStrRepeat));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrRepeat(value, count) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"can't convert [\" + dumpObj(value) + \"]\");\n    }\n    count = mathToInt(count, true);\n    if (count < 0) {\n        throwRangeError(\"invalid count must be >= 0 && < Infinity\");\n    }\n    var pad = isString(value) ? value : asString(value);\n    var result = EMPTY;\n    for (; count > 0; (count >>>= 1) && (pad += pad)) {\n        if (count & 1) {\n            result += pad;\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _padValue(value, targetLength, padString) {\n    var result = EMPTY;\n    targetLength = mathToInt(targetLength, true);\n    targetLength >>= 0;\n    var len = value[LENGTH];\n    if (len < targetLength) {\n        result = isNullOrUndefined(padString) ? \" \" : asString(padString);\n        targetLength = targetLength - len;\n        if (targetLength > result[LENGTH]) {\n            result = strRepeat(result, mathCeil(targetLength / result[LENGTH]));\n        }\n        if (result[LENGTH] > targetLength) {\n            result = strSubstring(result, 0, targetLength);\n        }\n    }\n    return result;\n}\nvar strPadStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padStart\", StrProto, polyStrPadStart));\nvar strPadEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padEnd\", StrProto, polyStrPadEnd));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadStart(value, targetLength, padString) {\n    return _padValue(value, targetLength, padString) + value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadEnd(value, targetLength, padString) {\n    return value + _padValue(value, targetLength, padString);\n}\n\nvar DBL_QUOTE = \"\\\"\";\nvar INVALID_JS_NAME = /([^\\w\\d_$])/g;\nvar _htmlEntityCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction normalizeJsName(jsName, camelCase) {\n    var result = asString(jsName).replace(INVALID_JS_NAME, \"_\");\n    return !isUndefined(camelCase) ? strCamelCase(result, !camelCase) : result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsJson(value, format) {\n    var result;\n    if (isString(value)) {\n        result = DBL_QUOTE + value.replace(/[^\\w .,\\-!@#$%\\^&*\\(\\)_+={}\\[\\]:;|<>?]/g, function (match) {\n            if (match === DBL_QUOTE || match === \"\\\\\") {\n                return \"\\\\\" + match;\n            }\n            var hex = match.charCodeAt(0)[TO_STRING](16);\n            return \"\\\\u\" + strPadStart(strUpper(hex), 4, \"0\");\n        }) + DBL_QUOTE;\n    }\n    else {\n        try {\n            result = JSON.stringify(value, NULL_VALUE, format ? (isNumber(format) ? format : 4) : UNDEF_VALUE);\n        }\n        catch (e) {\n            result = DBL_QUOTE + dumpObj(e) + DBL_QUOTE;\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsHtml(value) {\n    !_htmlEntityCache && (_htmlEntityCache = {\n        \"&\": \"amp\",\n        \"<\": \"lt\",\n        \">\": \"gt\",\n        \"\\\"\": \"quot\",\n        \"'\": \"#39\"\n    });\n    return asString(value).replace(/[&<>\"']/g, function (match) { return \"&\" + _htmlEntityCache[match] + \";\"; });\n}\n\nvar _fnToString;\nvar _objCtrFnString;\nvar _gblWindow;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPlainObject(value) {\n    if (!value || typeof value !== OBJECT) {\n        return false;\n    }\n    if (!_gblWindow) {\n        _gblWindow = hasWindow() ? getWindow() : true;\n    }\n    var result = false;\n    if (value !== _gblWindow) {\n        if (!_objCtrFnString) {\n            _fnToString = Function[PROTOTYPE][TO_STRING];\n            _objCtrFnString = _fnToString[CALL](ObjClass);\n        }\n        try {\n            var proto = objGetPrototypeOf(value);\n            result = !proto;\n            if (!result) {\n                if (objHasOwnProperty(proto, CONSTRUCTOR)) {\n                    proto = proto[CONSTRUCTOR];\n                }\n                result = !!(proto && typeof proto === FUNCTION && _fnToString[CALL](proto) === _objCtrFnString);\n            }\n        }\n        catch (ex) {\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _defaultDeepCopyHandler(details) {\n    details.value && plainObjDeepCopyHandler(details);\n    return true;\n}\nvar defaultDeepCopyHandlers = [\n    arrayDeepCopyHandler,\n    plainObjDeepCopyHandler,\n    functionDeepCopyHandler,\n    dateDeepCopyHandler\n];\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getSetVisited(visitMap, source, newPath, cb) {\n    var theEntry;\n    arrForEach(visitMap, function (entry) {\n        if (entry.k === source) {\n            theEntry = entry;\n            return -1;\n        }\n    });\n    if (!theEntry) {\n        theEntry = { k: source, v: source };\n        visitMap.push(theEntry);\n        cb(theEntry);\n    }\n    return theEntry.v;\n}\nfunction _deepCopy(visitMap, value, ctx, key) {\n    var userHandler = ctx.handler;\n    var newPath = ctx.path ? (key ? ctx.path.concat(key) : ctx.path) : [];\n    var newCtx = {\n        handler: ctx.handler,\n        src: ctx.src,\n        path: newPath\n    };\n    var theType = typeof value;\n    var isPlain = false;\n    var isPrim = value === NULL_VALUE;\n    if (!isPrim) {\n        if (value && theType === OBJECT) {\n            isPlain = isPlainObject(value);\n        }\n        else {\n            isPrim = isPrimitiveType(theType);\n        }\n    }\n    var details = {\n        type: theType,\n        isPrim: isPrim,\n        isPlain: isPlain,\n        value: value,\n        result: value,\n        path: newPath,\n        origin: ctx.src,\n        copy: function (source, newKey) {\n            return _deepCopy(visitMap, source, newKey ? newCtx : ctx, newKey);\n        },\n        copyTo: function (target, source) {\n            return _copyProps(visitMap, target, source, newCtx);\n        }\n    };\n    if (!details.isPrim) {\n        return _getSetVisited(visitMap, value, newPath, function (newEntry) {\n            objDefine(details, \"result\", {\n                g: function () {\n                    return newEntry.v;\n                },\n                s: function (newValue) {\n                    newEntry.v = newValue;\n                }\n            });\n            var idx = 0;\n            var handler = userHandler;\n            while (!(handler || (idx < defaultDeepCopyHandlers.length ? defaultDeepCopyHandlers[idx++] : _defaultDeepCopyHandler))[CALL](ctx, details)) {\n                handler = NULL_VALUE;\n            }\n        });\n    }\n    if (userHandler && userHandler[CALL](ctx, details)) {\n        return details.result;\n    }\n    return value;\n}\nfunction _copyProps(visitMap, target, source, ctx) {\n    if (!isNullOrUndefined(source)) {\n        for (var key in source) {\n            target[key] = _deepCopy(visitMap, source[key], ctx, key);\n        }\n    }\n    return target;\n}\nfunction objCopyProps(target, source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source,\n        path: []\n    };\n    return _copyProps([], target, source, ctx);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objDeepCopy(source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source\n    };\n    return _deepCopy([], source, ctx);\n}\nfunction arrayDeepCopyHandler(details) {\n    var value = details.value;\n    if (isArray(value)) {\n        var target = details.result = [];\n        target.length = value.length;\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\nfunction dateDeepCopyHandler(details) {\n    var value = details.value;\n    if (isDate(value)) {\n        details.result = new Date(value.getTime());\n        return true;\n    }\n    return false;\n}\nfunction functionDeepCopyHandler(details) {\n    if (details.type === FUNCTION) {\n        return true;\n    }\n    return false;\n}\nfunction plainObjDeepCopyHandler(details) {\n    var value = details.value;\n    if (value && details.isPlain) {\n        var target = details.result = {};\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\n\nfunction _doExtend(target, theArgs) {\n    arrForEach(theArgs, function (theArg) {\n        objCopyProps(target, theArg);\n    });\n    return target;\n}\nfunction deepExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(objDeepCopy(target) || {}, ArrSlice[CALL](arguments));\n}\nfunction objExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(target || {}, ArrSlice[CALL](arguments));\n}\n\nvar getLength = ( /*#__PURE__*/_unwrapProp(LENGTH));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getIntValue(value, defValue) {\n    if (!isNullOrUndefined(value)) {\n        if (isNumber(value)) {\n            return value;\n        }\n        var theValue = parseInt(value, 10);\n        return isNaN(theValue) ? defValue : theValue;\n    }\n    return defValue;\n}\n\nvar _perf;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasPerformance() {\n    return !!getPerformance();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getPerformance() {\n    !_globalLazyTestHooks && _initTestHooks();\n    if (!_perf || _globalLazyTestHooks.lzy) {\n        _perf = createCachedValue(safe((getInst), [\"performance\"]).v);\n    }\n    return _perf.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction perfNow() {\n    var perf = getPerformance();\n    if (perf && perf.now) {\n        return perf.now();\n    }\n    return utcNow();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction elapsedTime(startTime) {\n    return perfNow() - startTime;\n}\n\nvar MATCH_ANY = \"(.*)\";\nvar MATCH_SINGLE = \"(.)\";\nfunction _createRegExp(value, escapeRgx, replaceFn, ignoreCase, fullMatch) {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp((fullMatch ? \"^\" : EMPTY) + replaceFn(value.replace(escapeRgx, \"\\\\$1\")) + (fullMatch ? \"$\" : EMPTY), ignoreCase ? \"i\" : \"\");\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createWildcardRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.\\?{}()\\[\\]\\\\/\\\"\\'])/g, function (value) {\n        return value.replace(/\\*/g, MATCH_ANY);\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFilenameRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\\\\\\\|\\\\\\/|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            return g1 == \"*\" ? MATCH_ANY : MATCH_SINGLE;\n        });\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction makeGlobRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\*\\*\\\\[\\\\\\/]|\\\\\\\\|\\\\\\/|\\*\\*|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"**\\\\/\" || g1 == \"**\\\\\\\\\") {\n                return \"(.*[\\\\\\\\\\\\/])*\";\n            }\n            if (g1 === \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            if (g1 === \"**\") {\n                return MATCH_ANY;\n            }\n            return g1 === \"*\" ? \"([^\\\\\\\\\\\\/]*)\" : \"([^\\\\\\\\\\\\/]{1})\";\n        });\n    }, !!ignoreCase, fullMatch);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGetLazy(cb, defValue) {\n    return getLazy(function () {\n        var result = safe(cb);\n        return result.e ? defValue : result.v;\n    });\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _checkLength(value, props) {\n    var result;\n    arrForEach(props, function (prop) {\n        if (prop in value) {\n            var propValue = value[prop];\n            result = (isFunction(propValue) ? propValue() : propValue) > 0;\n            return -1;\n        }\n    });\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _hasValue(value, depth) {\n    var result = value === false || value === 0;\n    if (!result && !isNullOrUndefined(value)) {\n        if (isArray(value)) {\n            result = value[LENGTH] > 0;\n        }\n        else if (isDate(value)) {\n            result = !isNaN(value.getTime());\n        }\n        else if (isBoolean(value)) {\n            return true;\n        }\n        else if (isObject(value)) {\n            try {\n                var chkValue = _checkLength(value, [LENGTH, \"byteLength\", \"size\", \"count\"]);\n                if (isBoolean(chkValue)) {\n                    return chkValue;\n                }\n                if (isFunction(value.valueOf) && depth < 5) {\n                    return _hasValue(value.valueOf(), ++depth);\n                }\n            }\n            catch (e) {\n            }\n            return !!objKeys(value)[LENGTH];\n        }\n        else {\n            result = isTruthy(value);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasValue(value) {\n    return _hasValue(value, 0);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterable(ctx) {\n    return makeIterable({}, ctx);\n}\nfunction makeIterable(target, ctx) {\n    var itSymbol = getKnownSymbol(3 );\n    function _createIterator() {\n        return createIterator(ctx);\n    }\n    target[itSymbol] = _createIterator;\n    return target;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterator(ctx) {\n    var isDone = false;\n    function _value() {\n        return ctx.v;\n    }\n    function _next() {\n        if (!isDone) {\n            isDone = (ctx.n ? ctx.n(arguments) : true);\n        }\n        var result = {\n            done: isDone\n        };\n        if (!isDone) {\n            objDefine(result, \"value\", { g: _value });\n        }\n        return result;\n    }\n    function _return(value) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.r && ctx.r(value)\n        };\n    }\n    function _throw(e) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.t && ctx.t(e)\n        };\n    }\n    var theIterator = {\n        next: _next\n    };\n    if (ctx.r) {\n        theIterator.return = _return;\n    }\n    if (ctx.t) {\n        theIterator.throw = _throw;\n    }\n    return theIterator;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createArrayIterator(values) {\n    var idx = -1;\n    var theValues = values ? values.slice() : [];\n    var len = theValues[LENGTH];\n    function _value() {\n        if (idx >= 0 && idx < len) {\n            return theValues[idx];\n        }\n    }\n    function _getNext() {\n        idx++;\n        return idx >= len;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createRangeIterator(start, end, step) {\n    var nextValue = start;\n    var theValue = UNDEF_VALUE;\n    if (isNullOrUndefined(end)) {\n        end = start;\n    }\n    var theStep = step;\n    if (!theStep) {\n        theStep = (start <= end) ? 1 : -1;\n    }\n    function _value() {\n        return theValue;\n    }\n    function _getNext() {\n        var isDone = (theStep > 0) ? (nextValue > end) : (nextValue < end);\n        if (!isDone) {\n            theValue = nextValue;\n            nextValue += theStep;\n        }\n        return isDone;\n    }\n    return createIterator(objDefine({\n        n: _getNext\n    }, \"v\", { g: _value }));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSymSplit(value, splitter, limit) {\n    var splitFn = splitter ? splitter[getKnownSymbol(9 )] : UNDEF_VALUE;\n    return splitFn ? splitFn(value, limit) : [value];\n}\n\nvar strSplit = ( /*#__PURE__*/_unwrapFunction(\"split\", StrProto));\nvar strSymSplit = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"split\", StrProto, !hasSymbol() ? polyStrSymSplit : NULL_VALUE));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByKey(target, path, defValue) {\n    if (!path || !target) {\n        return defValue;\n    }\n    var parts = strSplit(path, \".\");\n    var cnt = parts.length;\n    for (var lp = 0; lp < cnt && !isNullOrUndefined(target); lp++) {\n        target = target[parts[lp]];\n    }\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByIter(target, iter, defValue) {\n    if (!iter || !target) {\n        return defValue;\n    }\n    iterForOf(iter, function (value) {\n        if (isNullOrUndefined(target)) {\n            return -1;\n        }\n        target = target[value];\n    });\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\nfunction setValueByKey(target, path, value) {\n    if (target && path) {\n        var parts = strSplit(path, \".\");\n        var lastKey = parts.pop();\n        arrForEach(parts, function (key) {\n            if (isNullOrUndefined(target[key])) {\n                target[key] = {};\n            }\n            target = target[key];\n        });\n        target[lastKey] = value;\n    }\n}\nfunction setValueByIter(target, iter, value) {\n    if (target && iter) {\n        var lastKey_1;\n        iterForOf(iter, function (key) {\n            if (lastKey_1) {\n                if (isNullOrUndefined(target[lastKey_1])) {\n                    target[lastKey_1] = {};\n                }\n                target = target[lastKey_1];\n            }\n            lastKey_1 = key;\n        });\n        target[lastKey_1] = value;\n    }\n}\n\nvar strEndsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"endsWith\", StrProto, polyStrEndsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrEndsWith(value, searchString, length) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var end = (!isUndefined(length) && length < value[LENGTH]) ? length : value[LENGTH];\n    return strSubstring(value, end - searchValue[LENGTH], end) === searchValue;\n}\n\nvar strIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", StrProto));\nvar strLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", StrProto));\n\nvar strIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", StrProto, polyStrIncludes));\nvar strContains = ( /*#__PURE__*/_pureAssign(strIncludes));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrIncludes(value, searchString, position) {\n    if (isRegExp(searchString)) {\n        throwTypeError(\"'searchString' must not be a regular expression\" + dumpObj(searchString));\n    }\n    return strIndexOf(value, asString(searchString), position) !== -1;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrWhiteSpace(value) {\n    if (isString(value)) {\n        return value.replace(/[\\s\\t\\r\\n\\f]+/g, EMPTY) === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrEmpty(value) {\n    if (isString(value)) {\n        return value === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n\nvar strStartsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"startsWith\", StrProto, polyStrStartsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrStartsWith(value, searchString, position) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var pos = position > 0 ? position : 0;\n    return strSubstring(value, pos, pos + searchValue[LENGTH]) === searchValue;\n}\n\nvar REF = \"ref\";\nvar UNREF = \"unref\";\nvar HAS_REF = \"hasRef\";\nvar ENABLED = \"enabled\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTimerHandler(startTimer, refreshFn, cancelFn) {\n    var ref = true;\n    var timerId = startTimer ? refreshFn(NULL_VALUE) : NULL_VALUE;\n    var theTimerHandler;\n    function _unref() {\n        ref = false;\n        timerId && timerId[UNREF] && timerId[UNREF]();\n        return theTimerHandler;\n    }\n    function _cancel() {\n        timerId && cancelFn(timerId);\n        timerId = NULL_VALUE;\n    }\n    function _refresh() {\n        timerId = refreshFn(timerId);\n        if (!ref) {\n            _unref();\n        }\n        return theTimerHandler;\n    }\n    function _setEnabled(value) {\n        !value && timerId && _cancel();\n        value && !timerId && _refresh();\n    }\n    theTimerHandler = {\n        cancel: _cancel,\n        refresh: _refresh\n    };\n    theTimerHandler[HAS_REF] = function () {\n        if (timerId && timerId[HAS_REF]) {\n            return timerId[HAS_REF]();\n        }\n        return ref;\n    };\n    theTimerHandler[REF] = function () {\n        ref = true;\n        timerId && timerId[REF] && timerId[REF]();\n        return theTimerHandler;\n    };\n    theTimerHandler[UNREF] = _unref;\n    theTimerHandler = objDefineProp(theTimerHandler, ENABLED, {\n        get: function () { return !!timerId; },\n        set: _setEnabled\n    });\n    return {\n        h: theTimerHandler,\n        dn: function () {\n            timerId = NULL_VALUE;\n        }\n    };\n}\n\nfunction _createTimeoutWith(startTimer, overrideFn, theArgs) {\n    var isArr = isArray(overrideFn);\n    var len = isArr ? overrideFn.length : 0;\n    var setFn = (len > 0 ? overrideFn[0] : (!isArr ? overrideFn : UNDEF_VALUE)) || setTimeout;\n    var clearFn = (len > 1 ? overrideFn[1] : UNDEF_VALUE) || clearTimeout;\n    var timerFn = theArgs[0];\n    theArgs[0] = function () {\n        handler.dn();\n        fnApply(timerFn, UNDEF_VALUE, ArrSlice[CALL](arguments));\n    };\n    var handler = _createTimerHandler(startTimer, function (timerId) {\n        if (timerId) {\n            if (timerId.refresh) {\n                timerId.refresh();\n                return timerId;\n            }\n            fnApply(clearFn, UNDEF_VALUE, [timerId]);\n        }\n        return fnApply(setFn, UNDEF_VALUE, theArgs);\n    }, function (timerId) {\n        fnApply(clearFn, UNDEF_VALUE, [timerId]);\n    });\n    return handler.h;\n}\nfunction scheduleTimeout(callback, timeout) {\n    return _createTimeoutWith(true, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction scheduleTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(true, overrideFn, ArrSlice[CALL](arguments, 1));\n}\nfunction createTimeout(callback, timeout) {\n    return _createTimeoutWith(false, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction createTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(false, overrideFn, ArrSlice[CALL](arguments, 1));\n}\n\nvar _defaultIdleTimeout = 100;\nvar _maxExecutionTime = 50;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasIdleCallback() {\n    return !!( /*#__PURE__*/getIdleCallback());\n}\nvar getIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"requestIdleCallback\"]));\nvar getCancelIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"cancelIdleCallback\"]));\nfunction setDefaultIdleTimeout(timeout) {\n    _defaultIdleTimeout = timeout;\n}\nfunction setDefaultMaxExecutionTime(maxTime) {\n    _maxExecutionTime = maxTime;\n}\nfunction scheduleIdleCallback(callback, options) {\n    function _createDeadline(timedOut) {\n        var startTime = perfNow();\n        return {\n            didTimeout: timedOut,\n            timeRemaining: function () {\n                return _maxExecutionTime - elapsedTime(startTime);\n            }\n        };\n    }\n    if (hasIdleCallback()) {\n        var handler_1 = _createTimerHandler(true, function (idleId) {\n            idleId && getCancelIdleCallback()(idleId);\n            return getIdleCallback()(function (deadline) {\n                handler_1.dn();\n                callback(deadline || _createDeadline(false));\n            }, options);\n        }, function (idleId) {\n            getCancelIdleCallback()(idleId);\n        });\n        return handler_1.h;\n    }\n    var timeout = (options || {}).timeout;\n    if (isUndefined(timeout)) {\n        timeout = _defaultIdleTimeout;\n    }\n    return scheduleTimeout(function () {\n        callback(_createDeadline(true));\n    }, timeout);\n}\n\nfunction scheduleInterval(callback, timeout) {\n    var theArguments = ArrSlice[CALL](arguments);\n    var handler = _createTimerHandler(true, function (intervalId) {\n        intervalId && clearInterval(intervalId);\n        return fnApply(setInterval, UNDEF_VALUE, theArguments);\n    }, function (intervalId) {\n        fnApply(clearInterval, UNDEF_VALUE, [intervalId]);\n    });\n    return handler.h;\n}\n\nexport { arrAppend, arrContains, arrEvery, arrFilter, arrFind, arrFindIndex, arrFindLast, arrFindLastIndex, arrForEach, arrFrom, arrIncludes, arrIndexOf, arrLastIndexOf, arrMap, arrReduce, arrSlice, arrSome, arrayDeepCopyHandler, asString, createArrayIterator, createCachedValue, createCustomError, createDeferredCachedValue, createEnum, createEnumKeyMap, createEnumValueMap, createFilenameRegex, createFnDeferredProxy, createIterable, createIterator, createProxyFuncs, createRangeIterator, createSimpleMap, createTimeout, createTimeoutWith, createTypeMap, createWildcardRegex, dateDeepCopyHandler, deepExtend, dumpObj, elapsedTime, encodeAsHtml, encodeAsJson, fnApply, fnBind, fnCall, functionDeepCopyHandler, getCancelIdleCallback, getDocument, getGlobal, getHistory, getIdleCallback, getInst, getIntValue, getKnownSymbol, getLazy, getLength, getNavigator, getPerformance, getSymbol, getValueByIter, getValueByKey, getWindow, hasDocument, hasHistory, hasIdleCallback, hasNavigator, hasPerformance, hasSymbol, hasValue, hasWindow, isArray, isArrayBuffer, isBlob, isBoolean, isDate, isDefined, isError, isFile, isFormData, isFunction, isIterable, isIterator, isNode, isNotTruthy, isNullOrUndefined, isNumber, isObject, isPlainObject, isPrimitive, isPrimitiveType, isPromise, isPromiseLike, isRegExp, isStrictNullOrUndefined, isStrictUndefined, isString, isSymbol, isThenable, isTruthy, isTypeof, isUndefined, isWebWorker, iterForOf, lazySafeGetInst, makeGlobRegex, makeIterable, mathCeil, mathFloor, mathMax, mathMin, mathToInt, mathTrunc, newSymbol, normalizeJsName, objAssign, objCopyProps, objCreate, objDeepCopy, objDeepFreeze, objDefine, objDefineAccessors, objDefineGet, objDefineProp, objDefineProperties, objDefineProps, objEntries, objExtend, objForEachKey, objFreeze, objGetOwnPropertyDescriptor, objGetPrototypeOf, objHasOwn, objHasOwnProperty, objKeys, objSeal, objSetPrototypeOf, objToString, perfNow, plainObjDeepCopyHandler, polyArrFind, polyArrFindIndex, polyArrFindLast, polyArrFindLastIndex, polyArrFrom, polyArrIncludes, polyGetKnownSymbol, polyIsArray, polyNewSymbol, polyObjEntries, polyObjHasOwn, polyObjKeys, polyStrIncludes, polyStrSubstr, polyStrSymSplit, polyStrTrim, polyStrTrimEnd, polyStrTrimStart, polySymbolFor, polySymbolKeyFor, polyUtcNow, readArgs, safe, safeGet, safeGetLazy, scheduleIdleCallback, scheduleInterval, scheduleTimeout, scheduleTimeoutWith, setBypassLazyCache, setDefaultIdleTimeout, setDefaultMaxExecutionTime, setValueByIter, setValueByKey, strCamelCase, strContains, strEndsWith, strIncludes, strIndexOf, strIsNullOrEmpty, strIsNullOrWhiteSpace, strKebabCase, strLastIndexOf, strLeft, strLetterCase, strLower, strPadEnd, strPadStart, strRepeat, strRight, strSlice, strSnakeCase, strSplit, strStartsWith, strSubstr, strSubstring, strSymSplit, strTrim, strTrimEnd, strTrimLeft, strTrimRight, strTrimStart, strUpper, symbolFor, symbolKeyFor, throwError, throwRangeError, throwTypeError, throwUnsupported, utcNow };\n//# sourceMappingURL=ts-utils.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, isFunction } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_INITIALIZE, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_SPAN_ID, _DYN_TEARDOWN, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { createElmNodeData } from \"./DataCacheHelper\";\r\nimport { STR_CORE, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { isValidSpanId, isValidTraceId } from \"./W3cTraceParent\";\r\nvar pluginStateData = createElmNodeData(\"plugin\");\r\nexport function _getPluginState(plugin) {\r\n    return pluginStateData.get(plugin, \"state\", {}, true);\r\n}\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config - The current config for the instance\r\n * @param core - THe current core instance\r\n * @param extensions - The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    var pluginState;\r\n    while (proxy) {\r\n        var thePlugin = proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n        if (thePlugin) {\r\n            if (lastPlugin && lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] && thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](thePlugin);\r\n            }\r\n            pluginState = _getPluginState(thePlugin);\r\n            var isInitialized = !!pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */];\r\n            if (thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]) {\r\n                isInitialized = thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]();\r\n            }\r\n            if (!isInitialized) {\r\n                initPlugins[_DYN_PUSH /* @min:%2epush */](thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n        }\r\n    }\r\n    // Now initialize the plugins\r\n    arrForEach(initPlugins, function (thePlugin) {\r\n        var core = processContext[STR_CORE /* @min:%2ecore */]();\r\n        thePlugin[_DYN_INITIALIZE /* @min:%2einitialize */](processContext.getCfg(), core, extensions, processContext[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n        pluginState = _getPluginState(thePlugin);\r\n        // Only add the core to the state if the plugin didn't set it (doesn't extend from BaseTelemetryPlugin)\r\n        if (!thePlugin[STR_CORE] && !pluginState[STR_CORE]) {\r\n            pluginState[STR_CORE] = core;\r\n        }\r\n        pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = true;\r\n        delete pluginState[_DYN_TEARDOWN /* @min:%2eteardown */];\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        if (extB) {\r\n            var bHasProcess = extB[STR_PROCESS_TELEMETRY];\r\n            if (extA[STR_PROCESS_TELEMETRY]) {\r\n                result = bHasProcess ? extA[STR_PRIORITY] - extB[STR_PRIORITY] : 1;\r\n            }\r\n            else if (bHasProcess) {\r\n                result = -1;\r\n            }\r\n        }\r\n        else {\r\n            result = extA ? 1 : -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete\r\n}\r\n/**\r\n * Teardown / Unload helper to perform teardown/unloading operations for the provided components synchronously or asynchronously, this will call any\r\n * _doTeardown() or _doUnload() functions on the provided components to allow them to finish removal.\r\n * @param components - The components you want to unload\r\n * @param unloadCtx - This is the context that should be used during unloading.\r\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\r\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async unload/teardown operations.\r\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\r\n */\r\nexport function unloadComponents(components, unloadCtx, unloadState, asyncCallback) {\r\n    var idx = 0;\r\n    function _doUnload() {\r\n        while (idx < components[_DYN_LENGTH /* @min:%2elength */]) {\r\n            var component = components[idx++];\r\n            if (component) {\r\n                var func = component._doUnload || component[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */];\r\n                if (isFunction(func)) {\r\n                    if (func.call(component, unloadCtx, unloadState, _doUnload) === true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return _doUnload();\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext which optionally also \"sets\" the value on a parent\r\n * @param parentCtx - An optional parent distributed trace instance\r\n * @returns A new IDistributedTraceContext instance that uses an internal temporary object\r\n */\r\nexport function createDistributedTraceContext(parentCtx) {\r\n    var trace = {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace[_DYN_TRACE_ID /* @min:%2etraceId */];\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace[_DYN_TRACE_ID /* @min:%2etraceId */] = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace[_DYN_SPAN_ID /* @min:%2espanId */];\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace[_DYN_SPAN_ID /* @min:%2espanId */] = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { getGlobal, objAssign, objCreate, objDefineProp, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { ObjClass, ObjProto, strDefault, strShimFunction, strShimPrototype } from \"./Constants\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES5 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nvar strHasOwnProperty = \"hasOwnProperty\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = objAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) {\r\n            d.__proto__ = b;\r\n        }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() {\r\n        this.constructor = d;\r\n    }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreate(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (objHasOwnProperty(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && objDefineProp(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !objHasOwnProperty(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (!!objDefineProp) {\r\n        objDefineProp(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (objDefineProp) {\r\n        objDefineProp(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (!!objDefineProp) {\r\n        objDefineProp(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nexport function createUnloadHandlerContainer() {\r\n    var handlers = [];\r\n    function _addHandler(handler) {\r\n        if (handler) {\r\n            handlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n        }\r\n    }\r\n    function _runHandlers(unloadCtx, unloadState) {\r\n        arrForEach(handlers, function (handler) {\r\n            try {\r\n                handler(unloadCtx, unloadState);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\r\n            }\r\n        });\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add: _addHandler,\r\n        run: _runHandlers\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHandlerContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, dumpObj, getNavigator, getWindow, isFunction, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DATA, _DYN_HEADERS, _DYN_INITIALIZE, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PROTOCOL, _DYN_REPLACE, _DYN_SEND_POST, _DYN_SET_REQUEST_HEADER, _DYN_STATUS, _DYN_TIMEOUT, _DYN_TO_LOWER_CASE, _DYN_URL_STRING, _DYN_VALUE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { DisabledPropertyName } from \"./Constants\";\r\nimport { _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getLocation, isBeaconsSupported, isFetchSupported, isXhrSupported, useXDomainRequest } from \"./EnvUtils\";\r\nimport { _getAllResponseHeaders, formatErrorMessageXdr, formatErrorMessageXhr, getResponseText, openXhr } from \"./HelperFuncs\";\r\nvar STR_EMPTY = \"\";\r\nvar STR_NO_RESPONSE_BODY = \"NoResponseBody\";\r\nvar _noResponseQs = \"&\" + STR_NO_RESPONSE_BODY + \"=true\";\r\nvar STR_POST_METHOD = \"POST\";\r\n/**\r\n * This Internal component\r\n * Manager SendPost functions\r\n * SendPostManger\r\n * @internal for internal use only\r\n */\r\nvar SenderPostManager = /** @class */ (function () {\r\n    function SenderPostManager() {\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _enableSendPromise;\r\n        var _isInitialized;\r\n        var _diagLog;\r\n        var _isOneDs;\r\n        var _onCompleteFuncs;\r\n        var _disableCredentials;\r\n        var _fetchCredentials;\r\n        var _fallbackInst;\r\n        var _disableXhr;\r\n        var _disableBeacon;\r\n        var _disableBeaconSync;\r\n        var _disableFetchKeepAlive;\r\n        var _addNoResponse;\r\n        var _timeoutWrapper;\r\n        dynamicProto(SenderPostManager, this, function (_self, _base) {\r\n            var _sendCredentials = true; // for 1ds\r\n            _initDefaults();\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, diagLog) {\r\n                _diagLog = diagLog;\r\n                if (_isInitialized) {\r\n                    _throwInternal(_diagLog, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _self.SetConfig(config);\r\n                _isInitialized = true;\r\n            };\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_isInitialized, _isOneDs, _disableCredentials, _enableSendPromise];\r\n            };\r\n            // This componet might get its config from sender, offline sender, 1ds post\r\n            // so set this function to mock dynamic changes\r\n            _self.SetConfig = function (config) {\r\n                try {\r\n                    _onCompleteFuncs = config.senderOnCompleteCallBack || {};\r\n                    _disableCredentials = !!config.disableCredentials;\r\n                    _fetchCredentials = config.fetchCredentials;\r\n                    _isOneDs = !!config.isOneDs;\r\n                    _enableSendPromise = !!config.enableSendPromise;\r\n                    _disableXhr = !!config.disableXhr;\r\n                    _disableBeacon = !!config.disableBeacon;\r\n                    _disableBeaconSync = !!config.disableBeaconSync;\r\n                    _timeoutWrapper = config.timeWrapper;\r\n                    _addNoResponse = !!config.addNoResponse;\r\n                    _disableFetchKeepAlive = !!config.disableFetchKeepAlive;\r\n                    _fallbackInst = { sendPOST: _xhrSender };\r\n                    if (!_isOneDs) {\r\n                        _sendCredentials = false; // for appInsights, set it to false always\r\n                    }\r\n                    if (_disableCredentials) {\r\n                        var location_1 = getLocation();\r\n                        if (location_1 && location_1.protocol && location_1.protocol[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"file:\") {\r\n                            // Special case where a local html file fails with a CORS error on Chromium browsers\r\n                            _sendCredentials = false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            };\r\n            _self.getSyncFetchPayload = function () {\r\n                return _syncFetchPayload;\r\n            };\r\n            _self.getSenderInst = function (transports, sync) {\r\n                if (transports && transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    return _getSenderInterface(transports, sync);\r\n                }\r\n                return null;\r\n            };\r\n            _self.getFallbackInst = function () {\r\n                return _fallbackInst;\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function (unloadCtx, unloadState) {\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(res, onComplete) {\r\n                _doOnComplete(onComplete, 200, {}, res);\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(message, onComplete) {\r\n                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _doOnComplete(onComplete, 400, {});\r\n            }\r\n            function _onNoPayloadUrl(onComplete) {\r\n                _onError(\"No endpoint url is provided for the batch\", onComplete);\r\n            }\r\n            function _getSenderInterface(transports, syncSupport) {\r\n                var _a;\r\n                var transportType = 0 /* TransportType.NotSet */;\r\n                var sendPostFunc = null;\r\n                var lp = 0;\r\n                while (sendPostFunc == null && lp < transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    transportType = transports[lp];\r\n                    if (!_disableXhr && transportType === 1 /* TransportType.Xhr */) {\r\n                        if (useXDomainRequest()) {\r\n                            // IE 8 and 9\r\n                            sendPostFunc = _xdrSender;\r\n                        }\r\n                        else if (isXhrSupported()) {\r\n                            sendPostFunc = _xhrSender;\r\n                        }\r\n                    }\r\n                    else if (transportType === 2 /* TransportType.Fetch */ && isFetchSupported(syncSupport) && (!syncSupport || !_disableFetchKeepAlive)) {\r\n                        sendPostFunc = _doFetchSender;\r\n                    }\r\n                    else if (transportType === 3 /* TransportType.Beacon */ && isBeaconsSupported() && (syncSupport ? !_disableBeaconSync : !_disableBeacon)) {\r\n                        sendPostFunc = _beaconSender;\r\n                    }\r\n                    lp++;\r\n                }\r\n                if (sendPostFunc) {\r\n                    return _a = {\r\n                            _transport: transportType,\r\n                            _isSync: syncSupport\r\n                        },\r\n                        _a[_DYN_SEND_POST /* @min:sendPOST */] = sendPostFunc,\r\n                        _a;\r\n                }\r\n                return null;\r\n            }\r\n            function _doOnComplete(oncomplete, status, headers, response) {\r\n                try {\r\n                    oncomplete && oncomplete(status, headers, response);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _doBeaconSend(payload, oncomplete) {\r\n                var nav = getNavigator();\r\n                var url = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!url) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    // return true here, because we don't want to retry it with fallback sender\r\n                    return true;\r\n                }\r\n                url = payload[_DYN_URL_STRING /* @min:%2eurlString */] + (_addNoResponse ? _noResponseQs : STR_EMPTY);\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                var plainTextBatch = _isOneDs ? data : new Blob([data], { type: \"text/plain;charset=UTF-8\" });\r\n                // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                var queued = nav.sendBeacon(url, plainTextBatch);\r\n                return queued;\r\n            }\r\n            /**\r\n             * Send Beacon API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - not used\r\n             * Note: Beacon API does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _beaconSender(payload, oncomplete, sync) {\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                try {\r\n                    if (data) {\r\n                        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                        if (!_doBeaconSend(payload, oncomplete)) {\r\n                            var onRetry = _onCompleteFuncs && _onCompleteFuncs.beaconOnRetry;\r\n                            if (onRetry && isFunction(onRetry)) {\r\n                                onRetry(payload, oncomplete, _doBeaconSend);\r\n                            }\r\n                            else {\r\n                                _fallbackInst && _fallbackInst[_DYN_SEND_POST /* @min:%2esendPOST */](payload, oncomplete, true);\r\n                                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            // if can send\r\n                            _onSuccess(STR_EMPTY, oncomplete);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _isOneDs && _warnToConsole(_diagLog, \"Failed to send telemetry using sendBeacon API. Ex:\" + dumpObj(e));\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, STR_EMPTY);\r\n                }\r\n                return;\r\n            }\r\n            /**\r\n             * Send XMLHttpRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             */\r\n            function _xhrSender(payload, oncomplete, sync) {\r\n                //let  internalPayload = payload as IInternalPayloadData;\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (_isOneDs && sync && payload.disableXhrSync) {\r\n                    sync = false;\r\n                }\r\n                //const xhr = new XMLHttpRequest();\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                var xhr = openXhr(STR_POST_METHOD, endPointUrl, _sendCredentials, true, sync, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                if (!_isOneDs) {\r\n                    // application/json should NOT add to 1ds post by default\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](\"Content-type\", \"application/json\");\r\n                }\r\n                arrForEach(objKeys(headers), function (headerName) {\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](headerName, headers[headerName]);\r\n                });\r\n                xhr.onreadystatechange = function () {\r\n                    if (!_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                        if (xhr.readyState === 4) {\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }\r\n                };\r\n                xhr.onload = function () {\r\n                    if (_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                    }\r\n                };\r\n                function _doOnReadyFunc(xhr) {\r\n                    var onReadyFunc = _onCompleteFuncs && _onCompleteFuncs.xhrOnComplete;\r\n                    var onReadyFuncExist = onReadyFunc && isFunction(onReadyFunc);\r\n                    if (onReadyFuncExist) {\r\n                        onReadyFunc(xhr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        var response = getResponseText(xhr);\r\n                        _doOnComplete(oncomplete, xhr[_DYN_STATUS /* @min:%2estatus */], _getAllResponseHeaders(xhr, _isOneDs), response);\r\n                    }\r\n                }\r\n                xhr.onerror = function (event) {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 400, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    rejectFunc && rejectFunc(event);\r\n                };\r\n                xhr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 500, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    resolveFunc && resolveFunc(false);\r\n                };\r\n                xhr.send(payload[_DYN_DATA /* @min:%2edata */]);\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send fetch API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - For fetch this identifies whether we are \"unloading\" (false) or a normal request\r\n             */\r\n            function _doFetchSender(payload, oncomplete, sync) {\r\n                var _a;\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                var batch = payload[_DYN_DATA /* @min:%2edata */];\r\n                var plainTextBatch = _isOneDs ? batch : new Blob([batch], { type: \"application/json\" });\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var requestHeaders = new Headers();\r\n                var batchLength = batch[_DYN_LENGTH /* @min:%2elength */];\r\n                var ignoreResponse = false;\r\n                var responseHandled = false;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                //TODO: handle time out for 1ds\r\n                var init = (_a = {\r\n                        method: STR_POST_METHOD,\r\n                        body: plainTextBatch\r\n                    },\r\n                    _a[DisabledPropertyName] = true // Mark so we don't attempt to track this request\r\n                ,\r\n                    _a);\r\n                // Only add headers if there are headers to add, due to issue with some polyfills\r\n                if (payload.headers && objKeys(payload.headers)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(objKeys(headers), function (headerName) {\r\n                        requestHeaders.append(headerName, headers[headerName]);\r\n                    });\r\n                    init[_DYN_HEADERS /* @min:%2eheaders */] = requestHeaders;\r\n                }\r\n                if (_fetchCredentials) { // if user passed in this value via post channel (1ds), then use it\r\n                    init.credentials = _fetchCredentials;\r\n                }\r\n                else if (_sendCredentials && _isOneDs) {\r\n                    // for 1ds, Don't send credentials when URL is file://\r\n                    init.credentials = \"include\";\r\n                }\r\n                if (sync) {\r\n                    init.keepalive = true;\r\n                    _syncFetchPayload += batchLength;\r\n                    if (_isOneDs) {\r\n                        if (payload[\"_sendReason\"] === 2 /* SendRequestReason.Unload */) {\r\n                            // As a sync request (during unload), it is unlikely that we will get a chance to process the response so\r\n                            // just like beacon send assume that the events have been accepted and processed\r\n                            ignoreResponse = true;\r\n                            if (_addNoResponse) {\r\n                                endPointUrl += _noResponseQs;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // for appinsights, set to true for all sync request\r\n                        ignoreResponse = true;\r\n                    }\r\n                }\r\n                var request = new Request(endPointUrl, init);\r\n                try {\r\n                    // Also try and tag the request (just in case the value in init is not copied over)\r\n                    request[DisabledPropertyName] = true;\r\n                }\r\n                catch (e) {\r\n                    // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n                    // cause the request to fail and we no telemetry would be sent\r\n                }\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                function _handleError(res) {\r\n                    // In case there is an error in the request. Set the status to 0 for 1ds and 400 for appInsights\r\n                    // so that the events can be retried later.\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, _isOneDs ? STR_EMPTY : res);\r\n                }\r\n                function _onFetchComplete(response, payload, value) {\r\n                    var status = response[_DYN_STATUS /* @min:%2estatus */];\r\n                    var onCompleteFunc = _onCompleteFuncs.fetchOnComplete;\r\n                    if (onCompleteFunc && isFunction(onCompleteFunc)) {\r\n                        onCompleteFunc(response, oncomplete, value || STR_EMPTY, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, status, {}, value || STR_EMPTY);\r\n                    }\r\n                }\r\n                try {\r\n                    doAwaitResponse(fetch(_isOneDs ? endPointUrl : request, _isOneDs ? init : null), function (result) {\r\n                        if (sync) {\r\n                            _syncFetchPayload -= batchLength;\r\n                            batchLength = 0;\r\n                        }\r\n                        if (!responseHandled) {\r\n                            responseHandled = true;\r\n                            if (!result.rejected) {\r\n                                var response_1 = result[_DYN_VALUE /* @min:%2evalue */];\r\n                                try {\r\n                                    /**\r\n                                     * The Promise returned from fetch() won’t reject on HTTP error status even if the response is an HTTP 404 or 500.\r\n                                     * Instead, it will resolve normally (with ok status set to false), and it will only reject on network failure\r\n                                     * or if anything prevented the request from completing.\r\n                                     */\r\n                                    if (!_isOneDs && !response_1.ok) {\r\n                                        // this is for appInsights only\r\n                                        _handleError(response_1.statusText);\r\n                                        resolveFunc && resolveFunc(false);\r\n                                    }\r\n                                    else {\r\n                                        if (_isOneDs && !response_1.body) {\r\n                                            _onFetchComplete(response_1, null, STR_EMPTY);\r\n                                            resolveFunc && resolveFunc(true);\r\n                                        }\r\n                                        else {\r\n                                            doAwaitResponse(response_1.text(), function (resp) {\r\n                                                _onFetchComplete(response_1, payload, resp[_DYN_VALUE /* @min:%2evalue */]);\r\n                                                resolveFunc && resolveFunc(true);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                                catch (e) {\r\n                                    _handleError(dumpObj(e));\r\n                                    rejectFunc && rejectFunc(e);\r\n                                }\r\n                            }\r\n                            else {\r\n                                _handleError(result.reason && result.reason[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                rejectFunc && rejectFunc(result.reason);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    if (!responseHandled) {\r\n                        _handleError(dumpObj(e));\r\n                        rejectFunc && rejectFunc(e);\r\n                    }\r\n                }\r\n                if (ignoreResponse && !responseHandled) {\r\n                    // Assume success during unload processing as we most likely won't get the response\r\n                    responseHandled = true;\r\n                    _doOnComplete(oncomplete, 200, {});\r\n                    resolveFunc && resolveFunc(true);\r\n                }\r\n                if (_isOneDs && !responseHandled && payload[_DYN_TIMEOUT /* @min:%2etimeout */] > 0) {\r\n                    // Simulate timeout\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        if (!responseHandled) {\r\n                            // Assume a 500 response (which will cause a retry)\r\n                            responseHandled = true;\r\n                            _doOnComplete(oncomplete, 500, {});\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                }\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send XDomainRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             *\r\n             * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n             * to maintain consistency with the xhrSender's contract\r\n             * Note: XDomainRequest does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _xdrSender(payload, oncomplete, sync) {\r\n                // It doesn't support custom headers, so no action is taken with current requestHeaders\r\n                var _window = getWindow();\r\n                var xdr = new XDomainRequest();\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                xdr.onload = function () {\r\n                    var response = getResponseText(xdr);\r\n                    var onloadFunc = _onCompleteFuncs && _onCompleteFuncs.xdrOnComplete;\r\n                    if (onloadFunc && isFunction(onloadFunc)) {\r\n                        onloadFunc(xdr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, 200, {}, response);\r\n                    }\r\n                };\r\n                xdr.onerror = function () {\r\n                    _doOnComplete(oncomplete, 400, {}, _isOneDs ? STR_EMPTY : formatErrorMessageXdr(xdr));\r\n                };\r\n                xdr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, 500, {});\r\n                };\r\n                xdr.onprogress = function () { };\r\n                // XDomainRequest requires the same protocol as the hosting page.\r\n                // If the protocol doesn't match, we can't send the telemetry :(.\r\n                var hostingProtocol = _window && _window.location && _window.location[_DYN_PROTOCOL /* @min:%2eprotocol */] || \"\";\r\n                var endpoint = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endpoint) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    return;\r\n                }\r\n                if (!_isOneDs && endpoint.lastIndexOf(hostingProtocol, 0) !== 0) {\r\n                    var msg = \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\";\r\n                    _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + msg);\r\n                    _onError(msg, oncomplete);\r\n                    return;\r\n                }\r\n                var endpointUrl = _isOneDs ? endpoint : endpoint[_DYN_REPLACE /* @min:%2ereplace */](/^(https?:)/, \"\");\r\n                xdr.open(STR_POST_METHOD, endpointUrl);\r\n                if (payload[_DYN_TIMEOUT /* @min:%2etimeout */]) {\r\n                    xdr[_DYN_TIMEOUT /* @min:%2etimeout */] = payload[_DYN_TIMEOUT /* @min:%2etimeout */];\r\n                }\r\n                xdr.send(data);\r\n                if (_isOneDs && sync) {\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        xdr.send(data);\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    xdr.send(data);\r\n                }\r\n            }\r\n            function _initDefaults() {\r\n                _syncFetchPayload = 0;\r\n                _isInitialized = false;\r\n                _enableSendPromise = false;\r\n                _diagLog = null;\r\n                _isOneDs = null;\r\n                _onCompleteFuncs = null;\r\n                _disableCredentials = null;\r\n                _fetchCredentials = null;\r\n                _fallbackInst = null;\r\n                _disableXhr = false;\r\n                _disableBeacon = false;\r\n                _disableBeaconSync = false;\r\n                _disableFetchKeepAlive = false;\r\n                _addNoResponse = false;\r\n                _timeoutWrapper = null;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for SenderPostManager.prototype.initialize.\r\n// Removed Stub for SenderPostManager.prototype.getSyncFetchPayload.\r\n// Removed Stub for SenderPostManager.prototype.SetConfig.\r\n// Removed Stub for SenderPostManager.prototype.getSenderInst.\r\n// Removed Stub for SenderPostManager.prototype.getFallbackInst.\r\n// Removed Stub for SenderPostManager.prototype._doTeardown.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    SenderPostManager.__ieDyn=1;\n\n    return SenderPostManager;\r\n}());\r\nexport { SenderPostManager };\r\n//# sourceMappingURL=SenderPostManager.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nexport default class MergeConflictContentProvider implements vscode.TextDocumentContentProvider, vscode.Disposable {\n\n\tstatic scheme = 'merge-conflict.conflict-diff';\n\n\tconstructor(private context: vscode.ExtensionContext) {\n\t}\n\n\tbegin() {\n\t\tthis.context.subscriptions.push(\n\t\t\tvscode.workspace.registerTextDocumentContentProvider(MergeConflictContentProvider.scheme, this)\n\t\t);\n\t}\n\n\tdispose() {\n\t}\n\n\tasync provideTextDocumentContent(uri: vscode.Uri): Promise<string | null> {\n\t\ttry {\n\t\t\tconst { scheme, ranges } = JSON.parse(uri.query) as { scheme: string; ranges: [{ line: number; character: number }[], { line: number; character: number }[]][] };\n\n\t\t\t// complete diff\n\t\t\tconst document = await vscode.workspace.openTextDocument(uri.with({ scheme, query: '' }));\n\n\t\t\tlet text = '';\n\t\t\tlet lastPosition = new vscode.Position(0, 0);\n\n\t\t\tranges.forEach(rangeObj => {\n\t\t\t\tconst [conflictRange, fullRange] = rangeObj;\n\t\t\t\tconst [start, end] = conflictRange;\n\t\t\t\tconst [fullStart, fullEnd] = fullRange;\n\n\t\t\t\ttext += document.getText(new vscode.Range(lastPosition.line, lastPosition.character, fullStart.line, fullStart.character));\n\t\t\t\ttext += document.getText(new vscode.Range(start.line, start.character, end.line, end.character));\n\t\t\t\tlastPosition = new vscode.Position(fullEnd.line, fullEnd.character);\n\t\t\t});\n\n\t\t\tconst documentEnd = document.lineAt(document.lineCount - 1).range.end;\n\t\t\ttext += document.getText(new vscode.Range(lastPosition.line, lastPosition.character, documentEnd.line, documentEnd.character));\n\n\t\t\treturn text;\n\t\t}\n\t\tcatch (ex) {\n\t\t\tawait vscode.window.showErrorMessage('Unable to show comparison');\n\t\t\treturn null;\n\t\t}\n\t}\n}","/*\n * 1DS JS SDK Core, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_DEFAULT_ENDPOINT_URL = \"https://browser.events.data.microsoft.com/OneCollector/1.0/\";\r\nexport var STR_VERSION = \"version\";\r\nexport var STR_PROPERTIES = \"properties\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * 1DS JS SDK Core, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n* AppInsightsCore.ts\r\n* @author Abhilash Panwar (abpanwar) Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AppInsightsCore as InternalCore, _throwInternal, createDynamicConfig, doPerf, dumpObj, throwError } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDeepFreeze } from \"@nevware21/ts-utils\";\r\nimport { STR_DEFAULT_ENDPOINT_URL, STR_EMPTY, STR_PROPERTIES, STR_VERSION } from \"./InternalConstants\";\r\nimport { FullVersionString, getTime, isLatency } from \"./Utils\";\r\nimport { _DYN_INDEX_OF, _DYN_INITIALIZE, _DYN_LOGGER, _DYN_POLL_INTERNAL_LOGS, _DYN_TIMINGS } from \"./__DynamicConstants\";\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultConfig = objDeepFreeze({\r\n    endpointUrl: STR_DEFAULT_ENDPOINT_URL,\r\n    propertyStorageOverride: { isVal: _chkPropOverride }\r\n});\r\nfunction _chkPropOverride(propertyStorageOverride) {\r\n    // Validate property storage override\r\n    if (propertyStorageOverride && (!propertyStorageOverride.getProperty || !propertyStorageOverride.setProperty)) {\r\n        throwError(\"Invalid property storage override passed.\");\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar AppInsightsCore = /** @class */ (function (_super) {\r\n    __extends(AppInsightsCore, _super);\r\n    function AppInsightsCore() {\r\n        var _this = _super.call(this) || this;\r\n        dynamicProto(AppInsightsCore, _this, function (_self, _base) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, extensions, logger, notificationManager) {\r\n                doPerf(_self, function () { return \"AppInsightsCore.initialize\"; }, function () {\r\n                    try {\r\n                        _base[_DYN_INITIALIZE /* @min:%2einitialize */](createDynamicConfig(config, defaultConfig, logger || _self[_DYN_LOGGER /* @min:%2elogger */], false).cfg, extensions, logger, notificationManager);\r\n                    }\r\n                    catch (e) {\r\n                        var logger_1 = _self[_DYN_LOGGER /* @min:%2elogger */];\r\n                        var message = dumpObj(e);\r\n                        if (message[_DYN_INDEX_OF /* @min:%2eindexOf */](\"channels\") !== -1) {\r\n                            // Add some additional context to the underlying reported error\r\n                            message += \"\\n - Channels must be provided through config.channels only!\";\r\n                        }\r\n                        _throwInternal(logger_1, 1 /* eLoggingSeverity.CRITICAL */, 514 /* _eExtendedInternalMessageId.FailedToInitializeSDK */, \"SDK Initialization Failed - no telemetry will be sent: \" + message);\r\n                    }\r\n                }, function () { return ({ config: config, extensions: extensions, logger: logger, notificationManager: notificationManager }); });\r\n            };\r\n            _self.track = function (item) {\r\n                doPerf(_self, function () { return \"AppInsightsCore.track\"; }, function () {\r\n                    var telemetryItem = item;\r\n                    if (telemetryItem) {\r\n                        telemetryItem[_DYN_TIMINGS /* @min:%2etimings */] = telemetryItem[_DYN_TIMINGS /* @min:%2etimings */] || {};\r\n                        telemetryItem[_DYN_TIMINGS /* @min:%2etimings */].trackStart = getTime();\r\n                        if (!isLatency(telemetryItem.latency)) {\r\n                            telemetryItem.latency = 1 /* EventLatencyValue.Normal */;\r\n                        }\r\n                        var itemExt = telemetryItem.ext = telemetryItem.ext || {};\r\n                        itemExt.sdk = itemExt.sdk || {};\r\n                        itemExt.sdk.ver = FullVersionString;\r\n                        var baseData = telemetryItem.baseData = telemetryItem.baseData || {};\r\n                        baseData[STR_PROPERTIES /* @min:%2eproperties */] = baseData[STR_PROPERTIES /* @min:%2eproperties */] || {};\r\n                        var itemProperties = baseData[STR_PROPERTIES /* @min:%2eproperties */];\r\n                        itemProperties[STR_VERSION] = itemProperties[STR_VERSION] || _self.pluginVersionString || STR_EMPTY;\r\n                    }\r\n                    _base.track(telemetryItem);\r\n                }, function () { return ({ item: item }); }, !(item.sync));\r\n            };\r\n            _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */] = function (eventName) {\r\n                return _base[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */](eventName || \"InternalLog\");\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for AppInsightsCore.prototype.initialize.\r\n// Removed Stub for AppInsightsCore.prototype.track.\r\n// Removed Stub for AppInsightsCore.prototype.pollInternalLogs.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    AppInsightsCore.__ieDyn=1;\n\n    return AppInsightsCore;\r\n}(InternalCore));\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*\n * 1DS JS SDK Core, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Enums.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n* File containing the enums as constants.\r\n*/\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * The ValueKind contains a set of values that specify value kind of the property.\r\n * Either PII (Personal Identifiable Information) or customer content.\r\n */\r\nexport var ValueKind = createEnumStyle({\r\n    NotSet: 0 /* eValueKind.NotSet */,\r\n    Pii_DistinguishedName: 1 /* eValueKind.Pii_DistinguishedName */,\r\n    Pii_GenericData: 2 /* eValueKind.Pii_GenericData */,\r\n    Pii_IPV4Address: 3 /* eValueKind.Pii_IPV4Address */,\r\n    Pii_IPv6Address: 4 /* eValueKind.Pii_IPv6Address */,\r\n    Pii_MailSubject: 5 /* eValueKind.Pii_MailSubject */,\r\n    Pii_PhoneNumber: 6 /* eValueKind.Pii_PhoneNumber */,\r\n    Pii_QueryString: 7 /* eValueKind.Pii_QueryString */,\r\n    Pii_SipAddress: 8 /* eValueKind.Pii_SipAddress */,\r\n    Pii_SmtpAddress: 9 /* eValueKind.Pii_SmtpAddress */,\r\n    Pii_Identity: 10 /* eValueKind.Pii_Identity */,\r\n    Pii_Uri: 11 /* eValueKind.Pii_Uri */,\r\n    Pii_Fqdn: 12 /* eValueKind.Pii_Fqdn */,\r\n    Pii_IPV4AddressLegacy: 13 /* eValueKind.Pii_IPV4AddressLegacy */,\r\n    Pii_IPv6ScrubLastHextets: 14 /* eValueKind.Pii_IPv6ScrubLastHextets */,\r\n    Pii_DropValue: 15 /* eValueKind.Pii_DropValue */,\r\n    CustomerContent_GenericContent: 32 /* eValueKind.CustomerContent_GenericContent */\r\n});\r\n/**\r\n * The EventLatency contains a set of values that specify the latency with which an event is sent.\r\n */\r\nexport var EventLatency = createEnumStyle({\r\n    /**\r\n     * Normal latency.\r\n     */\r\n    Normal: 1 /* EventLatencyValue.Normal */,\r\n    /**\r\n     * Cost deferred latency. At the moment this latency is treated as Normal latency.\r\n     */\r\n    CostDeferred: 2 /* EventLatencyValue.CostDeferred */,\r\n    /**\r\n     * Real time latency.\r\n     */\r\n    RealTime: 3 /* EventLatencyValue.RealTime */,\r\n    /**\r\n     * Bypass normal batching/timing and send as soon as possible, this will still send asynchronously.\r\n     * Added in v3.1.1\r\n     */\r\n    Immediate: 4 /* EventLatencyValue.Immediate */\r\n});\r\n/**\r\n * Enum for property types.\r\n */\r\nexport var EventPropertyType = createEnumStyle({\r\n    Unspecified: 0 /* eEventPropertyType.Unspecified */,\r\n    String: 1 /* eEventPropertyType.String */,\r\n    Int32: 2 /* eEventPropertyType.Int32 */,\r\n    UInt32: 3 /* eEventPropertyType.UInt32 */,\r\n    Int64: 4 /* eEventPropertyType.Int64 */,\r\n    UInt64: 5 /* eEventPropertyType.UInt64 */,\r\n    Double: 6 /* eEventPropertyType.Double */,\r\n    Bool: 7 /* eEventPropertyType.Bool */,\r\n    Guid: 8 /* eEventPropertyType.Guid */,\r\n    DateTime: 9 /* eEventPropertyType.DateTime */\r\n});\r\n/**\r\n * The EventPersistence contains a set of values that specify the event's persistence.\r\n */\r\nexport var EventPersistence = createEnumStyle({\r\n    /**\r\n     * Normal persistence.\r\n     */\r\n    Normal: 1 /* EventPersistenceValue.Normal */,\r\n    /**\r\n     * Critical persistence.\r\n     */\r\n    Critical: 2 /* EventPersistenceValue.Critical */\r\n});\r\nexport var TraceLevel = createEnumStyle({\r\n    NONE: 0 /* eTraceLevel.NONE */,\r\n    ERROR: 1 /* eTraceLevel.ERROR */,\r\n    WARNING: 2 /* eTraceLevel.WARNING */,\r\n    INFORMATION: 3 /* eTraceLevel.INFORMATION */\r\n});\r\n//# sourceMappingURL=Enums.js.map","/*\n * 1DS JS SDK Core, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { isNullOrUndefined, isString, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { arrForEach, arrIncludes, arrIndexOf, getLength } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { getFieldValueType, isValueAssigned, isValueKind } from \"./Utils\";\r\nimport { _DYN_CAN_HANDLE, _DYN_HANDLE_FIELD, _DYN_KIND, _DYN_LENGTH, _DYN_RM_FIELD_SANITIZER, _DYN_RM_SANITIZER, _DYN_VALUE } from \"./__DynamicConstants\";\r\nvar ValueSanitizer = /** @class */ (function () {\r\n    function ValueSanitizer(fieldSanitizerProvider) {\r\n        var _self = this;\r\n        // To aid with performance this is a lookup map to check if the field value sanitizer supports this field\r\n        var _sanitizerMap = {};\r\n        var _sanitizers = [];\r\n        var _fieldSanitizers = [];\r\n        if (fieldSanitizerProvider) {\r\n            _fieldSanitizers.push(fieldSanitizerProvider);\r\n        }\r\n        function _getFieldSanitizer(path, name) {\r\n            var result;\r\n            var fieldLookup = _sanitizerMap[path];\r\n            if (fieldLookup) {\r\n                result = fieldLookup[name];\r\n            }\r\n            if (!result && result !== null) {\r\n                // Null is a valid result indicating that the value sanitizer does not support this field\r\n                if (isString(path) && isString(name)) {\r\n                    if (_fieldSanitizers[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        for (var lp = 0; lp < _fieldSanitizers[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                            if (_fieldSanitizers[lp][_DYN_HANDLE_FIELD /* @min:%2ehandleField */](path, name)) {\r\n                                result = {\r\n                                    canHandle: true,\r\n                                    fieldHandler: _fieldSanitizers[lp]\r\n                                };\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (_sanitizers[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                        // Special use-case where there is no sanitizer to pass on to, so just resolving the field\r\n                        // and returning the resulting value (same as sanitizeProperty())\r\n                        result = {\r\n                            canHandle: true\r\n                        };\r\n                    }\r\n                }\r\n                // We still don't have a handler so lets lookup the providers\r\n                if (!result && result !== null) {\r\n                    // Setting the result to null -- which means we and any contained sanitizers can't handle this field\r\n                    result = null;\r\n                    for (var lp = 0; lp < _sanitizers[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        if (_sanitizers[lp][_DYN_HANDLE_FIELD /* @min:%2ehandleField */](path, name)) {\r\n                            result = {\r\n                                canHandle: true,\r\n                                handler: _sanitizers[lp],\r\n                                fieldHandler: null\r\n                            };\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (!fieldLookup) {\r\n                    fieldLookup = _sanitizerMap[path] = {};\r\n                }\r\n                fieldLookup[name] = result;\r\n            }\r\n            return result;\r\n        }\r\n        _self.clearCache = function () {\r\n            _sanitizerMap = {};\r\n        };\r\n        _self.addSanitizer = function (newSanitizer) {\r\n            if (newSanitizer) {\r\n                if (!arrIncludes(_sanitizers, newSanitizer)) {\r\n                    _sanitizers.push(newSanitizer);\r\n                }\r\n                // Invalidate any previously mapped fields\r\n                _sanitizerMap = {};\r\n            }\r\n        };\r\n        _self.addFieldSanitizer = function (fieldSanitizer) {\r\n            if (fieldSanitizer) {\r\n                if (!arrIncludes(_fieldSanitizers, fieldSanitizer)) {\r\n                    _fieldSanitizers.push(fieldSanitizer);\r\n                }\r\n                // Invalidate any previously mapped fields\r\n                _sanitizerMap = {};\r\n            }\r\n        };\r\n        _self[_DYN_RM_SANITIZER /* @min:%2ermSanitizer */] = function (theSanitizer) {\r\n            if (theSanitizer) {\r\n                var idx = arrIndexOf(_sanitizers, theSanitizer);\r\n                if (idx !== -1) {\r\n                    _sanitizers.splice(idx, 1);\r\n                    // Invalidate any previously mapped fields\r\n                    _sanitizerMap = {};\r\n                }\r\n                // Try and remove the sanitizer from any chained sanitizer as well\r\n                arrForEach(_sanitizers, function (sanitizer) {\r\n                    sanitizer && sanitizer[_DYN_RM_SANITIZER /* @min:%2ermSanitizer */] && sanitizer[_DYN_RM_SANITIZER /* @min:%2ermSanitizer */](theSanitizer);\r\n                });\r\n            }\r\n        };\r\n        _self[_DYN_RM_FIELD_SANITIZER /* @min:%2ermFieldSanitizer */] = function (theFieldSanitizer) {\r\n            if (theFieldSanitizer) {\r\n                var idx = arrIndexOf(_fieldSanitizers, theFieldSanitizer);\r\n                if (idx !== -1) {\r\n                    _fieldSanitizers.splice(idx, 1);\r\n                    // Invalidate any previously mapped fields\r\n                    _sanitizerMap = {};\r\n                }\r\n                // Try and remove the field sanitizer from any chained sanitizer as well\r\n                arrForEach(_sanitizers, function (sanitizer) {\r\n                    sanitizer && sanitizer[_DYN_RM_FIELD_SANITIZER /* @min:%2ermFieldSanitizer */] && sanitizer[_DYN_RM_FIELD_SANITIZER /* @min:%2ermFieldSanitizer */](theFieldSanitizer);\r\n                });\r\n            }\r\n        };\r\n        _self.isEmpty = function () {\r\n            return (getLength(_sanitizers) + getLength(_fieldSanitizers)) === 0;\r\n        };\r\n        _self[_DYN_HANDLE_FIELD /* @min:%2ehandleField */] = function (path, name) {\r\n            var mapValue = _getFieldSanitizer(path, name);\r\n            return mapValue ? mapValue[_DYN_CAN_HANDLE /* @min:%2ecanHandle */] : false;\r\n        };\r\n        _self[_DYN_VALUE /* @min:%2evalue */] = function (path, name, value, stringifyObjects) {\r\n            var mapValue = _getFieldSanitizer(path, name);\r\n            if (mapValue && mapValue[_DYN_CAN_HANDLE /* @min:%2ecanHandle */]) {\r\n                if (!mapValue || !mapValue[_DYN_CAN_HANDLE /* @min:%2ecanHandle */]) {\r\n                    return null;\r\n                }\r\n                if (mapValue.handler) {\r\n                    // This value sanitizer can't handle this field so pass it only the next one\r\n                    return mapValue.handler[_DYN_VALUE /* @min:%2evalue */](path, name, value, stringifyObjects);\r\n                }\r\n                // Check that property is valid\r\n                if (!isString(name) || isNullOrUndefined(value) || value === STR_EMPTY) {\r\n                    return null;\r\n                }\r\n                var property = null;\r\n                var fieldType = getFieldValueType(value);\r\n                if ((fieldType & 8192 /* FieldValueSanitizerType.EventProperty */) === 8192 /* FieldValueSanitizerType.EventProperty */) {\r\n                    var subType = fieldType & ~8192 /* FieldValueSanitizerType.EventProperty */;\r\n                    property = value;\r\n                    if (!isValueAssigned(property[_DYN_VALUE /* @min:%2evalue */]) ||\r\n                        (subType !== 1 /* FieldValueSanitizerType.String */ &&\r\n                            subType !== 2 /* FieldValueSanitizerType.Number */ &&\r\n                            subType !== 3 /* FieldValueSanitizerType.Boolean */ &&\r\n                            (subType & 4096 /* FieldValueSanitizerType.Array */) !== 4096 /* FieldValueSanitizerType.Array */)) {\r\n                        // Not a supported IEventProperty type to be able to sanitize\r\n                        return null;\r\n                    }\r\n                }\r\n                else if (fieldType === 1 /* FieldValueSanitizerType.String */ ||\r\n                    fieldType === 2 /* FieldValueSanitizerType.Number */ ||\r\n                    fieldType === 3 /* FieldValueSanitizerType.Boolean */ ||\r\n                    (fieldType & 4096 /* FieldValueSanitizerType.Array */) === 4096 /* FieldValueSanitizerType.Array */) {\r\n                    // If the property isn't IEventProperty (and is either string, number, boolean or array), convert it into one.\r\n                    property = _convertToProperty(path, name, value);\r\n                }\r\n                else if (fieldType === 4 /* FieldValueSanitizerType.Object */) {\r\n                    property = _convertToProperty(path, name, !!stringifyObjects ? JSON.stringify(value) : value);\r\n                }\r\n                if (property) {\r\n                    return _handleProperty(mapValue, path, name, fieldType, property, stringifyObjects);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        _self.property = function (path, name, property, stringifyObjects) {\r\n            var mapValue = _getFieldSanitizer(path, name);\r\n            if (!mapValue || !mapValue[_DYN_CAN_HANDLE /* @min:%2ecanHandle */]) {\r\n                return null;\r\n            }\r\n            // Check that property is valid\r\n            if (!isString(name) || isNullOrUndefined(property) || !isValueAssigned(property[_DYN_VALUE /* @min:%2evalue */])) {\r\n                return null;\r\n            }\r\n            var fieldType = getFieldValueType(property[_DYN_VALUE /* @min:%2evalue */]);\r\n            if (fieldType === 0 /* FieldValueSanitizerType.NotSet */) {\r\n                // Not a supported field that we can sanitize or serialize\r\n                return null;\r\n            }\r\n            return _handleProperty(mapValue, path, name, fieldType, property, stringifyObjects);\r\n        };\r\n        function _handleProperty(mapValue, path, name, fieldType, property, stringifyObjects) {\r\n            if (mapValue.handler) {\r\n                // This value sanitizer can't handle this field so pass it only the next one\r\n                return mapValue.handler.property(path, name, property, stringifyObjects);\r\n            }\r\n            // If either pii or cc is set convert value to string (since only string pii/cc is allowed).\r\n            // If the value is a complex type like an array that can't be converted to string we will drop\r\n            // the property.\r\n            if (!isNullOrUndefined(property[_DYN_KIND /* @min:%2ekind */])) {\r\n                if ((fieldType & 4096 /* FieldValueSanitizerType.Array */) === 4096 /* FieldValueSanitizerType.Array */ || !isValueKind(property[_DYN_KIND /* @min:%2ekind */])) {\r\n                    return null;\r\n                }\r\n                // Convert the value to a string and assign back to the original value\r\n                property[_DYN_VALUE /* @min:%2evalue */] = property[_DYN_VALUE /* @min:%2evalue */].toString();\r\n            }\r\n            return _callFieldSanitizer(mapValue.fieldHandler, path, name, fieldType, property);\r\n        }\r\n        function _convertToProperty(path, name, value) {\r\n            if (isValueAssigned(value)) {\r\n                return { value: value };\r\n            }\r\n            return null;\r\n        }\r\n        function _callFieldSanitizer(fieldProvider, path, name, theType, property) {\r\n            if (property && fieldProvider) {\r\n                var sanitizer = fieldProvider.getSanitizer(path, name, theType, property[_DYN_KIND /* @min:%2ekind */], property.propertyType);\r\n                if (sanitizer) {\r\n                    // This is where we the field will call the handler to \"scrub\" the value. This the primary hook for the ClientHashing Plugin to\r\n                    // be able to apply the hashFunc() / Sha256 conversion of the properties value\r\n                    if (theType === 4 /* FieldValueSanitizerType.Object */) {\r\n                        // Special case of an embedded object (ext.metadata, data.properties)\r\n                        var newValue_1 = {};\r\n                        var propValue = property[_DYN_VALUE /* @min:%2evalue */];\r\n                        objForEachKey(propValue, function (propKey, theValue) {\r\n                            var newPath = path + \".\" + name;\r\n                            if (isValueAssigned(theValue)) {\r\n                                var newProp = _convertToProperty(newPath, propKey, theValue);\r\n                                newProp = _callFieldSanitizer(fieldProvider, newPath, propKey, getFieldValueType(theValue), newProp);\r\n                                if (newProp) {\r\n                                    newValue_1[propKey] = newProp[_DYN_VALUE /* @min:%2evalue */];\r\n                                }\r\n                            }\r\n                        });\r\n                        property[_DYN_VALUE /* @min:%2evalue */] = newValue_1;\r\n                    }\r\n                    else {\r\n                        var details = {\r\n                            path: path,\r\n                            name: name,\r\n                            type: theType,\r\n                            prop: property,\r\n                            sanitizer: _self\r\n                        };\r\n                        property = sanitizer.call(_self, details);\r\n                    }\r\n                }\r\n            }\r\n            return property;\r\n        }\r\n    }\r\n    ValueSanitizer.getFieldType = getFieldValueType;\r\n    return ValueSanitizer;\r\n}());\r\nexport { ValueSanitizer };\r\n//# sourceMappingURL=ValueSanitizer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\"use strict\";\r\nexport var MinChannelPriorty = 100;\r\n//# sourceMappingURL=IChannelControls.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n//  @skip-file-minify\r\nimport { createEnumStyle } from \"../JavaScriptSDK.Enums/EnumHelperFuncs\";\r\nexport var LoggingSeverity = createEnumStyle({\r\n    DISABLED: 0 /* eLoggingSeverity.DISABLED */,\r\n    CRITICAL: 1 /* eLoggingSeverity.CRITICAL */,\r\n    WARNING: 2 /* eLoggingSeverity.WARNING */,\r\n    DEBUG: 3 /* eLoggingSeverity.DEBUG */\r\n});\r\n//# sourceMappingURL=LoggingEnums.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as interfaces from './interfaces';\n\nexport default class MergeConflictCodeLensProvider implements vscode.CodeLensProvider, vscode.Disposable {\n\tprivate codeLensRegistrationHandle?: vscode.Disposable | null;\n\tprivate config?: interfaces.IExtensionConfiguration;\n\tprivate tracker: interfaces.IDocumentMergeConflictTracker;\n\n\tconstructor(trackerService: interfaces.IDocumentMergeConflictTrackerService) {\n\t\tthis.tracker = trackerService.createTracker('codelens');\n\t}\n\n\tbegin(config: interfaces.IExtensionConfiguration) {\n\t\tthis.config = config;\n\n\t\tif (this.config.enableCodeLens) {\n\t\t\tthis.registerCodeLensProvider();\n\t\t}\n\t}\n\n\tconfigurationUpdated(updatedConfig: interfaces.IExtensionConfiguration) {\n\n\t\tif (updatedConfig.enableCodeLens === false && this.codeLensRegistrationHandle) {\n\t\t\tthis.codeLensRegistrationHandle.dispose();\n\t\t\tthis.codeLensRegistrationHandle = null;\n\t\t}\n\t\telse if (updatedConfig.enableCodeLens === true && !this.codeLensRegistrationHandle) {\n\t\t\tthis.registerCodeLensProvider();\n\t\t}\n\n\t\tthis.config = updatedConfig;\n\t}\n\n\n\tdispose() {\n\t\tif (this.codeLensRegistrationHandle) {\n\t\t\tthis.codeLensRegistrationHandle.dispose();\n\t\t\tthis.codeLensRegistrationHandle = null;\n\t\t}\n\t}\n\n\tasync provideCodeLenses(document: vscode.TextDocument, _token: vscode.CancellationToken): Promise<vscode.CodeLens[] | null> {\n\n\t\tif (!this.config || !this.config.enableCodeLens) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst conflicts = await this.tracker.getConflicts(document);\n\t\tconst conflictsCount = conflicts?.length ?? 0;\n\t\tvscode.commands.executeCommand('setContext', 'mergeConflictsCount', conflictsCount);\n\n\t\tif (!conflictsCount) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst items: vscode.CodeLens[] = [];\n\n\t\tconflicts.forEach(conflict => {\n\t\t\tconst acceptCurrentCommand: vscode.Command = {\n\t\t\t\tcommand: 'merge-conflict.accept.current',\n\t\t\t\ttitle: vscode.l10n.t(\"Accept Current Change\"),\n\t\t\t\targuments: ['known-conflict', conflict]\n\t\t\t};\n\n\t\t\tconst acceptIncomingCommand: vscode.Command = {\n\t\t\t\tcommand: 'merge-conflict.accept.incoming',\n\t\t\t\ttitle: vscode.l10n.t(\"Accept Incoming Change\"),\n\t\t\t\targuments: ['known-conflict', conflict]\n\t\t\t};\n\n\t\t\tconst acceptBothCommand: vscode.Command = {\n\t\t\t\tcommand: 'merge-conflict.accept.both',\n\t\t\t\ttitle: vscode.l10n.t(\"Accept Both Changes\"),\n\t\t\t\targuments: ['known-conflict', conflict]\n\t\t\t};\n\n\t\t\tconst diffCommand: vscode.Command = {\n\t\t\t\tcommand: 'merge-conflict.compare',\n\t\t\t\ttitle: vscode.l10n.t(\"Compare Changes\"),\n\t\t\t\targuments: [conflict]\n\t\t\t};\n\n\t\t\tconst range = document.lineAt(conflict.range.start.line).range;\n\t\t\titems.push(\n\t\t\t\tnew vscode.CodeLens(range, acceptCurrentCommand),\n\t\t\t\tnew vscode.CodeLens(range, acceptIncomingCommand),\n\t\t\t\tnew vscode.CodeLens(range, acceptBothCommand),\n\t\t\t\tnew vscode.CodeLens(range, diffCommand)\n\t\t\t);\n\t\t});\n\n\t\treturn items;\n\t}\n\n\tprivate registerCodeLensProvider() {\n\t\tthis.codeLensRegistrationHandle = vscode.languages.registerCodeLensProvider([\n\t\t\t{ scheme: 'file' },\n\t\t\t{ scheme: 'vscode-vfs' },\n\t\t\t{ scheme: 'untitled' },\n\t\t\t{ scheme: 'vscode-userdata' },\n\t\t], this);\n\t}\n}\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isArray, isDefined, isNullOrUndefined, isObject, isPlainObject, isUndefined, objForEachKey, objHasOwn } from \"@nevware21/ts-utils\";\r\nimport { _DYN_BLK_VAL, _DYN_LENGTH, _DYN_RD_ONLY } from \"../__DynamicConstants\";\r\nfunction _isConfigDefaults(value) {\r\n    return (value && isObject(value) && (value.isVal || value.fb || objHasOwn(value, \"v\") || objHasOwn(value, \"mrg\") || objHasOwn(value, \"ref\") || value.set));\r\n}\r\nfunction _getDefault(dynamicHandler, theConfig, cfgDefaults) {\r\n    var defValue;\r\n    var isDefaultValid = cfgDefaults.dfVal || isDefined;\r\n    // There is a fallback config key so try and grab that first\r\n    if (theConfig && cfgDefaults.fb) {\r\n        var fallbacks = cfgDefaults.fb;\r\n        if (!isArray(fallbacks)) {\r\n            fallbacks = [fallbacks];\r\n        }\r\n        for (var lp = 0; lp < fallbacks[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            var fallback = fallbacks[lp];\r\n            var fbValue = theConfig[fallback];\r\n            if (isDefaultValid(fbValue)) {\r\n                defValue = fbValue;\r\n            }\r\n            else if (dynamicHandler) {\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                fbValue = dynamicHandler.cfg[fallback];\r\n                if (isDefaultValid(fbValue)) {\r\n                    defValue = fbValue;\r\n                }\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                dynamicHandler.set(dynamicHandler.cfg, asString(fallback), fbValue);\r\n            }\r\n            if (isDefaultValid(defValue)) {\r\n                // We have a valid default so break out of the look\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // If the value is still not defined and we have a default value then use that\r\n    if (!isDefaultValid(defValue) && isDefaultValid(cfgDefaults.v)) {\r\n        defValue = cfgDefaults.v;\r\n    }\r\n    return defValue;\r\n}\r\n/**\r\n * Recursively resolve the default value\r\n * @param dynamicHandler\r\n * @param theConfig\r\n * @param cfgDefaults\r\n * @returns\r\n */\r\nfunction _resolveDefaultValue(dynamicHandler, theConfig, cfgDefaults) {\r\n    var theValue = cfgDefaults;\r\n    if (cfgDefaults && _isConfigDefaults(cfgDefaults)) {\r\n        theValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    if (theValue) {\r\n        if (_isConfigDefaults(theValue)) {\r\n            theValue = _resolveDefaultValue(dynamicHandler, theConfig, theValue);\r\n        }\r\n        var newValue_1;\r\n        if (isArray(theValue)) {\r\n            newValue_1 = [];\r\n            newValue_1[_DYN_LENGTH /* @min:%2elength */] = theValue[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(theValue)) {\r\n            newValue_1 = {};\r\n        }\r\n        if (newValue_1) {\r\n            objForEachKey(theValue, function (key, value) {\r\n                if (value && _isConfigDefaults(value)) {\r\n                    value = _resolveDefaultValue(dynamicHandler, theConfig, value);\r\n                }\r\n                newValue_1[key] = value;\r\n            });\r\n            theValue = newValue_1;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Applies the default value on the config property and makes sure that it's dynamic\r\n * @param theConfig\r\n * @param name\r\n * @param defaultValue\r\n */\r\nexport function _applyDefaultValue(dynamicHandler, theConfig, name, defaultValue) {\r\n    // Resolve the initial config value from the provided value or use the defined default\r\n    var isValid;\r\n    var setFn;\r\n    var defValue;\r\n    var cfgDefaults = defaultValue;\r\n    var mergeDf;\r\n    var reference;\r\n    var readOnly;\r\n    var blkDynamicValue;\r\n    if (_isConfigDefaults(cfgDefaults)) {\r\n        // looks like a IConfigDefault\r\n        isValid = cfgDefaults.isVal;\r\n        setFn = cfgDefaults.set;\r\n        readOnly = cfgDefaults[_DYN_RD_ONLY /* @min:%2erdOnly */];\r\n        blkDynamicValue = cfgDefaults[_DYN_BLK_VAL /* @min:%2eblkVal */];\r\n        mergeDf = cfgDefaults.mrg;\r\n        reference = cfgDefaults.ref;\r\n        if (!reference && isUndefined(reference)) {\r\n            reference = !!mergeDf;\r\n        }\r\n        defValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    else {\r\n        defValue = defaultValue;\r\n    }\r\n    if (blkDynamicValue) {\r\n        // Mark the property so that any value assigned will be blocked from conversion, we need to do this\r\n        // before assigning or fetching the value to ensure it's not converted\r\n        dynamicHandler[_DYN_BLK_VAL /* @min:%2eblkVal */](theConfig, name);\r\n    }\r\n    // Set the value to the default value;\r\n    var theValue;\r\n    var usingDefault = true;\r\n    var cfgValue = theConfig[name];\r\n    // try and get and user provided values\r\n    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n        // Use the defined theConfig[name] value\r\n        theValue = cfgValue;\r\n        usingDefault = false;\r\n        // The values are different and we have a special default value check, which is used to\r\n        // override config values like empty strings to continue using the default\r\n        if (isValid && theValue !== defValue && !isValid(theValue)) {\r\n            theValue = defValue;\r\n            usingDefault = true;\r\n        }\r\n        if (setFn) {\r\n            theValue = setFn(theValue, defValue, theConfig);\r\n            usingDefault = theValue === defValue;\r\n        }\r\n    }\r\n    if (!usingDefault) {\r\n        if (isPlainObject(theValue) || isArray(defValue)) {\r\n            // we are using the user supplied value and it's an object\r\n            if (mergeDf && defValue && (isPlainObject(defValue) || isArray(defValue))) {\r\n                // Resolve/apply the defaults\r\n                objForEachKey(defValue, function (dfName, dfValue) {\r\n                    // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                    _applyDefaultValue(dynamicHandler, theValue, dfName, dfValue);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (defValue) {\r\n        // Just resolve the default\r\n        theValue = _resolveDefaultValue(dynamicHandler, theConfig, defValue);\r\n    }\r\n    else {\r\n        theValue = defValue;\r\n    }\r\n    // if (theValue && usingDefault && (isPlainObject(theValue) || isArray(theValue))) {\r\n    //     theValue = _cfgDeepCopy(theValue);\r\n    // }\r\n    // Needed to ensure that the (potentially) new field is dynamic even if null/undefined\r\n    dynamicHandler.set(theConfig, name, theValue);\r\n    if (reference) {\r\n        dynamicHandler.ref(theConfig, name);\r\n    }\r\n    if (readOnly) {\r\n        dynamicHandler[_DYN_RD_ONLY /* @min:%2erdOnly */](theConfig, name);\r\n    }\r\n}\r\n//# sourceMappingURL=ConfigDefaults.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as vscode from 'vscode';\nimport * as interfaces from './interfaces';\n\n\nexport default class MergeDecorator implements vscode.Disposable {\n\n\tprivate decorations: { [key: string]: vscode.TextEditorDecorationType } = {};\n\n\tprivate decorationUsesWholeLine: boolean = true; // Useful for debugging, set to false to see exact match ranges\n\n\tprivate config?: interfaces.IExtensionConfiguration;\n\tprivate tracker: interfaces.IDocumentMergeConflictTracker;\n\tprivate updating = new Map<vscode.TextEditor, boolean>();\n\n\tconstructor(private context: vscode.ExtensionContext, trackerService: interfaces.IDocumentMergeConflictTrackerService) {\n\t\tthis.tracker = trackerService.createTracker('decorator');\n\t}\n\n\tbegin(config: interfaces.IExtensionConfiguration) {\n\t\tthis.config = config;\n\t\tthis.registerDecorationTypes(config);\n\n\t\t// Check if we already have a set of active windows, attempt to track these.\n\t\tvscode.window.visibleTextEditors.forEach(e => this.applyDecorations(e));\n\n\t\tvscode.workspace.onDidOpenTextDocument(event => {\n\t\t\tthis.applyDecorationsFromEvent(event);\n\t\t}, null, this.context.subscriptions);\n\n\t\tvscode.workspace.onDidChangeTextDocument(event => {\n\t\t\tthis.applyDecorationsFromEvent(event.document);\n\t\t}, null, this.context.subscriptions);\n\n\t\tvscode.window.onDidChangeVisibleTextEditors((e) => {\n\t\t\t// Any of which could be new (not just the active one).\n\t\t\te.forEach(e => this.applyDecorations(e));\n\t\t}, null, this.context.subscriptions);\n\t}\n\n\tconfigurationUpdated(config: interfaces.IExtensionConfiguration) {\n\t\tthis.config = config;\n\t\tthis.registerDecorationTypes(config);\n\n\t\t// Re-apply the decoration\n\t\tvscode.window.visibleTextEditors.forEach(e => {\n\t\t\tthis.removeDecorations(e);\n\t\t\tthis.applyDecorations(e);\n\t\t});\n\t}\n\n\tprivate registerDecorationTypes(config: interfaces.IExtensionConfiguration) {\n\n\t\t// Dispose of existing decorations\n\t\tObject.keys(this.decorations).forEach(k => this.decorations[k].dispose());\n\t\tthis.decorations = {};\n\n\t\t// None of our features are enabled\n\t\tif (!config.enableDecorations || !config.enableEditorOverview) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Create decorators\n\t\tif (config.enableDecorations || config.enableEditorOverview) {\n\t\t\tthis.decorations['current.content'] = vscode.window.createTextEditorDecorationType(\n\t\t\t\tthis.generateBlockRenderOptions('merge.currentContentBackground', 'editorOverviewRuler.currentContentForeground', config)\n\t\t\t);\n\n\t\t\tthis.decorations['incoming.content'] = vscode.window.createTextEditorDecorationType(\n\t\t\t\tthis.generateBlockRenderOptions('merge.incomingContentBackground', 'editorOverviewRuler.incomingContentForeground', config)\n\t\t\t);\n\n\t\t\tthis.decorations['commonAncestors.content'] = vscode.window.createTextEditorDecorationType(\n\t\t\t\tthis.generateBlockRenderOptions('merge.commonContentBackground', 'editorOverviewRuler.commonContentForeground', config)\n\t\t\t);\n\t\t}\n\n\t\tif (config.enableDecorations) {\n\t\t\tthis.decorations['current.header'] = vscode.window.createTextEditorDecorationType({\n\t\t\t\tisWholeLine: this.decorationUsesWholeLine,\n\t\t\t\tbackgroundColor: new vscode.ThemeColor('merge.currentHeaderBackground'),\n\t\t\t\tcolor: new vscode.ThemeColor('editor.foreground'),\n\t\t\t\toutlineStyle: 'solid',\n\t\t\t\toutlineWidth: '1pt',\n\t\t\t\toutlineColor: new vscode.ThemeColor('merge.border'),\n\t\t\t\tafter: {\n\t\t\t\t\tcontentText: ' ' + vscode.l10n.t(\"(Current Change)\"),\n\t\t\t\t\tcolor: new vscode.ThemeColor('descriptionForeground')\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.decorations['commonAncestors.header'] = vscode.window.createTextEditorDecorationType({\n\t\t\t\tisWholeLine: this.decorationUsesWholeLine,\n\t\t\t\tbackgroundColor: new vscode.ThemeColor('merge.commonHeaderBackground'),\n\t\t\t\tcolor: new vscode.ThemeColor('editor.foreground'),\n\t\t\t\toutlineStyle: 'solid',\n\t\t\t\toutlineWidth: '1pt',\n\t\t\t\toutlineColor: new vscode.ThemeColor('merge.border')\n\t\t\t});\n\n\t\t\tthis.decorations['splitter'] = vscode.window.createTextEditorDecorationType({\n\t\t\t\tcolor: new vscode.ThemeColor('editor.foreground'),\n\t\t\t\toutlineStyle: 'solid',\n\t\t\t\toutlineWidth: '1pt',\n\t\t\t\toutlineColor: new vscode.ThemeColor('merge.border'),\n\t\t\t\tisWholeLine: this.decorationUsesWholeLine,\n\t\t\t});\n\n\t\t\tthis.decorations['incoming.header'] = vscode.window.createTextEditorDecorationType({\n\t\t\t\tbackgroundColor: new vscode.ThemeColor('merge.incomingHeaderBackground'),\n\t\t\t\tcolor: new vscode.ThemeColor('editor.foreground'),\n\t\t\t\toutlineStyle: 'solid',\n\t\t\t\toutlineWidth: '1pt',\n\t\t\t\toutlineColor: new vscode.ThemeColor('merge.border'),\n\t\t\t\tisWholeLine: this.decorationUsesWholeLine,\n\t\t\t\tafter: {\n\t\t\t\t\tcontentText: ' ' + vscode.l10n.t(\"(Incoming Change)\"),\n\t\t\t\t\tcolor: new vscode.ThemeColor('descriptionForeground')\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tdispose() {\n\n\t\t// TODO: Replace with Map<string, T>\n\t\tObject.keys(this.decorations).forEach(name => {\n\t\t\tthis.decorations[name].dispose();\n\t\t});\n\n\t\tthis.decorations = {};\n\t}\n\n\tprivate generateBlockRenderOptions(backgroundColor: string, overviewRulerColor: string, config: interfaces.IExtensionConfiguration): vscode.DecorationRenderOptions {\n\n\t\tconst renderOptions: vscode.DecorationRenderOptions = {};\n\n\t\tif (config.enableDecorations) {\n\t\t\trenderOptions.backgroundColor = new vscode.ThemeColor(backgroundColor);\n\t\t\trenderOptions.isWholeLine = this.decorationUsesWholeLine;\n\t\t}\n\n\t\tif (config.enableEditorOverview) {\n\t\t\trenderOptions.overviewRulerColor = new vscode.ThemeColor(overviewRulerColor);\n\t\t\trenderOptions.overviewRulerLane = vscode.OverviewRulerLane.Full;\n\t\t}\n\n\t\treturn renderOptions;\n\t}\n\n\tprivate applyDecorationsFromEvent(eventDocument: vscode.TextDocument) {\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\tif (editor.document === eventDocument) {\n\t\t\t\t// Attempt to apply\n\t\t\t\tthis.applyDecorations(editor);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async applyDecorations(editor: vscode.TextEditor) {\n\t\tif (!editor || !editor.document) { return; }\n\n\t\tif (!this.config || (!this.config.enableDecorations && !this.config.enableEditorOverview)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If we have a pending scan from the same origin, exit early. (Cannot use this.tracker.isPending() because decorations are per editor.)\n\t\tif (this.updating.get(editor)) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.updating.set(editor, true);\n\n\t\t\tconst conflicts = await this.tracker.getConflicts(editor.document);\n\t\t\tif (vscode.window.visibleTextEditors.indexOf(editor) === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (conflicts.length === 0) {\n\t\t\t\tthis.removeDecorations(editor);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Store decorations keyed by the type of decoration, set decoration wants a \"style\"\n\t\t\t// to go with it, which will match this key (see constructor);\n\t\t\tconst matchDecorations: { [key: string]: vscode.Range[] } = {};\n\n\t\t\tconst pushDecoration = (key: string, d: vscode.Range) => {\n\t\t\t\tmatchDecorations[key] = matchDecorations[key] || [];\n\t\t\t\tmatchDecorations[key].push(d);\n\t\t\t};\n\n\t\t\tconflicts.forEach(conflict => {\n\t\t\t\t// TODO, this could be more effective, just call getMatchPositions once with a map of decoration to position\n\t\t\t\tif (!conflict.current.decoratorContent.isEmpty) {\n\t\t\t\t\tpushDecoration('current.content', conflict.current.decoratorContent);\n\t\t\t\t}\n\t\t\t\tif (!conflict.incoming.decoratorContent.isEmpty) {\n\t\t\t\t\tpushDecoration('incoming.content', conflict.incoming.decoratorContent);\n\t\t\t\t}\n\n\t\t\t\tconflict.commonAncestors.forEach(commonAncestorsRegion => {\n\t\t\t\t\tif (!commonAncestorsRegion.decoratorContent.isEmpty) {\n\t\t\t\t\t\tpushDecoration('commonAncestors.content', commonAncestorsRegion.decoratorContent);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (this.config!.enableDecorations) {\n\t\t\t\t\tpushDecoration('current.header', conflict.current.header);\n\t\t\t\t\tpushDecoration('splitter', conflict.splitter);\n\t\t\t\t\tpushDecoration('incoming.header', conflict.incoming.header);\n\n\t\t\t\t\tconflict.commonAncestors.forEach(commonAncestorsRegion => {\n\t\t\t\t\t\tpushDecoration('commonAncestors.header', commonAncestorsRegion.header);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// For each match we've generated, apply the generated decoration with the matching decoration type to the\n\t\t\t// editor instance. Keys in both matches and decorations should match.\n\t\t\tObject.keys(matchDecorations).forEach(decorationKey => {\n\t\t\t\tconst decorationType = this.decorations[decorationKey];\n\n\t\t\t\tif (decorationType) {\n\t\t\t\t\teditor.setDecorations(decorationType, matchDecorations[decorationKey]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} finally {\n\t\t\tthis.updating.delete(editor);\n\t\t}\n\t}\n\n\tprivate removeDecorations(editor: vscode.TextEditor) {\n\t\t// Remove all decorations, there might be none\n\t\tObject.keys(this.decorations).forEach(decorationKey => {\n\n\t\t\t// Race condition, while editing the settings, it's possible to\n\t\t\t// generate regions before the configuration has been refreshed\n\t\t\tconst decorationType = this.decorations[decorationKey];\n\n\t\t\tif (decorationType) {\n\t\t\t\teditor.setDecorations(decorationType, []);\n\t\t\t}\n\t\t});\n\t}\n}\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_NAME } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getJSON } from \"./EnvUtils\";\r\n/**\r\n * Parses the response from the backend.\r\n * @param response - XMLHttpRequest or XDomainRequest response\r\n */\r\nexport function parseResponse(response, diagLog) {\r\n    try {\r\n        if (response && response !== \"\") {\r\n            var result = getJSON().parse(response);\r\n            if (result && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] >= result.itemsAccepted &&\r\n                result.itemsReceived - result.itemsAccepted === result.errors[_DYN_LENGTH /* @min:%2elength */]) {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 43 /* _eInternalMessageId.InvalidBackendResponse */, \"Cannot parse the response. \" + (e[_DYN_NAME /* @min:%2ename */] || dumpObj(e)), {\r\n            response: response\r\n        });\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=ResponseHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createAllPromise, createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, arrIndexOf, objDefine, safe, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_DATA, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SPLICE, _DYN_UNLOAD, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_OFFLINE_DROP, STR_OFFLINE_SENT, STR_OFFLINE_STORE, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar defaultValues = {\r\n    perfEvtsSendAll: false\r\n};\r\nfunction _runScheduledListeners(asyncNotifications) {\r\n    asyncNotifications.h = null;\r\n    var callbacks = asyncNotifications.cb;\r\n    asyncNotifications.cb = [];\r\n    arrForEach(callbacks, function (cb) {\r\n        // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n        safe(cb.fn, [cb.arg]);\r\n    });\r\n}\r\n// This function is used to combine the logic of running the listeners and handling the async notifications so that they don't\r\n// create multiple timers if there are multiple async listeners.\r\nfunction _runListeners(listeners, name, asyncNotifications, callback) {\r\n    arrForEach(listeners, function (listener) {\r\n        if (listener && listener[name]) {\r\n            if (asyncNotifications) {\r\n                // Schedule the callback to be called after the current call stack has cleared.\r\n                asyncNotifications.cb[_DYN_PUSH /* @min:%2epush */]({\r\n                    fn: callback,\r\n                    arg: listener\r\n                });\r\n                asyncNotifications.h = asyncNotifications.h || scheduleTimeout(_runScheduledListeners, 0, asyncNotifications);\r\n            }\r\n            else {\r\n                // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n                safe(callback, [listener]);\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager(config) {\r\n        this.listeners = [];\r\n        var perfEvtsSendAll;\r\n        var unloadHandler;\r\n        var _listeners = [];\r\n        var _asyncNotifications = {\r\n            h: null,\r\n            cb: []\r\n        };\r\n        var cfgHandler = createDynamicConfig(config, defaultValues);\r\n        unloadHandler = cfgHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n            perfEvtsSendAll = !!details.cfg.perfEvtsSendAll;\r\n        });\r\n        dynamicProto(NotificationManager, this, function (_self) {\r\n            objDefine(_self, \"listeners\", {\r\n                g: function () { return _listeners; }\r\n            });\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _listeners[_DYN_PUSH /* @min:%2epush */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - AWTNotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                var index = arrIndexOf(_listeners, listener);\r\n                while (index > -1) {\r\n                    _listeners[_DYN_SPLICE /* @min:%2esplice */](index, 1);\r\n                    index = arrIndexOf(_listeners, listener);\r\n                }\r\n            };\r\n            /**\r\n             * Notification for events sent.\r\n             * @param events - The array of events that have been sent.\r\n             */\r\n            _self[STR_EVENTS_SENT /* @min:%2eeventsSent */] = function (events) {\r\n                _runListeners(_listeners, STR_EVENTS_SENT, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_SENT /* @min:%2eeventsSent */](events);\r\n                });\r\n            };\r\n            /**\r\n             * Notification for events being discarded.\r\n             * @param events - The array of events that have been discarded by the SDK.\r\n             * @param reason - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n             * constant should be used to check the different values.\r\n             */\r\n            _self[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */] = function (events, reason) {\r\n                _runListeners(_listeners, STR_EVENTS_DISCARDED, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */](events, reason);\r\n                });\r\n            };\r\n            /**\r\n             * [Optional] A function called when the events have been requested to be sent to the sever.\r\n             * @param sendReason - The reason why the event batch is being sent.\r\n             * @param isAsync - A flag which identifies whether the requests are being sent in an async or sync manner.\r\n             */\r\n            _self[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */] = function (sendReason, isAsync) {\r\n                _runListeners(_listeners, STR_EVENTS_SEND_REQUEST, isAsync ? _asyncNotifications : null, function (listener) {\r\n                    listener[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendReason, isAsync);\r\n                });\r\n            };\r\n            _self[STR_PERF_EVENT /* @min:%2eperfEvent */] = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    // Send all events or only parent events\r\n                    if (perfEvtsSendAll || !perfEvent[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */]()) {\r\n                        _runListeners(_listeners, STR_PERF_EVENT, null, function (listener) {\r\n                            if (perfEvent[_DYN_IS_ASYNC /* @min:%2eisAsync */]) {\r\n                                scheduleTimeout(function () { return listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent); }, 0);\r\n                            }\r\n                            else {\r\n                                listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */] = function (events) {\r\n                if (events && events[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_STORE, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */](events);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */] = function (batch) {\r\n                if (batch && batch[_DYN_DATA /* @min:%2edata */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_SENT, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */](batch);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */] = function (cnt, reason) {\r\n                if (cnt > 0) {\r\n                    var rn_1 = reason || 0; // default is unknown\r\n                    _runListeners(_listeners, STR_OFFLINE_DROP, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */](cnt, rn_1);\r\n                    });\r\n                }\r\n            };\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                var _finishUnload = function () {\r\n                    unloadHandler && unloadHandler.rm();\r\n                    unloadHandler = null;\r\n                    _listeners = [];\r\n                    // Clear any async listener\r\n                    _asyncNotifications.h && _asyncNotifications.h[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                    _asyncNotifications.h = null;\r\n                    _asyncNotifications.cb = [];\r\n                };\r\n                var waiting;\r\n                _runListeners(_listeners, \"unload\", null, function (listener) {\r\n                    var asyncUnload = listener[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n                    if (asyncUnload) {\r\n                        if (!waiting) {\r\n                            waiting = [];\r\n                        }\r\n                        waiting[_DYN_PUSH /* @min:%2epush */](asyncUnload);\r\n                    }\r\n                });\r\n                if (waiting) {\r\n                    return createPromise(function (resolve) {\r\n                        return doAwaitResponse(createAllPromise(waiting), function () {\r\n                            _finishUnload();\r\n                            resolve();\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    _finishUnload();\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for NotificationManager.prototype.addNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.removeNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.eventsSent.\r\n// Removed Stub for NotificationManager.prototype.eventsDiscarded.\r\n// Removed Stub for NotificationManager.prototype.eventsSendRequest.\r\n// Removed Stub for NotificationManager.prototype.perfEvent.\r\n// Removed Stub for NotificationManager.prototype.unload.\r\n// Removed Stub for NotificationManager.prototype.offlineEventsStored.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchSent.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchDrop.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    NotificationManager.__ieDyn=1;\n\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","module.exports = require(\"vscode\");","/*\n * 1DS JS SDK Core, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 4\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 4\r\nexport var _DYN_INDEX_OF = \"indexOf\"; // Count: 4\r\nexport var _DYN_TIMINGS = \"timings\"; // Count: 4\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 4\r\nexport var _DYN_VALUE = \"value\"; // Count: 20\r\nexport var _DYN_KIND = \"kind\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 7\r\nexport var _DYN_PROCESS_TELEMETRY_ST0 = \"processTelemetryStart\"; // Count: 3\r\nexport var _DYN_HANDLE_FIELD = \"handleField\"; // Count: 3\r\nexport var _DYN_RM_SANITIZER = \"rmSanitizer\"; // Count: 3\r\nexport var _DYN_RM_FIELD_SANITIZER = \"rmFieldSanitizer\"; // Count: 3\r\nexport var _DYN_CAN_HANDLE = \"canHandle\"; // Count: 7\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, isArray, isString, strLeft, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_ATTRIBUTE, _DYN_LENGTH, _DYN_PUSH, _DYN_SPAN_ID, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_VERSION } from \"../__DynamicConstants\";\r\nimport { generateW3CId } from \"./CoreUtils\";\r\nimport { findMetaTag, findNamedServerTiming } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// using {0,16} for leading and trailing whitespace just to constrain the possible runtime of a random string\r\nvar TRACE_PARENT_REGEX = /^([\\da-f]{2})-([\\da-f]{32})-([\\da-f]{16})-([\\da-f]{2})(-[^\\s]{1,64})?$/i;\r\nvar DEFAULT_VERSION = \"00\";\r\nvar INVALID_VERSION = \"ff\";\r\nvar INVALID_TRACE_ID = \"00000000000000000000000000000000\";\r\nvar INVALID_SPAN_ID = \"0000000000000000\";\r\nvar SAMPLED_FLAG = 0x01;\r\nfunction _isValid(value, len, invalidValue) {\r\n    if (value && value[_DYN_LENGTH /* @min:%2elength */] === len && value !== invalidValue) {\r\n        return !!value.match(/^[\\da-f]*$/i);\r\n    }\r\n    return false;\r\n}\r\nfunction _formatValue(value, len, defValue) {\r\n    if (_isValid(value, len)) {\r\n        return value;\r\n    }\r\n    return defValue;\r\n}\r\nfunction _formatFlags(value) {\r\n    if (isNaN(value) || value < 0 || value > 255) {\r\n        value = 0x01;\r\n    }\r\n    var result = value.toString(16);\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < 2) {\r\n        result = \"0\" + result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Create a new ITraceParent instance using the provided values.\r\n * @param traceId - The traceId to use, when invalid a new random W3C id will be generated.\r\n * @param spanId - The parent/span id to use, a new random value will be generated if it is invalid.\r\n * @param flags - The traceFlags to use, defaults to zero (0) if not supplied or invalid\r\n * @param version - The version to used, defaults to version \"01\" if not supplied or invalid.\r\n * @returns\r\n */\r\nexport function createTraceParent(traceId, spanId, flags, version) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_VERSION /* @min:version */] = _isValid(version, 2, INVALID_VERSION) ? version : DEFAULT_VERSION,\r\n        _a[_DYN_TRACE_ID /* @min:traceId */] = isValidTraceId(traceId) ? traceId : generateW3CId(),\r\n        _a[_DYN_SPAN_ID /* @min:spanId */] = isValidSpanId(spanId) ? spanId : strLeft(generateW3CId(), 16),\r\n        _a.traceFlags = flags >= 0 && flags <= 0xFF ? flags : 1,\r\n        _a;\r\n}\r\n/**\r\n * Attempt to parse the provided string as a W3C TraceParent header value (https://www.w3.org/TR/trace-context/#traceparent-header)\r\n *\r\n * @param value - The value to be parsed\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function parseTraceParent(value, selectIdx) {\r\n    var _a;\r\n    if (!value) {\r\n        // Don't pass a null/undefined or empty string\r\n        return null;\r\n    }\r\n    if (isArray(value)) {\r\n        // The value may have been encoded on the page into an array so handle this automatically\r\n        value = value[0] || \"\";\r\n    }\r\n    if (!value || !isString(value) || value[_DYN_LENGTH /* @min:%2elength */] > 8192) {\r\n        // limit potential processing based on total length\r\n        return null;\r\n    }\r\n    if (value.indexOf(\",\") !== -1) {\r\n        var values = value[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        value = values[selectIdx > 0 && values[_DYN_LENGTH /* @min:%2elength */] > selectIdx ? selectIdx : 0];\r\n    }\r\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\r\n    var match = TRACE_PARENT_REGEX.exec(strTrim(value));\r\n    if (!match || // No match\r\n        match[1] === INVALID_VERSION || // version ff is forbidden\r\n        match[2] === INVALID_TRACE_ID || // All zeros is considered to be invalid\r\n        match[3] === INVALID_SPAN_ID) { // All zeros is considered to be invalid\r\n        return null;\r\n    }\r\n    return _a = {\r\n            version: (match[1] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            traceId: (match[2] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            spanId: (match[3] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()\r\n        },\r\n        _a[_DYN_TRACE_FLAGS /* @min:traceFlags */] = parseInt(match[4], 16),\r\n        _a;\r\n}\r\n/**\r\n * Is the provided W3c Trace Id a valid string representation, it must be a 32-character string\r\n * of lowercase hexadecimal characters for example, 4bf92f3577b34da6a3ce929d0e0e4736.\r\n * If all characters as zero (00000000000000000000000000000000) it will be considered an invalid value.\r\n * @param value - The W3c trace Id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidTraceId(value) {\r\n    return _isValid(value, 32, INVALID_TRACE_ID);\r\n}\r\n/**\r\n * Is the provided W3c span id (aka. parent id) a valid string representation, it must be a 16-character\r\n * string of lowercase hexadecimal characters, for example, 00f067aa0ba902b7.\r\n * If all characters are zero (0000000000000000) this is considered an invalid value.\r\n * @param value - The W3c span id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidSpanId(value) {\r\n    return _isValid(value, 16, INVALID_SPAN_ID);\r\n}\r\n/**\r\n * Validates that the provided ITraceParent instance conforms to the currently supported specifications\r\n * @param value\r\n * @returns\r\n */\r\nexport function isValidTraceParent(value) {\r\n    if (!value ||\r\n        !_isValid(value[_DYN_VERSION /* @min:%2eversion */], 2, INVALID_VERSION) ||\r\n        !_isValid(value[_DYN_TRACE_ID /* @min:%2etraceId */], 32, INVALID_TRACE_ID) ||\r\n        !_isValid(value[_DYN_SPAN_ID /* @min:%2espanId */], 16, INVALID_SPAN_ID) ||\r\n        !_isValid(_formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]), 2)) {\r\n        // Each known field must contain a valid value\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Is the parsed traceParent indicating that the trace is currently sampled.\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function isSampledFlag(value) {\r\n    if (isValidTraceParent(value)) {\r\n        return (value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] & SAMPLED_FLAG) === SAMPLED_FLAG;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Format the ITraceParent value as a string using the supported and know version formats.\r\n * So even if the passed traceParent is a later version the string value returned from this\r\n * function will convert it to only the known version formats.\r\n * This currently only supports version \"00\" and invalid \"ff\"\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function formatTraceParent(value) {\r\n    if (value) {\r\n        // Special Note: This only supports formatting as version 00, future versions should encode any known supported version\r\n        // So parsing a future version will populate the correct version value but reformatting will reduce it to version 00.\r\n        var flags = _formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]);\r\n        if (!_isValid(flags, 2)) {\r\n            flags = \"01\";\r\n        }\r\n        var version = value[_DYN_VERSION /* @min:%2eversion */] || DEFAULT_VERSION;\r\n        if (version !== \"00\" && version !== \"ff\") {\r\n            // Reduce version to \"00\"\r\n            version = DEFAULT_VERSION;\r\n        }\r\n        // Format as version 00\r\n        return \"\".concat(version.toLowerCase(), \"-\").concat(_formatValue(value.traceId, 32, INVALID_TRACE_ID).toLowerCase(), \"-\").concat(_formatValue(value.spanId, 16, INVALID_SPAN_ID).toLowerCase(), \"-\").concat(flags.toLowerCase());\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Helper function to fetch the passed traceparent from the page, looking for it as a meta-tag or a Server-Timing header.\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function findW3cTraceParent(selectIdx) {\r\n    var name = \"traceparent\";\r\n    var traceParent = parseTraceParent(findMetaTag(name), selectIdx);\r\n    if (!traceParent) {\r\n        traceParent = parseTraceParent(findNamedServerTiming(name), selectIdx);\r\n    }\r\n    return traceParent;\r\n}\r\n/**\r\n * Find all script tags in the provided document and return the information about them.\r\n * @param doc\r\n * @returns\r\n */\r\nexport function findAllScripts(doc) {\r\n    var scripts = doc.getElementsByTagName(\"script\");\r\n    var result = [];\r\n    arrForEach(scripts, function (script) {\r\n        var src = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"src\");\r\n        if (src) {\r\n            var crossOrigin = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"crossorigin\");\r\n            var async = script.hasAttribute(\"async\") === true;\r\n            var defer = script.hasAttribute(\"defer\") === true;\r\n            var referrerPolicy = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"referrerpolicy\");\r\n            var info = { url: src };\r\n            if (crossOrigin) {\r\n                info.crossOrigin = crossOrigin;\r\n            }\r\n            if (async) {\r\n                info.async = async;\r\n            }\r\n            if (defer) {\r\n                info.defer = defer;\r\n            }\r\n            if (referrerPolicy) {\r\n                info.referrerPolicy = referrerPolicy;\r\n            }\r\n            result[_DYN_PUSH /* @min:%2epush */](info);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//# sourceMappingURL=W3cTraceParent.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, dumpObj, isArray, isFunction, isNullOrUndefined, isUndefined, objForEachKey, objFreeze, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _applyDefaultValue } from \"../Config/ConfigDefaults\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_IDENTIFIER, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SET_DF, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UNLOAD, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nimport { _throwInternal, safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { proxyFunctions } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_DISABLED, STR_EMPTY, STR_EXTENSION_CONFIG, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _getPluginState } from \"./TelemetryHelpers\";\r\nvar strTelemetryPluginChain = \"TelemetryPluginChain\";\r\nvar strHasRunFlags = \"_hasRun\";\r\nvar strGetTelCtx = \"_getTelCtx\";\r\nvar _chainId = 0;\r\nfunction _getNextProxyStart(proxy, core, startAt) {\r\n    while (proxy) {\r\n        if (proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]() === startAt) {\r\n            return proxy;\r\n        }\r\n        proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    }\r\n    // This wasn't found in the existing chain so create an isolated one with just this plugin\r\n    return createTelemetryProxyChain([startAt], core.config || {}, core);\r\n}\r\n/**\r\n * @ignore\r\n * @param telemetryChain\r\n * @param dynamicHandler\r\n * @param core\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n * @returns\r\n */\r\nfunction _createInternalContext(telemetryChain, dynamicHandler, core, startAt) {\r\n    // We have a special case where we want to start execution from this specific plugin\r\n    // or we simply reuse the existing telemetry plugin chain (normal execution case)\r\n    var _nextProxy = null; // By Default set as no next plugin\r\n    var _onComplete = [];\r\n    if (!dynamicHandler) {\r\n        dynamicHandler = createDynamicConfig({}, null, core[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    if (startAt !== null) {\r\n        // There is no next element (null) vs not defined (undefined) so use the full chain\r\n        _nextProxy = startAt ? _getNextProxyStart(telemetryChain, core, startAt) : telemetryChain;\r\n    }\r\n    var context = {\r\n        _next: _moveNext,\r\n        ctx: {\r\n            core: function () {\r\n                return core;\r\n            },\r\n            diagLog: function () {\r\n                return safeGetLogger(core, dynamicHandler.cfg);\r\n            },\r\n            getCfg: function () {\r\n                return dynamicHandler.cfg;\r\n            },\r\n            getExtCfg: _resolveExtCfg,\r\n            getConfig: _getConfig,\r\n            hasNext: function () {\r\n                return !!_nextProxy;\r\n            },\r\n            getNext: function () {\r\n                return _nextProxy;\r\n            },\r\n            setNext: function (nextPlugin) {\r\n                _nextProxy = nextPlugin;\r\n            },\r\n            iterate: _iterateChain,\r\n            onComplete: _addOnComplete\r\n        }\r\n    };\r\n    function _addOnComplete(onComplete, that) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (onComplete) {\r\n            _onComplete[_DYN_PUSH /* @min:%2epush */]({\r\n                func: onComplete,\r\n                self: !isUndefined(that) ? that : context.ctx,\r\n                args: args\r\n            });\r\n        }\r\n    }\r\n    function _moveNext() {\r\n        var nextProxy = _nextProxy;\r\n        // Automatically move to the next plugin\r\n        _nextProxy = nextProxy ? nextProxy[_DYN_GET_NEXT /* @min:%2egetNext */]() : null;\r\n        if (!nextProxy) {\r\n            var onComplete = _onComplete;\r\n            if (onComplete && onComplete[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                arrForEach(onComplete, function (completeDetails) {\r\n                    try {\r\n                        completeDetails.func.call(completeDetails.self, completeDetails.args);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(core[_DYN_LOGGER /* @min:%2elogger */], 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected Exception during onComplete - \" + dumpObj(e));\r\n                    }\r\n                });\r\n                _onComplete = [];\r\n            }\r\n        }\r\n        return nextProxy;\r\n    }\r\n    function _getExtCfg(identifier, createIfMissing) {\r\n        var idCfg = null;\r\n        var cfg = dynamicHandler.cfg;\r\n        if (cfg && identifier) {\r\n            var extCfg = cfg[STR_EXTENSION_CONFIG /* @min:%2eextensionConfig */];\r\n            if (!extCfg && createIfMissing) {\r\n                extCfg = {};\r\n            }\r\n            // Always set the value so that the property always exists\r\n            cfg[STR_EXTENSION_CONFIG] = extCfg; // Note: it is valid for the \"value\" to be undefined\r\n            // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n            extCfg = dynamicHandler.ref(cfg, STR_EXTENSION_CONFIG);\r\n            if (extCfg) {\r\n                idCfg = extCfg[identifier];\r\n                if (!idCfg && createIfMissing) {\r\n                    idCfg = {};\r\n                }\r\n                // Always set the value so that the property always exists\r\n                extCfg[identifier] = idCfg; // Note: it is valid for the \"value\" to be undefined\r\n                // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n                idCfg = dynamicHandler.ref(extCfg, identifier);\r\n            }\r\n        }\r\n        return idCfg;\r\n    }\r\n    function _resolveExtCfg(identifier, defaultValues) {\r\n        var newConfig = _getExtCfg(identifier, true);\r\n        if (defaultValues) {\r\n            // Enumerate over the defaultValues and if not already populated attempt to\r\n            // find a value from the root config or use the default value\r\n            objForEachKey(defaultValues, function (field, defaultValue) {\r\n                // for each unspecified field, set the default value\r\n                if (isNullOrUndefined(newConfig[field])) {\r\n                    var cfgValue = dynamicHandler.cfg[field];\r\n                    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n                        newConfig[field] = cfgValue;\r\n                    }\r\n                }\r\n                _applyDefaultValue(dynamicHandler, newConfig, field, defaultValue);\r\n            });\r\n        }\r\n        return dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](newConfig, defaultValues);\r\n    }\r\n    function _getConfig(identifier, field, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var theValue;\r\n        var extConfig = _getExtCfg(identifier, false);\r\n        var rootConfig = dynamicHandler.cfg;\r\n        if (extConfig && (extConfig[field] || !isNullOrUndefined(extConfig[field]))) {\r\n            theValue = extConfig[field];\r\n        }\r\n        else if (rootConfig[field] || !isNullOrUndefined(rootConfig[field])) {\r\n            theValue = rootConfig[field];\r\n        }\r\n        return (theValue || !isNullOrUndefined(theValue)) ? theValue : defaultValue;\r\n    }\r\n    function _iterateChain(cb) {\r\n        // Keep processing until we reach the end of the chain\r\n        var nextPlugin;\r\n        while (!!(nextPlugin = context._next())) {\r\n            var plugin = nextPlugin[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n            if (plugin) {\r\n                // callback with the current on\r\n                cb(plugin);\r\n            }\r\n        }\r\n    }\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryContext(telemetryChain, cfg, core, startAt) {\r\n    var config = createDynamicConfig(cfg);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(env) {\r\n        var nextPlugin = internalContext._next();\r\n        if (nextPlugin) {\r\n            // Run the next plugin which will call \"processNext()\"\r\n            nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, context);\r\n        }\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), config.cfg, core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for handling the unloading of the chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUnloadContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(unloadState) {\r\n        var nextPlugin = internalContext._next();\r\n        nextPlugin && nextPlugin[_DYN_UNLOAD /* @min:%2eunload */](context, unloadState);\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUnloadContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for updating the configuration\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUpdateContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(updateState) {\r\n        return context.iterate(function (plugin) {\r\n            if (isFunction(plugin[_DYN_UPDATE /* @min:%2eupdate */])) {\r\n                plugin[_DYN_UPDATE /* @min:%2eupdate */](context, updateState);\r\n            }\r\n        });\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUpdateContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates an execution chain from the array of plugins\r\n * @param plugins - The array of plugins that will be executed in this order\r\n * @param defItemCtx - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n */\r\nexport function createTelemetryProxyChain(plugins, config, core, startAt) {\r\n    var firstProxy = null;\r\n    var add = startAt ? false : true;\r\n    if (isArray(plugins) && plugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy_1 = null;\r\n        arrForEach(plugins, function (thePlugin) {\r\n            if (!add && startAt === thePlugin) {\r\n                add = true;\r\n            }\r\n            if (add && thePlugin && isFunction(thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Only add plugins that are processors\r\n                var newProxy = createTelemetryPluginProxy(thePlugin, config, core);\r\n                if (!firstProxy) {\r\n                    firstProxy = newProxy;\r\n                }\r\n                if (lastProxy_1) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy_1._setNext(newProxy);\r\n                }\r\n                lastProxy_1 = newProxy;\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !firstProxy) {\r\n        // Special case where the \"startAt\" was not in the original list of plugins\r\n        return createTelemetryProxyChain([startAt], config, core);\r\n    }\r\n    return firstProxy;\r\n}\r\n/**\r\n * Create the processing telemetry proxy instance, the proxy is used to abstract the current plugin to allow monitoring and\r\n * execution plugins while passing around the dynamic execution state (IProcessTelemetryContext), the proxy instance no longer\r\n * contains any execution state and can be reused between requests (this was not the case for 2.7.2 and earlier with the\r\n * TelemetryPluginChain class).\r\n * @param plugin - The plugin instance to proxy\r\n * @param config - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n * @returns\r\n */\r\nexport function createTelemetryPluginProxy(plugin, config, core) {\r\n    var nextProxy = null;\r\n    var hasProcessTelemetry = isFunction(plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]);\r\n    var hasSetNext = isFunction(plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */]);\r\n    var chainId;\r\n    if (plugin) {\r\n        chainId = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"-\" + plugin[STR_PRIORITY /* @min:%2epriority */] + \"-\" + _chainId++;\r\n    }\r\n    else {\r\n        chainId = \"Unknown-0-\" + _chainId++;\r\n    }\r\n    var proxyChain = {\r\n        getPlugin: function () {\r\n            return plugin;\r\n        },\r\n        getNext: function () {\r\n            return nextProxy;\r\n        },\r\n        processTelemetry: _processTelemetry,\r\n        unload: _unloadPlugin,\r\n        update: _updatePlugin,\r\n        _id: chainId,\r\n        _setNext: function (nextPlugin) {\r\n            nextProxy = nextPlugin;\r\n        }\r\n    };\r\n    function _getTelCtx() {\r\n        var itemCtx;\r\n        // Looks like a plugin didn't pass the (optional) context, so create a new one\r\n        if (plugin && isFunction(plugin[strGetTelCtx])) {\r\n            // This plugin extends from the BaseTelemetryPlugin so lets use it\r\n            itemCtx = plugin[strGetTelCtx]();\r\n        }\r\n        if (!itemCtx) {\r\n            // Create a temporary one\r\n            itemCtx = createProcessTelemetryContext(proxyChain, config, core);\r\n        }\r\n        return itemCtx;\r\n    }\r\n    function _processChain(itemCtx, processPluginFn, name, details, isAsync) {\r\n        var hasRun = false;\r\n        var identifier = plugin ? plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] : strTelemetryPluginChain;\r\n        var hasRunContext = itemCtx[strHasRunFlags];\r\n        if (!hasRunContext) {\r\n            // Assign and populate\r\n            hasRunContext = itemCtx[strHasRunFlags] = {};\r\n        }\r\n        // Ensure that we keep the context in sync\r\n        itemCtx.setNext(nextProxy);\r\n        if (plugin) {\r\n            doPerf(itemCtx[STR_CORE /* @min:%2ecore */](), function () { return identifier + \":\" + name; }, function () {\r\n                // Mark this component as having run\r\n                hasRunContext[chainId] = true;\r\n                try {\r\n                    // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                    var nextId = nextProxy ? nextProxy._id : STR_EMPTY;\r\n                    if (nextId) {\r\n                        hasRunContext[nextId] = false;\r\n                    }\r\n                    hasRun = processPluginFn(itemCtx);\r\n                }\r\n                catch (error) {\r\n                    var hasNextRun = nextProxy ? hasRunContext[nextProxy._id] : true;\r\n                    if (hasNextRun) {\r\n                        // The next plugin after us has already run so set this one as complete\r\n                        hasRun = true;\r\n                    }\r\n                    if (!nextProxy || !hasNextRun) {\r\n                        // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                        // Which means the current one is the root of the failure so log/report this failure\r\n                        _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 73 /* _eInternalMessageId.PluginException */, \"Plugin [\" + identifier + \"] failed during \" + name + \" - \" + dumpObj(error) + \", run flags: \" + dumpObj(hasRunContext));\r\n                    }\r\n                }\r\n            }, details, isAsync);\r\n        }\r\n        return hasRun;\r\n    }\r\n    function _processTelemetry(env, itemCtx) {\r\n        itemCtx = itemCtx || _getTelCtx();\r\n        function _callProcessTelemetry(itemCtx) {\r\n            if (!plugin || !hasProcessTelemetry) {\r\n                return false;\r\n            }\r\n            var pluginState = _getPluginState(plugin);\r\n            if (pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] || pluginState[STR_DISABLED]) {\r\n                return false;\r\n            }\r\n            // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n            // doesn't calls processTelemetry() instead of itemContext.processNext() or some\r\n            // other form of error occurred\r\n            if (hasSetNext) {\r\n                // Backward compatibility setting the next plugin on the instance\r\n                plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](nextProxy);\r\n            }\r\n            plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, itemCtx);\r\n            // Process Telemetry is expected to call itemCtx.processNext() or nextPlugin.processTelemetry()\r\n            return true;\r\n        }\r\n        if (!_processChain(itemCtx, _callProcessTelemetry, \"processTelemetry\", function () { return ({ item: env }); }, !(env.sync))) {\r\n            // The underlying plugin is either not defined, not enabled or does not have a processTelemetry implementation\r\n            // so we still want the next plugin to be executed.\r\n            itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n        }\r\n    }\r\n    function _unloadPlugin(unloadCtx, unloadState) {\r\n        function _callTeardown() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only teardown the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === unloadCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    // Handle plugins that don't extend from the BaseTelemetryPlugin\r\n                    pluginState[STR_CORE /* @min:%2ecore */] = null;\r\n                    pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] = true;\r\n                    pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = false;\r\n                    if (plugin[_DYN_TEARDOWN /* @min:%2eteardown */] && plugin[_DYN_TEARDOWN /* @min:%2eteardown */](unloadCtx, unloadState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(unloadCtx, _callTeardown, \"unload\", function () { }, unloadState[_DYN_IS_ASYNC /* @min:%2eisAsync */])) {\r\n            // Only called if we hasRun was not true\r\n            unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n        }\r\n    }\r\n    function _updatePlugin(updateCtx, updateState) {\r\n        function _callUpdate() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only update the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === updateCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    if (plugin[_DYN_UPDATE /* @min:%2eupdate */] && plugin[_DYN_UPDATE /* @min:%2eupdate */](updateCtx, updateState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(updateCtx, _callUpdate, \"update\", function () { }, false)) {\r\n            // Only called if we hasRun was not true\r\n            updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n        }\r\n    }\r\n    return objFreeze(proxyChain);\r\n}\r\n/**\r\n * This class will be removed!\r\n * @deprecated use createProcessTelemetryContext() instead\r\n */\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(pluginChain, config, core, startAt) {\r\n        var _self = this;\r\n        var context = createProcessTelemetryContext(pluginChain, config, core, startAt);\r\n        // Proxy all functions of the context to this object\r\n        proxyFunctions(_self, context, objKeys(context));\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { MergeConflictParser } from './mergeConflictParser';\nimport * as interfaces from './interfaces';\nimport { Delayer } from './delayer';\nimport TelemetryReporter from '@vscode/extension-telemetry';\n\nclass ScanTask {\n\tpublic origins: Set<string> = new Set<string>();\n\tpublic delayTask: Delayer<interfaces.IDocumentMergeConflict[]>;\n\n\tconstructor(delayTime: number, initialOrigin: string) {\n\t\tthis.origins.add(initialOrigin);\n\t\tthis.delayTask = new Delayer<interfaces.IDocumentMergeConflict[]>(delayTime);\n\t}\n\n\tpublic addOrigin(name: string): void {\n\t\tthis.origins.add(name);\n\t}\n\n\tpublic hasOrigin(name: string): boolean {\n\t\treturn this.origins.has(name);\n\t}\n}\n\nclass OriginDocumentMergeConflictTracker implements interfaces.IDocumentMergeConflictTracker {\n\tconstructor(private parent: DocumentMergeConflictTracker, private origin: string) {\n\t}\n\n\tgetConflicts(document: vscode.TextDocument): PromiseLike<interfaces.IDocumentMergeConflict[]> {\n\t\treturn this.parent.getConflicts(document, this.origin);\n\t}\n\n\tisPending(document: vscode.TextDocument): boolean {\n\t\treturn this.parent.isPending(document, this.origin);\n\t}\n\n\tforget(document: vscode.TextDocument) {\n\t\tthis.parent.forget(document);\n\t}\n}\n\nexport default class DocumentMergeConflictTracker implements vscode.Disposable, interfaces.IDocumentMergeConflictTrackerService {\n\tprivate cache: Map<string, ScanTask> = new Map();\n\tprivate delayExpireTime: number = 0;\n\n\tconstructor(private readonly telemetryReporter: TelemetryReporter) { }\n\n\tgetConflicts(document: vscode.TextDocument, origin: string): PromiseLike<interfaces.IDocumentMergeConflict[]> {\n\t\t// Attempt from cache\n\n\t\tconst key = this.getCacheKey(document);\n\n\t\tif (!key) {\n\t\t\t// Document doesn't have a uri, can't cache it, so return\n\t\t\treturn Promise.resolve(this.getConflictsOrEmpty(document, [origin]));\n\t\t}\n\n\t\tlet cacheItem = this.cache.get(key);\n\t\tif (!cacheItem) {\n\t\t\tcacheItem = new ScanTask(this.delayExpireTime, origin);\n\t\t\tthis.cache.set(key, cacheItem);\n\t\t}\n\t\telse {\n\t\t\tcacheItem.addOrigin(origin);\n\t\t}\n\n\t\treturn cacheItem.delayTask.trigger(() => {\n\t\t\tconst conflicts = this.getConflictsOrEmpty(document, Array.from(cacheItem!.origins));\n\n\t\t\tthis.cache?.delete(key!);\n\n\t\t\treturn conflicts;\n\t\t});\n\t}\n\n\tisPending(document: vscode.TextDocument, origin: string): boolean {\n\t\tif (!document) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = this.getCacheKey(document);\n\t\tif (!key) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst task = this.cache.get(key);\n\t\tif (!task) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn task.hasOrigin(origin);\n\t}\n\n\tcreateTracker(origin: string): interfaces.IDocumentMergeConflictTracker {\n\t\treturn new OriginDocumentMergeConflictTracker(this, origin);\n\t}\n\n\tforget(document: vscode.TextDocument) {\n\t\tconst key = this.getCacheKey(document);\n\n\t\tif (key) {\n\t\t\tthis.cache.delete(key);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.cache.clear();\n\t}\n\n\tprivate readonly seenDocumentsWithConflicts = new Set<string>();\n\n\tprivate getConflictsOrEmpty(document: vscode.TextDocument, _origins: string[]): interfaces.IDocumentMergeConflict[] {\n\t\tconst containsConflict = MergeConflictParser.containsConflict(document);\n\n\t\tif (!containsConflict) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst conflicts = MergeConflictParser.scanDocument(document, this.telemetryReporter);\n\n\t\tconst key = document.uri.toString();\n\t\t// Don't report telemetry for the same document twice. This is an approximation, but good enough.\n\t\t// Otherwise redo/undo could trigger this event multiple times.\n\t\tif (!this.seenDocumentsWithConflicts.has(key)) {\n\t\t\tthis.seenDocumentsWithConflicts.add(key);\n\n\t\t\t/* __GDPR__\n\t\t\t\t\"mergeMarkers.documentWithConflictMarkersOpened\" : {\n\t\t\t\t\t\"owner\": \"hediet\",\n\t\t\t\t\t\"comment\": \"Used to determine how many documents with conflicts are opened.\",\n\t\t\t\t\t\"conflictCount\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true, \"comment\": \"Total number of conflict counts\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.telemetryReporter.sendTelemetryEvent('mergeMarkers.documentWithConflictMarkersOpened', {}, {\n\t\t\t\tconflictCount: conflicts.length,\n\t\t\t});\n\t\t}\n\n\t\treturn conflicts;\n\t}\n\n\tprivate getCacheKey(document: vscode.TextDocument): string | null {\n\t\tif (document.uri) {\n\t\t\treturn document.uri.toString();\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isBoolean, isFunction, isNullOrUndefined, isString } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\n/**\r\n * @internal\r\n * @ignore\r\n * @param str\r\n * @param defaultValue\r\n * @returns\r\n */\r\nfunction _stringToBoolOrDefault(theValue, defaultValue, theConfig) {\r\n    if (!theValue && isNullOrUndefined(theValue)) {\r\n        return defaultValue;\r\n    }\r\n    if (isBoolean(theValue)) {\r\n        return theValue;\r\n    }\r\n    return asString(theValue)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the field defined as an object\r\n * that should be merged\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfMerge(defaultValue) {\r\n    return {\r\n        mrg: true,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field set function\r\n * @param setter - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfSet(setter, defaultValue) {\r\n    return {\r\n        set: setter,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field validator\r\n * @param validator - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfValidate(validator, defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        isVal: validator,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate and convert the user\r\n * provided value to a boolean from a string or boolean value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBoolean(defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        set: _stringToBoolOrDefault,\r\n        v: !!defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfFunc(defaultValue) {\r\n    return {\r\n        isVal: isFunction,\r\n        v: defaultValue || null\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default string value to apply it not provided or it's not valid, defaults to an empty string\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfString(defaultValue) {\r\n    return {\r\n        isVal: isString,\r\n        v: asString(defaultValue || STR_EMPTY)\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance identifying that value associated with this property\r\n * should not have it's properties converted into a dynamic config properties.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBlockPropValue(defaultValue) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = true,\r\n        _a.v = defaultValue,\r\n        _a;\r\n}\r\n//# sourceMappingURL=ConfigDefaultHelpers.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as interfaces from './interfaces';\nimport * as vscode from 'vscode';\nimport type TelemetryReporter from '@vscode/extension-telemetry';\n\nexport class DocumentMergeConflict implements interfaces.IDocumentMergeConflict {\n\n\tpublic range: vscode.Range;\n\tpublic current: interfaces.IMergeRegion;\n\tpublic incoming: interfaces.IMergeRegion;\n\tpublic commonAncestors: interfaces.IMergeRegion[];\n\tpublic splitter: vscode.Range;\n\tprivate applied = false;\n\n\tconstructor(descriptor: interfaces.IDocumentMergeConflictDescriptor, private readonly telemetryReporter: TelemetryReporter) {\n\t\tthis.range = descriptor.range;\n\t\tthis.current = descriptor.current;\n\t\tthis.incoming = descriptor.incoming;\n\t\tthis.commonAncestors = descriptor.commonAncestors;\n\t\tthis.splitter = descriptor.splitter;\n\t}\n\n\tpublic commitEdit(type: interfaces.CommitType, editor: vscode.TextEditor, edit?: vscode.TextEditorEdit): Thenable<boolean> {\n\t\tfunction commitTypeToString(type: interfaces.CommitType): string {\n\t\t\tswitch (type) {\n\t\t\t\tcase interfaces.CommitType.Current:\n\t\t\t\t\treturn 'current';\n\t\t\t\tcase interfaces.CommitType.Incoming:\n\t\t\t\t\treturn 'incoming';\n\t\t\t\tcase interfaces.CommitType.Both:\n\t\t\t\t\treturn 'both';\n\t\t\t}\n\t\t}\n\n\t\t/* __GDPR__\n\t\t\t\"mergeMarkers.accept\" : {\n\t\t\t\t\"owner\": \"hediet\",\n\t\t\t\t\"comment\": \"Used to understand how the inline merge editor experience is used.\",\n\t\t\t\t\"resolution\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"comment\": \"Indicates how the merge conflict was resolved by the user\" }\n\t\t\t}\n\t\t*/\n\t\tthis.telemetryReporter.sendTelemetryEvent('mergeMarkers.accept', { resolution: commitTypeToString(type) });\n\n\t\tif (edit) {\n\n\t\t\tthis.applyEdit(type, editor.document, edit);\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\treturn editor.edit((edit) => this.applyEdit(type, editor.document, edit));\n\t}\n\n\tpublic applyEdit(type: interfaces.CommitType, document: vscode.TextDocument, edit: { replace(range: vscode.Range, newText: string): void }): void {\n\t\tif (this.applied) {\n\t\t\treturn;\n\t\t}\n\t\tthis.applied = true;\n\n\t\t// Each conflict is a set of ranges as follows, note placements or newlines\n\t\t// which may not in spans\n\t\t// [ Conflict Range             -- (Entire content below)\n\t\t//   [ Current Header ]\\n       -- >>>>> Header\n\t\t//   [ Current Content ]        -- (content)\n\t\t//   [ Splitter ]\\n             -- =====\n\t\t//   [ Incoming Content ]       -- (content)\n\t\t//   [ Incoming Header ]\\n      -- <<<<< Incoming\n\t\t// ]\n\t\tif (type === interfaces.CommitType.Current) {\n\t\t\t// Replace [ Conflict Range ] with [ Current Content ]\n\t\t\tconst content = document.getText(this.current.content);\n\t\t\tthis.replaceRangeWithContent(content, edit);\n\t\t}\n\t\telse if (type === interfaces.CommitType.Incoming) {\n\t\t\tconst content = document.getText(this.incoming.content);\n\t\t\tthis.replaceRangeWithContent(content, edit);\n\t\t}\n\t\telse if (type === interfaces.CommitType.Both) {\n\t\t\t// Replace [ Conflict Range ] with [ Current Content ] + \\n + [ Incoming Content ]\n\n\t\t\tconst currentContent = document.getText(this.current.content);\n\t\t\tconst incomingContent = document.getText(this.incoming.content);\n\n\t\t\tedit.replace(this.range, currentContent.concat(incomingContent));\n\t\t}\n\t}\n\n\tprivate replaceRangeWithContent(content: string, edit: { replace(range: vscode.Range, newText: string): void }) {\n\t\tif (this.isNewlineOnly(content)) {\n\t\t\tedit.replace(this.range, '');\n\t\t\treturn;\n\t\t}\n\n\t\t// Replace [ Conflict Range ] with [ Current Content ]\n\t\tedit.replace(this.range, content);\n\t}\n\n\tprivate isNewlineOnly(text: string) {\n\t\treturn text === '\\n' || text === '\\r\\n';\n\t}\n}\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport { __spreadArrayFn as __spreadArray } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createPromise, createSyncAllSettledPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrAppend, arrForEach, arrIndexOf, createTimeout, deepExtend, hasDocument, isFunction, isNullOrUndefined, isPlainObject, isPromiseLike, objDeepFreeze, objDefine, objForEachKey, objFreeze, objHasOwn, scheduleTimeout, throwError } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { ActiveStatus } from \"../JavaScriptSDK.Enums/InitActiveStatusEnum\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_CREATE_NEW, _DYN_ENABLED, _DYN_GET_NOTIFY_MGR, _DYN_GET_PLUGIN, _DYN_GET_PROCESS_TEL_CONT2, _DYN_IDENTIFIER, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_I_KEY, _DYN_LENGTH, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_NAME, _DYN_NOTIFY, _DYN_ON_COMPLETE, _DYN_POLL_INTERNAL_LOGS, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SET_DF, _DYN_SPLICE, _DYN_STOP_POLLING_INTERNA3, _DYN_TEARDOWN, _DYN_TIME, _DYN_UNLOAD, _DYN_VALUE, _DYN_VERSION, _DYN_WATCH, _DYN__INACTIVE } from \"../__DynamicConstants\";\r\nimport { doUnloadAll, runTargetUnload } from \"./AsyncUtils\";\r\nimport { ChannelControllerPriority } from \"./Constants\";\r\nimport { createCookieMgr } from \"./CookieMgr\";\r\nimport { createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { getDebugListener } from \"./DbgExtensionUtils\";\r\nimport { DiagnosticLogger, _InternalLogMessage, _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getSetValue, isNotNullOrUndefined, proxyFunctionAs, proxyFunctions, toISOString } from \"./HelperFuncs\";\r\nimport { STR_CHANNELS, STR_CORE, STR_CREATE_PERF_MGR, STR_DISABLED, STR_EMPTY, STR_EVENTS_DISCARDED, STR_EXTENSIONS, STR_EXTENSION_CONFIG, STR_GET_PERF_MGR, STR_PRIORITY, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { PerfManager, doPerf, getGblPerfMgr } from \"./PerfManager\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext, createTelemetryProxyChain } from \"./ProcessTelemetryContext\";\r\nimport { _getPluginState, createDistributedTraceContext, initializePlugins, sortPlugins } from \"./TelemetryHelpers\";\r\nimport { TelemetryInitializerPlugin } from \"./TelemetryInitializerPlugin\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strValidationError = \"Plugins must provide initialize method\";\r\nvar strNotificationManager = \"_notificationManager\";\r\nvar strSdkUnloadingError = \"SDK is still unloading...\";\r\nvar strSdkNotInitialized = \"SDK is not initialized\";\r\nvar maxInitQueueSize = 100;\r\nvar maxInitTimeout = 50000;\r\n// const strPluginUnloadFailed = \"Failed to unload plugin\";\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultConfig = objDeepFreeze((_a = {\r\n        cookieCfg: {}\r\n    },\r\n    _a[STR_EXTENSIONS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_CHANNELS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_EXTENSION_CONFIG] = { ref: true, v: {} },\r\n    _a[STR_CREATE_PERF_MGR] = UNDEFINED_VALUE,\r\n    _a.loggingLevelConsole = 0 /* eLoggingSeverity.DISABLED */,\r\n    _a.diagnosticLogInterval = UNDEFINED_VALUE,\r\n    _a));\r\n/**\r\n * Helper to create the default performance manager\r\n * @param core\r\n * @param notificationMgr\r\n */\r\nfunction _createPerfManager(core, notificationMgr) {\r\n    return new PerfManager(notificationMgr);\r\n}\r\nfunction _validateExtensions(logger, channelPriority, allExtensions) {\r\n    var _a;\r\n    // Concat all available extensions\r\n    var coreExtensions = [];\r\n    var channels = [];\r\n    // Check if any two extensions have the same priority, then warn to console\r\n    // And extract the local extensions from the\r\n    var extPriorities = {};\r\n    // Extension validation\r\n    arrForEach(allExtensions, function (ext) {\r\n        // Check for ext.initialize\r\n        if (isNullOrUndefined(ext) || isNullOrUndefined(ext[_DYN_INITIALIZE /* @min:%2einitialize */])) {\r\n            throwError(strValidationError);\r\n        }\r\n        var extPriority = ext[STR_PRIORITY /* @min:%2epriority */];\r\n        var identifier = ext[_DYN_IDENTIFIER /* @min:%2eidentifier */];\r\n        if (ext && extPriority) {\r\n            if (!isNullOrUndefined(extPriorities[extPriority])) {\r\n                _warnToConsole(logger, \"Two extensions have same priority #\" + extPriority + \" - \" + extPriorities[extPriority] + \", \" + identifier);\r\n            }\r\n            else {\r\n                // set a value\r\n                extPriorities[extPriority] = identifier;\r\n            }\r\n        }\r\n        // Split extensions to core and channels\r\n        if (!extPriority || extPriority < channelPriority) {\r\n            // Add to core extension that will be managed by AppInsightsCore\r\n            coreExtensions[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n        else {\r\n            channels[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n    });\r\n    return _a = {},\r\n        _a[STR_CORE /* @min:core */] = coreExtensions,\r\n        _a[STR_CHANNELS /* @min:channels */] = channels,\r\n        _a;\r\n}\r\nfunction _isPluginPresent(thePlugin, plugins) {\r\n    var exists = false;\r\n    arrForEach(plugins, function (plugin) {\r\n        if (plugin === thePlugin) {\r\n            exists = true;\r\n            return -1;\r\n        }\r\n    });\r\n    return exists;\r\n}\r\nfunction _deepMergeConfig(details, target, newValues, merge) {\r\n    // Lets assign the new values to the existing config\r\n    if (newValues) {\r\n        objForEachKey(newValues, function (key, value) {\r\n            if (merge) {\r\n                if (isPlainObject(value) && isPlainObject(target[key])) {\r\n                    // The target is an object and it has a value\r\n                    _deepMergeConfig(details, target[key], value, merge);\r\n                }\r\n            }\r\n            if (merge && isPlainObject(value) && isPlainObject(target[key])) {\r\n                // The target is an object and it has a value\r\n                _deepMergeConfig(details, target[key], value, merge);\r\n            }\r\n            else {\r\n                // Just Assign (replace) and/or make the property dynamic\r\n                details.set(target, key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _findWatcher(listeners, newWatcher) {\r\n    var theListener = null;\r\n    var idx = -1;\r\n    arrForEach(listeners, function (listener, lp) {\r\n        if (listener.w === newWatcher) {\r\n            theListener = listener;\r\n            idx = lp;\r\n            return -1;\r\n        }\r\n    });\r\n    return { i: idx, l: theListener };\r\n}\r\nfunction _addDelayedCfgListener(listeners, newWatcher) {\r\n    var theListener = _findWatcher(listeners, newWatcher).l;\r\n    if (!theListener) {\r\n        theListener = {\r\n            w: newWatcher,\r\n            rm: function () {\r\n                var fnd = _findWatcher(listeners, newWatcher);\r\n                if (fnd.i !== -1) {\r\n                    listeners[_DYN_SPLICE /* @min:%2esplice */](fnd.i, 1);\r\n                }\r\n            }\r\n        };\r\n        listeners[_DYN_PUSH /* @min:%2epush */](theListener);\r\n    }\r\n    return theListener;\r\n}\r\nfunction _registerDelayedCfgListener(config, listeners, logger) {\r\n    arrForEach(listeners, function (listener) {\r\n        var unloadHdl = onConfigChange(config, listener.w, logger);\r\n        delete listener.w; // Clear the listener reference so it will get garbage collected.\r\n        // replace the remove function\r\n        listener.rm = function () {\r\n            unloadHdl.rm();\r\n        };\r\n    });\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _initDebugListener(configHandler, unloadContainer, notificationManager, debugListener) {\r\n    // Will get recalled if any referenced config values are changed\r\n    unloadContainer.add(configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n        var disableDbgExt = details.cfg.disableDbgExt;\r\n        if (disableDbgExt === true && debugListener) {\r\n            // Remove any previously loaded debug listener\r\n            notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](debugListener);\r\n            debugListener = null;\r\n        }\r\n        if (notificationManager && !debugListener && disableDbgExt !== true) {\r\n            debugListener = getDebugListener(details.cfg);\r\n            notificationManager[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](debugListener);\r\n        }\r\n    }));\r\n    return debugListener;\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _createUnloadHook(unloadHook) {\r\n    return objDefine({\r\n        rm: function () {\r\n            unloadHook.rm();\r\n        }\r\n    }, \"toJSON\", { v: function () { return \"aicore::onCfgChange<\" + JSON.stringify(unloadHook) + \">\"; } });\r\n}\r\n/**\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _configHandler;\r\n        var _isInitialized;\r\n        var _logger;\r\n        var _eventQueue;\r\n        var _notificationManager;\r\n        var _perfManager;\r\n        var _cfgPerfManager;\r\n        var _cookieManager;\r\n        var _pluginChain;\r\n        var _configExtensions;\r\n        var _channelConfig;\r\n        var _channels;\r\n        var _isUnloading;\r\n        var _telemetryInitializerPlugin;\r\n        var _internalLogsEventName;\r\n        var _evtNamespace;\r\n        var _unloadHandlers;\r\n        var _hookContainer;\r\n        var _debugListener;\r\n        var _traceCtx;\r\n        var _instrumentationKey;\r\n        var _cfgListeners;\r\n        var _extensions;\r\n        var _pluginVersionStringArr;\r\n        var _pluginVersionString;\r\n        var _activeStatus; // to indicate if ikey or endpoint url promised is resolved or not\r\n        var _endpoint;\r\n        var _initInMemoMaxSize; // max event count limit during wait for init promises to be resolved\r\n        var _isStatusSet; // track if active status is set in case of init timeout and init promises setting the status twice\r\n        var _initTimer;\r\n        /**\r\n         * Internal log poller\r\n         */\r\n        var _internalLogPoller;\r\n        var _internalLogPollerListening;\r\n        var _forceStopInternalLogPoller;\r\n        dynamicProto(AppInsightsCore, this, function (_self) {\r\n            // Set the default values (also called during teardown)\r\n            _initDefaults();\r\n            // Special internal method to allow the unit tests and DebugPlugin to hook embedded objects\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_extensions, _eventQueue];\r\n            };\r\n            _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () { return _isInitialized; };\r\n            // since version 3.3.0\r\n            _self.activeStatus = function () { return _activeStatus; };\r\n            // since version 3.3.0\r\n            // internal\r\n            _self._setPendingStatus = function () {\r\n                _activeStatus = 3 /* eActiveStatus.PENDING */;\r\n            };\r\n            // Creating the self.initialize = ()\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, extensions, logger, notificationManager) {\r\n                if (_isUnloading) {\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                // Make sure core is only initialized once\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    throwError(\"Core cannot be initialized more than once\");\r\n                }\r\n                _configHandler = createDynamicConfig(config, defaultConfig, logger || _self[_DYN_LOGGER /* @min:%2elogger */], false);\r\n                // Re-assigning the local config property so we don't have any references to the passed value and it can be garbage collected\r\n                config = _configHandler.cfg;\r\n                // This will be \"re-run\" if the referenced config properties are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var rootCfg = details.cfg;\r\n                    var isPending = _activeStatus === 3 /* eActiveStatus.PENDING */;\r\n                    if (isPending) {\r\n                        // means waiting for previous promises to be resolved, won't apply new changes\r\n                        return;\r\n                    }\r\n                    _initInMemoMaxSize = rootCfg.initInMemoMaxSize || maxInitQueueSize;\r\n                    // app Insights core only handle ikey and endpointurl, aisku will handle cs\r\n                    var ikey = rootCfg[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    var endpointUrl = rootCfg.endpointUrl; // do not need to validate endpoint url, if it is null, default one will be set by sender\r\n                    if (isNullOrUndefined(ikey)) {\r\n                        _instrumentationKey = null;\r\n                        // if new ikey is null, set status to be inactive, all new events will be saved in memory or dropped\r\n                        _activeStatus = ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */];\r\n                        var msg = \"Please provide instrumentation key\";\r\n                        if (!_isInitialized) {\r\n                            // only throw error during initialization\r\n                            throwError(msg);\r\n                        }\r\n                        else {\r\n                            _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, msg);\r\n                            _releaseQueues();\r\n                        }\r\n                        return;\r\n                    }\r\n                    var promises = [];\r\n                    if (isPromiseLike(ikey)) {\r\n                        promises[_DYN_PUSH /* @min:%2epush */](ikey);\r\n                        _instrumentationKey = null; // reset current local ikey variable (otherwise it will always be the previous ikeys if timeout is called before promise cb)\r\n                    }\r\n                    else {\r\n                        // string\r\n                        _instrumentationKey = ikey;\r\n                    }\r\n                    if (isPromiseLike(endpointUrl)) {\r\n                        promises[_DYN_PUSH /* @min:%2epush */](endpointUrl);\r\n                        _endpoint = null; // reset current local endpoint variable (otherwise it will always be the previous urls if timeout is called before promise cb)\r\n                    }\r\n                    else {\r\n                        // string or null\r\n                        _endpoint = endpointUrl;\r\n                    }\r\n                    // at least have one promise\r\n                    if (promises[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        // reset to false for new dynamic changes\r\n                        _isStatusSet = false;\r\n                        _activeStatus = 3 /* eActiveStatus.PENDING */;\r\n                        var initTimeout = isNotNullOrUndefined(rootCfg.initTimeOut) ? rootCfg.initTimeOut : maxInitTimeout; // rootCfg.initTimeOut could be 0\r\n                        var allPromises = createSyncAllSettledPromise(promises);\r\n                        _initTimer = scheduleTimeout(function () {\r\n                            // set _isStatusSet to true\r\n                            // set active status\r\n                            // release queues\r\n                            _initTimer = null;\r\n                            if (!_isStatusSet) {\r\n                                _setStatus();\r\n                            }\r\n                        }, initTimeout);\r\n                        doAwaitResponse(allPromises, function (response) {\r\n                            try {\r\n                                if (_isStatusSet) {\r\n                                    // promises take too long to resolve, ignore them\r\n                                    // active status should be set by timeout already\r\n                                    return;\r\n                                }\r\n                                if (!response.rejected) {\r\n                                    var values = response[_DYN_VALUE /* @min:%2evalue */];\r\n                                    if (values && values[_DYN_LENGTH /* @min:%2elength */]) {\r\n                                        // ikey\r\n                                        var ikeyRes = values[0];\r\n                                        _instrumentationKey = ikeyRes && ikeyRes[_DYN_VALUE /* @min:%2evalue */];\r\n                                        // endpoint\r\n                                        if (values[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                                            var endpointRes = values[1];\r\n                                            _endpoint = endpointRes && endpointRes[_DYN_VALUE /* @min:%2evalue */];\r\n                                        }\r\n                                    }\r\n                                    if (_instrumentationKey) {\r\n                                        // if ikey is null, no need to trigger extra dynamic changes for extensions\r\n                                        config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = _instrumentationKey; // set config.instrumentationKey for extensions to consume\r\n                                        config.endpointUrl = _endpoint; // set config.endpointUrl for extensions to consume\r\n                                    }\r\n                                }\r\n                                // set _isStatusSet to true\r\n                                // set active status\r\n                                // release queues\r\n                                _setStatus();\r\n                            }\r\n                            catch (e) {\r\n                                if (!_isStatusSet) {\r\n                                    _setStatus();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        // means no promises\r\n                        _setStatus();\r\n                    }\r\n                    //_instrumentationKey = details.cfg.instrumentationKey;\r\n                    // Mark the extensionConfig and all first level keys as referenced\r\n                    // This is so that calls to getExtCfg() will always return the same object\r\n                    // Even when a user may \"re-assign\" the plugin properties (or it's unloaded/reloaded)\r\n                    var extCfg = details.ref(details.cfg, STR_EXTENSION_CONFIG);\r\n                    objForEachKey(extCfg, function (key) {\r\n                        details.ref(extCfg, key);\r\n                    });\r\n                }));\r\n                _notificationManager = notificationManager;\r\n                // Initialize the debug listener outside of the closure to reduce the retained memory footprint\r\n                _debugListener = _initDebugListener(_configHandler, _hookContainer, _notificationManager && _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */](), _debugListener);\r\n                _initPerfManager();\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = logger;\r\n                var cfgExtensions = config[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                // Extension validation\r\n                _configExtensions = [];\r\n                _configExtensions[_DYN_PUSH /* @min:%2epush */].apply(_configExtensions, __spreadArray(__spreadArray([], extensions, false), cfgExtensions, false));\r\n                _channelConfig = config[STR_CHANNELS /* @min:%2echannels */];\r\n                _initPluginChain(null);\r\n                if (!_channels || _channels[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    throwError(\"No \" + STR_CHANNELS + \" available\");\r\n                }\r\n                if (_channelConfig && _channelConfig[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                    var teeController = _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */](\"TeeChannelController\");\r\n                    if (!teeController || !teeController.plugin) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"TeeChannel required\");\r\n                    }\r\n                }\r\n                _registerDelayedCfgListener(config, _cfgListeners, _logger);\r\n                _cfgListeners = null;\r\n                _isInitialized = true;\r\n                if (_activeStatus === ActiveStatus.ACTIVE) {\r\n                    _releaseQueues();\r\n                }\r\n            };\r\n            _self.getChannels = function () {\r\n                var controls = [];\r\n                if (_channels) {\r\n                    arrForEach(_channels, function (channel) {\r\n                        controls[_DYN_PUSH /* @min:%2epush */](channel);\r\n                    });\r\n                }\r\n                return objFreeze(controls);\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                doPerf(_self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */](), function () { return \"AppInsightsCore:track\"; }, function () {\r\n                    if (telemetryItem === null) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        // throw error\r\n                        throwError(\"Invalid telemetry item\");\r\n                    }\r\n                    // do basic validation before sending it through the pipeline\r\n                    if (!telemetryItem[_DYN_NAME /* @min:%2ename */] && isNullOrUndefined(telemetryItem[_DYN_NAME /* @min:%2ename */])) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        throwError(\"telemetry name required\");\r\n                    }\r\n                    // setup default iKey if not passed in\r\n                    telemetryItem[_DYN_I_KEY /* @min:%2eiKey */] = telemetryItem[_DYN_I_KEY /* @min:%2eiKey */] || _instrumentationKey;\r\n                    // add default timestamp if not passed in\r\n                    telemetryItem[_DYN_TIME /* @min:%2etime */] = telemetryItem[_DYN_TIME /* @min:%2etime */] || toISOString(new Date());\r\n                    // Common Schema 4.0\r\n                    telemetryItem.ver = telemetryItem.ver || \"4.0\";\r\n                    if (!_isUnloading && _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]() && _activeStatus === ActiveStatus.ACTIVE) {\r\n                        // Process the telemetry plugin chain\r\n                        _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](telemetryItem);\r\n                    }\r\n                    else if (_activeStatus !== ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */]) {\r\n                        // Queue events until all extensions are initialized\r\n                        if (_eventQueue[_DYN_LENGTH /* @min:%2elength */] <= _initInMemoMaxSize) {\r\n                            // set limit, if full, stop adding new events\r\n                            _eventQueue[_DYN_PUSH /* @min:%2epush */](telemetryItem);\r\n                        }\r\n                    }\r\n                }, function () { return ({ item: telemetryItem }); }, !(telemetryItem.sync));\r\n            };\r\n            _self[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */] = _createTelCtx;\r\n            _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */] = function () {\r\n                if (!_notificationManager) {\r\n                    _notificationManager = new NotificationManager(_configHandler.cfg);\r\n                    // For backward compatibility only\r\n                    _self[strNotificationManager] = _notificationManager;\r\n                }\r\n                return _notificationManager;\r\n            };\r\n            /**\r\n             * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n             * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n             * called.\r\n             * @param listener - An INotificationListener object.\r\n             */\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _self.getNotifyMgr()[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - INotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                if (_notificationManager) {\r\n                    _notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](listener);\r\n                }\r\n            };\r\n            _self.getCookieMgr = function () {\r\n                if (!_cookieManager) {\r\n                    _cookieManager = createCookieMgr(_configHandler.cfg, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _cookieManager;\r\n            };\r\n            _self.setCookieMgr = function (cookieMgr) {\r\n                if (_cookieManager !== cookieMgr) {\r\n                    runTargetUnload(_cookieManager, false);\r\n                    _cookieManager = cookieMgr;\r\n                }\r\n            };\r\n            _self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */] = function () {\r\n                return _perfManager || _cfgPerfManager || getGblPerfMgr();\r\n            };\r\n            _self.setPerfMgr = function (perfMgr) {\r\n                _perfManager = perfMgr;\r\n            };\r\n            _self.eventCnt = function () {\r\n                return _eventQueue[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.releaseQueue = function () {\r\n                if (_isInitialized && _eventQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var eventQueue = _eventQueue;\r\n                    _eventQueue = [];\r\n                    if (_activeStatus === 2 /* eActiveStatus.ACTIVE */) {\r\n                        arrForEach(eventQueue, function (event) {\r\n                            event[_DYN_I_KEY /* @min:%2eiKey */] = event[_DYN_I_KEY /* @min:%2eiKey */] || _instrumentationKey;\r\n                            _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](event);\r\n                        });\r\n                    }\r\n                    else {\r\n                        // new one for msg ikey\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"core init status is not active\");\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */] = function (eventName) {\r\n                _internalLogsEventName = eventName || null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                return _startLogPoller(true);\r\n            };\r\n            function _setStatus() {\r\n                _isStatusSet = true;\r\n                if (isNullOrUndefined(_instrumentationKey)) {\r\n                    _activeStatus = ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */];\r\n                    _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 112 /* _eInternalMessageId.InitPromiseException */, \"ikey can't be resolved from promises\");\r\n                }\r\n                else {\r\n                    _activeStatus = ActiveStatus.ACTIVE;\r\n                }\r\n                _releaseQueues();\r\n            }\r\n            function _releaseQueues() {\r\n                if (_isInitialized) {\r\n                    _self.releaseQueue();\r\n                    _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */]();\r\n                }\r\n            }\r\n            function _startLogPoller(alwaysStart) {\r\n                if ((!_internalLogPoller || !_internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */]) && !_forceStopInternalLogPoller) {\r\n                    var shouldStart = alwaysStart || (_logger && _logger.queue[_DYN_LENGTH /* @min:%2elength */] > 0);\r\n                    if (shouldStart) {\r\n                        if (!_internalLogPollerListening) {\r\n                            _internalLogPollerListening = true;\r\n                            // listen for any configuration changes so that changes to the\r\n                            // interval will cause the timer to be re-initialized\r\n                            _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                                var interval = details.cfg.diagnosticLogInterval;\r\n                                if (!interval || !(interval > 0)) {\r\n                                    interval = 10000;\r\n                                }\r\n                                var isRunning = false;\r\n                                if (_internalLogPoller) {\r\n                                    // It was already created so remember it's running and cancel\r\n                                    isRunning = _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */];\r\n                                    _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                                }\r\n                                // Create / reconfigure\r\n                                _internalLogPoller = createTimeout(_flushInternalLogs, interval);\r\n                                _internalLogPoller.unref();\r\n                                // Restart if previously running\r\n                                _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = isRunning;\r\n                            }));\r\n                        }\r\n                        _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = true;\r\n                    }\r\n                }\r\n                return _internalLogPoller;\r\n            }\r\n            _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */] = function () {\r\n                _forceStopInternalLogPoller = true;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                _flushInternalLogs();\r\n            };\r\n            // Add addTelemetryInitializer\r\n            proxyFunctions(_self, function () { return _telemetryInitializerPlugin; }, [\"addTelemetryInitializer\"]);\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync, unloadComplete, cbTimeout) {\r\n                var _a;\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_isInitialized) {\r\n                    // The SDK is not initialized\r\n                    throwError(strSdkNotInitialized);\r\n                }\r\n                // Check if the SDK still unloading so throw\r\n                if (_isUnloading) {\r\n                    // The SDK is already unloading\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                var unloadState = (_a = {\r\n                        reason: 50 /* TelemetryUnloadReason.SdkUnload */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                    _a.flushComplete = false,\r\n                    _a);\r\n                var result;\r\n                if (isAsync && !unloadComplete) {\r\n                    result = createPromise(function (resolve) {\r\n                        // Set the callback to the promise resolve callback\r\n                        unloadComplete = resolve;\r\n                    });\r\n                }\r\n                var processUnloadCtx = createProcessTelemetryUnloadContext(_getPluginChain(), _self);\r\n                processUnloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                    _hookContainer.run(_self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                    // Run any \"unload\" functions for the _cookieManager, _notificationManager and _logger\r\n                    doUnloadAll([_cookieManager, _notificationManager, _logger], isAsync, function () {\r\n                        _initDefaults();\r\n                        unloadComplete && unloadComplete(unloadState);\r\n                    });\r\n                }, _self);\r\n                function _doUnload(flushComplete) {\r\n                    unloadState.flushComplete = flushComplete;\r\n                    _isUnloading = true;\r\n                    // Run all of the unload handlers first (before unloading the plugins)\r\n                    _unloadHandlers.run(processUnloadCtx, unloadState);\r\n                    // Stop polling the internal logs\r\n                    _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */]();\r\n                    // Start unloading the components, from this point onwards the SDK should be considered to be in an unstable state\r\n                    processUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                _flushInternalLogs();\r\n                if (!_flushChannels(isAsync, _doUnload, 6 /* SendRequestReason.SdkUnload */, cbTimeout)) {\r\n                    _doUnload(false);\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */] = _getPlugin;\r\n            _self.addPlugin = function (plugin, replaceExisting, isAsync, addCb) {\r\n                if (!plugin) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(strValidationError);\r\n                    return;\r\n                }\r\n                var existingPlugin = _getPlugin(plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                if (existingPlugin && !replaceExisting) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(\"Plugin [\" + plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"] is already loaded!\");\r\n                    return;\r\n                }\r\n                var updateState = {\r\n                    reason: 16 /* TelemetryUpdateReason.PluginAdded */\r\n                };\r\n                function _addPlugin(removed) {\r\n                    _configExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                    updateState.added = [plugin];\r\n                    // Re-Initialize the plugin chain\r\n                    _initPluginChain(updateState);\r\n                    addCb && addCb(true);\r\n                }\r\n                if (existingPlugin) {\r\n                    var removedPlugins_1 = [existingPlugin.plugin];\r\n                    var unloadState = {\r\n                        reason: 2 /* TelemetryUnloadReason.PluginReplace */,\r\n                        isAsync: !!isAsync\r\n                    };\r\n                    _removePlugins(removedPlugins_1, unloadState, function (removed) {\r\n                        if (!removed) {\r\n                            // Previous plugin was successfully removed or was not installed\r\n                            addCb && addCb(false);\r\n                        }\r\n                        else {\r\n                            updateState.removed = removedPlugins_1;\r\n                            updateState.reason |= 32 /* TelemetryUpdateReason.PluginRemoved */;\r\n                            _addPlugin(true);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    _addPlugin(false);\r\n                }\r\n            };\r\n            _self.updateCfg = function (newConfig, mergeExisting) {\r\n                if (mergeExisting === void 0) { mergeExisting = true; }\r\n                var updateState;\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    updateState = {\r\n                        reason: 1 /* TelemetryUpdateReason.ConfigurationChanged */,\r\n                        cfg: _configHandler.cfg,\r\n                        oldCfg: deepExtend({}, _configHandler.cfg),\r\n                        newConfig: deepExtend({}, newConfig),\r\n                        merge: mergeExisting\r\n                    };\r\n                    newConfig = updateState.newConfig;\r\n                    var cfg = _configHandler.cfg;\r\n                    // replace the immutable (if initialized) values\r\n                    // We don't currently allow updating the extensions and channels via the update config\r\n                    // So overwriting any user provided values to reuse the existing values\r\n                    newConfig[STR_EXTENSIONS /* @min:%2eextensions */] = cfg[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                    newConfig[STR_CHANNELS /* @min:%2echannels */] = cfg[STR_CHANNELS /* @min:%2echannels */];\r\n                }\r\n                // Explicitly blocking any previous config watchers so that they don't get called because\r\n                // of this bulk update (Probably not necessary)\r\n                _configHandler._block(function (details) {\r\n                    // Lets assign the new values to the existing config either overwriting or re-assigning\r\n                    var theConfig = details.cfg;\r\n                    _deepMergeConfig(details, theConfig, newConfig, mergeExisting);\r\n                    if (!mergeExisting) {\r\n                        // Remove (unassign) the values \"missing\" from the newConfig and also not in the default config\r\n                        objForEachKey(theConfig, function (key) {\r\n                            if (!objHasOwn(newConfig, key)) {\r\n                                // Set the value to undefined\r\n                                details.set(theConfig, key, UNDEFINED_VALUE);\r\n                            }\r\n                        });\r\n                    }\r\n                    // Apply defaults to the new config\r\n                    details[_DYN_SET_DF /* @min:%2esetDf */](theConfig, defaultConfig);\r\n                }, true);\r\n                // Now execute all of the listeners (synchronously) so they update their values immediately\r\n                _configHandler[_DYN_NOTIFY /* @min:%2enotify */]();\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            };\r\n            _self.evtNamespace = function () {\r\n                return _evtNamespace;\r\n            };\r\n            _self.flush = _flushChannels;\r\n            _self.getTraceCtx = function (createNew) {\r\n                if (!_traceCtx) {\r\n                    _traceCtx = createDistributedTraceContext();\r\n                }\r\n                return _traceCtx;\r\n            };\r\n            _self.setTraceCtx = function (traceCtx) {\r\n                _traceCtx = traceCtx || null;\r\n            };\r\n            _self.addUnloadHook = _addUnloadHook;\r\n            // Create the addUnloadCb\r\n            proxyFunctionAs(_self, \"addUnloadCb\", function () { return _unloadHandlers; }, \"add\");\r\n            _self.onCfgChange = function (handler) {\r\n                var unloadHook;\r\n                if (!_isInitialized) {\r\n                    unloadHook = _addDelayedCfgListener(_cfgListeners, handler);\r\n                }\r\n                else {\r\n                    unloadHook = onConfigChange(_configHandler.cfg, handler, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _createUnloadHook(unloadHook);\r\n            };\r\n            _self.getWParam = function () {\r\n                return (hasDocument() || !!_configHandler.cfg.enableWParam) ? 0 : -1;\r\n            };\r\n            function _setPluginVersions() {\r\n                var thePlugins = {};\r\n                _pluginVersionStringArr = [];\r\n                var _addPluginVersions = function (plugins) {\r\n                    if (plugins) {\r\n                        arrForEach(plugins, function (plugin) {\r\n                            if (plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] && plugin[_DYN_VERSION /* @min:%2eversion */] && !thePlugins[plugin.identifier]) {\r\n                                var ver = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"=\" + plugin[_DYN_VERSION /* @min:%2eversion */];\r\n                                _pluginVersionStringArr[_DYN_PUSH /* @min:%2epush */](ver);\r\n                                thePlugins[plugin.identifier] = plugin;\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                _addPluginVersions(_channels);\r\n                if (_channelConfig) {\r\n                    arrForEach(_channelConfig, function (channels) {\r\n                        _addPluginVersions(channels);\r\n                    });\r\n                }\r\n                _addPluginVersions(_configExtensions);\r\n            }\r\n            function _initDefaults() {\r\n                _isInitialized = false;\r\n                // Use a default logger so initialization errors are not dropped on the floor with full logging\r\n                _configHandler = createDynamicConfig({}, defaultConfig, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                // Set the logging level to critical so that any critical initialization failures are displayed on the console\r\n                _configHandler.cfg[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */] = 1 /* eLoggingSeverity.CRITICAL */;\r\n                // Define _self.config\r\n                objDefine(_self, \"config\", {\r\n                    g: function () { return _configHandler.cfg; },\r\n                    s: function (newValue) {\r\n                        _self.updateCfg(newValue, false);\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionStringArr\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionStringArr) {\r\n                            _setPluginVersions();\r\n                        }\r\n                        return _pluginVersionStringArr;\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionString\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionString) {\r\n                            if (!_pluginVersionStringArr) {\r\n                                _setPluginVersions();\r\n                            }\r\n                            _pluginVersionString = _pluginVersionStringArr.join(\";\");\r\n                        }\r\n                        return _pluginVersionString || STR_EMPTY;\r\n                    }\r\n                });\r\n                objDefine(_self, \"logger\", {\r\n                    g: function () {\r\n                        if (!_logger) {\r\n                            _logger = new DiagnosticLogger(_configHandler.cfg);\r\n                            _configHandler[_DYN_LOGGER /* @min:%2elogger */] = _logger;\r\n                        }\r\n                        return _logger;\r\n                    },\r\n                    s: function (newLogger) {\r\n                        _configHandler[_DYN_LOGGER /* @min:%2elogger */] = newLogger;\r\n                        if (_logger !== newLogger) {\r\n                            runTargetUnload(_logger, false);\r\n                            _logger = newLogger;\r\n                        }\r\n                    }\r\n                });\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = new DiagnosticLogger(_configHandler.cfg);\r\n                _extensions = [];\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                _telemetryInitializerPlugin = new TelemetryInitializerPlugin();\r\n                _eventQueue = [];\r\n                runTargetUnload(_notificationManager, false);\r\n                _notificationManager = null;\r\n                _perfManager = null;\r\n                _cfgPerfManager = null;\r\n                runTargetUnload(_cookieManager, false);\r\n                _cookieManager = null;\r\n                _pluginChain = null;\r\n                _configExtensions = [];\r\n                _channelConfig = null;\r\n                _channels = null;\r\n                _isUnloading = false;\r\n                _internalLogsEventName = null;\r\n                _evtNamespace = createUniqueNamespace(\"AIBaseCore\", true);\r\n                _unloadHandlers = createUnloadHandlerContainer();\r\n                _traceCtx = null;\r\n                _instrumentationKey = null;\r\n                _hookContainer = createUnloadHookContainer();\r\n                _cfgListeners = [];\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller = null;\r\n                _internalLogPollerListening = false;\r\n                _activeStatus = 0 /* eActiveStatus.NONE */; // default is None\r\n                _endpoint = null;\r\n                _initInMemoMaxSize = null;\r\n                _isStatusSet = false;\r\n                _initTimer = null;\r\n            }\r\n            function _createTelCtx() {\r\n                var theCtx = createProcessTelemetryContext(_getPluginChain(), _configHandler.cfg, _self);\r\n                theCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                return theCtx;\r\n            }\r\n            // Initialize or Re-initialize the plugins\r\n            function _initPluginChain(updateState) {\r\n                // Extension validation\r\n                var theExtensions = _validateExtensions(_self[_DYN_LOGGER /* @min:%2elogger */], ChannelControllerPriority, _configExtensions);\r\n                _pluginChain = null;\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                // Get the primary channel queue and include as part of the normal extensions\r\n                _channels = (_channelConfig || [])[0] || [];\r\n                // Add any channels provided in the extensions and sort them\r\n                _channels = sortPlugins(arrAppend(_channels, theExtensions[STR_CHANNELS /* @min:%2echannels */]));\r\n                // Create an array of all extensions, including the _channels\r\n                var allExtensions = arrAppend(sortPlugins(theExtensions[STR_CORE /* @min:%2ecore */]), _channels);\r\n                // Required to allow plugins to call core.getPlugin() during their own initialization\r\n                _extensions = objFreeze(allExtensions);\r\n                // This has a side effect of adding the extensions passed during initialization\r\n                // into the config.extensions, so you can see all of the extensions loaded.\r\n                // This will also get updated by the addPlugin() and remove plugin code.\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                var rootCtx = _createTelCtx();\r\n                // Initializing the channels first\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    initializePlugins(rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels), allExtensions);\r\n                }\r\n                // Now initialize the normal extensions (explicitly not including the _channels as this can cause duplicate initialization)\r\n                initializePlugins(rootCtx, allExtensions);\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            }\r\n            function _getPlugin(pluginIdentifier) {\r\n                var theExt = null;\r\n                var thePlugin = null;\r\n                var channelHosts = [];\r\n                arrForEach(_extensions, function (ext) {\r\n                    if (ext[_DYN_IDENTIFIER /* @min:%2eidentifier */] === pluginIdentifier && ext !== _telemetryInitializerPlugin) {\r\n                        thePlugin = ext;\r\n                        return -1;\r\n                    }\r\n                    if (ext.getChannel) {\r\n                        channelHosts[_DYN_PUSH /* @min:%2epush */](ext);\r\n                    }\r\n                });\r\n                if (!thePlugin && channelHosts[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(channelHosts, function (host) {\r\n                        thePlugin = host.getChannel(pluginIdentifier);\r\n                        if (!thePlugin) {\r\n                            return -1;\r\n                        }\r\n                    });\r\n                }\r\n                if (thePlugin) {\r\n                    theExt = {\r\n                        plugin: thePlugin,\r\n                        setEnabled: function (enabled) {\r\n                            _getPluginState(thePlugin)[STR_DISABLED] = !enabled;\r\n                        },\r\n                        isEnabled: function () {\r\n                            var pluginState = _getPluginState(thePlugin);\r\n                            return !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] && !pluginState[STR_DISABLED];\r\n                        },\r\n                        remove: function (isAsync, removeCb) {\r\n                            var _a;\r\n                            if (isAsync === void 0) { isAsync = true; }\r\n                            var pluginsToRemove = [thePlugin];\r\n                            var unloadState = (_a = {\r\n                                    reason: 1 /* TelemetryUnloadReason.PluginUnload */\r\n                                },\r\n                                _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                                _a);\r\n                            _removePlugins(pluginsToRemove, unloadState, function (removed) {\r\n                                if (removed) {\r\n                                    // Re-Initialize the plugin chain\r\n                                    _initPluginChain({\r\n                                        reason: 32 /* TelemetryUpdateReason.PluginRemoved */,\r\n                                        removed: pluginsToRemove\r\n                                    });\r\n                                }\r\n                                removeCb && removeCb(removed);\r\n                            });\r\n                        }\r\n                    };\r\n                }\r\n                return theExt;\r\n            }\r\n            function _getPluginChain() {\r\n                if (!_pluginChain) {\r\n                    // copy the collection of extensions\r\n                    var extensions = (_extensions || []).slice();\r\n                    // During add / remove this may get called again, so don't read if already present\r\n                    if (arrIndexOf(extensions, _telemetryInitializerPlugin) === -1) {\r\n                        extensions[_DYN_PUSH /* @min:%2epush */](_telemetryInitializerPlugin);\r\n                    }\r\n                    _pluginChain = createTelemetryProxyChain(sortPlugins(extensions), _configHandler.cfg, _self);\r\n                }\r\n                return _pluginChain;\r\n            }\r\n            function _removePlugins(thePlugins, unloadState, removeComplete) {\r\n                if (thePlugins && thePlugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var unloadChain = createTelemetryProxyChain(thePlugins, _configHandler.cfg, _self);\r\n                    var unloadCtx = createProcessTelemetryUnloadContext(unloadChain, _self);\r\n                    unloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                        var removed = false;\r\n                        // Remove the listed config extensions\r\n                        var newConfigExtensions = [];\r\n                        arrForEach(_configExtensions, function (plugin, idx) {\r\n                            if (!_isPluginPresent(plugin, thePlugins)) {\r\n                                newConfigExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                            }\r\n                            else {\r\n                                removed = true;\r\n                            }\r\n                        });\r\n                        _configExtensions = newConfigExtensions;\r\n                        _pluginVersionString = null;\r\n                        _pluginVersionStringArr = null;\r\n                        // Re-Create the channel config\r\n                        var newChannelConfig = [];\r\n                        if (_channelConfig) {\r\n                            arrForEach(_channelConfig, function (queue, idx) {\r\n                                var newQueue = [];\r\n                                arrForEach(queue, function (channel) {\r\n                                    if (!_isPluginPresent(channel, thePlugins)) {\r\n                                        newQueue[_DYN_PUSH /* @min:%2epush */](channel);\r\n                                    }\r\n                                    else {\r\n                                        removed = true;\r\n                                    }\r\n                                });\r\n                                newChannelConfig[_DYN_PUSH /* @min:%2epush */](newQueue);\r\n                            });\r\n                            _channelConfig = newChannelConfig;\r\n                        }\r\n                        removeComplete && removeComplete(removed);\r\n                        _startLogPoller();\r\n                    });\r\n                    unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                else {\r\n                    removeComplete(false);\r\n                }\r\n            }\r\n            function _flushInternalLogs() {\r\n                if (_logger && _logger.queue) {\r\n                    var queue = _logger.queue.slice(0);\r\n                    _logger.queue[_DYN_LENGTH /* @min:%2elength */] = 0;\r\n                    arrForEach(queue, function (logMessage) {\r\n                        var _a;\r\n                        var item = (_a = {},\r\n                            _a[_DYN_NAME /* @min:name */] = _internalLogsEventName ? _internalLogsEventName : \"InternalMessageId: \" + logMessage[_DYN_MESSAGE_ID /* @min:%2emessageId */],\r\n                            _a[_DYN_I_KEY /* @min:iKey */] = _instrumentationKey,\r\n                            _a[_DYN_TIME /* @min:time */] = toISOString(new Date()),\r\n                            _a.baseType = _InternalLogMessage.dataType,\r\n                            _a.baseData = { message: logMessage[_DYN_MESSAGE /* @min:%2emessage */] },\r\n                            _a);\r\n                        _self.track(item);\r\n                    });\r\n                }\r\n            }\r\n            function _flushChannels(isAsync, callBack, sendReason, cbTimeout) {\r\n                // Setting waiting to one so that we don't call the callBack until we finish iterating\r\n                var waiting = 1;\r\n                var doneIterating = false;\r\n                var cbTimer = null;\r\n                cbTimeout = cbTimeout || 5000;\r\n                function doCallback() {\r\n                    waiting--;\r\n                    if (doneIterating && waiting === 0) {\r\n                        cbTimer && cbTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                        cbTimer = null;\r\n                        callBack && callBack(doneIterating);\r\n                        callBack = null;\r\n                    }\r\n                }\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var flushCtx = _createTelCtx()[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels);\r\n                    flushCtx.iterate(function (plugin) {\r\n                        if (plugin.flush) {\r\n                            waiting++;\r\n                            var handled_1 = false;\r\n                            // Not all channels will call this callback for every scenario\r\n                            if (!plugin.flush(isAsync, function () {\r\n                                handled_1 = true;\r\n                                doCallback();\r\n                            }, sendReason)) {\r\n                                if (!handled_1) {\r\n                                    // If any channel doesn't return true and it didn't call the callback, then we should assume that the callback\r\n                                    // will never be called, so use a timeout to allow the channel(s) some time to \"finish\" before triggering any\r\n                                    // followup function (such as unloading)\r\n                                    if (isAsync && cbTimer == null) {\r\n                                        cbTimer = scheduleTimeout(function () {\r\n                                            cbTimer = null;\r\n                                            doCallback();\r\n                                        }, cbTimeout);\r\n                                    }\r\n                                    else {\r\n                                        doCallback();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                doneIterating = true;\r\n                doCallback();\r\n                return true;\r\n            }\r\n            function _initPerfManager() {\r\n                // Save the previous config based performance manager creator to avoid creating new perf manager instances if unchanged\r\n                var prevCfgPerfMgr;\r\n                // Will get recalled if any referenced config values are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var enablePerfMgr = details.cfg.enablePerfMgr;\r\n                    if (enablePerfMgr) {\r\n                        var createPerfMgr = details.cfg[STR_CREATE_PERF_MGR /* @min:%2ecreatePerfMgr */];\r\n                        // for preCfgPerfMgr = createPerfMgr = null\r\n                        // initial createPerfMgr function should be _createPerfManager\r\n                        if ((prevCfgPerfMgr !== createPerfMgr) || !prevCfgPerfMgr) {\r\n                            if (!createPerfMgr) {\r\n                                createPerfMgr = _createPerfManager;\r\n                            }\r\n                            // Set the performance manager creation function if not defined\r\n                            getSetValue(details.cfg, STR_CREATE_PERF_MGR, createPerfMgr);\r\n                            prevCfgPerfMgr = createPerfMgr;\r\n                            // Remove any existing config based performance manager\r\n                            _cfgPerfManager = null;\r\n                        }\r\n                        // Only create the performance manager if it's not already created or manually set\r\n                        if (!_perfManager && !_cfgPerfManager && isFunction(createPerfMgr)) {\r\n                            // Create a new config based performance manager\r\n                            _cfgPerfManager = createPerfMgr(_self, _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]());\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Remove any existing config based performance manager\r\n                        _cfgPerfManager = null;\r\n                        // Clear the previous cached value so it can be GC'd\r\n                        prevCfgPerfMgr = null;\r\n                    }\r\n                }));\r\n            }\r\n            function _doUpdate(updateState) {\r\n                var updateCtx = createProcessTelemetryUpdateContext(_getPluginChain(), _self);\r\n                updateCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                if (!_self._updateHook || _self._updateHook(updateCtx, updateState) !== true) {\r\n                    updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n                }\r\n            }\r\n            function _logOrThrowError(message) {\r\n                var logger = _self[_DYN_LOGGER /* @min:%2elogger */];\r\n                if (logger) {\r\n                    // there should always be a logger\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, message);\r\n                    _startLogPoller();\r\n                }\r\n                else {\r\n                    throwError(message);\r\n                }\r\n            }\r\n            function _notifyInvalidEvent(telemetryItem) {\r\n                var manager = _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]();\r\n                if (manager) {\r\n                    manager[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */]([telemetryItem], 2 /* eEventsDiscardedReason.InvalidEvent */);\r\n                }\r\n            }\r\n            function _addUnloadHook(hooks) {\r\n                _hookContainer.add(hooks);\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for AppInsightsCore.prototype.initialize.\r\n// Removed Stub for AppInsightsCore.prototype.getChannels.\r\n// Removed Stub for AppInsightsCore.prototype.track.\r\n// Removed Stub for AppInsightsCore.prototype.getProcessTelContext.\r\n// Removed Stub for AppInsightsCore.prototype.getNotifyMgr.\r\n// Removed Stub for AppInsightsCore.prototype.addNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.removeNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.getCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.getPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.eventCnt.\r\n// Removed Stub for AppInsightsCore.prototype.pollInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.stopPollingInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.addTelemetryInitializer.\r\n// Removed Stub for AppInsightsCore.prototype.unload.\r\n// Removed Stub for AppInsightsCore.prototype.getPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.addPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.updateCfg.\r\n// Removed Stub for AppInsightsCore.prototype.evtNamespace.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadCb.\r\n// Removed Stub for AppInsightsCore.prototype.flush.\r\n// Removed Stub for AppInsightsCore.prototype.getTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.setTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadHook.\r\n// Removed Stub for AppInsightsCore.prototype.onCfgChange.\r\n// Removed Stub for AppInsightsCore.prototype.activeStatus.\r\n// Removed Stub for AppInsightsCore.prototype._setPendingStatus.\r\n// Removed Stub for AppInsightsCore.prototype.releaseQueue.\r\n// Removed Stub for AppInsightsCore.prototype._updateHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    AppInsightsCore.__ieDyn=1;\n\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n// \r\n// \r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_DIAG_LOG, _DYN_LENGTH, _DYN_PROCESS_NEXT, _DYN_SPLICE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { BaseTelemetryPlugin } from \"./BaseTelemetryPlugin\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getExceptionName } from \"./HelperFuncs\";\r\nimport { STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nfunction _addInitializer(_initializers, id, telemetryInitializer) {\r\n    var theInitializer = {\r\n        id: id,\r\n        fn: telemetryInitializer\r\n    };\r\n    arrAppend(_initializers, theInitializer);\r\n    var handler = {\r\n        remove: function () {\r\n            arrForEach(_initializers, function (initializer, idx) {\r\n                if (initializer.id === theInitializer.id) {\r\n                    _initializers[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    return handler;\r\n}\r\nfunction _runInitializers(_initializers, item, logger) {\r\n    var doNotSendItem = false;\r\n    var telemetryInitializersCount = _initializers[_DYN_LENGTH /* @min:%2elength */];\r\n    for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n        var telemetryInitializer = _initializers[i];\r\n        if (telemetryInitializer) {\r\n            try {\r\n                if (telemetryInitializer.fn[_DYN_APPLY /* @min:%2eapply */](null, [item]) === false) {\r\n                    doNotSendItem = true;\r\n                    break;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // log error but dont stop executing rest of the telemetry initializers\r\n                // doNotSendItem = true;\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Telemetry initializer failed: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n            }\r\n        }\r\n    }\r\n    return !doNotSendItem;\r\n}\r\nvar TelemetryInitializerPlugin = /** @class */ (function (_super) {\r\n    __extends(TelemetryInitializerPlugin, _super);\r\n    function TelemetryInitializerPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"TelemetryInitializerPlugin\";\r\n        _this.priority = 199;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _id;\r\n        var _initializers;\r\n        _initDefaults();\r\n        dynamicProto(TelemetryInitializerPlugin, _this, function (_self, _base) {\r\n            _self.addTelemetryInitializer = function (telemetryInitializer) {\r\n                return _addInitializer(_initializers, _id++, telemetryInitializer);\r\n            };\r\n            _self[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */] = function (item, itemCtx) {\r\n                if (_runInitializers(_initializers, item, itemCtx ? itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]() : _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]())) {\r\n                    _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item, itemCtx);\r\n                }\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function () {\r\n                _initDefaults();\r\n            };\r\n        });\r\n        function _initDefaults() {\r\n            _id = 0;\r\n            _initializers = [];\r\n        }\r\n        return _this;\r\n    }\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.addTelemetryInitializer.\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    TelemetryInitializerPlugin.__ieDyn=1;\n\n    return TelemetryInitializerPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { TelemetryInitializerPlugin };\r\n//# sourceMappingURL=TelemetryInitializerPlugin.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// Licensed under the\r\nexport { correlationIdSetPrefix, correlationIdGetPrefix, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, correlationIdGetCorrelationContextValue, dateTimeUtilsNow, dateTimeUtilsDuration, isInternalApplicationInsightsEndpoint, createDistributedTraceContextFromTrace } from \"./Util\";\r\nexport { ThrottleMgr } from \"./ThrottleMgr\";\r\nexport { parseConnectionString, ConnectionStringParser } from \"./ConnectionStringParser\";\r\nexport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, strNotSpecified } from \"./Constants\";\r\nexport { Envelope } from \"./Telemetry/Common/Envelope\";\r\nexport { Event } from \"./Telemetry/Event\";\r\nexport { Exception } from \"./Telemetry/Exception\";\r\nexport { Metric } from \"./Telemetry/Metric\";\r\nexport { PageView } from \"./Telemetry/PageView\";\r\nexport { RemoteDependencyData } from \"./Telemetry/RemoteDependencyData\";\r\nexport { Trace } from \"./Telemetry/Trace\";\r\nexport { PageViewPerformance } from \"./Telemetry/PageViewPerformance\";\r\nexport { Data } from \"./Telemetry/Common/Data\";\r\nexport { SeverityLevel } from \"./Interfaces/Contracts/SeverityLevel\";\r\nexport { ConfigurationManager } from \"./Interfaces/IConfig\";\r\nexport { ContextTagKeys } from \"./Interfaces/Contracts/ContextTagKeys\";\r\nexport { dataSanitizeKeyAndAddUniqueness, dataSanitizeKey, dataSanitizeString, dataSanitizeUrl, dataSanitizeMessage, dataSanitizeException, dataSanitizeProperties, dataSanitizeMeasurements, dataSanitizeId, dataSanitizeInput, dsPadNumber } from \"./Telemetry/Common/DataSanitizer\";\r\nexport { TelemetryItemCreator, createTelemetryItem } from \"./TelemetryItemCreator\";\r\nexport { CtxTagKeys, Extensions } from \"./Interfaces/PartAExtensions\";\r\nexport { DistributedTracingModes, EventPersistence } from \"./Enums\";\r\nexport { stringToBoolOrDefault, msToTimeSpan, getExtensionByName, isCrossOriginError } from \"./HelperFuncs\";\r\nexport { isBeaconsSupported as isBeaconApiSupported, createTraceParent, parseTraceParent, isValidTraceId, isValidSpanId, isValidTraceParent, isSampledFlag, formatTraceParent, findW3cTraceParent, findAllScripts } from \"@microsoft/applicationinsights-core-js\";\r\nexport { createDomEvent } from \"./DomHelperFuncs\";\r\nexport { utlDisableStorage, utlEnableStorage, utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage, utlRemoveStorage, utlCanUseSessionStorage, utlGetSessionStorageKeys, utlGetSessionStorage, utlSetSessionStorage, utlRemoveSessionStorage, utlSetStoragePrefix } from \"./StorageHelperFuncs\";\r\nexport { urlParseUrl, urlGetAbsoluteUrl, urlGetPathName, urlGetCompleteUrl, urlParseHost, urlParseFullHost } from \"./UrlHelperFuncs\";\r\nexport { createOfflineListener } from \"./Offline\";\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"../JavaScriptSDK.Enums/EnumHelperFuncs\";\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = createEnumStyle({\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0 /* eEventsDiscardedReason.Unknown */,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1 /* eEventsDiscardedReason.NonRetryableStatus */,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2 /* eEventsDiscardedReason.InvalidEvent */,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3 /* eEventsDiscardedReason.SizeLimitExceeded */,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4 /* eEventsDiscardedReason.KillSwitch */,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5 /* eEventsDiscardedReason.QueueFull */\r\n});\r\n/**\r\n *  The eBatchDiscardedReason enumeration contains a set of values that specify the reason for discarding offline batches.\r\n */\r\nexport var BatchDiscardedReason = createEnumStyle({\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0 /* eBatchDiscardedReason.Unknown */,\r\n    /**\r\n      * Status set to non-retryable after sending\r\n      */\r\n    NonRetryableStatus: 1 /* eBatchDiscardedReason.NonRetryableStatus */,\r\n    /**\r\n     * Batches with lower number of critical events are dropped to free up storage space\r\n     */\r\n    CleanStorage: 2 /* eBatchDiscardedReason.CleanStorage */,\r\n    /**\r\n     * The batches in storage exceed max allowed time\r\n     */\r\n    MaxInStorageTimeExceeded: 3 /* eBatchDiscardedReason.MaxInStorageTimeExceeded */\r\n});\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_GET_RESPONSE_HEADER, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minification\r\nvar strGetPrototypeOf = \"getPrototypeOf\";\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\nexport var _getObjProto = Object[strGetPrototypeOf];\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return strIndexOf(value, search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    return date && date.toISOString() || \"\";\r\n}\r\nexport var deepFreeze = objDeepFreeze;\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (objHasOwn(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    objDefine(target, field, {\r\n                        g: function () {\r\n                            return source[field];\r\n                        },\r\n                        s: function (theValue) {\r\n                            source[field] = theValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && objHasOwn(arg, prop));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\nexport var asString = asString21;\r\nexport function isFeatureEnabled(feature, cfg) {\r\n    var rlt = false;\r\n    var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\r\n    if (feature && ft) {\r\n        var mode = ft.mode;\r\n        // NOTE: None will be considered as true\r\n        rlt = (mode == 3 /* FeatureOptInMode.enable */) || (mode == 1 /* FeatureOptInMode.none */);\r\n    }\r\n    return rlt;\r\n}\r\nexport function getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nexport function formatErrorMessageXdr(xdr, message) {\r\n    if (xdr) {\r\n        return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function formatErrorMessageXhr(xhr, message) {\r\n    if (xhr) {\r\n        return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\r\n// tslint:disable-next-line: align\r\nexport function convertAllHeadersToMap(headersString) {\r\n    var headers = {};\r\n    if (isString(headersString)) {\r\n        var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\r\n        arrForEach(headersArray, function (headerEntry) {\r\n            if (headerEntry) {\r\n                var idx = headerEntry.indexOf(\": \");\r\n                if (idx !== -1) {\r\n                    // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                    var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                    var value = strTrim(headerEntry.substring(idx + 1));\r\n                    headers[header] = value;\r\n                }\r\n                else {\r\n                    headers[strTrim(headerEntry)] = 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\r\nexport function _appendHeader(theHeaders, xhr, name) {\r\n    if (!theHeaders[name] && xhr && xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */]) {\r\n        var value = xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */](name);\r\n        if (value) {\r\n            theHeaders[name] = strTrim(value);\r\n        }\r\n    }\r\n    return theHeaders;\r\n}\r\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\r\nexport function _getAllResponseHeaders(xhr, isOneDs) {\r\n    var theHeaders = {};\r\n    if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\r\n        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n        // as collector is not currently returning the correct header to allow JS to access these headers\r\n        if (!!isOneDs) {\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n        }\r\n    }\r\n    else {\r\n        theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\r\n    }\r\n    return theHeaders;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dumpObj, isFunction, isUndefined } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_DIAG_LOG, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_LOG_INTERNAL_MESSAGE, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_PUSH, _DYN_REPLACE, _DYN_THROW_INTERNAL, _DYN_UNLOAD, _DYN_WARN_TO_CONSOLE } from \"../__DynamicConstants\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\nimport { getConsole, getJSON, hasJSON } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar STR_WARN_TO_CONSOLE = \"warnToConsole\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nvar defaultValues = {\r\n    loggingLevelConsole: 0,\r\n    loggingLevelTelemetry: 1,\r\n    maxMessageLimit: 25,\r\n    enableDebug: false\r\n};\r\nvar _logFuncs = (_a = {},\r\n    _a[0 /* eLoggingSeverity.DISABLED */] = null,\r\n    _a[1 /* eLoggingSeverity.CRITICAL */] = \"errorToConsole\",\r\n    _a[2 /* eLoggingSeverity.WARNING */] = STR_WARN_TO_CONSOLE,\r\n    _a[3 /* eLoggingSeverity.DEBUG */] = \"debugToConsole\",\r\n    _a);\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text[_DYN_REPLACE /* @min:%2ereplace */](/\\\"/g, STR_EMPTY) + \"\\\"\";\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self[_DYN_MESSAGE_ID /* @min:%2emessageId */] = msgId;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = STR_EMPTY;\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : STR_EMPTY) +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : STR_EMPTY);\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {})[_DYN_LOGGER /* @min:%2elogger */] || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        var _loggingLevelConsole;\r\n        var _loggingLevelTelemetry;\r\n        var _maxInternalMessageLimit;\r\n        var _enableDebug;\r\n        var _unloadHandler;\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            _unloadHandler = _setDefaultsFromConfig(config || {});\r\n            _self.consoleLoggingLevel = function () { return _loggingLevelConsole; };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {LoggingSeverity} - The severity of the log message\r\n             * @param message - {_InternalLogMessage} - The log message.\r\n             */\r\n            _self[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */] = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_enableDebug) {\r\n                    throw dumpObj(message);\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = _logFuncs[severity] || STR_WARN_TO_CONSOLE;\r\n                    if (!isUndefined(message[_DYN_MESSAGE /* @min:%2emessage */])) {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                            if (!_messageLogged[messageKey] && _loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (_loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                            }\r\n                        }\r\n                        _logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            _self.debugToConsole = function (message) {\r\n                _logToConsole(\"debug\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */] = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self.errorToConsole = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            _self[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */] = _logInternalMessage;\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                _unloadHandler && _unloadHandler.rm();\r\n                _unloadHandler = null;\r\n            };\r\n            function _logInternalMessage(severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _loggingLevelTelemetry) {\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _maxInternalMessageLimit) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(23 /* _eInternalMessageId.MessageLimitPerPVExceeded */, throttleLimitMessage, false);\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](throttleMessage);\r\n                        if (severity === 1 /* eLoggingSeverity.CRITICAL */) {\r\n                            _self.errorToConsole(throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _setDefaultsFromConfig(config) {\r\n                // make sure the config is dynamic\r\n                return onConfigChange(createDynamicConfig(config, defaultValues, _self).cfg, function (details) {\r\n                    var config = details.cfg;\r\n                    _loggingLevelConsole = config[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */];\r\n                    _loggingLevelTelemetry = config.loggingLevelTelemetry;\r\n                    _maxInternalMessageLimit = config.maxMessageLimit;\r\n                    _enableDebug = config.enableDebug;\r\n                });\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _maxInternalMessageLimit;\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config || {});\r\n                if (dbgExt && dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */]) {\r\n                    dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */](name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.debugToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n// Removed Stub for DiagnosticLogger.prototype.unload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    DiagnosticLogger.__ieDyn=1;\n\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\nfunction _getLogger(logger) {\r\n    return (logger || new DiagnosticLogger());\r\n}\r\n/**\r\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in\r\n * debug mode or attempt to log the error as a console warning. This helper is provided mostly to better\r\n * support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout\r\n * the code.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _throwInternal(logger, severity, msgId, msg, properties, isUserAct) {\r\n    if (isUserAct === void 0) { isUserAct = false; }\r\n    _getLogger(logger)[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](severity, msgId, msg, properties, isUserAct);\r\n}\r\n/**\r\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _warnToConsole(logger, message) {\r\n    _getLogger(logger)[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n}\r\n/**\r\n * Logs a message to the internal queue.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The message to log.\r\n */\r\nexport function _logInternalMessage(logger, severity, message) {\r\n    _getLogger(logger)[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */](severity, message);\r\n}\r\n//# sourceMappingURL=DiagnosticLogger.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrSlice, getLength } from \"@nevware21/ts-utils\";\r\nimport { _DYN_UNLOAD } from \"../__DynamicConstants\";\r\n/**\r\n * Run the unload function of the target object if it exists\r\n * @param target - The target object that contains the unload function\r\n * @param isAsync - The caller identifies whether it is expecting the operation to complete synchronously or asynchronously. Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @returns The result of the target function\r\n */\r\nexport function runTargetUnload(target, isAsync) {\r\n    if (target && target[_DYN_UNLOAD /* @min:%2eunload */]) {\r\n        return target[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n    }\r\n}\r\n/**\r\n * Call the unload function on all targets handling any returned [IPromise](https://nevware21.github.io/ts-async/typedoc/interfaces/IPromise.html)\r\n * / Promise before calling the next targets unload\r\n * @param targets - An array of the targets to unload\r\n * @param isAsync - The caller identifies whether it is expecting the operations to complete synchronously or asynchronously.  Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @param done - Optional callback function to call once all of the unload functions have been called.\r\n */\r\nexport function doUnloadAll(targets, isAsync, done) {\r\n    var result;\r\n    if (!done) {\r\n        result = createPromise(function (resolved) {\r\n            done = resolved;\r\n        });\r\n    }\r\n    if (targets && getLength(targets) > 0) {\r\n        doAwaitResponse(runTargetUnload(targets[0], isAsync), function () {\r\n            doUnloadAll(arrSlice(targets, 1), isAsync, done);\r\n        });\r\n    }\r\n    else {\r\n        done();\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=AsyncUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_NODE_TYPE } from \"../__DynamicConstants\";\r\nimport { normalizeJsName } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { newId } from \"./RandomHelper\";\r\nvar version = '3.3.4';\r\nvar instanceName = \".\" + newId(6);\r\nvar _dataUid = 0;\r\n// Accepts only:\r\n//  - Node\r\n//    - Node.ELEMENT_NODE\r\n//    - Node.DOCUMENT_NODE\r\n//  - Object\r\n//    - Any\r\nfunction _canAcceptData(target) {\r\n    return target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 1 || target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 9 || !(+target[_DYN_NODE_TYPE /* @min:%2enodeType */]);\r\n}\r\nfunction _getCache(data, target) {\r\n    var theCache = target[data.id];\r\n    if (!theCache) {\r\n        theCache = {};\r\n        try {\r\n            if (_canAcceptData(target)) {\r\n                objDefine(target, data.id, {\r\n                    e: false,\r\n                    v: theCache\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Not all environments allow extending all objects, so just ignore the cache in those cases\r\n        }\r\n    }\r\n    return theCache;\r\n}\r\nexport function createUniqueNamespace(name, includeVersion) {\r\n    if (includeVersion === void 0) { includeVersion = false; }\r\n    return normalizeJsName(name + (_dataUid++) + (includeVersion ? \".\" + version : STR_EMPTY) + instanceName);\r\n}\r\nexport function createElmNodeData(name) {\r\n    var data = {\r\n        id: createUniqueNamespace(\"_aiData-\" + (name || STR_EMPTY) + \".\" + version),\r\n        accept: function (target) {\r\n            return _canAcceptData(target);\r\n        },\r\n        get: function (target, name, defValue, addDefault) {\r\n            var theCache = target[data.id];\r\n            if (!theCache) {\r\n                if (addDefault) {\r\n                    // Side effect is adds the cache\r\n                    theCache = _getCache(data, target);\r\n                    theCache[normalizeJsName(name)] = defValue;\r\n                }\r\n                return defValue;\r\n            }\r\n            return theCache[normalizeJsName(name)];\r\n        },\r\n        kill: function (target, name) {\r\n            if (target && target[name]) {\r\n                try {\r\n                    delete target[name];\r\n                }\r\n                catch (e) {\r\n                    // Just cleaning up, so if this fails -- ignore\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return data;\r\n}\r\n//# sourceMappingURL=DataCacheHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnum, createTypeMap } from \"@nevware21/ts-utils\";\r\n/**\r\n * Create an enum style object which has both the key => value and value => key mappings\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createEnumStyle = createEnum;\r\n/**\r\n * Create a 2 index map that maps an enum's key and value to the defined map value, X[\"key\"] => mapValue and X[0] => mapValue.\r\n * Generic values\r\n * - E = the const enum type (typeof eRequestHeaders);\r\n * - V = Identifies the valid values for the keys, this should include both the enum numeric and string key of the type. The\r\n * resulting \"Value\" of each entry identifies the valid values withing the assignments.\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createValueMap = createTypeMap;\r\n//# sourceMappingURL=EnumHelperFuncs.js.map","/*\n * 1DS JS SDK Core, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nvar _a;\r\n/**\r\n* Utils.ts\r\n* @author  Abhilash Panwar (abpanwar) Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n* File containing utility functions.\r\n*/\r\nimport { arrForEach, getGlobalInst, getNavigator, hasDocument, hasWindow, isArray, isBoolean, isNullOrUndefined, isNumber, isObject, isReactNative, isString, isUndefined, newGuid, objForEachKey, perfNow } from \"@microsoft/applicationinsights-core-js\";\r\nimport { ObjProto, strShimObject } from \"@microsoft/applicationinsights-shims\";\r\nimport { strIndexOf, strLeft } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { _DYN_INDEX_OF, _DYN_KIND, _DYN_LENGTH, _DYN_PROCESS_TELEMETRY_ST0, _DYN_TIMINGS, _DYN_VALUE } from \"./__DynamicConstants\";\r\nexport var Version = '4.3.4';\r\nexport var FullVersionString = \"1DS-Web-JS-\" + Version;\r\nvar ObjHasOwnProperty = ObjProto.hasOwnProperty;\r\n// Defining here so we don't need to take (import) the ApplicationInsights Common module\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n// If value is array just get the type for the first element\r\nvar _fieldTypeEventPropMap = (_a = {},\r\n    _a[0 /* FieldValueSanitizerType.NotSet */] = 0 /* eEventPropertyType.Unspecified */,\r\n    _a[2 /* FieldValueSanitizerType.Number */] = 6 /* eEventPropertyType.Double */,\r\n    _a[1 /* FieldValueSanitizerType.String */] = 1 /* eEventPropertyType.String */,\r\n    _a[3 /* FieldValueSanitizerType.Boolean */] = 7 /* eEventPropertyType.Bool */,\r\n    _a[4096 /* FieldValueSanitizerType.Array */ | 2 /* FieldValueSanitizerType.Number */] = 6 /* eEventPropertyType.Double */,\r\n    _a[4096 /* FieldValueSanitizerType.Array */ | 1 /* FieldValueSanitizerType.String */] = 1 /* eEventPropertyType.String */,\r\n    _a[4096 /* FieldValueSanitizerType.Array */ | 3 /* FieldValueSanitizerType.Boolean */] = 7 /* eEventPropertyType.Bool */,\r\n    _a);\r\n/**\r\n * @ignore\r\n */\r\n// let _uaDisallowsSameSiteNone = null;\r\nvar uInt8ArraySupported = null;\r\n// var _areCookiesAvailable: boolean | undefined;\r\n/**\r\n * Checks if document object is available\r\n */\r\nexport var isDocumentObjectAvailable = hasDocument();\r\n/**\r\n * Checks if window object is available\r\n */\r\nexport var isWindowObjectAvailable = hasWindow();\r\n/**\r\n * Checks if value is assigned to the given param.\r\n * @param value - The token from which the tenant id is to be extracted.\r\n * @returns True/false denoting if value is assigned to the param.\r\n */\r\nexport function isValueAssigned(value) {\r\n    /// <summary> takes a value and checks for undefined, null and empty string </summary>\r\n    /// <param type=\"any\"> value to be tested </param>\r\n    /// <returns> true if value is null undefined or emptyString </returns>\r\n    return !(value === STR_EMPTY || isNullOrUndefined(value));\r\n}\r\n/**\r\n * Gets the tenant id from the tenant token.\r\n * @param apiKey - The token from which the tenant id is to be extracted.\r\n * @returns The tenant id.\r\n */\r\nexport function getTenantId(apiKey) {\r\n    if (apiKey) {\r\n        var indexTenantId = strIndexOf(apiKey, \"-\");\r\n        if (indexTenantId > -1) {\r\n            return strLeft(apiKey, indexTenantId);\r\n        }\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Checks if Uint8Array are available in the current environment. Safari and Firefox along with\r\n * ReactNative are known to not support Uint8Array properly.\r\n * @returns True if available, false otherwise.\r\n */\r\nexport function isUint8ArrayAvailable() {\r\n    if (uInt8ArraySupported === null) {\r\n        uInt8ArraySupported = !isUndefined(Uint8Array) && !isSafariOrFirefox() && !isReactNative();\r\n    }\r\n    return uInt8ArraySupported;\r\n}\r\n/**\r\n * Checks if the value is a valid EventLatency.\r\n * @param value - The value that needs to be checked.\r\n * @returns True if the value is in AWTEventLatency, false otherwise.\r\n */\r\nexport function isLatency(value) {\r\n    if (value && isNumber(value) && value >= 1 /* EventLatencyValue.Normal */ && value <= 4 /* EventLatencyValue.Immediate */) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Sanitizes the Property. It checks the that the property name and value are valid. It also\r\n * checks/populates the correct type and pii of the property value.\r\n * @param name - property name                          - The property name.\r\n * @param property - The property value or an IEventProperty containing value,\r\n * type ,pii and customer content.\r\n * @returns IEventProperty containing valid name, value, pii and type or null if invalid.\r\n */\r\nexport function sanitizeProperty(name, property, stringifyObjects) {\r\n    // Check that property is valid\r\n    if ((!property && !isValueAssigned(property)) || typeof name !== \"string\") {\r\n        return null;\r\n    }\r\n    // Perf optimization -- only need to get the type once not multiple times\r\n    var propType = typeof property;\r\n    // If the property isn't IEventProperty (and is either string, number, boolean or array), convert it into one.\r\n    if (propType === \"string\" || propType === \"number\" || propType === \"boolean\" || isArray(property)) {\r\n        property = { value: property };\r\n    }\r\n    else if (propType === \"object\" && !ObjHasOwnProperty.call(property, \"value\")) {\r\n        property = { value: stringifyObjects ? JSON.stringify(property) : property };\r\n    }\r\n    else if (isNullOrUndefined(property[_DYN_VALUE /* @min:%2evalue */])\r\n        || property[_DYN_VALUE /* @min:%2evalue */] === STR_EMPTY || (!isString(property[_DYN_VALUE /* @min:%2evalue */])\r\n        && !isNumber(property[_DYN_VALUE /* @min:%2evalue */]) && !isBoolean(property[_DYN_VALUE /* @min:%2evalue */])\r\n        && !isArray(property[_DYN_VALUE /* @min:%2evalue */]))) {\r\n        // Since property is IEventProperty, we need to validate its value\r\n        return null;\r\n    }\r\n    // We need to check that if the property value is an array, it is valid\r\n    if (isArray(property[_DYN_VALUE /* @min:%2evalue */]) &&\r\n        !isArrayValid(property[_DYN_VALUE /* @min:%2evalue */])) {\r\n        return null;\r\n    }\r\n    // If either pii or cc is set convert value to string (since only string pii/cc is allowed).\r\n    // If the value is a complex type like an array that can't be converted to string we will drop\r\n    // the property.\r\n    if (!isNullOrUndefined(property[_DYN_KIND /* @min:%2ekind */])) {\r\n        if (isArray(property[_DYN_VALUE /* @min:%2evalue */]) || !isValueKind(property[_DYN_KIND /* @min:%2ekind */])) {\r\n            return null;\r\n        }\r\n        property[_DYN_VALUE /* @min:%2evalue */] = property[_DYN_VALUE /* @min:%2evalue */].toString();\r\n    }\r\n    return property;\r\n}\r\nexport function getCommonSchemaMetaData(value, kind, type) {\r\n    var encodedTypeValue = -1;\r\n    if (!isUndefined(value)) {\r\n        if (kind > 0) {\r\n            if (kind === 32 /* eValueKind.CustomerContent_GenericContent */) {\r\n                // encode customer content. Value can only be string. bit 13-16 are for cc\r\n                encodedTypeValue = (1 << 13);\r\n            }\r\n            else if (kind <= 13) {\r\n                // encode PII. Value can only be string. bits 5-12 are for Pii\r\n                encodedTypeValue = (kind << 5);\r\n            }\r\n        }\r\n        // isDataType checks that the \"type\" is a number so we don't need to check for undefined\r\n        if (isDataType(type)) {\r\n            // Data Type is provided and valid, so use that\r\n            if (encodedTypeValue === -1) {\r\n                // Don't return -1\r\n                encodedTypeValue = 0;\r\n            }\r\n            encodedTypeValue |= type;\r\n        }\r\n        else {\r\n            var propType = _fieldTypeEventPropMap[getFieldValueType(value)] || -1;\r\n            if (encodedTypeValue !== -1 && propType !== -1) {\r\n                // pii exists so we must return correct type\r\n                encodedTypeValue |= propType;\r\n            }\r\n            else if (propType === 6 /* eEventPropertyType.Double */) {\r\n                encodedTypeValue = propType;\r\n            }\r\n        }\r\n    }\r\n    return encodedTypeValue;\r\n}\r\n/**\r\n * Helper to get and decode the cookie value using decodeURIComponent, this is for historical\r\n * backward compatibility where the document.cookie value was decoded before parsing.\r\n * @param cookieMgr - The cookie manager to use\r\n * @param name - The name of the cookie to get\r\n * @param decode - A flag to indicate whether the cookie value should be decoded\r\n * @returns The decoded cookie value (if available) otherwise an empty string.\r\n */\r\nexport function getCookieValue(cookieMgr, name, decode) {\r\n    if (decode === void 0) { decode = true; }\r\n    var cookieValue;\r\n    if (cookieMgr) {\r\n        cookieValue = cookieMgr.get(name);\r\n        if (decode && cookieValue && decodeURIComponent) {\r\n            cookieValue = decodeURIComponent(cookieValue);\r\n        }\r\n    }\r\n    return cookieValue || STR_EMPTY;\r\n}\r\n/**\r\n * Create a new guid.\r\n * @param style - The style of guid to generated, defaults to Digits\r\n * Digits (Default) : 32 digits separated by hyphens: 00000000-0000-0000-0000-000000000000\r\n * Braces - 32 digits separated by hyphens, enclosed in braces: {00000000-0000-0000-0000-000000000000}\r\n * Parentheses - 32 digits separated by hyphens, enclosed in parentheses: (00000000-0000-0000-0000-000000000000)\r\n * Numeric - 32 digits: 00000000000000000000000000000000\r\n * @returns The formatted guid.\r\n */\r\nexport function createGuid(style) {\r\n    if (style === void 0) { style = \"D\" /* GuidStyle.Digits */; }\r\n    var theGuid = newGuid();\r\n    if (style === \"B\" /* GuidStyle.Braces */) {\r\n        theGuid = \"{\" + theGuid + \"}\";\r\n    }\r\n    else if (style === \"P\" /* GuidStyle.Parentheses */) {\r\n        theGuid = \"(\" + theGuid + \")\";\r\n    }\r\n    else if (style === \"N\" /* GuidStyle.Numeric */) {\r\n        theGuid = theGuid.replace(/-/g, STR_EMPTY);\r\n    }\r\n    return theGuid;\r\n}\r\n/**\r\n * Pass in the objects to merge as arguments.\r\n * @param obj1 - object to merge.  Set this argument to 'true' for a deep extend.\r\n * @param obj2 - object to merge.\r\n * @param obj3 - object to merge.\r\n * @param obj4 - object to merge.\r\n * @param obj5 - object to merge.\r\n * @returns The extended object.\r\n */\r\nexport function extend(obj, obj2, obj3, obj4, obj5) {\r\n    // Variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    var length = arguments[_DYN_LENGTH /* @min:%2elength */];\r\n    var theArgs = arguments;\r\n    // Check if a deep merge\r\n    if (isBoolean(theArgs[0])) {\r\n        deep = theArgs[0];\r\n        i++;\r\n    }\r\n    // Loop through each object and conduct a merge\r\n    for (; i < length; i++) {\r\n        var obj = theArgs[i];\r\n        objForEachKey(obj, function (prop, value) {\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && value && isObject(value)) {\r\n                if (isArray(value)) {\r\n                    extended[prop] = extended[prop] || [];\r\n                    arrForEach(value, function (arrayValue, arrayIndex) {\r\n                        if (arrayValue && isObject(arrayValue)) {\r\n                            extended[prop][arrayIndex] = extend(true, extended[prop][arrayIndex], arrayValue);\r\n                        }\r\n                        else {\r\n                            extended[prop][arrayIndex] = arrayValue;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    extended[prop] = extend(true, extended[prop], value);\r\n                }\r\n            }\r\n            else {\r\n                extended[prop] = value;\r\n            }\r\n        });\r\n    }\r\n    return extended;\r\n}\r\nexport var getTime = perfNow;\r\nexport function isValueKind(value) {\r\n    // Always assume that it's a number (no type checking) for performance as this is used during the JSON serialization\r\n    if (value === 0 /* eValueKind.NotSet */ || ((value > 0 /* eValueKind.NotSet */ && value <= 13 /* eValueKind.Pii_IPV4AddressLegacy */) || value === 32 /* eValueKind.CustomerContent_GenericContent */)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isDataType(value) {\r\n    // Remark: 0 returns false, but it doesn't affect encoding anyways\r\n    // Always assume that it's a number (no type checking) for performance as this is used during the JSON serialization\r\n    if (value >= 0 && value <= 9) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isSafariOrFirefox() {\r\n    var nav = getNavigator();\r\n    // If non-browser navigator will be undefined\r\n    if (!isUndefined(nav) && nav.userAgent) {\r\n        var ua = nav.userAgent.toLowerCase();\r\n        if ((ua[_DYN_INDEX_OF /* @min:%2eindexOf */](\"safari\") >= 0 || ua[_DYN_INDEX_OF /* @min:%2eindexOf */](\"firefox\") >= 0) && ua[_DYN_INDEX_OF /* @min:%2eindexOf */](\"chrome\") < 0) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function isArrayValid(value) {\r\n    return value[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\nexport function setProcessTelemetryTimings(event, identifier) {\r\n    var evt = event;\r\n    evt[_DYN_TIMINGS /* @min:%2etimings */] = evt[_DYN_TIMINGS /* @min:%2etimings */] || {};\r\n    evt[_DYN_TIMINGS /* @min:%2etimings */][_DYN_PROCESS_TELEMETRY_ST0 /* @min:%2eprocessTelemetryStart */] = evt[_DYN_TIMINGS /* @min:%2etimings */][_DYN_PROCESS_TELEMETRY_ST0 /* @min:%2eprocessTelemetryStart */] || {};\r\n    evt[_DYN_TIMINGS /* @min:%2etimings */][_DYN_PROCESS_TELEMETRY_ST0 /* @min:%2eprocessTelemetryStart */][identifier] = getTime();\r\n}\r\n/**\r\n * Returns a bitwise value for the FieldValueSanitizerType enum representing the decoded type of the passed value\r\n * @param value The value to determine the type\r\n */\r\nexport function getFieldValueType(value) {\r\n    var theType = 0 /* FieldValueSanitizerType.NotSet */;\r\n    if (value !== null && value !== undefined) {\r\n        var objType = typeof value;\r\n        if (objType === \"string\") {\r\n            theType = 1 /* FieldValueSanitizerType.String */;\r\n        }\r\n        else if (objType === \"number\") {\r\n            theType = 2 /* FieldValueSanitizerType.Number */;\r\n        }\r\n        else if (objType === \"boolean\") {\r\n            theType = 3 /* FieldValueSanitizerType.Boolean */;\r\n        }\r\n        else if (objType === strShimObject) {\r\n            theType = 4 /* FieldValueSanitizerType.Object */;\r\n            if (isArray(value)) {\r\n                theType = 4096 /* FieldValueSanitizerType.Array */;\r\n                if (value[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    // Empty arrays are not supported and are considered to be the same as null\r\n                    theType |= getFieldValueType(value[0]);\r\n                }\r\n            }\r\n            else if (ObjHasOwnProperty.call(value, \"value\")) {\r\n                // Looks like an IEventProperty\r\n                theType = 8192 /* FieldValueSanitizerType.EventProperty */ | getFieldValueType(value[_DYN_VALUE /* @min:%2evalue */]);\r\n            }\r\n        }\r\n    }\r\n    return theType;\r\n}\r\n/**\r\n * Helper to identify whether we are running in a chromium based browser environment\r\n */\r\nexport function isChromium() {\r\n    return !!getGlobalInst(\"chrome\");\r\n}\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n * Check to see if the value is > 0\r\n * @param value - The value to check\r\n * @returns true if > 0 otherwise false\r\n */\r\nexport function isGreaterThanZero(value) {\r\n    return value > 0;\r\n}\r\n//# sourceMappingURL=Utils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { createEnumStyle } from \"./EnumHelperFuncs\";\r\nexport var ActiveStatus = createEnumStyle({\r\n    NONE: 0 /* eActiveStatus.NONE */,\r\n    PENDING: 3 /* eActiveStatus.PENDING */,\r\n    INACTIVE: 1 /* eActiveStatus.INACTIVE */,\r\n    ACTIVE: 2 /* eActiveStatus.ACTIVE */\r\n});\r\n//# sourceMappingURL=InitActiveStatusEnum.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { arrForEach, arrIndexOf, dumpObj, getDocument, getLazy, getNavigator, isArray, isFunction, isNullOrUndefined, isString, isTruthy, isUndefined, objForEachKey, strEndsWith, strIndexOf, strLeft, strSubstring, strTrim, utcNow } from \"@nevware21/ts-utils\";\r\nimport { cfgDfMerge } from \"../Config/ConfigDefaultHelpers\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ENABLED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROTOCOL, _DYN_SET_DF, _DYN_SPLIT, _DYN_UNLOAD, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getLocation, isIE } from \"./EnvUtils\";\r\nimport { getExceptionName, isNotNullOrUndefined, setValue, strContains } from \"./HelperFuncs\";\r\nimport { STR_DOMAIN, STR_EMPTY, STR_PATH, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nvar strToGMTString = \"toGMTString\";\r\nvar strToUTCString = \"toUTCString\";\r\nvar strCookie = \"cookie\";\r\nvar strExpires = \"expires\";\r\nvar strIsCookieUseDisabled = \"isCookieUseDisabled\";\r\nvar strDisableCookiesUsage = \"disableCookiesUsage\";\r\nvar strConfigCookieMgr = \"_ckMgr\";\r\nvar _supportsCookies = null;\r\nvar _allowUaSameSite = null;\r\nvar _parsedCookieValue = null;\r\nvar _doc;\r\nvar _cookieCache = {};\r\nvar _globalCookieConfig = {};\r\n// // `isCookieUseDisabled` is deprecated, so explicitly casting as a key of IConfiguration to avoid typing error\r\n// // when both isCookieUseDisabled and disableCookiesUsage are used disableCookiesUsage will take precedent, which is\r\n// // why its listed first\r\n/**\r\n * Set the supported dynamic config values as undefined (or an empty object) so that\r\n * any listeners will be informed of any changes.\r\n * Explicitly NOT including the deprecated `isCookieUseDisabled` as we don't want to support\r\n * the v1 deprecated field as dynamic for updates\r\n */\r\nvar rootDefaultConfig = (_a = {\r\n        cookieCfg: cfgDfMerge((_b = {},\r\n            _b[STR_DOMAIN] = { fb: \"cookieDomain\", dfVal: isNotNullOrUndefined },\r\n            _b.path = { fb: \"cookiePath\", dfVal: isNotNullOrUndefined },\r\n            _b.enabled = UNDEFINED_VALUE,\r\n            _b.ignoreCookies = UNDEFINED_VALUE,\r\n            _b.blockedCookies = UNDEFINED_VALUE,\r\n            _b)),\r\n        cookieDomain: UNDEFINED_VALUE,\r\n        cookiePath: UNDEFINED_VALUE\r\n    },\r\n    _a[strDisableCookiesUsage] = UNDEFINED_VALUE,\r\n    _a);\r\nfunction _getDoc() {\r\n    !_doc && (_doc = getLazy(function () { return getDocument(); }));\r\n}\r\n/**\r\n * @ignore\r\n * DO NOT USE or export from the module, this is exposed as public to support backward compatibility of previous static utility methods only.\r\n * If you want to manager cookies either use the ICookieMgr available from the core instance via getCookieMgr() or create\r\n * your own instance of the CookieMgr and use that.\r\n * Using this directly for enabling / disabling cookie handling will not only affect your usage but EVERY user of cookies.\r\n * Example, if you are using a shared component that is also using Application Insights you will affect their cookie handling.\r\n * @param logger - The DiagnosticLogger to use for reporting errors.\r\n */\r\nfunction _gblCookieMgr(config, logger) {\r\n    // Stash the global instance against the BaseCookieMgr class\r\n    var inst = createCookieMgr[strConfigCookieMgr] || _globalCookieConfig[strConfigCookieMgr];\r\n    if (!inst) {\r\n        // Note: not using the getSetValue() helper as that would require always creating a temporary cookieMgr\r\n        // that ultimately is never used\r\n        inst = createCookieMgr[strConfigCookieMgr] = createCookieMgr(config, logger);\r\n        _globalCookieConfig[strConfigCookieMgr] = inst;\r\n    }\r\n    return inst;\r\n}\r\nfunction _isMgrEnabled(cookieMgr) {\r\n    if (cookieMgr) {\r\n        return cookieMgr.isEnabled();\r\n    }\r\n    return true;\r\n}\r\nfunction _isIgnoredCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.ignoreCookies)) {\r\n        return arrIndexOf(cookieMgrCfg.ignoreCookies, name) !== -1;\r\n    }\r\n    return false;\r\n}\r\nfunction _isBlockedCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.blockedCookies)) {\r\n        if (arrIndexOf(cookieMgrCfg.blockedCookies, name) !== -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return _isIgnoredCookie(cookieMgrCfg, name);\r\n}\r\nfunction _isCfgEnabled(rootConfig, cookieMgrConfig) {\r\n    var isCfgEnabled = cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */];\r\n    if (isNullOrUndefined(isCfgEnabled)) {\r\n        // Set the enabled from the provided setting or the legacy root values\r\n        var cookieEnabled = void 0;\r\n        // This field is deprecated and dynamic updates will not be fully supported\r\n        if (!isUndefined(rootConfig[strIsCookieUseDisabled])) {\r\n            cookieEnabled = !rootConfig[strIsCookieUseDisabled];\r\n        }\r\n        // If this value is defined it takes precedent over the above\r\n        if (!isUndefined(rootConfig[strDisableCookiesUsage])) {\r\n            cookieEnabled = !rootConfig[strDisableCookiesUsage];\r\n        }\r\n        // Not setting the cookieMgrConfig.enabled as that will update (set) the global dynamic config\r\n        // So future \"updates\" then may not be as expected\r\n        isCfgEnabled = cookieEnabled;\r\n    }\r\n    return isCfgEnabled;\r\n}\r\n/**\r\n * Helper to return the ICookieMgr from the core (if not null/undefined) or a default implementation\r\n * associated with the configuration or a legacy default.\r\n * @param core\r\n * @param config\r\n * @returns\r\n */\r\nexport function safeGetCookieMgr(core, config) {\r\n    var cookieMgr;\r\n    if (core) {\r\n        // Always returns an instance\r\n        cookieMgr = core.getCookieMgr();\r\n    }\r\n    else if (config) {\r\n        var cookieCfg = config.cookieCfg;\r\n        if (cookieCfg && cookieCfg[strConfigCookieMgr]) {\r\n            cookieMgr = cookieCfg[strConfigCookieMgr];\r\n        }\r\n        else {\r\n            cookieMgr = createCookieMgr(config);\r\n        }\r\n    }\r\n    if (!cookieMgr) {\r\n        // Get or initialize the default global (legacy) cookie manager if we couldn't find one\r\n        cookieMgr = _gblCookieMgr(config, (core || {})[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    return cookieMgr;\r\n}\r\nexport function createCookieMgr(rootConfig, logger) {\r\n    var _a;\r\n    var cookieMgrConfig;\r\n    var _path;\r\n    var _domain;\r\n    var unloadHandler;\r\n    // Explicitly checking against false, so that setting to undefined will === true\r\n    var _enabled;\r\n    var _getCookieFn;\r\n    var _setCookieFn;\r\n    var _delCookieFn;\r\n    // Make sure the root config is dynamic as it may be the global config\r\n    rootConfig = createDynamicConfig(rootConfig || _globalCookieConfig, null, logger).cfg;\r\n    // Will get recalled if the referenced configuration is changed\r\n    unloadHandler = onConfigChange(rootConfig, function (details) {\r\n        // Make sure the root config has all of the the defaults to the root config to ensure they are dynamic\r\n        details[_DYN_SET_DF /* @min:%2esetDf */](details.cfg, rootDefaultConfig);\r\n        // Create and apply the defaults to the cookieCfg element\r\n        cookieMgrConfig = details.ref(details.cfg, \"cookieCfg\"); // details.setDf(details.cfg.cookieCfg, defaultConfig);\r\n        _path = cookieMgrConfig[STR_PATH /* @min:%2epath */] || \"/\";\r\n        _domain = cookieMgrConfig[STR_DOMAIN /* @min:%2edomain */];\r\n        // Explicitly checking against false, so that setting to undefined will === true\r\n        _enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false;\r\n        _getCookieFn = cookieMgrConfig.getCookie || _getCookieValue;\r\n        _setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n        _delCookieFn = cookieMgrConfig.delCookie || _setCookieValue;\r\n    }, logger);\r\n    var cookieMgr = (_a = {\r\n            isEnabled: function () {\r\n                var enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false && _enabled && areCookiesSupported(logger);\r\n                // Using an indirect lookup for any global cookie manager to support tree shaking for SDK's\r\n                // that don't use the \"applicationinsights-core\" version of the default cookie function\r\n                var gblManager = _globalCookieConfig[strConfigCookieMgr];\r\n                if (enabled && gblManager && cookieMgr !== gblManager) {\r\n                    // Make sure the GlobalCookie Manager instance (if not this instance) is also enabled.\r\n                    // As the global (deprecated) functions may have been called (for backward compatibility)\r\n                    enabled = _isMgrEnabled(gblManager);\r\n                }\r\n                return enabled;\r\n            },\r\n            setEnabled: function (value) {\r\n                // Explicitly checking against false, so that setting to undefined will === true\r\n                _enabled = value !== false;\r\n                cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */] = value;\r\n            },\r\n            set: function (name, value, maxAgeSec, domain, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr) && !_isBlockedCookie(cookieMgrConfig, name)) {\r\n                    var values = {};\r\n                    var theValue = strTrim(value || STR_EMPTY);\r\n                    var idx = strIndexOf(theValue, \";\");\r\n                    if (idx !== -1) {\r\n                        theValue = strTrim(strLeft(value, idx));\r\n                        values = _extractParts(strSubstring(value, idx + 1));\r\n                    }\r\n                    // Only update domain if not already present (isUndefined) and the value is truthy (not null, undefined or empty string)\r\n                    setValue(values, STR_DOMAIN, domain || _domain, isTruthy, isUndefined);\r\n                    if (!isNullOrUndefined(maxAgeSec)) {\r\n                        var _isIE = isIE();\r\n                        if (isUndefined(values[strExpires])) {\r\n                            var nowMs = utcNow();\r\n                            // Only add expires if not already present\r\n                            var expireMs = nowMs + (maxAgeSec * 1000);\r\n                            // Sanity check, if zero or -ve then ignore\r\n                            if (expireMs > 0) {\r\n                                var expiry = new Date();\r\n                                expiry.setTime(expireMs);\r\n                                setValue(values, strExpires, _formatDate(expiry, !_isIE ? strToUTCString : strToGMTString) || _formatDate(expiry, _isIE ? strToGMTString : strToUTCString) || STR_EMPTY, isTruthy);\r\n                            }\r\n                        }\r\n                        if (!_isIE) {\r\n                            // Only replace if not already present\r\n                            setValue(values, \"max-age\", STR_EMPTY + maxAgeSec, null, isUndefined);\r\n                        }\r\n                    }\r\n                    var location_1 = getLocation();\r\n                    if (location_1 && location_1[_DYN_PROTOCOL /* @min:%2eprotocol */] === \"https:\") {\r\n                        setValue(values, \"secure\", null, null, isUndefined);\r\n                        // Only set same site if not also secure\r\n                        if (_allowUaSameSite === null) {\r\n                            _allowUaSameSite = !uaDisallowsSameSiteNone((getNavigator() || {})[_DYN_USER_AGENT /* @min:%2euserAgent */]);\r\n                        }\r\n                        if (_allowUaSameSite) {\r\n                            setValue(values, \"SameSite\", \"None\", null, isUndefined);\r\n                        }\r\n                    }\r\n                    setValue(values, STR_PATH, path || _path, null, isUndefined);\r\n                    //let setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n                    _setCookieFn(name, _formatCookieValue(theValue, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            },\r\n            get: function (name) {\r\n                var value = STR_EMPTY;\r\n                if (_isMgrEnabled(cookieMgr) && !_isIgnoredCookie(cookieMgrConfig, name)) {\r\n                    value = _getCookieFn(name);\r\n                }\r\n                return value;\r\n            },\r\n            del: function (name, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr)) {\r\n                    // Only remove the cookie if the manager and cookie support has not been disabled\r\n                    result = cookieMgr.purge(name, path);\r\n                }\r\n                return result;\r\n            },\r\n            purge: function (name, path) {\r\n                var _a;\r\n                var result = false;\r\n                if (areCookiesSupported(logger)) {\r\n                    // Setting the expiration date in the past immediately removes the cookie\r\n                    var values = (_a = {},\r\n                        _a[STR_PATH] = path ? path : \"/\",\r\n                        _a[strExpires] = \"Thu, 01 Jan 1970 00:00:01 GMT\",\r\n                        _a);\r\n                    if (!isIE()) {\r\n                        // Set max age to expire now\r\n                        values[\"max-age\"] = \"0\";\r\n                    }\r\n                    // let delCookie = cookieMgrConfig.delCookie || _setCookieValue;\r\n                    _delCookieFn(name, _formatCookieValue(STR_EMPTY, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        _a[_DYN_UNLOAD /* @min:unload */] = function (isAsync) {\r\n            unloadHandler && unloadHandler.rm();\r\n            unloadHandler = null;\r\n        },\r\n        _a);\r\n    // Associated this cookie manager with the config\r\n    cookieMgr[strConfigCookieMgr] = cookieMgr;\r\n    return cookieMgr;\r\n}\r\n/*\r\n* Helper method to tell if document.cookie object is supported by the runtime\r\n*/\r\nexport function areCookiesSupported(logger) {\r\n    if (_supportsCookies === null) {\r\n        _supportsCookies = false;\r\n        !_doc && _getDoc();\r\n        try {\r\n            var doc = _doc.v || {};\r\n            _supportsCookies = doc[strCookie] !== undefined;\r\n        }\r\n        catch (e) {\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 68 /* _eInternalMessageId.CannotAccessCookie */, \"Cannot access document.cookie - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return _supportsCookies;\r\n}\r\nfunction _extractParts(theValue) {\r\n    var values = {};\r\n    if (theValue && theValue[_DYN_LENGTH /* @min:%2elength */]) {\r\n        var parts = strTrim(theValue)[_DYN_SPLIT /* @min:%2esplit */](\";\");\r\n        arrForEach(parts, function (thePart) {\r\n            thePart = strTrim(thePart || STR_EMPTY);\r\n            if (thePart) {\r\n                var idx = strIndexOf(thePart, \"=\");\r\n                if (idx === -1) {\r\n                    values[thePart] = null;\r\n                }\r\n                else {\r\n                    values[strTrim(strLeft(thePart, idx))] = strTrim(strSubstring(thePart, idx + 1));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return values;\r\n}\r\nfunction _formatDate(theDate, func) {\r\n    if (isFunction(theDate[func])) {\r\n        return theDate[func]();\r\n    }\r\n    return null;\r\n}\r\nfunction _formatCookieValue(value, values) {\r\n    var cookieValue = value || STR_EMPTY;\r\n    objForEachKey(values, function (name, theValue) {\r\n        cookieValue += \"; \" + name + (!isNullOrUndefined(theValue) ? \"=\" + theValue : STR_EMPTY);\r\n    });\r\n    return cookieValue;\r\n}\r\nfunction _getCookieValue(name) {\r\n    var cookieValue = STR_EMPTY;\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        var theCookie = _doc.v[strCookie] || STR_EMPTY;\r\n        if (_parsedCookieValue !== theCookie) {\r\n            _cookieCache = _extractParts(theCookie);\r\n            _parsedCookieValue = theCookie;\r\n        }\r\n        cookieValue = strTrim(_cookieCache[name] || STR_EMPTY);\r\n    }\r\n    return cookieValue;\r\n}\r\nfunction _setCookieValue(name, cookieValue) {\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        _doc.v[strCookie] = name + \"=\" + cookieValue;\r\n    }\r\n}\r\nexport function uaDisallowsSameSiteNone(userAgent) {\r\n    if (!isString(userAgent)) {\r\n        return false;\r\n    }\r\n    // Cover all iOS based browsers here. This includes:\r\n    // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n    // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n    if (strContains(userAgent, \"CPU iPhone OS 12\") || strContains(userAgent, \"iPad; CPU OS 12\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n    // - Safari on Mac OS X\r\n    // This does not include:\r\n    // - Internal browser on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strContains(userAgent, \"Version/\") && strContains(userAgent, \"Safari\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n    // - Internal browser on Mac OS X\r\n    // This does not include:\r\n    // - Safari on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strEndsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n        return true;\r\n    }\r\n    // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n    // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n    // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n    if (strContains(userAgent, \"Chrome/5\") || strContains(userAgent, \"Chrome/6\")) {\r\n        return true;\r\n    }\r\n    // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n    // that don't specify their Chrome version as lacking support for SameSite=None.\r\n    if (strContains(userAgent, \"UnrealEngine\") && !strContains(userAgent, \"Chrome\")) {\r\n        return true;\r\n    }\r\n    // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n    // NB: this rule isn't complete - you need regex to make a complete rule.\r\n    // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n    if (strContains(userAgent, \"UCBrowser/12\") || strContains(userAgent, \"UCBrowser/11\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=CookieMgr.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\n//# sourceMappingURL=Constants.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as vscode from 'vscode';\nimport DocumentTracker from './documentTracker';\nimport CodeLensProvider from './codelensProvider';\nimport CommandHandler from './commandHandler';\nimport ContentProvider from './contentProvider';\nimport Decorator from './mergeDecorator';\nimport * as interfaces from './interfaces';\nimport TelemetryReporter from '@vscode/extension-telemetry';\n\nconst ConfigurationSectionName = 'merge-conflict';\n\nexport default class ServiceWrapper implements vscode.Disposable {\n\n\tprivate services: vscode.Disposable[] = [];\n\tprivate telemetryReporter: TelemetryReporter;\n\n\tconstructor(private context: vscode.ExtensionContext) {\n\t\tconst { aiKey } = context.extension.packageJSON as { aiKey: string };\n\t\tthis.telemetryReporter = new TelemetryReporter(aiKey);\n\t\tcontext.subscriptions.push(this.telemetryReporter);\n\t}\n\n\tbegin() {\n\n\t\tconst configuration = this.createExtensionConfiguration();\n\t\tconst documentTracker = new DocumentTracker(this.telemetryReporter);\n\n\t\tthis.services.push(\n\t\t\tdocumentTracker,\n\t\t\tnew CommandHandler(documentTracker),\n\t\t\tnew CodeLensProvider(documentTracker),\n\t\t\tnew ContentProvider(this.context),\n\t\t\tnew Decorator(this.context, documentTracker),\n\t\t);\n\n\t\tthis.services.forEach((service: any) => {\n\t\t\tif (service.begin && service.begin instanceof Function) {\n\t\t\t\tservice.begin(configuration);\n\t\t\t}\n\t\t});\n\n\t\tvscode.workspace.onDidChangeConfiguration(() => {\n\t\t\tthis.services.forEach((service: any) => {\n\t\t\t\tif (service.configurationUpdated && service.configurationUpdated instanceof Function) {\n\t\t\t\t\tservice.configurationUpdated(this.createExtensionConfiguration());\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tcreateExtensionConfiguration(): interfaces.IExtensionConfiguration {\n\t\tconst workspaceConfiguration = vscode.workspace.getConfiguration(ConfigurationSectionName);\n\t\tconst codeLensEnabled: boolean = workspaceConfiguration.get('codeLens.enabled', true);\n\t\tconst decoratorsEnabled: boolean = workspaceConfiguration.get('decorators.enabled', true);\n\n\t\treturn {\n\t\t\tenableCodeLens: codeLensEnabled,\n\t\t\tenableDecorations: decoratorsEnabled,\n\t\t\tenableEditorOverview: decoratorsEnabled\n\t\t};\n\t}\n\n\tdispose() {\n\t\tthis.services.forEach(disposable => disposable.dispose());\n\t\tthis.services = [];\n\t}\n}\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, getDocument, getWindow, isArray, objForEachKey, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_HANDLER, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_REPLACE, _DYN_SPLICE, _DYN_SPLIT, _DYN_TYPE } from \"../__DynamicConstants\";\r\nimport { createElmNodeData, createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// Added to help with minfication\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar strEvents = \"events\";\r\nvar strVisibilityChangeEvt = \"visibilitychange\";\r\nvar strPageHide = \"pagehide\";\r\nvar strPageShow = \"pageshow\";\r\nvar strUnload = \"unload\";\r\nvar strBeforeUnload = \"beforeunload\";\r\nvar strPageHideNamespace = createUniqueNamespace(\"aiEvtPageHide\");\r\nvar strPageShowNamespace = createUniqueNamespace(\"aiEvtPageShow\");\r\nvar rRemoveEmptyNs = /\\.[\\.]+/g;\r\nvar rRemoveTrailingEmptyNs = /[\\.]+$/;\r\nvar _guid = 1;\r\nvar elmNodeData = createElmNodeData(\"events\");\r\nvar eventNamespace = /^([^.]*)(?:\\.(.+)|)/;\r\nfunction _normalizeNamespace(name) {\r\n    if (name && name[_DYN_REPLACE /* @min:%2ereplace */]) {\r\n        return name[_DYN_REPLACE /* @min:%2ereplace */](/^[\\s\\.]+|(?=[\\s\\.])[\\.\\s]+$/g, STR_EMPTY);\r\n    }\r\n    return name;\r\n}\r\nfunction _getEvtNamespace(eventName, evtNamespace) {\r\n    var _a;\r\n    if (evtNamespace) {\r\n        var theNamespace_1 = STR_EMPTY;\r\n        if (isArray(evtNamespace)) {\r\n            theNamespace_1 = STR_EMPTY;\r\n            arrForEach(evtNamespace, function (name) {\r\n                name = _normalizeNamespace(name);\r\n                if (name) {\r\n                    if (name[0] !== \".\") {\r\n                        name = \".\" + name;\r\n                    }\r\n                    theNamespace_1 += name;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            theNamespace_1 = _normalizeNamespace(evtNamespace);\r\n        }\r\n        if (theNamespace_1) {\r\n            if (theNamespace_1[0] !== \".\") {\r\n                theNamespace_1 = \".\" + theNamespace_1;\r\n            }\r\n            // We may only have the namespace and not an eventName\r\n            eventName = (eventName || STR_EMPTY) + theNamespace_1;\r\n        }\r\n    }\r\n    var parsedEvent = (eventNamespace.exec(eventName || STR_EMPTY) || []);\r\n    return _a = {},\r\n        _a[_DYN_TYPE /* @min:type */] = parsedEvent[1],\r\n        _a.ns = ((parsedEvent[2] || STR_EMPTY).replace(rRemoveEmptyNs, \".\").replace(rRemoveTrailingEmptyNs, STR_EMPTY)[_DYN_SPLIT /* @min:%2esplit */](\".\").sort()).join(\".\"),\r\n        _a;\r\n}\r\n/**\r\n * Get all of the registered events on the target object, this is primarily used for testing cleanup but may also be used by\r\n * applications to remove their own events\r\n * @param target - The EventTarget that has registered events\r\n * @param eventName - [Optional] The name of the event to return the registered handlers and full name (with namespaces)\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n */\r\nexport function __getRegisteredEvents(target, eventName, evtNamespace) {\r\n    var theEvents = [];\r\n    var eventCache = elmNodeData.get(target, strEvents, {}, false);\r\n    var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n    objForEachKey(eventCache, function (evtType, registeredEvents) {\r\n        arrForEach(registeredEvents, function (value) {\r\n            var _a;\r\n            if (!evtName[_DYN_TYPE /* @min:%2etype */] || evtName[_DYN_TYPE /* @min:%2etype */] === value.evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n                if (!evtName.ns || evtName.ns === evtName.ns) {\r\n                    theEvents[_DYN_PUSH /* @min:%2epush */]((_a = {},\r\n                        _a[_DYN_NAME /* @min:name */] = value.evtName[_DYN_TYPE /* @min:%2etype */] + (value.evtName.ns ? \".\" + value.evtName.ns : STR_EMPTY),\r\n                        _a.handler = value[_DYN_HANDLER /* @min:%2ehandler */],\r\n                        _a));\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return theEvents;\r\n}\r\n// Exported for internal unit testing only\r\nfunction _getRegisteredEvents(target, evtName, addDefault) {\r\n    if (addDefault === void 0) { addDefault = true; }\r\n    var aiEvts = elmNodeData.get(target, strEvents, {}, addDefault);\r\n    var registeredEvents = aiEvts[evtName];\r\n    if (!registeredEvents) {\r\n        registeredEvents = aiEvts[evtName] = [];\r\n    }\r\n    return registeredEvents;\r\n}\r\nfunction _doDetach(obj, evtName, handlerRef, useCapture) {\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        if (obj[strRemoveEventListener]) {\r\n            obj[strRemoveEventListener](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n        }\r\n        else if (obj[strDetachEvent]) {\r\n            obj[strDetachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n        }\r\n    }\r\n}\r\nfunction _doAttach(obj, evtName, handlerRef, useCapture) {\r\n    var result = false;\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */] && handlerRef) {\r\n        if (obj[strAddEventHelper]) {\r\n            // all browsers except IE before version 9\r\n            obj[strAddEventHelper](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n            result = true;\r\n        }\r\n        else if (obj[strAttachEvent]) {\r\n            // IE before version 9\r\n            obj[strAttachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction _doUnregister(target, events, evtName, unRegFn) {\r\n    var idx = events[_DYN_LENGTH /* @min:%2elength */];\r\n    while (idx--) {\r\n        var theEvent = events[idx];\r\n        if (theEvent) {\r\n            if (!evtName.ns || evtName.ns === theEvent.evtName.ns) {\r\n                if (!unRegFn || unRegFn(theEvent)) {\r\n                    _doDetach(target, theEvent.evtName, theEvent[_DYN_HANDLER /* @min:%2ehandler */], theEvent.capture);\r\n                    // Remove the registered event\r\n                    events[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction _unregisterEvents(target, evtName, unRegFn) {\r\n    if (evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        _doUnregister(target, _getRegisteredEvents(target, evtName[_DYN_TYPE /* @min:%2etype */]), evtName, unRegFn);\r\n    }\r\n    else {\r\n        var eventCache = elmNodeData.get(target, strEvents, {});\r\n        objForEachKey(eventCache, function (evtType, events) {\r\n            _doUnregister(target, events, evtName, unRegFn);\r\n        });\r\n        // Cleanup\r\n        if (objKeys(eventCache)[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n            elmNodeData.kill(target, strEvents);\r\n        }\r\n    }\r\n}\r\nexport function mergeEvtNamespace(theNamespace, namespaces) {\r\n    var newNamespaces;\r\n    if (namespaces) {\r\n        if (isArray(namespaces)) {\r\n            newNamespaces = [theNamespace].concat(namespaces);\r\n        }\r\n        else {\r\n            newNamespaces = [theNamespace, namespaces];\r\n        }\r\n        // resort the namespaces so they are always in order\r\n        newNamespaces = (_getEvtNamespace(\"xx\", newNamespaces).ns)[_DYN_SPLIT /* @min:%2esplit */](\".\");\r\n    }\r\n    else {\r\n        newNamespaces = theNamespace;\r\n    }\r\n    return newNamespaces;\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventName - String that specifies any of the standard DHTML Events without \"on\" prefix, if may also include an optional (dot \".\" prefixed)\r\n * namespaces \"click\" \"click.mynamespace\" in addition to specific namespaces.\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function eventOn(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    var _a;\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (target) {\r\n        try {\r\n            var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n            result = _doAttach(target, evtName, handlerRef, useCapture);\r\n            if (result && elmNodeData.accept(target)) {\r\n                var registeredEvent = (_a = {\r\n                        guid: _guid++,\r\n                        evtName: evtName\r\n                    },\r\n                    _a[_DYN_HANDLER /* @min:handler */] = handlerRef,\r\n                    _a.capture = useCapture,\r\n                    _a);\r\n                _getRegisteredEvents(target, evtName.type)[_DYN_PUSH /* @min:%2epush */](registeredEvent);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function eventOff(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (target) {\r\n        try {\r\n            var evtName_1 = _getEvtNamespace(eventName, evtNamespace);\r\n            var found_1 = false;\r\n            _unregisterEvents(target, evtName_1, function (regEvent) {\r\n                if ((evtName_1.ns && !handlerRef) || regEvent[_DYN_HANDLER /* @min:%2ehandler */] === handlerRef) {\r\n                    found_1 = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!found_1) {\r\n                // fallback to try and remove as requested\r\n                _doDetach(target, evtName_1, handlerRef, useCapture);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix and optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\".\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    return eventOn(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventNameWithoutOn - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    eventOff(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Trys to add an event handler for the specified event to the window, body and document\r\n * @param eventName - {string} - The name of the event\r\n * @param callback - {any} - The callback function that needs to be executed for the given event\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @return {boolean} - true if the handler was successfully added\r\n */\r\nexport function addEventHandler(eventName, callback, evtNamespace) {\r\n    var result = false;\r\n    var w = getWindow();\r\n    if (w) {\r\n        result = eventOn(w, eventName, callback, evtNamespace);\r\n        result = eventOn(w[\"body\"], eventName, callback, evtNamespace) || result;\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        result = eventOn(doc, eventName, callback, evtNamespace) || result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Trys to remove event handler(s) for the specified event/namespace to the window, body and document\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param callback - {any} - - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventHandler(eventName, callback, evtNamespace) {\r\n    var w = getWindow();\r\n    if (w) {\r\n        eventOff(w, eventName, callback, evtNamespace);\r\n        eventOff(w[\"body\"], eventName, callback, evtNamespace);\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        eventOff(doc, eventName, callback, evtNamespace);\r\n    }\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nfunction _addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && events[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                if (!excludeEvents || arrIndexOf(excludeEvents, name) === -1) {\r\n                    added = addEventHandler(name, listener, evtNamespace) || added;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && isArray(events)) {\r\n        added = _addEventListeners(events, listener, excludeEvents, evtNamespace);\r\n        if (!added && excludeEvents && excludeEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            // Failed to add any listeners and we excluded some, so just attempt to add the excluded events\r\n            added = _addEventListeners(events, listener, null, evtNamespace);\r\n        }\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Remove the listener from the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventListeners(events, listener, evtNamespace) {\r\n    if (events && isArray(events)) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                removeEventHandler(name, listener, evtNamespace);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,\r\n * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden\r\n * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is\r\n * just navigating to a different Tab and may come back (without unloading the page). As such you may also\r\n * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\r\n * @param listener - The event callback to call when a page unload event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageUnloadEventListener(listener, excludeEvents, evtNamespace) {\r\n    // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n    // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n    return addEventListeners([strBeforeUnload, strUnload, strPageHide], listener, excludeEvents, evtNamespace);\r\n}\r\n/**\r\n * Remove any matching 'beforeunload', 'unload' and 'pagehide' events that may have been added via addEventListener,\r\n * addEventListeners, addPageUnloadEventListener or addPageHideEventListener.\r\n * @param listener - The specific event callback to to be removed\r\n * @param evtNamespace - [Optional] Namespace(s) uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function removePageUnloadEventListener(listener, evtNamespace) {\r\n    removeEventListeners([strBeforeUnload, strUnload, strPageHide], listener, evtNamespace);\r\n}\r\n/**\r\n * Listen to the pagehide and visibility changing to 'hidden' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page hide event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] A Namespace to append to the event listeners so they can be uniquely identified and removed\r\n * based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageHideEventListener\" can remove these events.\r\n * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageHideEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"hidden\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    var pageUnloadAdded = _addEventListeners([strPageHide], listener, excludeEvents, newNamespaces);\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageUnloadAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageUnloadAdded;\r\n    }\r\n    if (!pageUnloadAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageUnloadAdded = addPageHideEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageUnloadAdded;\r\n}\r\n/**\r\n * Removes the pageHide event listeners added by addPageHideEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageHideEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageHideEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    removeEventListeners([strPageHide], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n/**\r\n * Listen to the pageshow and visibility changing to 'visible' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page is show event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional/Recommended] A Namespace to append to the event listeners so they can be uniquely\r\n * identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageShowEventListener\" can remove these events.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageShowEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"visible\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    var pageShowAdded = _addEventListeners([strPageShow], listener, excludeEvents, newNamespaces);\r\n    pageShowAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageShowAdded;\r\n    if (!pageShowAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageShowAdded = addPageShowEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageShowAdded;\r\n}\r\n/**\r\n * Removes the pageShow event listeners added by addPageShowEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageShowEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageShowEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    removeEventListeners([strPageShow], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n//# sourceMappingURL=EventHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 11\r\nexport var _DYN_BLK_VAL = \"blkVal\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 55\r\nexport var _DYN_RD_ONLY = \"rdOnly\"; // Count: 4\r\nexport var _DYN_NOTIFY = \"notify\"; // Count: 4\r\nexport var _DYN_WARN_TO_CONSOLE = \"warnToConsole\"; // Count: 4\r\nexport var _DYN_THROW_INTERNAL = \"throwInternal\"; // Count: 5\r\nexport var _DYN_SET_DF = \"setDf\"; // Count: 6\r\nexport var _DYN_WATCH = \"watch\"; // Count: 8\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 21\r\nexport var _DYN_APPLY = \"apply\"; // Count: 7\r\nexport var _DYN_PUSH = \"push\"; // Count: 35\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 8\r\nexport var _DYN_HDLR = \"hdlr\"; // Count: 6\r\nexport var _DYN_CANCEL = \"cancel\"; // Count: 6\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 8\r\nexport var _DYN_REMOVE_NOTIFICATION_0 = \"removeNotificationListener\"; // Count: 4\r\nexport var _DYN_ADD_NOTIFICATION_LIS1 = \"addNotificationListener\"; // Count: 4\r\nexport var _DYN_IS_INITIALIZED = \"isInitialized\"; // Count: 10\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN__INACTIVE = \"INACTIVE\"; // Count: 3\r\nexport var _DYN_VALUE = \"value\"; // Count: 5\r\nexport var _DYN_GET_NOTIFY_MGR = \"getNotifyMgr\"; // Count: 5\r\nexport var _DYN_GET_PLUGIN = \"getPlugin\"; // Count: 6\r\nexport var _DYN_NAME = \"name\"; // Count: 12\r\nexport var _DYN_I_KEY = \"iKey\"; // Count: 5\r\nexport var _DYN_TIME = \"time\"; // Count: 6\r\nexport var _DYN_PROCESS_NEXT = \"processNext\"; // Count: 15\r\nexport var _DYN_GET_PROCESS_TEL_CONT2 = \"getProcessTelContext\"; // Count: 2\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 2\r\nexport var _DYN_ENABLED = \"enabled\"; // Count: 6\r\nexport var _DYN_STOP_POLLING_INTERNA3 = \"stopPollingInternalLogs\"; // Count: 2\r\nexport var _DYN_UNLOAD = \"unload\"; // Count: 9\r\nexport var _DYN_ON_COMPLETE = \"onComplete\"; // Count: 5\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_LOGGING_LEVEL_CONSOL4 = \"loggingLevelConsole\"; // Count: 2\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 7\r\nexport var _DYN_TEARDOWN = \"teardown\"; // Count: 9\r\nexport var _DYN_MESSAGE_ID = \"messageId\"; // Count: 4\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 7\r\nexport var _DYN_IS_ASYNC = \"isAsync\"; // Count: 6\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 10\r\nexport var _DYN__DO_TEARDOWN = \"_doTeardown\"; // Count: 5\r\nexport var _DYN_UPDATE = \"update\"; // Count: 6\r\nexport var _DYN_GET_NEXT = \"getNext\"; // Count: 12\r\nexport var _DYN_SET_NEXT_PLUGIN = \"setNextPlugin\"; // Count: 5\r\nexport var _DYN_PROTOCOL = \"protocol\"; // Count: 3\r\nexport var _DYN_USER_AGENT = \"userAgent\"; // Count: 5\r\nexport var _DYN_SPLIT = \"split\"; // Count: 7\r\nexport var _DYN_NODE_TYPE = \"nodeType\"; // Count: 3\r\nexport var _DYN_REPLACE = \"replace\"; // Count: 9\r\nexport var _DYN_LOG_INTERNAL_MESSAGE = \"logInternalMessage\"; // Count: 2\r\nexport var _DYN_TYPE = \"type\"; // Count: 14\r\nexport var _DYN_HANDLER = \"handler\"; // Count: 5\r\nexport var _DYN_STATUS = \"status\"; // Count: 5\r\nexport var _DYN_GET_RESPONSE_HEADER = \"getResponseHeader\"; // Count: 2\r\nexport var _DYN_GET_ALL_RESPONSE_HEA5 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_IS_CHILD_EVT = \"isChildEvt\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_GET_CTX = \"getCtx\"; // Count: 6\r\nexport var _DYN_SET_CTX = \"setCtx\"; // Count: 10\r\nexport var _DYN_COMPLETE = \"complete\"; // Count: 3\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_SEND_POST = \"sendPOST\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 5\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 6\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 2\r\nexport var _DYN_TRACE_ID = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID = \"spanId\"; // Count: 5\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 6\r\nexport var _DYN_GET_ATTRIBUTE = \"getAttribute\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\nexport var UNDEFINED_VALUE = undefined;\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_CHANNELS = \"channels\";\r\nexport var STR_CORE = \"core\";\r\nexport var STR_CREATE_PERF_MGR = \"createPerfMgr\";\r\nexport var STR_DISABLED = \"disabled\";\r\nexport var STR_EXTENSION_CONFIG = \"extensionConfig\";\r\nexport var STR_EXTENSIONS = \"extensions\";\r\nexport var STR_PROCESS_TELEMETRY = \"processTelemetry\";\r\nexport var STR_PRIORITY = \"priority\";\r\nexport var STR_EVENTS_SENT = \"eventsSent\";\r\nexport var STR_EVENTS_DISCARDED = \"eventsDiscarded\";\r\nexport var STR_EVENTS_SEND_REQUEST = \"eventsSendRequest\";\r\nexport var STR_PERF_EVENT = \"perfEvent\";\r\nexport var STR_OFFLINE_STORE = \"offlineEventsStored\";\r\nexport var STR_OFFLINE_SENT = \"offlineBatchSent\";\r\nexport var STR_OFFLINE_DROP = \"offlineBatchDrop\";\r\nexport var STR_GET_PERF_MGR = \"getPerfMgr\";\r\nexport var STR_DOMAIN = \"domain\";\r\nexport var STR_PATH = \"path\";\r\nexport var STR_NOT_DYNAMIC_ERROR = \"Not dynamic - \";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar SEED1 = 123456789;\r\nvar SEED2 = 987654321;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = SEED1;\r\nvar _mwcZ = SEED2;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (SEED1 + seedValue) & MaxUInt32;\r\n    _mwcZ = (SEED2 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = utcNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return Math.floor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value = 0;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    if (value === 0 && isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    if (value === 0) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = STR_EMPTY;\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as vscode from 'vscode';\nimport * as interfaces from './interfaces';\nimport ContentProvider from './contentProvider';\n\ninterface IDocumentMergeConflictNavigationResults {\n\tcanNavigate: boolean;\n\tconflict?: interfaces.IDocumentMergeConflict;\n}\n\nenum NavigationDirection {\n\tForwards,\n\tBackwards\n}\n\nexport default class CommandHandler implements vscode.Disposable {\n\n\tprivate disposables: vscode.Disposable[] = [];\n\tprivate tracker: interfaces.IDocumentMergeConflictTracker;\n\n\tconstructor(trackerService: interfaces.IDocumentMergeConflictTrackerService) {\n\t\tthis.tracker = trackerService.createTracker('commands');\n\t}\n\n\tbegin() {\n\t\tthis.disposables.push(\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.current', this.acceptCurrent),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.incoming', this.acceptIncoming),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.selection', this.acceptSelection),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.both', this.acceptBoth),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.all-current', this.acceptAllCurrent, this.acceptAllCurrentResources),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.all-incoming', this.acceptAllIncoming, this.acceptAllIncomingResources),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.accept.all-both', this.acceptAllBoth),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.next', this.navigateNext),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.previous', this.navigatePrevious),\n\t\t\tthis.registerTextEditorCommand('merge-conflict.compare', this.compare)\n\t\t);\n\t}\n\n\tprivate registerTextEditorCommand(command: string, cb: (editor: vscode.TextEditor, ...args: any[]) => Promise<void>, resourceCB?: (uris: vscode.Uri[]) => Promise<void>) {\n\t\treturn vscode.commands.registerCommand(command, (...args) => {\n\t\t\tif (resourceCB && args.length && args.every(arg => arg && arg.resourceUri)) {\n\t\t\t\treturn resourceCB.call(this, args.map(arg => arg.resourceUri));\n\t\t\t}\n\t\t\tconst editor = vscode.window.activeTextEditor;\n\t\t\treturn editor && cb.call(this, editor, ...args);\n\t\t});\n\t}\n\n\tacceptCurrent(editor: vscode.TextEditor, ...args: any[]): Promise<void> {\n\t\treturn this.accept(interfaces.CommitType.Current, editor, ...args);\n\t}\n\n\tacceptIncoming(editor: vscode.TextEditor, ...args: any[]): Promise<void> {\n\t\treturn this.accept(interfaces.CommitType.Incoming, editor, ...args);\n\t}\n\n\tacceptBoth(editor: vscode.TextEditor, ...args: any[]): Promise<void> {\n\t\treturn this.accept(interfaces.CommitType.Both, editor, ...args);\n\t}\n\n\tacceptAllCurrent(editor: vscode.TextEditor): Promise<void> {\n\t\treturn this.acceptAll(interfaces.CommitType.Current, editor);\n\t}\n\n\tacceptAllIncoming(editor: vscode.TextEditor): Promise<void> {\n\t\treturn this.acceptAll(interfaces.CommitType.Incoming, editor);\n\t}\n\n\tacceptAllCurrentResources(resources: vscode.Uri[]): Promise<void> {\n\t\treturn this.acceptAllResources(interfaces.CommitType.Current, resources);\n\t}\n\n\tacceptAllIncomingResources(resources: vscode.Uri[]): Promise<void> {\n\t\treturn this.acceptAllResources(interfaces.CommitType.Incoming, resources);\n\t}\n\n\tacceptAllBoth(editor: vscode.TextEditor): Promise<void> {\n\t\treturn this.acceptAll(interfaces.CommitType.Both, editor);\n\t}\n\n\tasync compare(editor: vscode.TextEditor, conflict: interfaces.IDocumentMergeConflict | null) {\n\n\t\t// No conflict, command executed from command palette\n\t\tif (!conflict) {\n\t\t\tconflict = await this.findConflictContainingSelection(editor);\n\n\t\t\t// Still failed to find conflict, warn the user and exit\n\t\t\tif (!conflict) {\n\t\t\t\tvscode.window.showWarningMessage(vscode.l10n.t(\"Editor cursor is not within a merge conflict\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst conflicts = await this.tracker.getConflicts(editor.document);\n\n\t\t// Still failed to find conflict, warn the user and exit\n\t\tif (!conflicts) {\n\t\t\tvscode.window.showWarningMessage(vscode.l10n.t(\"Editor cursor is not within a merge conflict\"));\n\t\t\treturn;\n\t\t}\n\n\t\tconst scheme = editor.document.uri.scheme;\n\t\tlet range = conflict.current.content;\n\t\tconst leftRanges = conflicts.map(conflict => [conflict.current.content, conflict.range]);\n\t\tconst rightRanges = conflicts.map(conflict => [conflict.incoming.content, conflict.range]);\n\n\t\tconst leftUri = editor.document.uri.with({\n\t\t\tscheme: ContentProvider.scheme,\n\t\t\tquery: JSON.stringify({ scheme, range: range, ranges: leftRanges })\n\t\t});\n\n\n\t\trange = conflict.incoming.content;\n\t\tconst rightUri = leftUri.with({ query: JSON.stringify({ scheme, ranges: rightRanges }) });\n\n\t\tlet mergeConflictLineOffsets = 0;\n\t\tfor (const nextconflict of conflicts) {\n\t\t\tif (nextconflict.range.isEqual(conflict.range)) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tmergeConflictLineOffsets += (nextconflict.range.end.line - nextconflict.range.start.line) - (nextconflict.incoming.content.end.line - nextconflict.incoming.content.start.line);\n\t\t\t}\n\t\t}\n\t\tconst selection = new vscode.Range(\n\t\t\tconflict.range.start.line - mergeConflictLineOffsets, conflict.range.start.character,\n\t\t\tconflict.range.start.line - mergeConflictLineOffsets, conflict.range.start.character\n\t\t);\n\n\t\tconst docPath = editor.document.uri.path;\n\t\tconst fileName = docPath.substring(docPath.lastIndexOf('/') + 1); // avoid NodeJS path to keep browser webpack small\n\t\tconst title = vscode.l10n.t(\"{0}: Current Changes ↔ Incoming Changes\", fileName);\n\t\tconst mergeConflictConfig = vscode.workspace.getConfiguration('merge-conflict');\n\t\tconst openToTheSide = mergeConflictConfig.get<string>('diffViewPosition');\n\t\tconst opts: vscode.TextDocumentShowOptions = {\n\t\t\tviewColumn: openToTheSide === 'Beside' ? vscode.ViewColumn.Beside : vscode.ViewColumn.Active,\n\t\t\tselection\n\t\t};\n\n\t\tif (openToTheSide === 'Below') {\n\t\t\tawait vscode.commands.executeCommand('workbench.action.newGroupBelow');\n\t\t}\n\n\t\tawait vscode.commands.executeCommand('vscode.diff', leftUri, rightUri, title, opts);\n\t}\n\n\tnavigateNext(editor: vscode.TextEditor): Promise<void> {\n\t\treturn this.navigate(editor, NavigationDirection.Forwards);\n\t}\n\n\tnavigatePrevious(editor: vscode.TextEditor): Promise<void> {\n\t\treturn this.navigate(editor, NavigationDirection.Backwards);\n\t}\n\n\tasync acceptSelection(editor: vscode.TextEditor): Promise<void> {\n\t\tconst conflict = await this.findConflictContainingSelection(editor);\n\n\t\tif (!conflict) {\n\t\t\tvscode.window.showWarningMessage(vscode.l10n.t(\"Editor cursor is not within a merge conflict\"));\n\t\t\treturn;\n\t\t}\n\n\t\tlet typeToAccept: interfaces.CommitType;\n\t\tlet tokenAfterCurrentBlock: vscode.Range = conflict.splitter;\n\n\t\tif (conflict.commonAncestors.length > 0) {\n\t\t\ttokenAfterCurrentBlock = conflict.commonAncestors[0].header;\n\t\t}\n\n\t\t// Figure out if the cursor is in current or incoming, we do this by seeing if\n\t\t// the active position is before or after the range of the splitter or common\n\t\t// ancestors marker. We can use this trick as the previous check in\n\t\t// findConflictByActiveSelection will ensure it's within the conflict range, so\n\t\t// we don't falsely identify \"current\" or \"incoming\" if outside of a conflict range.\n\t\tif (editor.selection.active.isBefore(tokenAfterCurrentBlock.start)) {\n\t\t\ttypeToAccept = interfaces.CommitType.Current;\n\t\t}\n\t\telse if (editor.selection.active.isAfter(conflict.splitter.end)) {\n\t\t\ttypeToAccept = interfaces.CommitType.Incoming;\n\t\t}\n\t\telse if (editor.selection.active.isBefore(conflict.splitter.start)) {\n\t\t\tvscode.window.showWarningMessage(vscode.l10n.t('Editor cursor is within the common ancestors block, please move it to either the \"current\" or \"incoming\" block'));\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tvscode.window.showWarningMessage(vscode.l10n.t('Editor cursor is within the merge conflict splitter, please move it to either the \"current\" or \"incoming\" block'));\n\t\t\treturn;\n\t\t}\n\n\t\tthis.tracker.forget(editor.document);\n\t\tconflict.commitEdit(typeToAccept, editor);\n\t}\n\n\tdispose() {\n\t\tthis.disposables.forEach(disposable => disposable.dispose());\n\t\tthis.disposables = [];\n\t}\n\n\tprivate async navigate(editor: vscode.TextEditor, direction: NavigationDirection): Promise<void> {\n\t\tconst navigationResult = await this.findConflictForNavigation(editor, direction);\n\n\t\tif (!navigationResult) {\n\t\t\t// Check for autoNavigateNextConflict, if it's enabled(which indicating no conflict remain), then do not show warning\n\t\t\tconst mergeConflictConfig = vscode.workspace.getConfiguration('merge-conflict');\n\t\t\tif (mergeConflictConfig.get<boolean>('autoNavigateNextConflict.enabled')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvscode.window.showWarningMessage(vscode.l10n.t(\"No merge conflicts found in this file\"));\n\t\t\treturn;\n\t\t}\n\t\telse if (!navigationResult.canNavigate) {\n\t\t\tvscode.window.showWarningMessage(vscode.l10n.t(\"No other merge conflicts within this file\"));\n\t\t\treturn;\n\t\t}\n\t\telse if (!navigationResult.conflict) {\n\t\t\t// TODO: Show error message?\n\t\t\treturn;\n\t\t}\n\n\t\t// Move the selection to the first line of the conflict\n\t\teditor.selection = new vscode.Selection(navigationResult.conflict.range.start, navigationResult.conflict.range.start);\n\t\teditor.revealRange(navigationResult.conflict.range, vscode.TextEditorRevealType.Default);\n\t}\n\n\tprivate async accept(type: interfaces.CommitType, editor: vscode.TextEditor, ...args: any[]): Promise<void> {\n\n\t\tlet conflict: interfaces.IDocumentMergeConflict | null;\n\n\t\t// If launched with known context, take the conflict from that\n\t\tif (args[0] === 'known-conflict') {\n\t\t\tconflict = args[1];\n\t\t}\n\t\telse {\n\t\t\t// Attempt to find a conflict that matches the current cursor position\n\t\t\tconflict = await this.findConflictContainingSelection(editor);\n\t\t}\n\n\t\tif (!conflict) {\n\t\t\tvscode.window.showWarningMessage(vscode.l10n.t(\"Editor cursor is not within a merge conflict\"));\n\t\t\treturn;\n\t\t}\n\n\t\t// Tracker can forget as we know we are going to do an edit\n\t\tthis.tracker.forget(editor.document);\n\t\tconflict.commitEdit(type, editor);\n\n\t\t// navigate to the next merge conflict\n\t\tconst mergeConflictConfig = vscode.workspace.getConfiguration('merge-conflict');\n\t\tif (mergeConflictConfig.get<boolean>('autoNavigateNextConflict.enabled')) {\n\t\t\tthis.navigateNext(editor);\n\t\t}\n\n\t}\n\n\tprivate async acceptAll(type: interfaces.CommitType, editor: vscode.TextEditor): Promise<void> {\n\t\tconst conflicts = await this.tracker.getConflicts(editor.document);\n\n\t\tif (!conflicts || conflicts.length === 0) {\n\t\t\tvscode.window.showWarningMessage(vscode.l10n.t(\"No merge conflicts found in this file\"));\n\t\t\treturn;\n\t\t}\n\n\t\t// For get the current state of the document, as we know we are doing to do a large edit\n\t\tthis.tracker.forget(editor.document);\n\n\t\t// Apply all changes as one edit\n\t\tawait editor.edit((edit) => conflicts.forEach(conflict => {\n\t\t\tconflict.applyEdit(type, editor.document, edit);\n\t\t}));\n\t}\n\n\tprivate async acceptAllResources(type: interfaces.CommitType, resources: vscode.Uri[]): Promise<void> {\n\t\tconst documents = await Promise.all(resources.map(resource => vscode.workspace.openTextDocument(resource)));\n\t\tconst edit = new vscode.WorkspaceEdit();\n\t\tfor (const document of documents) {\n\t\t\tconst conflicts = await this.tracker.getConflicts(document);\n\n\t\t\tif (!conflicts || conflicts.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// For get the current state of the document, as we know we are doing to do a large edit\n\t\t\tthis.tracker.forget(document);\n\n\t\t\t// Apply all changes as one edit\n\t\t\tconflicts.forEach(conflict => {\n\t\t\t\tconflict.applyEdit(type, document, { replace: (range, newText) => edit.replace(document.uri, range, newText) });\n\t\t\t});\n\t\t}\n\t\tvscode.workspace.applyEdit(edit);\n\t}\n\n\tprivate async findConflictContainingSelection(editor: vscode.TextEditor, conflicts?: interfaces.IDocumentMergeConflict[]): Promise<interfaces.IDocumentMergeConflict | null> {\n\n\t\tif (!conflicts) {\n\t\t\tconflicts = await this.tracker.getConflicts(editor.document);\n\t\t}\n\n\t\tif (!conflicts || conflicts.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (const conflict of conflicts) {\n\t\t\tif (conflict.range.contains(editor.selection.active)) {\n\t\t\t\treturn conflict;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate async findConflictForNavigation(editor: vscode.TextEditor, direction: NavigationDirection, conflicts?: interfaces.IDocumentMergeConflict[]): Promise<IDocumentMergeConflictNavigationResults | null> {\n\t\tif (!conflicts) {\n\t\t\tconflicts = await this.tracker.getConflicts(editor.document);\n\t\t}\n\n\t\tif (!conflicts || conflicts.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst selection = editor.selection.active;\n\t\tif (conflicts.length === 1) {\n\t\t\tif (conflicts[0].range.contains(selection)) {\n\t\t\t\treturn {\n\t\t\t\t\tcanNavigate: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tcanNavigate: true,\n\t\t\t\tconflict: conflicts[0]\n\t\t\t};\n\t\t}\n\n\t\tlet predicate: (_conflict: any) => boolean;\n\t\tlet fallback: () => interfaces.IDocumentMergeConflict;\n\t\tlet scanOrder: interfaces.IDocumentMergeConflict[];\n\n\t\tif (direction === NavigationDirection.Forwards) {\n\t\t\tpredicate = (conflict) => selection.isBefore(conflict.range.start);\n\t\t\tfallback = () => conflicts![0];\n\t\t\tscanOrder = conflicts;\n\t\t} else if (direction === NavigationDirection.Backwards) {\n\t\t\tpredicate = (conflict) => selection.isAfter(conflict.range.start);\n\t\t\tfallback = () => conflicts![conflicts!.length - 1];\n\t\t\tscanOrder = conflicts.slice().reverse();\n\t\t} else {\n\t\t\tthrow new Error(`Unsupported direction ${direction}`);\n\t\t}\n\n\t\tfor (const conflict of scanOrder) {\n\t\t\tif (predicate(conflict) && !conflict.range.contains(selection)) {\n\t\t\t\treturn {\n\t\t\t\t\tcanNavigate: true,\n\t\t\t\t\tconflict: conflict\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Went all the way to the end, return the head\n\t\treturn {\n\t\t\tcanNavigate: true,\n\t\t\tconflict: fallback()\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport MergeConflictServices from './services';\n\nexport function activate(context: vscode.ExtensionContext) {\n\t// Register disposables\n\tconst services = new MergeConflictServices(context);\n\tservices.begin();\n\tcontext.subscriptions.push(services);\n}\n\nexport function deactivate() {\n}\n\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimObject, strShimPrototype, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { getDocument, getInst, getNavigator, getPerformance, hasNavigator, isFunction, isString, isUndefined, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_NAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { strContains } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strDocumentMode = \"documentMode\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar strXMLHttpRequest = \"XMLHttpRequest\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getInst(strConsole);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav[_DYN_USER_AGENT /* @min:%2euserAgent */] !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav[_DYN_USER_AGENT /* @min:%2euserAgent */];\r\n        var userAgent = (_navUserAgentCheck || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    // Also check for documentMode in case X-UA-Compatible meta tag was included in HTML.\r\n    if (strContains(ua, strMsie)) {\r\n        var doc = getDocument() || {};\r\n        return Math.max(parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strMsie)[1]), (doc[strDocumentMode] || 0));\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    return (strIndexOf(ua, \"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @param useCached - [Optional] used for testing to bypass the cached lookup, when `true` this will\r\n * cause the cached global to be reset.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported(useCached) {\r\n    if (_beaconsSupported === null || useCached === false) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        isSupported = !!getInst(\"fetch\");\r\n        var request = getInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== strShimUndefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getInst(strXMLHttpRequest), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getInst(strXMLHttpRequest);\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nfunction _getNamedValue(values, name) {\r\n    if (values) {\r\n        for (var i = 0; i < values[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var value = values[i];\r\n            if (value[_DYN_NAME /* @min:%2ename */]) {\r\n                if (value[_DYN_NAME /* @min:%2ename */] === name) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Helper function to fetch the named meta-tag from the page.\r\n * @param name\r\n */\r\nexport function findMetaTag(name) {\r\n    var doc = getDocument();\r\n    if (doc && name) {\r\n        // Look for a meta-tag\r\n        return _getNamedValue(doc.querySelectorAll(\"meta\"), name).content;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to fetch the named server timing value from the page response (first navigation event).\r\n * @param name\r\n */\r\nexport function findNamedServerTiming(name) {\r\n    var value;\r\n    var perf = getPerformance();\r\n    if (perf) {\r\n        // Try looking for a server-timing header\r\n        var navPerf = perf.getEntriesByType(\"navigation\") || [];\r\n        value = _getNamedValue((navPerf[_DYN_LENGTH /* @min:%2elength */] > 0 ? navPerf[0] : {}).serverTiming, name).description;\r\n    }\r\n    return value;\r\n}\r\n// TODO: should reuse this method for analytics plugin\r\nexport function dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function createCustomDomEvent(eventName, details) {\r\n    var event = null;\r\n    var detail = { detail: details || null };\r\n    if (isFunction(CustomEvent)) { // Use CustomEvent constructor when available\r\n        event = new CustomEvent(eventName, detail);\r\n    }\r\n    else { // CustomEvent has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, true, true, detail);\r\n        }\r\n    }\r\n    return event;\r\n}\r\nexport function sendCustomEvent(evtName, cfg, customDetails) {\r\n    var global = getGlobal();\r\n    if (global && global.CustomEvent) {\r\n        try {\r\n            var details = { cfg: cfg || null, customDetails: customDetails || null };\r\n            return dispatchEvent(global, createCustomDomEvent(evtName, details));\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as vscode from 'vscode';\nimport * as interfaces from './interfaces';\nimport { DocumentMergeConflict } from './documentMergeConflict';\nimport TelemetryReporter from '@vscode/extension-telemetry';\n\nconst startHeaderMarker = '<<<<<<<';\nconst commonAncestorsMarker = '|||||||';\nconst splitterMarker = '=======';\nconst endFooterMarker = '>>>>>>>';\n\ninterface IScanMergedConflict {\n\tstartHeader: vscode.TextLine;\n\tcommonAncestors: vscode.TextLine[];\n\tsplitter?: vscode.TextLine;\n\tendFooter?: vscode.TextLine;\n}\n\nexport class MergeConflictParser {\n\n\tstatic scanDocument(document: vscode.TextDocument, telemetryReporter: TelemetryReporter): interfaces.IDocumentMergeConflict[] {\n\n\t\t// Scan each line in the document, we already know there is at least a <<<<<<< and\n\t\t// >>>>>> marker within the document, we need to group these into conflict ranges.\n\t\t// We initially build a scan match, that references the lines of the header, splitter\n\t\t// and footer. This is then converted into a full descriptor containing all required\n\t\t// ranges.\n\n\t\tlet currentConflict: IScanMergedConflict | null = null;\n\t\tconst conflictDescriptors: interfaces.IDocumentMergeConflictDescriptor[] = [];\n\n\t\tfor (let i = 0; i < document.lineCount; i++) {\n\t\t\tconst line = document.lineAt(i);\n\n\t\t\t// Ignore empty lines\n\t\t\tif (!line || line.isEmptyOrWhitespace) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Is this a start line? <<<<<<<\n\t\t\tif (line.text.startsWith(startHeaderMarker)) {\n\t\t\t\tif (currentConflict !== null) {\n\t\t\t\t\t// Error, we should not see a startMarker before we've seen an endMarker\n\t\t\t\t\tcurrentConflict = null;\n\n\t\t\t\t\t// Give up parsing, anything matched up this to this point will be decorated\n\t\t\t\t\t// anything after will not\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// Create a new conflict starting at this line\n\t\t\t\tcurrentConflict = { startHeader: line, commonAncestors: [] };\n\t\t\t}\n\t\t\t// Are we within a conflict block and is this a common ancestors marker? |||||||\n\t\t\telse if (currentConflict && !currentConflict.splitter && line.text.startsWith(commonAncestorsMarker)) {\n\t\t\t\tcurrentConflict.commonAncestors.push(line);\n\t\t\t}\n\t\t\t// Are we within a conflict block and is this a splitter? =======\n\t\t\telse if (currentConflict && !currentConflict.splitter && line.text === splitterMarker) {\n\t\t\t\tcurrentConflict.splitter = line;\n\t\t\t}\n\t\t\t// Are we within a conflict block and is this a footer? >>>>>>>\n\t\t\telse if (currentConflict && line.text.startsWith(endFooterMarker)) {\n\t\t\t\tcurrentConflict.endFooter = line;\n\n\t\t\t\t// Create a full descriptor from the lines that we matched. This can return\n\t\t\t\t// null if the descriptor could not be completed.\n\t\t\t\tconst completeDescriptor = MergeConflictParser.scanItemTolMergeConflictDescriptor(document, currentConflict);\n\n\t\t\t\tif (completeDescriptor !== null) {\n\t\t\t\t\tconflictDescriptors.push(completeDescriptor);\n\t\t\t\t}\n\n\t\t\t\t// Reset the current conflict to be empty, so we can match the next\n\t\t\t\t// starting header marker.\n\t\t\t\tcurrentConflict = null;\n\t\t\t}\n\t\t}\n\n\t\treturn conflictDescriptors\n\t\t\t.filter(Boolean)\n\t\t\t.map(descriptor => new DocumentMergeConflict(descriptor, telemetryReporter));\n\t}\n\n\tprivate static scanItemTolMergeConflictDescriptor(document: vscode.TextDocument, scanned: IScanMergedConflict): interfaces.IDocumentMergeConflictDescriptor | null {\n\t\t// Validate we have all the required lines within the scan item.\n\t\tif (!scanned.startHeader || !scanned.splitter || !scanned.endFooter) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst tokenAfterCurrentBlock: vscode.TextLine = scanned.commonAncestors[0] || scanned.splitter;\n\n\t\t// Assume that descriptor.current.header, descriptor.incoming.header and descriptor.splitter\n\t\t// have valid ranges, fill in content and total ranges from these parts.\n\t\t// NOTE: We need to shift the decorator range back one character so the splitter does not end up with\n\t\t// two decoration colors (current and splitter), if we take the new line from the content into account\n\t\t// the decorator will wrap to the next line.\n\t\treturn {\n\t\t\tcurrent: {\n\t\t\t\theader: scanned.startHeader.range,\n\t\t\t\tdecoratorContent: new vscode.Range(\n\t\t\t\t\tscanned.startHeader.rangeIncludingLineBreak.end,\n\t\t\t\t\tMergeConflictParser.shiftBackOneCharacter(document, tokenAfterCurrentBlock.range.start, scanned.startHeader.rangeIncludingLineBreak.end)),\n\t\t\t\t// Current content is range between header (shifted for linebreak) and splitter or common ancestors mark start\n\t\t\t\tcontent: new vscode.Range(\n\t\t\t\t\tscanned.startHeader.rangeIncludingLineBreak.end,\n\t\t\t\t\ttokenAfterCurrentBlock.range.start),\n\t\t\t\tname: scanned.startHeader.text.substring(startHeaderMarker.length + 1)\n\t\t\t},\n\t\t\tcommonAncestors: scanned.commonAncestors.map((currentTokenLine, index, commonAncestors) => {\n\t\t\t\tconst nextTokenLine = commonAncestors[index + 1] || scanned.splitter;\n\t\t\t\treturn {\n\t\t\t\t\theader: currentTokenLine.range,\n\t\t\t\t\tdecoratorContent: new vscode.Range(\n\t\t\t\t\t\tcurrentTokenLine.rangeIncludingLineBreak.end,\n\t\t\t\t\t\tMergeConflictParser.shiftBackOneCharacter(document, nextTokenLine.range.start, currentTokenLine.rangeIncludingLineBreak.end)),\n\t\t\t\t\t// Each common ancestors block is range between one common ancestors token\n\t\t\t\t\t// (shifted for linebreak) and start of next common ancestors token or splitter\n\t\t\t\t\tcontent: new vscode.Range(\n\t\t\t\t\t\tcurrentTokenLine.rangeIncludingLineBreak.end,\n\t\t\t\t\t\tnextTokenLine.range.start),\n\t\t\t\t\tname: currentTokenLine.text.substring(commonAncestorsMarker.length + 1)\n\t\t\t\t};\n\t\t\t}),\n\t\t\tsplitter: scanned.splitter.range,\n\t\t\tincoming: {\n\t\t\t\theader: scanned.endFooter.range,\n\t\t\t\tdecoratorContent: new vscode.Range(\n\t\t\t\t\tscanned.splitter.rangeIncludingLineBreak.end,\n\t\t\t\t\tMergeConflictParser.shiftBackOneCharacter(document, scanned.endFooter.range.start, scanned.splitter.rangeIncludingLineBreak.end)),\n\t\t\t\t// Incoming content is range between splitter (shifted for linebreak) and footer start\n\t\t\t\tcontent: new vscode.Range(\n\t\t\t\t\tscanned.splitter.rangeIncludingLineBreak.end,\n\t\t\t\t\tscanned.endFooter.range.start),\n\t\t\t\tname: scanned.endFooter.text.substring(endFooterMarker.length + 1)\n\t\t\t},\n\t\t\t// Entire range is between current header start and incoming header end (including line break)\n\t\t\trange: new vscode.Range(scanned.startHeader.range.start, scanned.endFooter.rangeIncludingLineBreak.end)\n\t\t};\n\t}\n\n\tstatic containsConflict(document: vscode.TextDocument): boolean {\n\t\tif (!document) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst text = document.getText();\n\t\treturn text.includes(startHeaderMarker) && text.includes(endFooterMarker);\n\t}\n\n\tprivate static shiftBackOneCharacter(document: vscode.TextDocument, range: vscode.Position, unlessEqual: vscode.Position): vscode.Position {\n\t\tif (range.isEqual(unlessEqual)) {\n\t\t\treturn range;\n\t\t}\n\n\t\tlet line = range.line;\n\t\tlet character = range.character - 1;\n\n\t\tif (character < 0) {\n\t\t\tline--;\n\t\t\tcharacter = document.lineAt(line).range.end.character;\n\t\t}\n\n\t\treturn new vscode.Position(line, character);\n\t}\n}\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nexport var ChannelControllerPriority = 500;\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\n// export const SampleRate = \"sampleRate\";\r\n// export const ProcessLegacy = \"ProcessLegacy\";\r\n// export const HttpMethod = \"http.method\";\r\n// export const DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\n// export const DEFAULT_BREEZE_PATH = \"/v2/track\";\r\n// export const strNotSpecified = \"not_specified\";\r\n// export const strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isArray, isFunction, objDefine, utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_COMPLETE, _DYN_GET_CTX, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_CTX, _DYN_TIME } from \"../__DynamicConstants\";\r\nimport { STR_GET_PERF_MGR, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar strParentContextKey = \"ParentContextKey\";\r\nvar strChildrenContextKey = \"ChildrenContextKey\";\r\nvar _defaultPerfManager = null;\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        _self.start = utcNow();\r\n        _self[_DYN_NAME /* @min:%2ename */] = name;\r\n        _self[_DYN_IS_ASYNC /* @min:%2eisAsync */] = isAsync;\r\n        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return false; };\r\n        if (isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            objDefine(_self, \"payload\", {\r\n                g: function () {\r\n                    // Delay the execution of the payloadDetails until needed\r\n                    if (!theDetails_1 && isFunction(payloadDetails)) {\r\n                        theDetails_1 = payloadDetails();\r\n                        // clear it out now so the referenced objects can be garbage collected\r\n                        payloadDetails = null;\r\n                    }\r\n                    return theDetails_1;\r\n                }\r\n            });\r\n        }\r\n        _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey] || key === PerfEvent[strChildrenContextKey]) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey]) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent[strChildrenContextKey]) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n            if (isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt[_DYN_TIME /* @min:%2etime */];\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN_TIME /* @min:%2etime */] = utcNow() - _self.start;\r\n            _self.exTime = _self[_DYN_TIME /* @min:%2etime */] - childTime;\r\n            _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () { };\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent[_DYN_COMPLETE /* @min:%2ecomplete */]();\r\n                    if (manager && isFunction(manager[STR_PERF_EVENT /* @min:%2eperfEvent */])) {\r\n                        manager[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PerfManager.prototype.create.\r\n// Removed Stub for PerfManager.prototype.fire.\r\n// Removed Stub for PerfManager.prototype.setCtx.\r\n// Removed Stub for PerfManager.prototype.getCtx.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PerfManager.__ieDyn=1;\n\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr[STR_GET_PERF_MGR]) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[STR_GET_PERF_MGR]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr[_DYN_GET_CTX /* @min:%2egetCtx */](doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                        perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strParentContextKey], currentActive);\r\n                        if (currentActive[_DYN_GET_CTX /* @min:%2egetCtx */] && currentActive[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                            var children = currentActive[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strChildrenContextKey], children);\r\n                            }\r\n                            children[_DYN_PUSH /* @min:%2epush */](perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                    perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n/**\r\n * Set the global performance manager to use when there is no core instance or it has not been initialized yet.\r\n * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.\r\n */\r\nexport function setGblPerfMgr(perfManager) {\r\n    _defaultPerfManager = perfManager;\r\n}\r\n/**\r\n * Get the current global performance manager that will be used with no performance manager is supplied.\r\n * @returns - The current default manager\r\n */\r\nexport function getGblPerfMgr() {\r\n    return _defaultPerfManager;\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","/*!\n * NevWare21 Solutions LLC - ts-async, 0.5.4\n * https://github.com/nevware21/ts-async\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\nimport { isPromiseLike, objDefineProperties, getDocument, createCachedValue, safe, getInst, dumpObj, arrSlice, objDefineProp, hasSymbol, getKnownSymbol, isFunction, throwTypeError, iterForOf, scheduleTimeout, isNode, getWindow, getGlobal, objDefine, objToString, isUndefined, isArray, arrForEach, isIterable, createCustomError, isNumber, scheduleIdleCallback, utcNow, getLength, isIterator, fnCall, arrIndexOf } from '@nevware21/ts-utils';\n\nvar STR_PROMISE = \"Promise\";\nvar DONE = \"done\";\nvar VALUE = \"value\";\nvar RETURN = \"return\";\nvar REJECTED = \"rejected\";\n\nfunction doAwaitResponse(value, cb) {\n    return doAwait(value, function (value) {\n        return cb ? cb({\n            status: \"fulfilled\",\n            rejected: false,\n            value: value\n        }) : value;\n    }, function (reason) {\n        return cb ? cb({\n            status: REJECTED,\n            rejected: true,\n            reason: reason\n        }) : reason;\n    });\n}\nfunction doAwait(value, resolveFn, rejectFn, finallyFn) {\n    var result = value;\n    try {\n        if (isPromiseLike(value)) {\n            if (resolveFn || rejectFn) {\n                result = value.then(resolveFn, rejectFn);\n            }\n        }\n        else {\n            try {\n                if (resolveFn) {\n                    result = resolveFn(value);\n                }\n            }\n            catch (err) {\n                if (rejectFn) {\n                    result = rejectFn(err);\n                }\n                else {\n                    throw err;\n                }\n            }\n        }\n    }\n    finally {\n        if (finallyFn) {\n            doFinally(result, finallyFn);\n        }\n    }\n    return result;\n}\nfunction doFinally(value, finallyFn) {\n    var result = value;\n    if (finallyFn) {\n        if (isPromiseLike(value)) {\n            if (value.finally) {\n                result = value.finally(finallyFn);\n            }\n            else {\n                result = value.then(function (value) {\n                    finallyFn();\n                    return value;\n                }, function (reason) {\n                    finallyFn();\n                    throw reason;\n                });\n            }\n        }\n        else {\n            finallyFn();\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n\nvar _debugState;\nvar _debugResult;\nvar _debugHandled;\nvar _promiseDebugEnabled = false;\nfunction _addDebugState$1(thePromise, stateFn, resultFn, handledFn) {\n    _debugState = _debugState || { toString: function () { return \"[[PromiseState]]\"; } };\n    _debugResult = _debugResult || { toString: function () { return \"[[PromiseResult]]\"; } };\n    _debugHandled = _debugHandled || { toString: function () { return \"[[PromiseIsHandled]]\"; } };\n    var props = {};\n    props[_debugState] = { get: stateFn };\n    props[_debugResult] = { get: resultFn };\n    props[_debugHandled] = { get: handledFn };\n    objDefineProperties(thePromise, props);\n}\nfunction setPromiseDebugState(enabled, logger) {\n    _promiseDebugEnabled = enabled;\n}\n\nvar STRING_STATES =  [\n    \"pending\", \"resolving\", \"resolved\", REJECTED\n];\n\nvar DISPATCH_EVENT = \"dispatchEvent\";\nvar _hasInitEvent;\nfunction _hasInitEventFn(doc) {\n    var evt;\n    if (doc && doc.createEvent) {\n        evt = doc.createEvent(\"Event\");\n    }\n    return (!!evt && evt.initEvent);\n}\nfunction emitEvent(target, evtName, populateEvent, useNewEvent) {\n    var doc = getDocument();\n    !_hasInitEvent && (_hasInitEvent = createCachedValue(!!safe(_hasInitEventFn, [doc]).v));\n    var theEvt = _hasInitEvent.v ? doc.createEvent(\"Event\") : (useNewEvent ? new Event(evtName) : {});\n    populateEvent && populateEvent(theEvt);\n    if (_hasInitEvent.v) {\n        theEvt.initEvent(evtName, false, true);\n    }\n    if (theEvt && target[DISPATCH_EVENT]) {\n        target[DISPATCH_EVENT](theEvt);\n    }\n    else {\n        var handler = target[\"on\" + evtName];\n        if (handler) {\n            handler(theEvt);\n        }\n        else {\n            var theConsole = getInst(\"console\");\n            theConsole && (theConsole[\"error\"] || theConsole[\"log\"])(evtName, dumpObj(theEvt));\n        }\n    }\n}\n\nvar NODE_UNHANDLED_REJECTION = \"unhandledRejection\";\nvar UNHANDLED_REJECTION = NODE_UNHANDLED_REJECTION.toLowerCase();\nvar _currentPromiseId = [];\nvar _uniquePromiseId = 0;\nvar _unhandledRejectionTimeout = 10;\nvar _aggregationError;\nvar _hasPromiseRejectionEvent;\nfunction dumpFnObj(value) {\n    if (isFunction(value)) {\n        return value.toString();\n    }\n    return dumpObj(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAggregationError(values) {\n    !_aggregationError && (_aggregationError = createCachedValue(safe(getInst, [\"AggregationError\"]).v || createCustomError(\"AggregationError\", function (self, args) {\n        self.errors = args[0];\n    })));\n    return new _aggregationError.v(values);\n}\nfunction _createPromise(newPromise, processor, executor) {\n    var additionalArgs = arrSlice(arguments, 3);\n    var _state = 0 ;\n    var _hasResolved = false;\n    var _settledValue;\n    var _queue = [];\n    var _id = _uniquePromiseId++;\n    var _parentId = _currentPromiseId.length > 0 ? _currentPromiseId[_currentPromiseId.length - 1] : undefined;\n    var _handled = false;\n    var _unHandledRejectionHandler = null;\n    var _thePromise;\n    function _then(onResolved, onRejected) {\n        try {\n            _currentPromiseId.push(_id);\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            var thenPromise = newPromise(function (resolve, reject) {\n                _queue.push(function () {\n                    try {\n                        var handler = _state === 2  ? onResolved : onRejected;\n                        var value = isUndefined(handler) ? _settledValue : (isFunction(handler) ? handler(_settledValue) : handler);\n                        if (isPromiseLike(value)) {\n                            value.then(resolve, reject);\n                        }\n                        else if (handler) {\n                            resolve(value);\n                        }\n                        else if (_state === 3 ) {\n                            reject(value);\n                        }\n                        else {\n                            resolve(value);\n                        }\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                });\n                if (_hasResolved) {\n                    _processQueue();\n                }\n            }, additionalArgs);\n            return thenPromise;\n        }\n        finally {\n            _currentPromiseId.pop();\n        }\n    }\n    function _catch(onRejected) {\n        return _then(undefined, onRejected);\n    }\n    function _finally(onFinally) {\n        var thenFinally = onFinally;\n        var catchFinally = onFinally;\n        if (isFunction(onFinally)) {\n            thenFinally = function (value) {\n                onFinally && onFinally();\n                return value;\n            };\n            catchFinally = function (reason) {\n                onFinally && onFinally();\n                throw reason;\n            };\n        }\n        return _then(thenFinally, catchFinally);\n    }\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    function _processQueue() {\n        if (_queue.length > 0) {\n            var pending = _queue.slice();\n            _queue = [];\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            processor(pending);\n        }\n    }\n    function _createSettleIfFn(newState, allowState) {\n        return function (theValue) {\n            if (_state === allowState) {\n                if (newState === 2  && isPromiseLike(theValue)) {\n                    _state = 1 ;\n                    theValue.then(_createSettleIfFn(2 , 1 ), _createSettleIfFn(3 , 1 ));\n                    return;\n                }\n                _state = newState;\n                _hasResolved = true;\n                _settledValue = theValue;\n                _processQueue();\n                if (!_handled && newState === 3  && !_unHandledRejectionHandler) {\n                    _unHandledRejectionHandler = scheduleTimeout(_notifyUnhandledRejection, _unhandledRejectionTimeout);\n                }\n            }\n        };\n    }\n    function _notifyUnhandledRejection() {\n        if (!_handled) {\n            _handled = true;\n            if (isNode()) {\n                process.emit(NODE_UNHANDLED_REJECTION, _settledValue, _thePromise);\n            }\n            else {\n                var gbl = getWindow() || getGlobal();\n                !_hasPromiseRejectionEvent && (_hasPromiseRejectionEvent = createCachedValue(safe((getInst), [STR_PROMISE + \"RejectionEvent\"]).v));\n                emitEvent(gbl, UNHANDLED_REJECTION, function (theEvt) {\n                    objDefine(theEvt, \"promise\", { g: function () { return _thePromise; } });\n                    theEvt.reason = _settledValue;\n                    return theEvt;\n                }, !!_hasPromiseRejectionEvent.v);\n            }\n        }\n    }\n    _thePromise = {\n        then: _then,\n        \"catch\": _catch,\n        finally: _finally\n    };\n    objDefineProp(_thePromise, \"state\", {\n        get: _strState\n    });\n    if (_promiseDebugEnabled) {\n        _addDebugState$1(_thePromise, _strState, function () { return objToString(_settledValue); }, function () { return _handled; });\n    }\n    if (hasSymbol()) {\n        _thePromise[getKnownSymbol(11 )] = \"IPromise\";\n    }\n    function _toString() {\n        return \"IPromise\" + (_promiseDebugEnabled ? \"[\" + _id + (!isUndefined(_parentId) ? (\":\" + _parentId) : \"\") + \"]\" : \"\") + \" \" + _strState() + (_hasResolved ? (\" - \" + dumpFnObj(_settledValue)) : \"\") + (\"\");\n    }\n    _thePromise.toString = _toString;\n    (function _initialize() {\n        if (!isFunction(executor)) {\n            throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpFnObj(executor));\n        }\n        var _rejectFn = _createSettleIfFn(3 , 0 );\n        try {\n            executor.call(_thePromise, _createSettleIfFn(2 , 0 ), _rejectFn);\n        }\n        catch (e) {\n            _rejectFn(e);\n        }\n    })();\n    return _thePromise;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllPromise(newPromise) {\n    return function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            try {\n                var values_1 = [];\n                var pending_1 = 1;\n                iterForOf(input, function (item, idx) {\n                    if (item) {\n                        pending_1++;\n                        doAwait(item, function (value) {\n                            values_1[idx] = value;\n                            if (--pending_1 === 0) {\n                                resolve(values_1);\n                            }\n                        }, reject);\n                    }\n                });\n                pending_1--;\n                if (pending_1 === 0) {\n                    resolve(values_1);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createResolvedPromise(newPromise) {\n    return function (value) {\n        var additionalArgs = arrSlice(arguments, 1);\n        if (isPromiseLike(value)) {\n            return value;\n        }\n        return newPromise(function (resolve) {\n            resolve(value);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRejectedPromise(newPromise) {\n    return function (reason) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (_resolve, reject) {\n            reject(reason);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllSettledPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var values = [];\n            var pending = 1;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (value.rejected) {\n                        values[idx] = {\n                            status: REJECTED,\n                            reason: value.reason\n                        };\n                    }\n                    else {\n                        values[idx] = {\n                            status: \"fulfilled\",\n                            value: value.value\n                        };\n                    }\n                    if (--pending === 0) {\n                        resolve(values);\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0) {\n                    resolve(values);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRacePromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var isDone = false;\n            function processItem(item) {\n                doAwaitResponse(item, function (value) {\n                    if (!isDone) {\n                        isDone = true;\n                        if (value.rejected) {\n                            reject(value.reason);\n                        }\n                        else {\n                            resolve(value.value);\n                        }\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAnyPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var theErros = [];\n            var pending = 1;\n            var isDone = false;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (!value.rejected) {\n                        isDone = true;\n                        resolve(value.value);\n                        return;\n                    }\n                    else {\n                        theErros[idx] = value.reason;\n                    }\n                    if (--pending === 0 && !isDone) {\n                        reject(_createAggregationError(theErros));\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0 && !isDone) {\n                    reject(_createAggregationError(theErros));\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n\nfunction syncItemProcessor(pending) {\n    arrForEach(pending, function (fn) {\n        try {\n            fn();\n        }\n        catch (e) {\n        }\n    });\n}\nfunction timeoutItemProcessor(timeout) {\n    var callbackTimeout = isNumber(timeout) ? timeout : 0;\n    return function (pending) {\n        scheduleTimeout(function () {\n            syncItemProcessor(pending);\n        }, callbackTimeout);\n    };\n}\nfunction idleItemProcessor(timeout) {\n    var options;\n    if (timeout >= 0) {\n        options = {\n            timeout: +timeout\n        };\n    }\n    return function (pending) {\n        scheduleIdleCallback(function (deadline) {\n            syncItemProcessor(pending);\n        }, options);\n    };\n}\n\nvar _allAsyncSettledCreator;\nvar _raceAsyncCreator;\nvar _anyAsyncCreator;\nfunction createAsyncPromise(executor, timeout) {\n    return _createPromise(createAsyncPromise, timeoutItemProcessor(timeout), executor, timeout);\n}\nvar createAsyncAllPromise = /*#__PURE__*/ _createAllPromise(createAsyncPromise);\nvar createAsyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createAsyncPromise);\nvar createAsyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createAsyncPromise);\nfunction createAsyncAllSettledPromise(input, timeout) {\n    !_allAsyncSettledCreator && (_allAsyncSettledCreator = _createAllSettledPromise(createAsyncPromise));\n    return _allAsyncSettledCreator.v(input, timeout);\n}\nfunction createAsyncRacePromise(values, timeout) {\n    !_raceAsyncCreator && (_raceAsyncCreator = _createRacePromise(createAsyncPromise));\n    return _raceAsyncCreator.v(values, timeout);\n}\nfunction createAsyncAnyPromise(values, timeout) {\n    !_anyAsyncCreator && (_anyAsyncCreator = _createAnyPromise(createAsyncPromise));\n    return _anyAsyncCreator.v(values, timeout);\n}\n\nvar _promiseCls;\nvar _allCreator;\nvar _allNativeSettledCreator;\nvar _raceNativeCreator;\nvar _anyNativeCreator;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createNativePromiseHelper(name, func) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    if (_promiseCls.v && _promiseCls.v[name]) {\n        return createCachedValue(function (input, timeout) {\n            return createNativePromise(function (resolve, reject) {\n                _promiseCls.v[name](input).then(resolve, reject);\n            });\n        });\n    }\n    return func();\n}\nfunction createNativePromise(executor, timeout) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    var PrmCls = _promiseCls.v;\n    if (!PrmCls) {\n        return createAsyncPromise(executor);\n    }\n    if (!isFunction(executor)) {\n        throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpObj(executor));\n    }\n    var _state = 0 ;\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    var thePromise = new PrmCls(function (resolve, reject) {\n        function _resolve(value) {\n            _state = 2 ;\n            resolve(value);\n        }\n        function _reject(reason) {\n            _state = 3 ;\n            reject(reason);\n        }\n        executor(_resolve, _reject);\n    });\n    objDefineProp(thePromise, \"state\", {\n        get: _strState\n    });\n    return thePromise;\n}\nfunction createNativeAllPromise(input, timeout) {\n    !_allCreator && (_allCreator = _createNativePromiseHelper(\"all\", function () { return createCachedValue(_createAllPromise(createNativePromise)); }));\n    return _allCreator.v(input, timeout);\n}\nvar createNativeResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createNativePromise);\nvar createNativeRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createNativePromise);\nfunction createNativeAllSettledPromise(input, timeout) {\n    !_allNativeSettledCreator && (_allNativeSettledCreator = _createNativePromiseHelper(\"allSettled\", function () { return _createAllSettledPromise(createNativePromise); }));\n    return _allNativeSettledCreator.v(input, timeout);\n}\nfunction createNativeRacePromise(values, timeout) {\n    !_raceNativeCreator && (_raceNativeCreator = _createNativePromiseHelper(\"race\", function () { return _createRacePromise(createNativePromise); }));\n    return _raceNativeCreator.v(values, timeout);\n}\nfunction createNativeAnyPromise(values, timeout) {\n    !_anyNativeCreator && (_anyNativeCreator = _createNativePromiseHelper(\"any\", function () { return _createAnyPromise(createNativePromise); }));\n    return _anyNativeCreator.v(values, timeout);\n}\n\nvar _allSyncSettledCreator;\nvar _raceSyncCreator;\nvar _anySyncCreator;\nfunction createSyncPromise(executor) {\n    return _createPromise(createSyncPromise, syncItemProcessor, executor);\n}\nvar createSyncAllPromise = /*#__PURE__*/ _createAllPromise(createSyncPromise);\nvar createSyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createSyncPromise);\nvar createSyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createSyncPromise);\nfunction createSyncAllSettledPromise(input, timeout) {\n    !_allSyncSettledCreator && (_allSyncSettledCreator = _createAllSettledPromise(createSyncPromise));\n    return _allSyncSettledCreator.v(input, timeout);\n}\nfunction createSyncRacePromise(values, timeout) {\n    !_raceSyncCreator && (_raceSyncCreator = _createRacePromise(createSyncPromise));\n    return _raceSyncCreator.v(values, timeout);\n}\nfunction createSyncAnyPromise(values, timeout) {\n    !_anySyncCreator && (_anySyncCreator = _createAnyPromise(createSyncPromise));\n    return _anySyncCreator.v(values, timeout);\n}\n\nvar _defaultIdleTimeout;\nvar _allIdleSettledCreator;\nvar _raceIdleCreator;\nvar _anyIdleCreator;\nfunction setDefaultIdlePromiseTimeout(idleDeadline) {\n    _defaultIdleTimeout = idleDeadline;\n}\nvar setDefaultIdleTimeout = ( /*#__PURE__*/_pureAssign(setDefaultIdlePromiseTimeout));\nfunction createIdlePromise(executor, timeout) {\n    var theTimeout = isUndefined(timeout) ? _defaultIdleTimeout : timeout;\n    return _createPromise(createIdlePromise, idleItemProcessor(theTimeout), executor, theTimeout);\n}\nvar createIdleAllPromise = /*#__PURE__*/ _createAllPromise(createIdlePromise);\nvar createIdleResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createIdlePromise);\nvar createIdleRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createIdlePromise);\nfunction createIdleAllSettledPromise(input, timeout) {\n    !_allIdleSettledCreator && (_allIdleSettledCreator = _createAllSettledPromise(createIdlePromise));\n    return _allIdleSettledCreator.v(input, timeout);\n}\nfunction createIdleRacePromise(values, timeout) {\n    !_raceIdleCreator && (_raceIdleCreator = _createRacePromise(createIdlePromise));\n    return _raceIdleCreator.v(values, timeout);\n}\nfunction createIdleAnyPromise(values, timeout) {\n    !_anyIdleCreator && (_anyIdleCreator = _createAnyPromise(createIdlePromise));\n    return _anyIdleCreator.v(values, timeout);\n}\n\nvar _promiseCreator;\nvar _allSettledCreator;\nvar _raceCreator;\nvar _anyCreator;\nfunction setCreatePromiseImpl(creator) {\n    _promiseCreator = creator ? createCachedValue(creator) : null;\n}\nfunction createPromise(executor, timeout) {\n    !_promiseCreator && (_promiseCreator = createCachedValue(createNativePromise));\n    return _promiseCreator.v.call(this, executor, timeout);\n}\nvar createAllPromise = /*#__PURE__*/ _createAllPromise(createPromise);\nvar createResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createPromise);\nvar createRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createPromise);\nfunction createAllSettledPromise(input, timeout) {\n    !_allSettledCreator && (_allSettledCreator = _createAllSettledPromise(createPromise));\n    return _allSettledCreator.v(input, timeout);\n}\nfunction createRacePromise(values, timeout) {\n    !_raceCreator && (_raceCreator = _createRacePromise(createPromise));\n    return _raceCreator.v(values, timeout);\n}\nfunction createAnyPromise(values, timeout) {\n    !_anyCreator && (_anyCreator = _createAnyPromise(createPromise));\n    return _anyCreator.v(values, timeout);\n}\n\nfunction createTimeoutPromise(timeout, resolveReject, message) {\n    return createPromise(function (resolve, reject) {\n        scheduleTimeout(function () {\n            (resolveReject ? resolve : reject)(!isUndefined(message) ? message : \"Timeout of \" + timeout + \"ms exceeded\");\n        }, timeout);\n    });\n}\n\nfunction _doneChk(isDone, state, value, thisArg) {\n    var result = isDone;\n    state.res = value;\n    if (!result) {\n        if (state.isDone && isFunction(state.isDone)) {\n            return doAwait(state.isDone.call(thisArg, state), function (done) {\n                state.iter++;\n                return !!done;\n            });\n        }\n        else {\n            result = !!state.isDone;\n        }\n    }\n    state.iter++;\n    return result;\n}\nfunction doWhileAsync(callbackFn, isDoneFn, thisArg) {\n    var promise;\n    var resolve;\n    var reject = function (reason) {\n        isDone = true;\n        throw reason;\n    };\n    var isDone = false;\n    var state = {\n        st: utcNow(),\n        iter: 0,\n        isDone: isDoneFn || false\n    };\n    if (callbackFn) {\n        var _createPromise_1 = function () {\n            return createPromise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n        };\n        var _handleAsyncDone_1 = function (done) {\n            isDone = !!done;\n            if (!isDone) {\n                _processNext_1();\n            }\n            else {\n                resolve(state.res);\n            }\n        };\n        var _processNext_1 = function () {\n            while (!isDone) {\n                try {\n                    var cbResult = callbackFn.call(thisArg, state);\n                    if (isPromiseLike(cbResult)) {\n                        promise = promise || _createPromise_1();\n                        doAwait(cbResult, function (res) {\n                            try {\n                                doAwait(_doneChk(isDone, state, res, thisArg), _handleAsyncDone_1, reject);\n                            }\n                            catch (e) {\n                                reject(e);\n                            }\n                        }, reject);\n                        return promise;\n                    }\n                    else {\n                        var dnRes = _doneChk(isDone, state, cbResult, thisArg);\n                        if (isPromiseLike(dnRes)) {\n                            promise = promise || _createPromise_1();\n                            doAwait(dnRes, _handleAsyncDone_1, reject);\n                            return promise;\n                        }\n                        else {\n                            isDone = !!dnRes;\n                        }\n                    }\n                }\n                catch (e) {\n                    reject(e);\n                    return promise;\n                }\n            }\n            if (isDone && resolve) {\n                resolve(state.res);\n            }\n            return promise || state.res;\n        };\n        return _processNext_1();\n    }\n}\n\nfunction arrForEachAsync(theArray, callbackFn, thisArg) {\n    if (theArray) {\n        var len_1 = getLength(theArray);\n        if (len_1) {\n            var isDone = function (state) {\n                if (state.iter >= len_1 || state.res === -1) {\n                    return true;\n                }\n            };\n            return doWhileAsync(function (state) {\n                var idx = state.iter;\n                if (idx in theArray) {\n                    return callbackFn.call(thisArg || theArray, theArray[idx], idx, theArray);\n                }\n            }, isDone);\n        }\n    }\n}\n\nvar _iterSymbol;\nvar _iterAsyncSymbol;\nfunction iterForOfAsync(iter, callbackFn, thisArg) {\n    var err;\n    var iterResult;\n    var theIter = iter;\n    function onFailed(failed) {\n        err = { e: failed };\n        if (theIter.throw) {\n            iterResult = null;\n            theIter.throw(err);\n        }\n        throw failed;\n    }\n    function onFinally() {\n        try {\n            if (iterResult && !iterResult[DONE]) {\n                theIter[RETURN] && theIter[RETURN](iterResult);\n            }\n        }\n        finally {\n            if (err) {\n                throw err.e;\n            }\n        }\n    }\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterAsyncSymbol && (_iterAsyncSymbol = createCachedValue(getKnownSymbol(0 )));\n            theIter = iter[_iterAsyncSymbol.v] ? iter[_iterAsyncSymbol.v]() : null;\n            if (!theIter) {\n                !_iterSymbol && (_iterSymbol = createCachedValue(getKnownSymbol(3 )));\n                theIter = iter[_iterSymbol.v] ? iter[_iterSymbol.v]() : null;\n            }\n        }\n        if (theIter && isIterator(theIter)) {\n            var result = void 0;\n            try {\n                result = doWhileAsync(function (state) {\n                    return doAwait(theIter.next(), function (res) {\n                        iterResult = res;\n                        if (!res[DONE]) {\n                            return fnCall(callbackFn, thisArg || theIter, iterResult[VALUE], state.iter, theIter);\n                        }\n                    }, function (reason) {\n                        state.isDone = true;\n                        onFailed(reason);\n                    });\n                }, function (state) {\n                    if (!iterResult || iterResult[DONE] || state.res === -1) {\n                        onFinally();\n                        return true;\n                    }\n                }, thisArg || theIter);\n                if (isPromiseLike(result)) {\n                    result = doFinally(result.catch(onFailed), onFinally);\n                }\n                return result;\n            }\n            catch (failed) {\n                onFailed(failed);\n            }\n            finally {\n                if (result && !isPromiseLike(result)) {\n                    onFinally();\n                }\n            }\n        }\n    }\n}\n\nvar REJECT = \"reject\";\nvar REJECTED_ERROR = \"Rejected\";\nvar _schedulerId = 0;\nvar _debugName;\nvar _debugIntState;\nvar _customErrors = {};\nfunction _rejectDone() {\n}\nfunction _createError(type, evt, message) {\n    !_customErrors[type] && (_customErrors[type] = createCustomError(type));\n    var now = utcNow();\n    return new (_customErrors[type])(\"Task [\".concat(evt.id, \"] \").concat(message || \"\", \"- \").concat((evt.st ? \"Running\" : \"Waiting\"), \": \").concat(_calcTime(now, evt.st || evt.cr)));\n}\nfunction _calcTime(now, start) {\n    return ((now - start) || \"0\") + \" ms\";\n}\nfunction _abortStaleTasks(taskQueue, staleTimeoutPeriod) {\n    var now = utcNow();\n    var expired = now - staleTimeoutPeriod;\n    arrForEach(taskQueue, function (evt) {\n        if (evt && !evt.rj && (evt.st && evt.st < expired) || (!evt.st && evt.cr && evt.cr < expired)) {\n            evt && evt[REJECT](evt.rj || _createError(\"Aborted\", evt, \"Stale \"));\n        }\n    });\n}\nfunction _removeTask(queue, taskDetail) {\n    var idx = arrIndexOf(queue, taskDetail);\n    if (idx !== -1) {\n        queue.splice(idx, 1);\n    }\n}\nfunction _addDebugState(theScheduler, nameFn, stateFn) {\n    _debugName = _debugName || { toString: function () { return \"[[SchedulerName]]\"; } };\n    _debugIntState = _debugIntState || { toString: function () { return \"[[SchedulerState]]\"; } };\n    objDefineProp(theScheduler, _debugName, { get: nameFn });\n    objDefineProp(theScheduler, _debugIntState, { get: stateFn });\n}\nfunction createTaskScheduler(newPromise, name) {\n    var _theTask;\n    var _running = [];\n    var _waiting = [];\n    var _staleTimeoutPeriod = 600000;\n    var _staleTimeoutCheckPeriod = _staleTimeoutPeriod / 10;\n    var _taskCount = 0;\n    var _schedulerName = (name ? (name + \".\") : \"\") + _schedulerId++;\n    var _blockedTimer;\n    newPromise = newPromise || createPromise;\n    var _startBlockedTimer = function () {\n        var hasTasks = (getLength(_running) + getLength(_waiting)) > 0;\n        if (_staleTimeoutPeriod > 0) {\n            if (!_blockedTimer) {\n                _blockedTimer = scheduleTimeout(function () {\n                    _abortStaleTasks(_running, _staleTimeoutPeriod);\n                    _abortStaleTasks(_waiting, _staleTimeoutPeriod);\n                    _blockedTimer && (_blockedTimer.enabled = ((getLength(_running) + getLength(_waiting)) > 0));\n                }, _staleTimeoutCheckPeriod);\n                _blockedTimer.unref();\n            }\n            _blockedTimer && (_blockedTimer.enabled = hasTasks);\n        }\n    };\n    var _queueTask = function (startAction, taskName, timeout) {\n        var _a;\n        var taskId = _schedulerName + \".\" + _taskCount++;\n        if (taskName) {\n            taskId += \"-(\" + taskName + \")\";\n        }\n        var newTask = (_a = {\n                id: taskId,\n                cr: utcNow(),\n                to: timeout\n            },\n            _a[REJECT] = function (reason) {\n                newTask.rj = reason || _createError(REJECTED_ERROR, newTask);\n                newTask[REJECT] = _rejectDone;\n            },\n            _a);\n        if (!_theTask) {\n            newTask.p = newPromise(_runTask(newTask, startAction));\n        }\n        else {\n            newTask.p = _waitForPreviousTask(newTask, _theTask, startAction);\n        }\n        _theTask = newTask;\n        return newTask.p;\n    };\n    var _runTask = function (taskDetail, startAction) {\n        taskDetail.st = utcNow();\n        _running.push(taskDetail);\n        _startBlockedTimer();\n        return function (onTaskResolve, onTaskReject) {\n            var _promiseReject = function (reason) {\n                taskDetail.rj = taskDetail.rj || reason || _createError(REJECTED_ERROR, taskDetail);\n                taskDetail[REJECT] = _rejectDone;\n                _doCleanup(taskDetail);\n                onTaskResolve = null;\n                onTaskReject && onTaskReject(reason);\n                onTaskReject = null;\n            };\n            var taskId = taskDetail.id;\n            if (taskDetail.rj) {\n                _promiseReject(taskDetail.rj);\n            }\n            else {\n                taskDetail[REJECT] = _promiseReject;\n                try {\n                    var startResult = startAction(taskId);\n                    if (taskDetail.to && isPromiseLike(startResult)) {\n                        taskDetail.t = scheduleTimeout(function () {\n                            _promiseReject(_createError(\"Timeout\", taskDetail));\n                        }, taskDetail.to);\n                    }\n                    doAwait(startResult, function (theResult) {\n                        _doCleanup(taskDetail);\n                        try {\n                            onTaskResolve && onTaskResolve(theResult);\n                        }\n                        catch (e) {\n                            onTaskReject && onTaskReject(e);\n                        }\n                        onTaskReject = null;\n                        onTaskResolve = null;\n                    }, _promiseReject);\n                }\n                catch (e) {\n                    _promiseReject(e);\n                }\n            }\n        };\n    };\n    var _waitForPreviousTask = function (taskDetail, prevTask, startAction) {\n        _waiting.push(taskDetail);\n        _startBlockedTimer();\n        return newPromise(function (onWaitResolve, onWaitReject) {\n            doAwaitResponse(prevTask.p, function () {\n                _removeTask(_waiting, taskDetail);\n                _runTask(taskDetail, startAction)(onWaitResolve, onWaitReject);\n            });\n        });\n    };\n    var _doCleanup = function (taskDetail) {\n        _removeTask(_running, taskDetail);\n        taskDetail.t && taskDetail.t.cancel();\n        taskDetail.t = null;\n        if (_theTask && _theTask === taskDetail) {\n            _theTask = null;\n            if (getLength(_running) + getLength(_waiting) === 0) {\n                _blockedTimer && _blockedTimer.cancel();\n                _blockedTimer = null;\n            }\n        }\n    };\n    var theScheduler = {\n        idle: true,\n        queue: _queueTask,\n        setStaleTimeout: function (staleTimeout, staleCheckPeriod) {\n            _blockedTimer && _blockedTimer.cancel();\n            _blockedTimer = null;\n            _staleTimeoutPeriod = staleTimeout;\n            _staleTimeoutCheckPeriod = staleCheckPeriod || staleTimeout / 10;\n            _startBlockedTimer();\n        }\n    };\n    objDefine(theScheduler, \"idle\", {\n        g: function () {\n            return getLength(_running) + getLength(_waiting) === 0;\n        }\n    });\n    _addDebugState(theScheduler, function () { return _schedulerName; }, function () {\n        return {\n            l: _theTask,\n            r: _running,\n            w: _waiting\n        };\n    });\n    return theScheduler;\n}\n\nvar toStringTagSymbol = getKnownSymbol(11 );\nvar PolyPromise = /*#__PURE__*/ (function () {\n    function PolyPromiseImpl(executor) {\n        this._$ = createAsyncPromise(executor);\n        if (toStringTagSymbol) {\n            this[toStringTagSymbol] = \"Promise\";\n        }\n        objDefineProp(this, \"state\", {\n            get: function () {\n                return this._$.state;\n            }\n        });\n    }\n    PolyPromiseImpl.all = createAsyncAllPromise;\n    PolyPromiseImpl.race = createAsyncRacePromise;\n    PolyPromiseImpl.any = createAsyncAnyPromise;\n    PolyPromiseImpl.reject = createAsyncRejectedPromise;\n    PolyPromiseImpl.resolve = createAsyncResolvedPromise;\n    PolyPromiseImpl.allSettled = createAsyncAllSettledPromise;\n    var theProto = PolyPromiseImpl.prototype;\n    theProto.then = function (onResolved, onRejected) {\n        return this._$.then(onResolved, onRejected);\n    };\n    theProto.catch = function (onRejected) {\n        return this._$.catch(onRejected);\n    };\n    theProto.finally = function (onfinally) {\n        return this._$.finally(onfinally);\n    };\n    return PolyPromiseImpl;\n}());\n\nexport { PolyPromise, arrForEachAsync, createAllPromise, createAllSettledPromise, createAnyPromise, createAsyncAllPromise, createAsyncAllSettledPromise, createAsyncAnyPromise, createAsyncPromise, createAsyncRacePromise, createAsyncRejectedPromise, createAsyncResolvedPromise, createIdleAllPromise, createIdleAllSettledPromise, createIdleAnyPromise, createIdlePromise, createIdleRacePromise, createIdleRejectedPromise, createIdleResolvedPromise, createNativeAllPromise, createNativeAllSettledPromise, createNativeAnyPromise, createNativePromise, createNativeRacePromise, createNativeRejectedPromise, createNativeResolvedPromise, createPromise, createRacePromise, createRejectedPromise, createResolvedPromise, createSyncAllPromise, createSyncAllSettledPromise, createSyncAnyPromise, createSyncPromise, createSyncRacePromise, createSyncRejectedPromise, createSyncResolvedPromise, createTaskScheduler, createTimeoutPromise, doAwait, doAwaitResponse, doFinally, doWhileAsync, iterForOfAsync, setCreatePromiseImpl, setDefaultIdlePromiseTimeout, setDefaultIdleTimeout, setPromiseDebugState };\n//# sourceMappingURL=ts-async.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isFunction, objDefine } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PROCESS_TEL_CONT2, _DYN_INITIALIZE, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_PROCESS_NEXT, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UPDATE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { isNotNullOrUndefined, proxyFunctionAs } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_EXTENSION_CONFIG, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext } from \"./ProcessTelemetryContext\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strGetPlugin = \"getPlugin\";\r\nvar defaultValues = (_a = {},\r\n    _a[STR_EXTENSION_CONFIG] = { isVal: isNotNullOrUndefined, v: {} },\r\n    _a);\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this; // Setting _self here as it's used outside of the dynamicProto as well\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _isinitialized;\r\n        var _rootCtx; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin; // Used for backward compatibility where plugins don't call the main pipeline\r\n        var _unloadHandlerContainer;\r\n        var _hookContainer;\r\n        _initDefaults();\r\n        dynamicProto(BaseTelemetryPlugin, _self, function (_self) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                _setDefaults(config, core, pluginChain);\r\n                _isinitialized = true;\r\n            };\r\n            _self[_DYN_TEARDOWN /* @min:%2eteardown */] = function (unloadCtx, unloadState) {\r\n                var _a;\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (unloadCtx && core !== unloadCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing as either the plugin is not initialized or was not initialized by the current core\r\n                    return;\r\n                }\r\n                var result;\r\n                var unloadDone = false;\r\n                var theUnloadCtx = unloadCtx || createProcessTelemetryUnloadContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUnloadState = unloadState || (_a = {\r\n                        reason: 0 /* TelemetryUnloadReason.ManualTeardown */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = false,\r\n                    _a);\r\n                function _unloadCallback() {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _unloadHandlerContainer.run(theUnloadCtx, unloadState);\r\n                        _hookContainer.run(theUnloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]());\r\n                        if (result === true) {\r\n                            theUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n                        }\r\n                        _initDefaults();\r\n                    }\r\n                }\r\n                if (!_self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] || _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */](theUnloadCtx, theUnloadState, _unloadCallback) !== true) {\r\n                    _unloadCallback();\r\n                }\r\n                else {\r\n                    // Tell the caller that we will be calling processNext()\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (updateCtx, updateState) {\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (updateCtx && core !== updateCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing\r\n                    return;\r\n                }\r\n                var result;\r\n                var updateDone = false;\r\n                var theUpdateCtx = updateCtx || createProcessTelemetryUpdateContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUpdateState = updateState || {\r\n                    reason: 0 /* TelemetryUpdateReason.Unknown */\r\n                };\r\n                function _updateCallback() {\r\n                    if (!updateDone) {\r\n                        updateDone = true;\r\n                        _setDefaults(theUpdateCtx.getCfg(), theUpdateCtx.core(), theUpdateCtx[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n                    }\r\n                }\r\n                if (!_self._doUpdate || _self._doUpdate(theUpdateCtx, theUpdateState, _updateCallback) !== true) {\r\n                    _updateCallback();\r\n                }\r\n                else {\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            proxyFunctionAs(_self, \"_addUnloadCb\", function () { return _unloadHandlerContainer; }, \"add\");\r\n            proxyFunctionAs(_self, \"_addHook\", function () { return _hookContainer; }, \"add\");\r\n            objDefine(_self, \"_unloadHooks\", { g: function () { return _hookContainer; } });\r\n        });\r\n        // These are added after the dynamicProto so that are not moved to the prototype\r\n        _self[_DYN_DIAG_LOG /* @min:%2ediagLog */] = function (itemCtx) {\r\n            return _getTelCtx(itemCtx)[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n        };\r\n        _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n            }\r\n            else if (_nextPlugin && isFunction(_nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks\r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = _getTelCtx;\r\n        function _getTelCtx(currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || createProcessTelemetryContext(null, {}, _self[STR_CORE /* @min:%2ecore */]);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin[strGetPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        }\r\n        function _setDefaults(config, core, pluginChain) {\r\n            // Make sure the extensionConfig exists and the config is dynamic\r\n            createDynamicConfig(config, defaultValues, safeGetLogger(core));\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */]()[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[strGetPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self[STR_CORE /* @min:%2ecore */] = core;\r\n            _rootCtx = createProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n        }\r\n        function _initDefaults() {\r\n            _isinitialized = false;\r\n            _self[STR_CORE /* @min:%2ecore */] = null;\r\n            _rootCtx = null;\r\n            _nextPlugin = null;\r\n            _hookContainer = createUnloadHookContainer();\r\n            _unloadHandlerContainer = createUnloadHandlerContainer();\r\n        }\r\n    }\r\n// Removed Stub for BaseTelemetryPlugin.prototype.initialize.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.teardown.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.update.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addUnloadCb.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseTelemetryPlugin.__ieDyn=1;\n\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar _a;\r\nimport { getGlobal, objCreate, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\n;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!objHasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && objHasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || objHasOwnProperty(target, funcName)) && funcName !== str__Proto && funcName !== Prototype);\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throwTypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = objCreate(null);\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = objCreate(null);\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && objHasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || objCreate(null);\r\n        instFunc = (instFuncTable[proto[DynClassName]] || objCreate(null))[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !objHasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || objCreate(null);\r\n        if (!_isObjectOrArrayPrototype(instFuncTable)) {\r\n            var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || objCreate(null)); // fetch and assign if as it may not exist yet\r\n            // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n            }\r\n            if (!_isObjectOrArrayPrototype(instFuncs_1)) {\r\n                _forEachProp(target, function (name) {\r\n                    // Only add overridden functions\r\n                    if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                        // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                        instFuncs_1[name] = target[name];\r\n                        delete target[name];\r\n                        // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                        if (!objHasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                            proto[name] = _createDynamicPrototype(proto, name);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (objHasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nexport default function dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!objHasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (objHasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\r\n//# sourceMappingURL=DynamicProto.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n * Real Time profile (default profile). RealTime Latency events are sent every 1 sec and\r\n * Normal Latency events are sent every 2 sec.\r\n */\r\nexport var RT_PROFILE = \"REAL_TIME\";\r\n/**\r\n * Near Real Time profile. RealTime Latency events are sent every 3 sec and\r\n * Normal Latency events are sent every 6 sec.\r\n */\r\nexport var NRT_PROFILE = \"NEAR_REAL_TIME\";\r\n/**\r\n * Best Effort. RealTime Latency events are sent every 9 sec and\r\n * Normal Latency events are sent every 18 sec.\r\n */\r\nexport var BE_PROFILE = \"BEST_EFFORT\";\r\n//# sourceMappingURL=DataModels.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_POST_METHOD = \"POST\";\r\nexport var STR_DISABLED_PROPERTY_NAME = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var STR_DROPPED = \"drop\";\r\nexport var STR_SENDING = \"send\";\r\nexport var STR_REQUEUE = \"requeue\";\r\nexport var STR_RESPONSE_FAIL = \"rspFail\";\r\nexport var STR_OTHER = \"oth\";\r\nexport var DEFAULT_CACHE_CONTROL = \"no-cache, no-store\";\r\nexport var DEFAULT_CONTENT_TYPE = \"application/x-json-stream\";\r\nexport var STR_CACHE_CONTROL = \"cache-control\";\r\nexport var STR_CONTENT_TYPE_HEADER = \"content-type\";\r\nexport var STR_KILL_TOKENS_HEADER = \"kill-tokens\";\r\nexport var STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nexport var STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nexport var STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\nexport var STR_CLIENT_VERSION = \"client-version\";\r\nexport var STR_CLIENT_ID = \"client-id\";\r\nexport var STR_TIME_DELTA_TO_APPLY = \"time-delta-to-apply-millis\";\r\nexport var STR_UPLOAD_TIME = \"upload-time\";\r\nexport var STR_API_KEY = \"apikey\";\r\nexport var STR_MSA_DEVICE_TICKET = \"AuthMsaDeviceTicket\";\r\nexport var STR_AUTH_WEB_TOKEN = \"WebAuthToken\";\r\nexport var STR_AUTH_XTOKEN = \"AuthXToken\";\r\nexport var STR_SDK_VERSION = \"sdk-version\";\r\nexport var STR_NO_RESPONSE_BODY = \"NoResponseBody\";\r\nexport var STR_MSFPC = \"msfpc\";\r\nexport var STR_TRACE = \"trace\";\r\nexport var STR_USER = \"user\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_ALLOW_REQUEST_SENDIN0 = \"allowRequestSending\"; // Count: 3\r\nexport var _DYN_FIRST_REQUEST_SENT = \"firstRequestSent\"; // Count: 2\r\nexport var _DYN_SHOULD_ADD_CLOCK_SKE1 = \"shouldAddClockSkewHeaders\"; // Count: 2\r\nexport var _DYN_GET_CLOCK_SKEW_HEADE2 = \"getClockSkewHeaderValue\"; // Count: 2\r\nexport var _DYN_SET_CLOCK_SKEW = \"setClockSkew\"; // Count: 3\r\nexport var _DYN_LENGTH = \"length\"; // Count: 38\r\nexport var _DYN_CONCAT = \"concat\"; // Count: 7\r\nexport var _DYN_I_KEY = \"iKey\"; // Count: 11\r\nexport var _DYN_COUNT = \"count\"; // Count: 19\r\nexport var _DYN_EVENTS = \"events\"; // Count: 8\r\nexport var _DYN_PUSH = \"push\"; // Count: 15\r\nexport var _DYN_SPLIT = \"split\"; // Count: 6\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 4\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 3\r\nexport var _DYN_HDRS = \"hdrs\"; // Count: 7\r\nexport var _DYN_USE_HDRS = \"useHdrs\"; // Count: 5\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_SET_TIMEOUT_OVERRIDE = \"setTimeoutOverride\"; // Count: 3\r\nexport var _DYN_CLEAR_TIMEOUT_OVERRI3 = \"clearTimeoutOverride\"; // Count: 3\r\nexport var _DYN_PAYLOAD_PREPROCESSOR = \"payloadPreprocessor\"; // Count: 2\r\nexport var _DYN_OVERRIDE_ENDPOINT_UR4 = \"overrideEndpointUrl\"; // Count: 3\r\nexport var _DYN_AVOID_OPTIONS = \"avoidOptions\"; // Count: 3\r\nexport var _DYN_DISABLE_EVENT_TIMING5 = \"disableEventTimings\"; // Count: 2\r\nexport var _DYN_STRINGIFY_OBJECTS = \"stringifyObjects\"; // Count: 2\r\nexport var _DYN_ENABLE_COMPOUND_KEY = \"enableCompoundKey\"; // Count: 4\r\nexport var _DYN_DISABLE_XHR_SYNC = \"disableXhrSync\"; // Count: 6\r\nexport var _DYN_DISABLE_FETCH_KEEP_A6 = \"disableFetchKeepAlive\"; // Count: 7\r\nexport var _DYN_ADD_NO_RESPONSE = \"addNoResponse\"; // Count: 3\r\nexport var _DYN_EXCLUDE_CS_META_DATA = \"excludeCsMetaData\"; // Count: 2\r\nexport var _DYN_USE_SEND_BEACON = \"useSendBeacon\"; // Count: 3\r\nexport var _DYN_FETCH_CREDENTIALS = \"fetchCredentials\"; // Count: 4\r\nexport var _DYN_ALWAYS_USE_XHR_OVERR7 = \"alwaysUseXhrOverride\"; // Count: 3\r\nexport var _DYN_UNLOAD_TRANSPORTS = \"unloadTransports\"; // Count: 2\r\nexport var _DYN_SERIALIZE_OFFLINE_EV8 = \"serializeOfflineEvt\"; // Count: 2\r\nexport var _DYN_GET_OFFLINE_REQUEST_9 = \"getOfflineRequestDetails\"; // Count: 2\r\nexport var _DYN_CREATE_PAYLOAD = \"createPayload\"; // Count: 4\r\nexport var _DYN_CREATE_ONE_DSPAYLOAD = \"createOneDSPayload\"; // Count: 4\r\nexport var _DYN_PAYLOAD_BLOB = \"payloadBlob\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 12\r\nexport var _DYN__THE_PAYLOAD = \"_thePayload\"; // Count: 6\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_BATCHES = \"batches\"; // Count: 15\r\nexport var _DYN_SEND_TYPE = \"sendType\"; // Count: 13\r\nexport var _DYN_ADD_HEADER = \"addHeader\"; // Count: 3\r\nexport var _DYN_CAN_SEND_REQUEST = \"canSendRequest\"; // Count: 3\r\nexport var _DYN_SEND_QUEUED_REQUESTS = \"sendQueuedRequests\"; // Count: 5\r\nexport var _DYN_IS_COMPLETELY_IDLE = \"isCompletelyIdle\"; // Count: 2\r\nexport var _DYN_SET_UNLOADING = \"setUnloading\"; // Count: 3\r\nexport var _DYN_IS_TENANT_KILLED = \"isTenantKilled\"; // Count: 3\r\nexport var _DYN_RESUME = \"resume\"; // Count: 4\r\nexport var _DYN_SEND_SYNCHRONOUS_BAT10 = \"sendSynchronousBatch\"; // Count: 2\r\nexport var _DYN__TRANSPORT = \"_transport\"; // Count: 3\r\nexport var _DYN_GET_WPARAM = \"getWParam\"; // Count: 4\r\nexport var _DYN_IS_BEACON = \"isBeacon\"; // Count: 4\r\nexport var _DYN_TIMINGS = \"timings\"; // Count: 4\r\nexport var _DYN_IS_TEARDOWN = \"isTeardown\"; // Count: 3\r\nexport var _DYN_IS_SYNC = \"isSync\"; // Count: 4\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 4\r\nexport var _DYN__SEND_REASON = \"_sendReason\"; // Count: 4\r\nexport var _DYN_SET_KILL_SWITCH_TENA11 = \"setKillSwitchTenants\"; // Count: 2\r\nexport var _DYN__BACK_OFF_TRANSMISSI12 = \"_backOffTransmission\"; // Count: 2\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 4\r\nexport var _DYN_DISABLE_OPTIMIZE_OBJ = \"disableOptimizeObj\"; // Count: 2\r\nexport var _DYN_IGNORE_MC1_MS0_COOKI13 = \"ignoreMc1Ms0CookieProcessing\"; // Count: 2\r\nexport var _DYN_EVENTS_LIMIT_IN_MEM = \"eventsLimitInMem\"; // Count: 2\r\nexport var _DYN_AUTO_FLUSH_EVENTS_LI14 = \"autoFlushEventsLimit\"; // Count: 2\r\nexport var _DYN_DISABLE_AUTO_BATCH_F15 = \"disableAutoBatchFlushLimit\"; // Count: 2\r\nexport var _DYN_OVERRIDE_INSTRUMENTA16 = \"overrideInstrumentationKey\"; // Count: 2\r\nexport var _DYN_DISABLE_TELEMETRY = \"disableTelemetry\"; // Count: 2\r\nexport var _DYN_BASE_DATA = \"baseData\"; // Count: 3\r\nexport var _DYN_SEND_ATTEMPT = \"sendAttempt\"; // Count: 4\r\nexport var _DYN_LATENCY = \"latency\"; // Count: 7\r\nexport var _DYN_SYNC = \"sync\"; // Count: 7\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* EventBatch.ts\r\n* @author Nev Wylie (newylie)\r\n* @copyright Microsoft 2020\r\n*/\r\nimport { isNullOrUndefined, isValueAssigned } from \"@microsoft/1ds-core-js\";\r\nimport { STR_EMPTY, STR_MSFPC } from \"./InternalConstants\";\r\nimport { _DYN_CONCAT, _DYN_COUNT, _DYN_EVENTS, _DYN_I_KEY, _DYN_LENGTH, _DYN_PUSH, _DYN_SPLICE, _DYN_SPLIT } from \"./__DynamicConstants\";\r\nfunction _getEventMsfpc(theEvent) {\r\n    var intWeb = ((theEvent.ext || {})[\"intweb\"]);\r\n    if (intWeb && isValueAssigned(intWeb[STR_MSFPC])) {\r\n        return intWeb[STR_MSFPC];\r\n    }\r\n    return null;\r\n}\r\nfunction _getMsfpc(theEvents) {\r\n    var msfpc = null;\r\n    for (var lp = 0; msfpc === null && lp < theEvents[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n        msfpc = _getEventMsfpc(theEvents[lp]);\r\n    }\r\n    return msfpc;\r\n}\r\n/**\r\n* This class defines a \"batch\" events related to a specific iKey, it is used by the PostChannel and HttpManager\r\n* to collect and transfer ownership of events without duplicating them in-memory. This reduces the previous\r\n* array duplication and shared ownership issues that occurred due to race conditions caused by the async nature\r\n* of sending requests.\r\n*/\r\nvar EventBatch = /** @class */ (function () {\r\n    /**\r\n     * Private constructor so that caller is forced to use the static create method.\r\n     * @param iKey - The iKey to associate with the events (not validated)\r\n     * @param addEvents - The optional collection of events to assign to this batch - defaults to an empty array.\r\n     */\r\n    function EventBatch(iKey, addEvents) {\r\n        var events = addEvents ? [][_DYN_CONCAT /* @min:%2econcat */](addEvents) : [];\r\n        var _self = this;\r\n        var _msfpc = _getMsfpc(events);\r\n        _self[_DYN_I_KEY /* @min:%2eiKey */] = function () {\r\n            return iKey;\r\n        };\r\n        _self.Msfpc = function () {\r\n            // return the cached value unless it's undefined -- used to avoid cpu\r\n            return _msfpc || STR_EMPTY;\r\n        };\r\n        _self[_DYN_COUNT /* @min:%2ecount */] = function () {\r\n            return events[_DYN_LENGTH /* @min:%2elength */];\r\n        };\r\n        _self[_DYN_EVENTS /* @min:%2eevents */] = function () {\r\n            return events;\r\n        };\r\n        _self.addEvent = function (theEvent) {\r\n            if (theEvent) {\r\n                events[_DYN_PUSH /* @min:%2epush */](theEvent);\r\n                if (!_msfpc) {\r\n                    // Not found so try and find one\r\n                    _msfpc = _getEventMsfpc(theEvent);\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        _self[_DYN_SPLIT /* @min:%2esplit */] = function (fromEvent, numEvents) {\r\n            // Create a new batch with the same iKey\r\n            var theEvents;\r\n            if (fromEvent < events[_DYN_LENGTH /* @min:%2elength */]) {\r\n                var cnt = events[_DYN_LENGTH /* @min:%2elength */] - fromEvent;\r\n                if (!isNullOrUndefined(numEvents)) {\r\n                    cnt = numEvents < cnt ? numEvents : cnt;\r\n                }\r\n                theEvents = events[_DYN_SPLICE /* @min:%2esplice */](fromEvent, cnt);\r\n                // reset the fetched msfpc value\r\n                _msfpc = _getMsfpc(events);\r\n            }\r\n            return new EventBatch(iKey, theEvents);\r\n        };\r\n    }\r\n    /**\r\n     * Creates a new Event Batch object\r\n     * @param iKey The iKey associated with this batch of events\r\n     */\r\n    EventBatch.create = function (iKey, theEvents) {\r\n        return new EventBatch(iKey, theEvents);\r\n    };\r\n    return EventBatch;\r\n}());\r\nexport { EventBatch };\r\n//# sourceMappingURL=EventBatch.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* ClockSkewManager.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _DYN_ALLOW_REQUEST_SENDIN0, _DYN_FIRST_REQUEST_SENT, _DYN_GET_CLOCK_SKEW_HEADE2, _DYN_SET_CLOCK_SKEW, _DYN_SHOULD_ADD_CLOCK_SKE1 } from \"./__DynamicConstants\";\r\n/**\r\n* Class to manage clock skew correction.\r\n*/\r\nvar ClockSkewManager = /** @class */ (function () {\r\n    function ClockSkewManager() {\r\n        var _allowRequestSending = true;\r\n        var _shouldAddClockSkewHeaders = true;\r\n        var _isFirstRequest = true;\r\n        var _clockSkewHeaderValue = \"use-collector-delta\";\r\n        var _clockSkewSet = false;\r\n        dynamicProto(ClockSkewManager, this, function (_self) {\r\n            /**\r\n             * Determine if requests can be sent.\r\n             * @returns True if requests can be sent, false otherwise.\r\n             */\r\n            _self[_DYN_ALLOW_REQUEST_SENDIN0 /* @min:%2eallowRequestSending */] = function () {\r\n                return _allowRequestSending;\r\n            };\r\n            /**\r\n             * Tells the ClockSkewManager that it should assume that the first request has now been sent,\r\n             * If this method had not yet been called AND the clock Skew had not been set this will set\r\n             * allowRequestSending to false until setClockSet() is called.\r\n             */\r\n            _self[_DYN_FIRST_REQUEST_SENT /* @min:%2efirstRequestSent */] = function () {\r\n                if (_isFirstRequest) {\r\n                    _isFirstRequest = false;\r\n                    if (!_clockSkewSet) {\r\n                        // Block sending until we get the first clock Skew\r\n                        _allowRequestSending = false;\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * Determine if clock skew headers should be added to the request.\r\n             * @returns True if clock skew headers should be added, false otherwise.\r\n             */\r\n            _self[_DYN_SHOULD_ADD_CLOCK_SKE1 /* @min:%2eshouldAddClockSkewHeaders */] = function () {\r\n                return _shouldAddClockSkewHeaders;\r\n            };\r\n            /**\r\n             * Gets the clock skew header value.\r\n             * @returns The clock skew header value.\r\n             */\r\n            _self[_DYN_GET_CLOCK_SKEW_HEADE2 /* @min:%2egetClockSkewHeaderValue */] = function () {\r\n                return _clockSkewHeaderValue;\r\n            };\r\n            /**\r\n             * Sets the clock skew header value. Once clock skew is set this method\r\n             * is no-op.\r\n             * @param timeDeltaInMillis - Time delta to be saved as the clock skew header value.\r\n             */\r\n            _self[_DYN_SET_CLOCK_SKEW /* @min:%2esetClockSkew */] = function (timeDeltaInMillis) {\r\n                if (!_clockSkewSet) {\r\n                    if (timeDeltaInMillis) {\r\n                        _clockSkewHeaderValue = timeDeltaInMillis;\r\n                        _shouldAddClockSkewHeaders = true;\r\n                        _clockSkewSet = true;\r\n                    }\r\n                    else {\r\n                        _shouldAddClockSkewHeaders = false;\r\n                    }\r\n                    // Unblock sending\r\n                    _allowRequestSending = true;\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for ClockSkewManager.prototype.allowRequestSending.\r\n// Removed Stub for ClockSkewManager.prototype.firstRequestSent.\r\n// Removed Stub for ClockSkewManager.prototype.shouldAddClockSkewHeaders.\r\n// Removed Stub for ClockSkewManager.prototype.getClockSkewHeaderValue.\r\n// Removed Stub for ClockSkewManager.prototype.setClockSkew.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ClockSkewManager.__ieDyn=1;\n\n    return ClockSkewManager;\r\n}());\r\nexport { ClockSkewManager };\r\n//# sourceMappingURL=ClockSkewManager.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* KillSwitch.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrForEach, dateNow, strTrim } from \"@microsoft/1ds-core-js\";\r\nimport { _DYN_IS_TENANT_KILLED, _DYN_LENGTH, _DYN_PUSH, _DYN_SET_KILL_SWITCH_TENA11, _DYN_SPLIT } from \"./__DynamicConstants\";\r\nvar SecToMsMultiplier = 1000;\r\n/**\r\n* Class to stop certain tenants sending events.\r\n*/\r\nvar KillSwitch = /** @class */ (function () {\r\n    function KillSwitch() {\r\n        var _killedTokenDictionary = {};\r\n        function _normalizeTenants(values) {\r\n            var result = [];\r\n            if (values) {\r\n                arrForEach(values, function (value) {\r\n                    result[_DYN_PUSH /* @min:%2epush */](strTrim(value));\r\n                });\r\n            }\r\n            return result;\r\n        }\r\n        dynamicProto(KillSwitch, this, function (_self) {\r\n            _self[_DYN_SET_KILL_SWITCH_TENA11 /* @min:%2esetKillSwitchTenants */] = function (killTokens, killDuration) {\r\n                if (killTokens && killDuration) {\r\n                    try {\r\n                        var killedTokens = _normalizeTenants(killTokens[_DYN_SPLIT /* @min:%2esplit */](\",\"));\r\n                        if (killDuration === \"this-request-only\") {\r\n                            return killedTokens;\r\n                        }\r\n                        var durationMs = parseInt(killDuration, 10) * SecToMsMultiplier;\r\n                        for (var i = 0; i < killedTokens[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n                            _killedTokenDictionary[killedTokens[i]] = dateNow() + durationMs;\r\n                        }\r\n                    }\r\n                    catch (ex) {\r\n                        return [];\r\n                    }\r\n                }\r\n                return [];\r\n            };\r\n            _self[_DYN_IS_TENANT_KILLED /* @min:%2eisTenantKilled */] = function (tenantToken) {\r\n                var killDictionary = _killedTokenDictionary;\r\n                var name = strTrim(tenantToken);\r\n                if (killDictionary[name] !== undefined && killDictionary[name] > dateNow()) {\r\n                    return true;\r\n                }\r\n                delete killDictionary[name];\r\n                return false;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for KillSwitch.prototype.setKillSwitchTenants.\r\n// Removed Stub for KillSwitch.prototype.isTenantKilled.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    KillSwitch.__ieDyn=1;\n\n    return KillSwitch;\r\n}());\r\nexport { KillSwitch };\r\n//# sourceMappingURL=KillSwitch.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* RetryPolicy.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n*/\r\nvar RandomizationLowerThreshold = 0.8;\r\nvar RandomizationUpperThreshold = 1.2;\r\nvar BaseBackoff = 3000;\r\nvar MaxBackoff = 600000;\r\n/**\r\n * Determine if the request should be retried for the given status code.\r\n * The below expression reads that we should only retry for:\r\n *      - HttpStatusCodes that are smaller than 300.\r\n *      - HttpStatusCodes greater or equal to 500 (except for 501-NotImplement\r\n *        and 505-HttpVersionNotSupport).\r\n *      - HttpStatusCode 408-RequestTimeout.\r\n *      - HttpStatusCode 429.\r\n * This is based on Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry class\r\n * @param httpStatusCode - The status code returned for the request.\r\n * @returns True if request should be retried, false otherwise.\r\n */\r\nexport function retryPolicyShouldRetryForStatus(httpStatusCode) {\r\n    /* tslint:disable:triple-equals */\r\n    // Disabling triple-equals rule to avoid httpOverrides from failing because they are returning a string value\r\n    return !((httpStatusCode >= 300 && httpStatusCode < 500 && httpStatusCode != 429)\r\n        || (httpStatusCode == 501)\r\n        || (httpStatusCode == 505));\r\n    /* tslint:enable:triple-equals */\r\n}\r\n/**\r\n * Gets the number of milliseconds to back off before retrying the request. The\r\n * back off duration is exponentially scaled based on the number of retries already\r\n * done for the request.\r\n * @param retriesSoFar - The number of times the request has already been retried.\r\n * @returns The back off duration for the request before it can be retried.\r\n */\r\nexport function retryPolicyGetMillisToBackoffForRetry(retriesSoFar) {\r\n    var waitDuration = 0;\r\n    var minBackoff = BaseBackoff * RandomizationLowerThreshold;\r\n    var maxBackoff = BaseBackoff * RandomizationUpperThreshold;\r\n    var randomBackoff = Math.floor(Math.random() * (maxBackoff - minBackoff)) + minBackoff;\r\n    waitDuration = Math.pow(2, retriesSoFar) * randomBackoff;\r\n    return Math.min(waitDuration, MaxBackoff);\r\n}\r\n//# sourceMappingURL=RetryPolicy.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Serializer.ts\r\n* @author Abhilash Panwar (abpanwar); Hector Hernandez (hectorh); Nev Wylie (newylie)\r\n* @copyright Microsoft 2018-2020\r\n*/\r\n// @skip-file-minify\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrIndexOf, doPerf, getCommonSchemaMetaData, getTenantId, isArray, isValueAssigned, objForEachKey, sanitizeProperty, strStartsWith } from \"@microsoft/1ds-core-js\";\r\nimport { EventBatch } from \"./EventBatch\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { strSubstr } from \"@nevware21/ts-utils\";\r\n/**\r\n * Note: This is an optimization for V8-based browsers. When V8 concatenates a string,\r\n * the strings are only joined logically using a \"cons string\" or \"constructed/concatenated\r\n * string\". These containers keep references to one another and can result in very large\r\n * memory usage. For example, if a 2MB string is constructed by concatenating 4 bytes\r\n * together at a time, the memory usage will be ~44MB; so ~22x increase. The strings are\r\n * only joined together when an operation requiring their joining takes place, such as\r\n * substr(). This function is called when adding data to this buffer to ensure these\r\n * types of strings are periodically joined to reduce the memory footprint.\r\n * Setting to every 20 events as the JSON.stringify() may have joined many strings\r\n * and calling this too much causes a minor delay while processing.\r\n */\r\nvar _MAX_STRING_JOINS = 20;\r\nvar RequestSizeLimitBytes = 3984588; // approx 3.8 Mb\r\nvar BeaconRequestSizeLimitBytes = 65000; // approx 64kb (the current Edge, Firefox and Chrome max limit)\r\nvar MaxRecordSize = 2000000; // approx 2 Mb\r\nvar MaxBeaconRecordSize = Math.min(MaxRecordSize, BeaconRequestSizeLimitBytes);\r\nvar metadata = \"metadata\";\r\nvar f = \"f\";\r\nvar rCheckDot = /\\./;\r\n/**\r\n* Class to handle serialization of event and request.\r\n* Currently uses Bond for serialization. Please note that this may be subject to change.\r\n*/\r\nvar Serializer = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Serializer class\r\n     * @param perfManager - The performance manager to use for tracking performance\r\n     * @param valueSanitizer - The value sanitizer to use for sanitizing field values\r\n     * @param stringifyObjects - Should objects be stringified before being sent\r\n     * @param enableCompoundKey - Should compound keys be enabled (defaults to false)\r\n     * @param getEncodedTypeOverride - The callback to get the encoded type for a property defaults to ({@link getCommonSchemaMetaData }(...))\r\n     * @param excludeCsMetaData - (!DANGER!) Should metadata be populated when encoding the event blob (defaults to false) - PII data will NOT be tagged as PII for backend processing\r\n     */\r\n    function Serializer(perfManager, valueSanitizer, stringifyObjects, enableCompoundKey, getEncodedTypeOverride, excludeCsMetaData) {\r\n        var strData = \"data\";\r\n        var strBaseData = \"baseData\";\r\n        var strExt = \"ext\";\r\n        var _checkForCompoundkey = !!enableCompoundKey;\r\n        var _processSubKeys = true;\r\n        var _theSanitizer = valueSanitizer;\r\n        var _isReservedCache = {};\r\n        var _excludeCsMetaData = !!excludeCsMetaData;\r\n        var _getEncodedType = getEncodedTypeOverride || getCommonSchemaMetaData;\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            _self.createPayload = function (retryCnt, isTeardown, isSync, isReducedPayload, sendReason, sendType) {\r\n                return {\r\n                    apiKeys: [],\r\n                    payloadBlob: STR_EMPTY,\r\n                    overflow: null,\r\n                    sizeExceed: [],\r\n                    failedEvts: [],\r\n                    batches: [],\r\n                    numEvents: 0,\r\n                    retryCnt: retryCnt,\r\n                    isTeardown: isTeardown,\r\n                    isSync: isSync,\r\n                    isBeacon: isReducedPayload,\r\n                    sendType: sendType,\r\n                    sendReason: sendReason\r\n                };\r\n            };\r\n            _self.appendPayload = function (payload, theBatch, maxEventsPerBatch) {\r\n                var canAddEvents = payload && theBatch && !payload.overflow;\r\n                if (canAddEvents) {\r\n                    doPerf(perfManager, function () { return \"Serializer:appendPayload\"; }, function () {\r\n                        var theEvents = theBatch.events();\r\n                        var payloadBlob = payload.payloadBlob;\r\n                        var payloadEvents = payload.numEvents;\r\n                        var eventsAdded = false;\r\n                        var sizeExceeded = [];\r\n                        var failedEvts = [];\r\n                        var isBeaconPayload = payload.isBeacon;\r\n                        var requestMaxSize = isBeaconPayload ? BeaconRequestSizeLimitBytes : RequestSizeLimitBytes;\r\n                        var recordMaxSize = isBeaconPayload ? MaxBeaconRecordSize : MaxRecordSize;\r\n                        var lp = 0;\r\n                        var joinCount = 0;\r\n                        while (lp < theEvents.length) {\r\n                            var theEvent = theEvents[lp];\r\n                            if (theEvent) {\r\n                                if (payloadEvents >= maxEventsPerBatch) {\r\n                                    // Maximum events per payload reached, so don't add any more\r\n                                    payload.overflow = theBatch.split(lp);\r\n                                    break;\r\n                                }\r\n                                var eventBlob = _self.getEventBlob(theEvent);\r\n                                if (eventBlob && eventBlob.length <= recordMaxSize) {\r\n                                    // This event will fit into the payload\r\n                                    var blobLength = eventBlob.length;\r\n                                    var currentSize = payloadBlob.length;\r\n                                    if (currentSize + blobLength > requestMaxSize) {\r\n                                        // Request or batch size exceeded, so don't add any more to the payload\r\n                                        payload.overflow = theBatch.split(lp);\r\n                                        break;\r\n                                    }\r\n                                    if (payloadBlob) {\r\n                                        payloadBlob += \"\\n\";\r\n                                    }\r\n                                    payloadBlob += eventBlob;\r\n                                    joinCount++;\r\n                                    // v8 memory optimization only\r\n                                    if (joinCount > _MAX_STRING_JOINS) {\r\n                                        // this substr() should cause the constructed string to join\r\n                                        strSubstr(payloadBlob, 0, 1);\r\n                                        joinCount = 0;\r\n                                    }\r\n                                    eventsAdded = true;\r\n                                    payloadEvents++;\r\n                                }\r\n                                else {\r\n                                    if (eventBlob) {\r\n                                        // Single event size exceeded so remove from the batch\r\n                                        sizeExceeded.push(theEvent);\r\n                                    }\r\n                                    else {\r\n                                        failedEvts.push(theEvent);\r\n                                    }\r\n                                    // We also need to remove this event from the existing array, otherwise a notification will be sent\r\n                                    // indicating that it was successfully sent\r\n                                    theEvents.splice(lp, 1);\r\n                                    lp--;\r\n                                }\r\n                            }\r\n                            lp++;\r\n                        }\r\n                        if (sizeExceeded.length > 0) {\r\n                            payload.sizeExceed.push(EventBatch.create(theBatch.iKey(), sizeExceeded));\r\n                            // Remove the exceeded events from the batch\r\n                        }\r\n                        if (failedEvts.length > 0) {\r\n                            payload.failedEvts.push(EventBatch.create(theBatch.iKey(), failedEvts));\r\n                            // Remove the failed events from the batch\r\n                        }\r\n                        if (eventsAdded) {\r\n                            payload.batches.push(theBatch);\r\n                            payload.payloadBlob = payloadBlob;\r\n                            payload.numEvents = payloadEvents;\r\n                            var apiKey = theBatch.iKey();\r\n                            if (arrIndexOf(payload.apiKeys, apiKey) === -1) {\r\n                                payload.apiKeys.push(apiKey);\r\n                            }\r\n                        }\r\n                    }, function () { return ({ payload: payload, theBatch: { iKey: theBatch.iKey(), evts: theBatch.events() }, max: maxEventsPerBatch }); });\r\n                }\r\n                return canAddEvents;\r\n            };\r\n            _self.getEventBlob = function (eventData) {\r\n                try {\r\n                    return doPerf(perfManager, function () { return \"Serializer.getEventBlob\"; }, function () {\r\n                        var serializedEvent = {};\r\n                        // Adding as dynamic keys for v8 performance\r\n                        serializedEvent.name = eventData.name;\r\n                        serializedEvent.time = eventData.time;\r\n                        serializedEvent.ver = eventData.ver;\r\n                        serializedEvent.iKey = \"o:\" + getTenantId(eventData.iKey);\r\n                        // Assigning local var so usage in part b/c don't throw if there is no ext\r\n                        var serializedExt = {};\r\n                        var _addMetadataCallback;\r\n                        if (!_excludeCsMetaData) {\r\n                            _addMetadataCallback = function (pathKeys, key, value) {\r\n                                _addJSONPropertyMetaData(_getEncodedType, serializedExt, pathKeys, key, value);\r\n                            };\r\n                        }\r\n                        // Part A\r\n                        var eventExt = eventData[strExt];\r\n                        if (eventExt) {\r\n                            // Only assign ext if the event had one (There are tests covering this use case)\r\n                            serializedEvent[strExt] = serializedExt;\r\n                            objForEachKey(eventExt, function (key, value) {\r\n                                var data = serializedExt[key] = {};\r\n                                // Don't include a metadata callback as we don't currently set metadata Part A fields\r\n                                _processPathKeys(value, data, \"ext.\" + key, true, null, null, true);\r\n                            });\r\n                        }\r\n                        var serializedData = serializedEvent[strData] = {};\r\n                        serializedData.baseType = eventData.baseType;\r\n                        var serializedBaseData = serializedData[strBaseData] = {};\r\n                        // Part B\r\n                        _processPathKeys(eventData.baseData, serializedBaseData, strBaseData, false, [strBaseData], _addMetadataCallback, _processSubKeys);\r\n                        // Part C\r\n                        _processPathKeys(eventData.data, serializedData, strData, false, [], _addMetadataCallback, _processSubKeys);\r\n                        return JSON.stringify(serializedEvent);\r\n                    }, function () { return ({ item: eventData }); });\r\n                }\r\n                catch (e) {\r\n                    return null;\r\n                }\r\n            };\r\n            function _isReservedField(path, name) {\r\n                var result = _isReservedCache[path];\r\n                if (result === undefined) {\r\n                    if (path.length >= 7) {\r\n                        // Do not allow the changing of fields located in the ext.metadata or ext.web extension\r\n                        result = strStartsWith(path, \"ext.metadata\") || strStartsWith(path, \"ext.web\");\r\n                    }\r\n                    _isReservedCache[path] = result;\r\n                }\r\n                return result;\r\n            }\r\n            function _processPathKeys(srcObj, target, thePath, checkReserved, metadataPathKeys, metadataCallback, processSubKeys) {\r\n                objForEachKey(srcObj, function (key, srcValue) {\r\n                    var prop = null;\r\n                    if (srcValue || isValueAssigned(srcValue)) {\r\n                        var path = thePath;\r\n                        var name_1 = key;\r\n                        var theMetaPathKeys = metadataPathKeys;\r\n                        var destObj = target;\r\n                        // Handle keys with embedded '.', like \"TestObject.testProperty\"\r\n                        if (_checkForCompoundkey && !checkReserved && rCheckDot.test(key)) {\r\n                            var subKeys = key.split(\".\");\r\n                            var keyLen = subKeys.length;\r\n                            if (keyLen > 1) {\r\n                                if (theMetaPathKeys) {\r\n                                    // Create a copy of the meta path keys so we can add the extra ones\r\n                                    theMetaPathKeys = theMetaPathKeys.slice();\r\n                                }\r\n                                for (var lp = 0; lp < keyLen - 1; lp++) {\r\n                                    var subKey = subKeys[lp];\r\n                                    // Add/reuse the sub key object\r\n                                    destObj = destObj[subKey] = destObj[subKey] || {};\r\n                                    path += \".\" + subKey;\r\n                                    if (theMetaPathKeys) {\r\n                                        theMetaPathKeys.push(subKey);\r\n                                    }\r\n                                }\r\n                                name_1 = subKeys[keyLen - 1];\r\n                            }\r\n                        }\r\n                        var isReserved = checkReserved && _isReservedField(path, name_1);\r\n                        if (!isReserved && _theSanitizer && _theSanitizer.handleField(path, name_1)) {\r\n                            prop = _theSanitizer.value(path, name_1, srcValue, stringifyObjects);\r\n                        }\r\n                        else {\r\n                            prop = sanitizeProperty(name_1, srcValue, stringifyObjects);\r\n                        }\r\n                        if (prop) {\r\n                            // Set the value\r\n                            var newValue = prop.value;\r\n                            destObj[name_1] = newValue;\r\n                            if (metadataCallback) {\r\n                                metadataCallback(theMetaPathKeys, name_1, prop);\r\n                            }\r\n                            if (processSubKeys && typeof newValue === \"object\" && !isArray(newValue)) {\r\n                                var newPath = theMetaPathKeys;\r\n                                if (newPath) {\r\n                                    newPath = newPath.slice();\r\n                                    newPath.push(name_1);\r\n                                }\r\n                                // Make sure we process sub objects as well (for value sanitization and metadata)\r\n                                _processPathKeys(srcValue, newValue, path + \".\" + name_1, checkReserved, newPath, metadataCallback, processSubKeys);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Serializer.prototype.createPayload.\r\n// Removed Stub for Serializer.prototype.appendPayload.\r\n// Removed Stub for Serializer.prototype.getEventBlob.\r\n// Removed Stub for Serializer.prototype.handleField.\r\n// Removed Stub for Serializer.prototype.getSanitizer.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    Serializer.__ieDyn=1;\n\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n/**\r\n * @ignore\r\n * @param getEncodedType - The function to get the encoded type for the property\r\n * @param json - The json object to add the metadata to\r\n * @param propKeys - The property keys to add to the metadata\r\n * @param name - The name of the property\r\n * @param propertyValue - The property value\r\n */\r\nfunction _addJSONPropertyMetaData(getEncodedType, json, propKeys, name, propertyValue) {\r\n    if (propertyValue && json) {\r\n        var encodedTypeValue = getEncodedType(propertyValue.value, propertyValue.kind, propertyValue.propertyType);\r\n        if (encodedTypeValue > -1) {\r\n            // Add the root metadata\r\n            var metaData = json[metadata];\r\n            if (!metaData) {\r\n                // Sets the root 'f'\r\n                metaData = json[metadata] = { f: {} };\r\n            }\r\n            var metaTarget = metaData[f];\r\n            if (!metaTarget) {\r\n                // This can occur if someone has manually added an ext.metadata object\r\n                // Such as ext.metadata.privLevel and ext.metadata.privTags\r\n                metaTarget = metaData[f] = {};\r\n            }\r\n            // Traverse the metadata path and build each object (contains an 'f' key) -- if required\r\n            if (propKeys) {\r\n                for (var lp = 0; lp < propKeys.length; lp++) {\r\n                    var key = propKeys[lp];\r\n                    if (!metaTarget[key]) {\r\n                        metaTarget[key] = { f: {} };\r\n                    }\r\n                    var newTarget = metaTarget[key][f];\r\n                    if (!newTarget) {\r\n                        // Not expected, but can occur if the metadata context was pre-created as part of the event\r\n                        newTarget = metaTarget[key][f] = {};\r\n                    }\r\n                    metaTarget = newTarget;\r\n                }\r\n            }\r\n            metaTarget = metaTarget[name] = {};\r\n            if (isArray(propertyValue.value)) {\r\n                metaTarget[\"a\"] = {\r\n                    t: encodedTypeValue\r\n                };\r\n            }\r\n            else {\r\n                metaTarget[\"t\"] = encodedTypeValue;\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Serializer.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nvar _a;\r\n/**\r\n* HttpManager.ts\r\n* @author Abhilash Panwar (abpanwar); Hector Hernandez (hectorh); Nev Wylie (newylie)\r\n* @copyright Microsoft 2018-2020\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { FullVersionString, SenderPostManager, _getAllResponseHeaders, _throwInternal, _warnToConsole, arrForEach, dateNow, doPerf, dumpObj, extend, getCommonSchemaMetaData, getNavigator, getResponseText, getTime, hasOwnProperty, isBeaconsSupported, isFetchSupported, isNullOrUndefined, isReactNative, isUndefined, isValueAssigned, objForEachKey, objKeys, onConfigChange, optimizeObject, prependTransports, strUndefined } from \"@microsoft/1ds-core-js\";\r\nimport { arrAppend } from \"@nevware21/ts-utils\";\r\nimport { ClockSkewManager } from \"./ClockSkewManager\";\r\nimport { EventBatch } from \"./EventBatch\";\r\nimport { DEFAULT_CACHE_CONTROL, DEFAULT_CONTENT_TYPE, STR_API_KEY, STR_AUTH_XTOKEN, STR_CACHE_CONTROL, STR_CLIENT_ID, STR_CLIENT_VERSION, STR_CONTENT_TYPE_HEADER, STR_DROPPED, STR_EMPTY, STR_KILL_DURATION_HEADER, STR_KILL_TOKENS_HEADER, STR_MSA_DEVICE_TICKET, STR_MSFPC, STR_NO_RESPONSE_BODY, STR_OTHER, STR_REQUEUE, STR_RESPONSE_FAIL, STR_SENDING, STR_TIME_DELTA_HEADER, STR_TIME_DELTA_TO_APPLY, STR_UPLOAD_TIME } from \"./InternalConstants\";\r\nimport { KillSwitch } from \"./KillSwitch\";\r\nimport { retryPolicyGetMillisToBackoffForRetry, retryPolicyShouldRetryForStatus } from \"./RetryPolicy\";\r\nimport { Serializer } from \"./Serializer\";\r\nimport { createTimeoutWrapper } from \"./TimeoutOverrideWrapper\";\r\nimport { _DYN_ADD_HEADER, _DYN_ADD_NO_RESPONSE, _DYN_ALLOW_REQUEST_SENDIN0, _DYN_ALWAYS_USE_XHR_OVERR7, _DYN_AVOID_OPTIONS, _DYN_BATCHES, _DYN_CAN_SEND_REQUEST, _DYN_CLEAR_TIMEOUT_OVERRI3, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_ONE_DSPAYLOAD, _DYN_CREATE_PAYLOAD, _DYN_DATA, _DYN_DISABLE_EVENT_TIMING5, _DYN_DISABLE_FETCH_KEEP_A6, _DYN_DISABLE_XHR_SYNC, _DYN_ENABLE_COMPOUND_KEY, _DYN_EVENTS, _DYN_EXCLUDE_CS_META_DATA, _DYN_FETCH_CREDENTIALS, _DYN_FIRST_REQUEST_SENT, _DYN_GET_CLOCK_SKEW_HEADE2, _DYN_GET_OFFLINE_REQUEST_9, _DYN_GET_WPARAM, _DYN_HDRS, _DYN_HEADERS, _DYN_INITIALIZE, _DYN_IS_BEACON, _DYN_IS_COMPLETELY_IDLE, _DYN_IS_SYNC, _DYN_IS_TEARDOWN, _DYN_I_KEY, _DYN_LENGTH, _DYN_OVERRIDE_ENDPOINT_UR4, _DYN_PAYLOAD_BLOB, _DYN_PAYLOAD_PREPROCESSOR, _DYN_PUSH, _DYN_RESUME, _DYN_SEND_QUEUED_REQUESTS, _DYN_SEND_SYNCHRONOUS_BAT10, _DYN_SEND_TYPE, _DYN_SERIALIZE_OFFLINE_EV8, _DYN_SET_CLOCK_SKEW, _DYN_SET_KILL_SWITCH_TENA11, _DYN_SET_TIMEOUT_OVERRIDE, _DYN_SET_UNLOADING, _DYN_SHOULD_ADD_CLOCK_SKE1, _DYN_SPLICE, _DYN_SPLIT, _DYN_STRINGIFY_OBJECTS, _DYN_TIMEOUT, _DYN_TIMINGS, _DYN_TO_LOWER_CASE, _DYN_UNLOAD_TRANSPORTS, _DYN_URL_STRING, _DYN_USE_HDRS, _DYN_USE_SEND_BEACON, _DYN__BACK_OFF_TRANSMISSI12, _DYN__SEND_REASON, _DYN__THE_PAYLOAD, _DYN__TRANSPORT } from \"./__DynamicConstants\";\r\nvar strSendAttempt = \"sendAttempt\";\r\nvar _noResponseQs = \"&\" + STR_NO_RESPONSE_BODY + \"=true\";\r\nvar UrlQueryString = \"?cors=true&\" + STR_CONTENT_TYPE_HEADER[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() + \"=\" + DEFAULT_CONTENT_TYPE;\r\n/**\r\n * Identifies the default notification reason to the action names\r\n */\r\nvar _eventActionMap = (_a = {},\r\n    _a[1 /* EventBatchNotificationReason.Paused */] = STR_REQUEUE,\r\n    _a[100 /* EventBatchNotificationReason.RequeueEvents */] = STR_REQUEUE,\r\n    _a[200 /* EventBatchNotificationReason.Complete */] = \"sent\",\r\n    _a[8004 /* EventBatchNotificationReason.KillSwitch */] = STR_DROPPED,\r\n    _a[8003 /* EventBatchNotificationReason.SizeLimitExceeded */] = STR_DROPPED,\r\n    _a);\r\nvar _collectorQsHeaders = {};\r\nvar _collectorHeaderToQs = {};\r\nfunction _addCollectorHeaderQsMapping(qsName, headerName, allowQs) {\r\n    _collectorQsHeaders[qsName] = headerName;\r\n    if (allowQs !== false) {\r\n        _collectorHeaderToQs[headerName] = qsName;\r\n    }\r\n}\r\n_addCollectorHeaderQsMapping(STR_MSA_DEVICE_TICKET, STR_MSA_DEVICE_TICKET, false);\r\n_addCollectorHeaderQsMapping(STR_CLIENT_VERSION, STR_CLIENT_VERSION);\r\n_addCollectorHeaderQsMapping(STR_CLIENT_ID, \"Client-Id\");\r\n_addCollectorHeaderQsMapping(STR_API_KEY, STR_API_KEY);\r\n_addCollectorHeaderQsMapping(STR_TIME_DELTA_TO_APPLY, STR_TIME_DELTA_TO_APPLY);\r\n_addCollectorHeaderQsMapping(STR_UPLOAD_TIME, STR_UPLOAD_TIME);\r\n_addCollectorHeaderQsMapping(STR_AUTH_XTOKEN, STR_AUTH_XTOKEN);\r\nfunction _hasHeader(headers, header) {\r\n    var hasHeader = false;\r\n    if (headers && header) {\r\n        var keys = objKeys(headers);\r\n        if (keys && keys[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            var lowerHeader = header[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n            for (var lp = 0; lp < keys[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                var value = keys[lp];\r\n                if (value && hasOwnProperty(header, value) &&\r\n                    value[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === lowerHeader) {\r\n                    hasHeader = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return hasHeader;\r\n}\r\nfunction _addRequestDetails(details, name, value, useHeaders) {\r\n    if (name && value && value[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        if (useHeaders && _collectorQsHeaders[name]) {\r\n            details[_DYN_HDRS /* @min:%2ehdrs */][_collectorQsHeaders[name]] = value;\r\n            details[_DYN_USE_HDRS /* @min:%2euseHdrs */] = true;\r\n        }\r\n        else {\r\n            details.url += \"&\" + name + \"=\" + value;\r\n        }\r\n    }\r\n}\r\nfunction _addQueryStringParameter(qsParams, name, value) {\r\n    for (var i = 0; i < qsParams[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        if (qsParams[i].name === name) {\r\n            qsParams[i].value = value;\r\n            return;\r\n        }\r\n    }\r\n    qsParams[_DYN_PUSH /* @min:%2epush */]({ name: name, value: value });\r\n}\r\nfunction _removeQueryStringParameter(qsParams, name) {\r\n    for (var i = 0; i < qsParams[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        if (qsParams[i].name === name) {\r\n            qsParams[_DYN_SPLICE /* @min:%2esplice */](i, 1);\r\n            return;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Class managing the sending of requests.\r\n */\r\nvar HttpManager = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param requestQueue   - The queue that contains the requests to be sent.\r\n     */\r\n    function HttpManager(maxEventsPerBatch, maxConnections, maxRequestRetriesBeforeBackoff, actions) {\r\n        // ------------------------------------------------------------------------------------------------------------------------\r\n        // Only set \"Default\" values in the _initDefaults() method, unless value are not \"reset\" during unloading\r\n        // ------------------------------------------------------------------------------------------------------------------------\r\n        var _urlString;\r\n        var _killSwitch;\r\n        var _paused;\r\n        var _clockSkewManager;\r\n        var _useBeacons = false;\r\n        var _outstandingRequests; // Holds the number of outstanding async requests that have not returned a response yet\r\n        var _postManager;\r\n        var _logger;\r\n        var _sendInterfaces;\r\n        var _core;\r\n        var _customHttpInterface;\r\n        var _queryStringParameters;\r\n        var _headers;\r\n        var _batchQueue;\r\n        var _serializer;\r\n        var _enableEventTimings;\r\n        var _cookieMgr;\r\n        var _isUnloading;\r\n        var _useHeaders;\r\n        var _xhrTimeout;\r\n        var _disableXhrSync;\r\n        var _disableFetchKeepAlive;\r\n        var _canHaveReducedPayload;\r\n        var _addNoResponse;\r\n        var _unloadHooks;\r\n        var _sendHook;\r\n        var _sendListener;\r\n        var _responseHandlers;\r\n        var _isInitialized;\r\n        var _timeoutWrapper;\r\n        var _excludeCsMetaData;\r\n        var _sendPostMgr;\r\n        var _fetchCredentials;\r\n        dynamicProto(HttpManager, this, function (_self) {\r\n            _initDefaults();\r\n            var _sendCredentials = true;\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (theConfig, core, postChannel) {\r\n                if (!_isInitialized) {\r\n                    _core = core;\r\n                    _cookieMgr = core.getCookieMgr();\r\n                    _postManager = postChannel;\r\n                    _logger = _postManager.diagLog();\r\n                    arrAppend(_unloadHooks, onConfigChange(theConfig, function (details) {\r\n                        var _a;\r\n                        var coreConfig = details.cfg;\r\n                        var channelConfig = details.cfg.extensionConfig[postChannel.identifier];\r\n                        _timeoutWrapper = createTimeoutWrapper(channelConfig[_DYN_SET_TIMEOUT_OVERRIDE /* @min:%2esetTimeoutOverride */], channelConfig[_DYN_CLEAR_TIMEOUT_OVERRI3 /* @min:%2eclearTimeoutOverride */]);\r\n                        if (isValueAssigned(coreConfig.anonCookieName)) {\r\n                            _addQueryStringParameter(_queryStringParameters, \"anoncknm\", coreConfig.anonCookieName);\r\n                        }\r\n                        else {\r\n                            _removeQueryStringParameter(_queryStringParameters, \"anoncknm\");\r\n                        }\r\n                        _sendHook = channelConfig[_DYN_PAYLOAD_PREPROCESSOR /* @min:%2epayloadPreprocessor */];\r\n                        _sendListener = channelConfig.payloadListener;\r\n                        var httpInterface = channelConfig.httpXHROverride;\r\n                        // Override endpointUrl if provided in Post config\r\n                        var endpointUrl = channelConfig[_DYN_OVERRIDE_ENDPOINT_UR4 /* @min:%2eoverrideEndpointUrl */] ? channelConfig[_DYN_OVERRIDE_ENDPOINT_UR4 /* @min:%2eoverrideEndpointUrl */] : coreConfig.endpointUrl;\r\n                        _urlString = endpointUrl + UrlQueryString;\r\n                        _useHeaders = !isUndefined(channelConfig[_DYN_AVOID_OPTIONS /* @min:%2eavoidOptions */]) ? !channelConfig[_DYN_AVOID_OPTIONS /* @min:%2eavoidOptions */] : true;\r\n                        _enableEventTimings = !channelConfig[_DYN_DISABLE_EVENT_TIMING5 /* @min:%2edisableEventTimings */];\r\n                        var valueSanitizer = channelConfig.valueSanitizer;\r\n                        var stringifyObjects = channelConfig[_DYN_STRINGIFY_OBJECTS /* @min:%2estringifyObjects */];\r\n                        var enableCompoundKey = !!coreConfig[_DYN_ENABLE_COMPOUND_KEY /* @min:%2eenableCompoundKey */];\r\n                        if (!isUndefined(channelConfig[_DYN_ENABLE_COMPOUND_KEY /* @min:%2eenableCompoundKey */])) {\r\n                            enableCompoundKey = !!channelConfig[_DYN_ENABLE_COMPOUND_KEY /* @min:%2eenableCompoundKey */];\r\n                        }\r\n                        _xhrTimeout = channelConfig.xhrTimeout;\r\n                        _disableXhrSync = !!channelConfig[_DYN_DISABLE_XHR_SYNC /* @min:%2edisableXhrSync */];\r\n                        _disableFetchKeepAlive = !!channelConfig[_DYN_DISABLE_FETCH_KEEP_A6 /* @min:%2edisableFetchKeepAlive */];\r\n                        _addNoResponse = channelConfig[_DYN_ADD_NO_RESPONSE /* @min:%2eaddNoResponse */] !== false;\r\n                        _excludeCsMetaData = !!channelConfig[_DYN_EXCLUDE_CS_META_DATA /* @min:%2eexcludeCsMetaData */];\r\n                        if (!!core.getPlugin(\"LocalStorage\")) {\r\n                            // Always disable fetch keep alive when persisten storage is available\r\n                            _disableFetchKeepAlive = true;\r\n                        }\r\n                        _useBeacons = !isReactNative(); // Only use beacons if not running in React Native\r\n                        _serializer = new Serializer(_core, valueSanitizer, stringifyObjects, enableCompoundKey, getCommonSchemaMetaData, _excludeCsMetaData);\r\n                        if (!isNullOrUndefined(channelConfig[_DYN_USE_SEND_BEACON /* @min:%2euseSendBeacon */])) {\r\n                            _useBeacons = !!channelConfig[_DYN_USE_SEND_BEACON /* @min:%2euseSendBeacon */];\r\n                        }\r\n                        if (channelConfig[_DYN_FETCH_CREDENTIALS /* @min:%2efetchCredentials */]) {\r\n                            _fetchCredentials = channelConfig[_DYN_FETCH_CREDENTIALS /* @min:%2efetchCredentials */];\r\n                        }\r\n                        var sendPostConfig = _getSendPostMgrConfig();\r\n                        // only init it once\r\n                        if (!_sendPostMgr) {\r\n                            _sendPostMgr = new SenderPostManager();\r\n                            _sendPostMgr[_DYN_INITIALIZE /* @min:%2einitialize */](sendPostConfig, _logger);\r\n                        }\r\n                        else {\r\n                            _sendPostMgr.SetConfig(sendPostConfig);\r\n                        }\r\n                        var syncHttpInterface = httpInterface;\r\n                        var beaconHttpInterface = channelConfig[_DYN_ALWAYS_USE_XHR_OVERR7 /* @min:%2ealwaysUseXhrOverride */] ? httpInterface : null;\r\n                        var fetchSyncHttpInterface = channelConfig[_DYN_ALWAYS_USE_XHR_OVERR7 /* @min:%2ealwaysUseXhrOverride */] ? httpInterface : null;\r\n                        var beaconUnloadTransports = [3 /* TransportType.Beacon */, 2 /* TransportType.Fetch */];\r\n                        if (!httpInterface) {\r\n                            _customHttpInterface = false;\r\n                            // this is handled in SendPostManager now\r\n                            // let location = getLocation();\r\n                            // if (location && location.protocol && location.protocol.toLowerCase() === \"file:\") {\r\n                            //     // Special case where a local html file fails with a CORS error on Chromium browsers\r\n                            //     _sendCredentials = false;\r\n                            // }\r\n                            var theTransports = [];\r\n                            if (isReactNative()) {\r\n                                // Use Fetch or XDR/XHR\r\n                                theTransports = [2 /* TransportType.Fetch */, 1 /* TransportType.Xhr */];\r\n                                beaconUnloadTransports = [2 /* TransportType.Fetch */, 1 /* TransportType.Xhr */, 3 /* TransportType.Beacon */];\r\n                            }\r\n                            else {\r\n                                // Use XDR/XHR, Fetch or beacons\r\n                                theTransports = [1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */, 3 /* TransportType.Beacon */];\r\n                            }\r\n                            // Prefix any user requested transport(s) values\r\n                            theTransports = prependTransports(theTransports, channelConfig.transports);\r\n                            httpInterface = _getSenderInterface(theTransports, false);\r\n                            if (!httpInterface) {\r\n                                _warnToConsole(_logger, \"No available transport to send events\");\r\n                            }\r\n                            syncHttpInterface = _getSenderInterface(theTransports, true);\r\n                        }\r\n                        if (!beaconHttpInterface) {\r\n                            // Allow overriding the usage of sendBeacon\r\n                            beaconUnloadTransports = prependTransports(beaconUnloadTransports, channelConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */]);\r\n                            beaconHttpInterface = _getSenderInterface(beaconUnloadTransports, true);\r\n                        }\r\n                        _canHaveReducedPayload = !_customHttpInterface && ((_useBeacons && isBeaconsSupported()) || (!_disableFetchKeepAlive && isFetchSupported(true)));\r\n                        _sendInterfaces = (_a = {},\r\n                            _a[0 /* EventSendType.Batched */] = httpInterface,\r\n                            _a[1 /* EventSendType.Synchronous */] = syncHttpInterface || _getSenderInterface([1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */, 3 /* TransportType.Beacon */], true),\r\n                            _a[2 /* EventSendType.SendBeacon */] = beaconHttpInterface || syncHttpInterface || _getSenderInterface([1 /* TransportType.Xhr */], true),\r\n                            _a[3 /* EventSendType.SyncFetch */] = fetchSyncHttpInterface || _getSenderInterface([2 /* TransportType.Fetch */, 3 /* TransportType.Beacon */], true) || syncHttpInterface || _getSenderInterface([1 /* TransportType.Xhr */], true),\r\n                            _a);\r\n                    }));\r\n                    _isInitialized = true;\r\n                }\r\n            };\r\n            _self.addResponseHandler = function (responseHandler) {\r\n                _responseHandlers[_DYN_PUSH /* @min:%2epush */](responseHandler);\r\n                return {\r\n                    rm: function () {\r\n                        var index = _responseHandlers.indexOf(responseHandler);\r\n                        if (index >= 0) {\r\n                            _responseHandlers[_DYN_SPLICE /* @min:%2esplice */](index, 1);\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n            _self[_DYN_SERIALIZE_OFFLINE_EV8 /* @min:%2eserializeOfflineEvt */] = function (evt) {\r\n                try {\r\n                    if (_serializer) {\r\n                        return _serializer.getEventBlob(evt);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return STR_EMPTY;\r\n            };\r\n            _self[_DYN_GET_OFFLINE_REQUEST_9 /* @min:%2egetOfflineRequestDetails */] = function () {\r\n                try {\r\n                    // get current url without paramter\r\n                    var payload = _serializer && _serializer[_DYN_CREATE_PAYLOAD /* @min:%2ecreatePayload */](0, false, false, false, 1 /* SendRequestReason.NormalSchedule */, 0 /* EventSendType.Batched */);\r\n                    return _buildRequestDetails(payload, _useHeaders);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            };\r\n            _self[_DYN_CREATE_ONE_DSPAYLOAD /* @min:%2ecreateOneDSPayload */] = function (evts, optimize) {\r\n                try {\r\n                    // TODO: optimize\r\n                    var theBatches_1 = [];\r\n                    // create a eventBatch for each event\r\n                    arrForEach(evts, function (evt) {\r\n                        if (optimize) {\r\n                            evt = optimizeObject(evt);\r\n                        }\r\n                        var batch = EventBatch.create(evt[_DYN_I_KEY /* @min:%2eiKey */], [evt]);\r\n                        theBatches_1[_DYN_PUSH /* @min:%2epush */](batch);\r\n                    });\r\n                    var thePayload = null;\r\n                    while (theBatches_1[_DYN_LENGTH /* @min:%2elength */] > 0 && _serializer) {\r\n                        var theBatch = theBatches_1.shift();\r\n                        if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                            thePayload = thePayload || _serializer[_DYN_CREATE_PAYLOAD /* @min:%2ecreatePayload */](0, false, false, false, 1 /* SendRequestReason.NormalSchedule */, 0 /* EventSendType.Batched */);\r\n                            _serializer.appendPayload(thePayload, theBatch, maxEventsPerBatch);\r\n                        }\r\n                    }\r\n                    var requestDetails = _buildRequestDetails(thePayload, _useHeaders);\r\n                    var payloadData = {\r\n                        data: thePayload[_DYN_PAYLOAD_BLOB /* @min:%2epayloadBlob */],\r\n                        urlString: requestDetails.url,\r\n                        headers: requestDetails[_DYN_HDRS /* @min:%2ehdrs */],\r\n                        timeout: _xhrTimeout,\r\n                        disableXhrSync: _disableXhrSync,\r\n                        disableFetchKeepAlive: _disableFetchKeepAlive\r\n                    };\r\n                    // Only automatically add the following headers if already sending headers and we are not attempting to avoid an options call\r\n                    if (_useHeaders) {\r\n                        if (!_hasHeader(payloadData[_DYN_HEADERS /* @min:%2eheaders */], STR_CACHE_CONTROL)) {\r\n                            payloadData[_DYN_HEADERS /* @min:%2eheaders */][STR_CACHE_CONTROL] = DEFAULT_CACHE_CONTROL;\r\n                        }\r\n                        if (!_hasHeader(payloadData[_DYN_HEADERS /* @min:%2eheaders */], STR_CONTENT_TYPE_HEADER)) {\r\n                            payloadData[_DYN_HEADERS /* @min:%2eheaders */][STR_CONTENT_TYPE_HEADER] = DEFAULT_CONTENT_TYPE;\r\n                        }\r\n                    }\r\n                    return payloadData;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            };\r\n            // Special internal method to allow the DebugPlugin to hook embedded objects\r\n            function _getSenderInterface(transports, syncSupport) {\r\n                try {\r\n                    return _sendPostMgr && _sendPostMgr.getSenderInst(transports, syncSupport);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_sendInterfaces[0 /* EventSendType.Batched */], _killSwitch, _serializer, _sendInterfaces, _getSendPostMgrConfig(), _urlString];\r\n            };\r\n            function _getSendPostMgrConfig() {\r\n                try {\r\n                    var onCompleteFuncs = {\r\n                        xdrOnComplete: _xdrOncomplete,\r\n                        fetchOnComplete: _fetchOnComplete,\r\n                        xhrOnComplete: _xhrOnComplete,\r\n                        beaconOnRetry: _onBeaconRetry\r\n                    };\r\n                    var config = {\r\n                        enableSendPromise: false,\r\n                        isOneDs: true,\r\n                        disableCredentials: !_sendCredentials,\r\n                        fetchCredentials: _fetchCredentials,\r\n                        disableXhr: false,\r\n                        disableBeacon: !_useBeacons,\r\n                        disableBeaconSync: !_useBeacons,\r\n                        disableFetchKeepAlive: _disableFetchKeepAlive,\r\n                        timeWrapper: _timeoutWrapper,\r\n                        addNoResponse: _addNoResponse,\r\n                        senderOnCompleteCallBack: onCompleteFuncs\r\n                    };\r\n                    return config;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _xdrOncomplete(xdr, oncomplete, payload) {\r\n                var response = getResponseText(xdr);\r\n                _doOnComplete(oncomplete, 200, {}, response);\r\n                _handleCollectorResponse(response);\r\n            }\r\n            function _initDefaults() {\r\n                var undefValue;\r\n                _urlString = null;\r\n                _killSwitch = new KillSwitch();\r\n                _paused = false;\r\n                _clockSkewManager = new ClockSkewManager();\r\n                _useBeacons = false;\r\n                _outstandingRequests = 0; // Holds the number of outstanding async requests that have not returned a response yet\r\n                _postManager = null;\r\n                _logger = null;\r\n                _sendInterfaces = null;\r\n                _core = null;\r\n                _customHttpInterface = true;\r\n                _queryStringParameters = [];\r\n                _headers = {};\r\n                _batchQueue = [];\r\n                _serializer = null;\r\n                _enableEventTimings = false;\r\n                _cookieMgr = null;\r\n                _isUnloading = false;\r\n                _useHeaders = false;\r\n                _xhrTimeout = undefValue;\r\n                _disableXhrSync = undefValue;\r\n                _disableFetchKeepAlive = undefValue;\r\n                _canHaveReducedPayload = undefValue;\r\n                _addNoResponse = undefValue;\r\n                _unloadHooks = [];\r\n                _sendHook = undefValue;\r\n                _sendListener = undefValue;\r\n                _responseHandlers = [];\r\n                _isInitialized = false;\r\n                _timeoutWrapper = createTimeoutWrapper();\r\n                _excludeCsMetaData = false;\r\n                _sendPostMgr = null;\r\n            }\r\n            function _fetchOnComplete(response, onComplete, resValue, payload) {\r\n                var handleResponse = function (status, headerMap, responseText) {\r\n                    _doOnComplete(onComplete, status, headerMap, responseText);\r\n                    _handleCollectorResponse(responseText);\r\n                };\r\n                var headerMap = {};\r\n                var headers = response[_DYN_HEADERS /* @min:%2eheaders */];\r\n                if (headers) {\r\n                    headers[\"forEach\"](function (value, name) {\r\n                        headerMap[name] = value;\r\n                    });\r\n                }\r\n                handleResponse(response.status, headerMap, resValue || STR_EMPTY);\r\n            }\r\n            function _xhrOnComplete(request, oncomplete, payload) {\r\n                var response = getResponseText(request);\r\n                _doOnComplete(oncomplete, request.status, _getAllResponseHeaders(request, true), response);\r\n                _handleCollectorResponse(response);\r\n            }\r\n            function _doOnComplete(oncomplete, status, headers, response) {\r\n                try {\r\n                    oncomplete(status, headers, response);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 518 /* _eExtendedInternalMessageId.SendPostOnCompleteFailure */, dumpObj(e));\r\n                }\r\n            }\r\n            function _onBeaconRetry(payload, onComplete, canSend) {\r\n                // Custom headers not supported in sendBeacon payload.headers would be ignored\r\n                var internalPayloadData = payload;\r\n                var status = 200;\r\n                var thePayload = internalPayloadData[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */];\r\n                var theUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */] + (_addNoResponse ? _noResponseQs : STR_EMPTY);\r\n                try {\r\n                    var nav_1 = getNavigator();\r\n                    if (thePayload) {\r\n                        var persistStorage = !!_core.getPlugin(\"LocalStorage\");\r\n                        // Failed to send entire payload so try and split data and try to send as much events as possible\r\n                        var droppedBatches_1 = [];\r\n                        var sentBatches_1 = [];\r\n                        arrForEach(thePayload[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                            if (droppedBatches_1 && theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                var theEvents = theBatch[_DYN_EVENTS /* @min:%2eevents */]();\r\n                                for (var lp = 0; lp < theEvents[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                                    if (!nav_1.sendBeacon(theUrl, _serializer.getEventBlob(theEvents[lp]))) {\r\n                                        // Can't send anymore, so split the batch and drop the rest\r\n                                        droppedBatches_1[_DYN_PUSH /* @min:%2epush */](theBatch[_DYN_SPLIT /* @min:%2esplit */](lp));\r\n                                        break;\r\n                                    }\r\n                                    else {\r\n                                        sentBatches_1[_DYN_PUSH /* @min:%2epush */](theBatch[lp]);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Remove all of the events from the existing batch in the payload as the copy includes the original\r\n                                droppedBatches_1[_DYN_PUSH /* @min:%2epush */](theBatch[_DYN_SPLIT /* @min:%2esplit */](0));\r\n                            }\r\n                        });\r\n                        if (sentBatches_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                            // Update the payload with the sent batches\r\n                            thePayload.sentEvts = sentBatches_1;\r\n                        }\r\n                        if (!persistStorage) {\r\n                            _sendBatchesNotification(droppedBatches_1, 8003 /* EventBatchNotificationReason.SizeLimitExceeded */, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        status = 0;\r\n                    }\r\n                }\r\n                catch (ex) {\r\n                    _warnToConsole(_logger, \"Failed to send telemetry using sendBeacon API. Ex:\" + dumpObj(ex));\r\n                    status = 0;\r\n                }\r\n                finally {\r\n                    _doOnComplete(onComplete, status, {}, STR_EMPTY);\r\n                }\r\n            }\r\n            function _isBeaconPayload(sendType) {\r\n                // Sync Fetch has the same payload limitation as sendBeacon -- 64kb limit, so treat both as a beacon send\r\n                return sendType === 2 /* EventSendType.SendBeacon */ || sendType === 3 /* EventSendType.SyncFetch */;\r\n            }\r\n            function _adjustSendType(sendType) {\r\n                if (_isUnloading && _isBeaconPayload(sendType)) {\r\n                    sendType = 2 /* EventSendType.SendBeacon */;\r\n                }\r\n                return sendType;\r\n            }\r\n            _self[_DYN_ADD_HEADER /* @min:%2eaddHeader */] = function (name, value) {\r\n                _headers[name] = value;\r\n            };\r\n            _self.removeHeader = function (name) {\r\n                delete _headers[name];\r\n            };\r\n            _self[_DYN_CAN_SEND_REQUEST /* @min:%2ecanSendRequest */] = function () {\r\n                return _hasIdleConnection() && _clockSkewManager[_DYN_ALLOW_REQUEST_SENDIN0 /* @min:%2eallowRequestSending */]();\r\n            };\r\n            _self[_DYN_SEND_QUEUED_REQUESTS /* @min:%2esendQueuedRequests */] = function (sendType, sendReason) {\r\n                if (isUndefined(sendType)) {\r\n                    sendType = 0 /* EventSendType.Batched */;\r\n                }\r\n                if (_isUnloading) {\r\n                    sendType = _adjustSendType(sendType);\r\n                    sendReason = 2 /* SendRequestReason.Unload */;\r\n                }\r\n                if (_canSendPayload(_batchQueue, sendType, 0)) {\r\n                    _sendBatches(_clearQueue(), 0, false, sendType, sendReason || 0 /* SendRequestReason.Undefined */);\r\n                }\r\n            };\r\n            _self[_DYN_IS_COMPLETELY_IDLE /* @min:%2eisCompletelyIdle */] = function () {\r\n                return !_paused && _outstandingRequests === 0 && _batchQueue[_DYN_LENGTH /* @min:%2elength */] === 0;\r\n            };\r\n            _self[_DYN_SET_UNLOADING /* @min:%2esetUnloading */] = function (value) {\r\n                _isUnloading = value;\r\n            };\r\n            _self.addBatch = function (theBatch) {\r\n                if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                    // Try and kill the event faster\r\n                    if (_killSwitch.isTenantKilled(theBatch[_DYN_I_KEY /* @min:%2eiKey */]())) {\r\n                        return false;\r\n                    }\r\n                    _batchQueue[_DYN_PUSH /* @min:%2epush */](theBatch);\r\n                }\r\n                return true;\r\n            };\r\n            /**\r\n             * Queue all the remaining requests to be sent. The requests will be\r\n             * sent using HTML5 Beacons if they are available.\r\n             */\r\n            _self.teardown = function () {\r\n                if (_batchQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _sendBatches(_clearQueue(), 0, true, 2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                }\r\n                arrForEach(_unloadHooks, function (hook) {\r\n                    hook && hook.rm && hook.rm();\r\n                });\r\n                _unloadHooks = [];\r\n            };\r\n            /**\r\n             * Pause the sending of requests. No new requests will be sent.\r\n             */\r\n            _self.pause = function () {\r\n                _paused = true;\r\n            };\r\n            /**\r\n             * Resume the sending of requests.\r\n             */\r\n            _self[_DYN_RESUME /* @min:%2eresume */] = function () {\r\n                _paused = false;\r\n                _self[_DYN_SEND_QUEUED_REQUESTS /* @min:%2esendQueuedRequests */](0 /* EventSendType.Batched */, 4 /* SendRequestReason.Resumed */);\r\n            };\r\n            /**\r\n             * Sends a request synchronously to the Aria collector. This api is used to send\r\n             * a request containing a single immediate event.\r\n             *\r\n             * @param batch - The request to be sent.\r\n             * @param sendReason   - The token used to send the request.\r\n             */\r\n            _self[_DYN_SEND_SYNCHRONOUS_BAT10 /* @min:%2esendSynchronousBatch */] = function (batch, sendType, sendReason) {\r\n                // This will not take into account the max connections restriction. Since this is sync, we can\r\n                // only send one of this request at a time and thus should not worry about multiple connections\r\n                // being used to send synchronous events.\r\n                // Increment active connection since we are still going to use a connection to send the request.\r\n                if (batch && batch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                    if (isNullOrUndefined(sendType)) {\r\n                        sendType = 1 /* EventSendType.Synchronous */;\r\n                    }\r\n                    if (_isUnloading) {\r\n                        sendType = _adjustSendType(sendType);\r\n                        sendReason = 2 /* SendRequestReason.Unload */;\r\n                    }\r\n                    // For sync requests we will not wait for the clock skew.\r\n                    _sendBatches([batch], 0, false, sendType, sendReason || 0 /* SendRequestReason.Undefined */);\r\n                }\r\n            };\r\n            function _hasIdleConnection() {\r\n                return !_paused && _outstandingRequests < maxConnections;\r\n            }\r\n            function _clearQueue() {\r\n                var theQueue = _batchQueue;\r\n                _batchQueue = [];\r\n                return theQueue;\r\n            }\r\n            function _canSendPayload(theBatches, sendType, retryCnt) {\r\n                var result = false;\r\n                if (theBatches && theBatches[_DYN_LENGTH /* @min:%2elength */] > 0 && !_paused && _sendInterfaces[sendType] && _serializer) {\r\n                    // Always attempt to send synchronous events don't wait for idle or clockSkew\r\n                    // and don't block retry requests if clockSkew is not yet set\r\n                    result = (sendType !== 0 /* EventSendType.Batched */) || (_hasIdleConnection() && (retryCnt > 0 || _clockSkewManager[_DYN_ALLOW_REQUEST_SENDIN0 /* @min:%2eallowRequestSending */]()));\r\n                }\r\n                return result;\r\n            }\r\n            function _createDebugBatches(theBatches) {\r\n                var values = {};\r\n                if (theBatches) {\r\n                    arrForEach(theBatches, function (theBatch, idx) {\r\n                        values[idx] = {\r\n                            iKey: theBatch[_DYN_I_KEY /* @min:%2eiKey */](),\r\n                            evts: theBatch[_DYN_EVENTS /* @min:%2eevents */]()\r\n                        };\r\n                    });\r\n                }\r\n                return values;\r\n            }\r\n            function _sendBatches(theBatches, retryCount, isTeardown, sendType, sendReason) {\r\n                if (!theBatches || theBatches[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    // Nothing to do\r\n                    return;\r\n                }\r\n                if (_paused) {\r\n                    _sendBatchesNotification(theBatches, 1 /* EventBatchNotificationReason.Paused */, sendType);\r\n                    return;\r\n                }\r\n                // Make sure that if we are unloading the sendType is a supported version\r\n                sendType = _adjustSendType(sendType);\r\n                try {\r\n                    var orgBatches_1 = theBatches;\r\n                    var isSynchronous_1 = sendType !== 0 /* EventSendType.Batched */;\r\n                    doPerf(_core, function () { return \"HttpManager:_sendBatches\"; }, function (perfEvt) {\r\n                        if (perfEvt) {\r\n                            // Perf Monitoring is enabled, so create a \"Quick\" copy of the original batches so we still report\r\n                            // the original values as part of the perfEvent. This is because theBatches uses .shift() to remove each\r\n                            // batch as they are processed - removing from the original array, so by the time the _createDebugBatches()\r\n                            // function is called the passed in value has changed and therefore the reported value for the perfEvent is incorrect\r\n                            theBatches = theBatches.slice(0);\r\n                        }\r\n                        var droppedBatches = [];\r\n                        var thePayload = null;\r\n                        var serializationStart = getTime();\r\n                        var sendInterface = _sendInterfaces[sendType] || (isSynchronous_1 ? _sendInterfaces[1 /* EventSendType.Synchronous */] : _sendInterfaces[0 /* EventSendType.Batched */]);\r\n                        var sendTransport = sendInterface && sendInterface[_DYN__TRANSPORT /* @min:%2e_transport */];\r\n                        // Sync Fetch has the same payload limitation as sendBeacon -- 64kb limit\r\n                        var isReducedPayload = _canHaveReducedPayload && (_isUnloading || _isBeaconPayload(sendType) || (sendTransport === 3 /* TransportType.Beacon */ || (sendInterface._isSync && sendTransport === 2 /* TransportType.Fetch */)));\r\n                        while (_canSendPayload(theBatches, sendType, retryCount)) {\r\n                            var theBatch = theBatches.shift();\r\n                            if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                if (!_killSwitch.isTenantKilled(theBatch[_DYN_I_KEY /* @min:%2eiKey */]())) {\r\n                                    // Make sure we have a payload object\r\n                                    thePayload = thePayload || _serializer[_DYN_CREATE_PAYLOAD /* @min:%2ecreatePayload */](retryCount, isTeardown, isSynchronous_1, isReducedPayload, sendReason, sendType);\r\n                                    // Add the batch to the current payload\r\n                                    if (!_serializer.appendPayload(thePayload, theBatch, maxEventsPerBatch)) {\r\n                                        // Entire batch was not added so send the payload and retry adding this batch\r\n                                        _doPayloadSend(thePayload, serializationStart, getTime(), sendReason);\r\n                                        serializationStart = getTime();\r\n                                        theBatches = [theBatch][_DYN_CONCAT /* @min:%2econcat */](theBatches);\r\n                                        thePayload = null;\r\n                                    }\r\n                                    else if (thePayload.overflow !== null) {\r\n                                        // Total Payload size was exceeded so send the payload and add the unsent as the next batch to send\r\n                                        theBatches = [thePayload.overflow][_DYN_CONCAT /* @min:%2econcat */](theBatches);\r\n                                        thePayload.overflow = null;\r\n                                        _doPayloadSend(thePayload, serializationStart, getTime(), sendReason);\r\n                                        serializationStart = getTime();\r\n                                        thePayload = null;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    droppedBatches[_DYN_PUSH /* @min:%2epush */](theBatch);\r\n                                }\r\n                            }\r\n                        }\r\n                        // Make sure to flush any remaining payload\r\n                        if (thePayload) {\r\n                            _doPayloadSend(thePayload, serializationStart, getTime(), sendReason);\r\n                        }\r\n                        if (theBatches[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                            // Add any unsent batches back to the head of the queue\r\n                            _batchQueue = theBatches[_DYN_CONCAT /* @min:%2econcat */](_batchQueue);\r\n                        }\r\n                        // Now send notification about any dropped events\r\n                        _sendBatchesNotification(droppedBatches, 8004 /* EventBatchNotificationReason.KillSwitch */, sendType);\r\n                    }, function () { return ({ batches: _createDebugBatches(orgBatches_1), retryCount: retryCount, isTeardown: isTeardown, isSynchronous: isSynchronous_1, sendReason: sendReason, useSendBeacon: _isBeaconPayload(sendType), sendType: sendType }); }, !isSynchronous_1);\r\n                }\r\n                catch (ex) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"Unexpected Exception sending batch: \" + dumpObj(ex));\r\n                }\r\n            }\r\n            function _buildRequestDetails(thePayload, useHeaders) {\r\n                var requestDetails = {\r\n                    url: _urlString,\r\n                    hdrs: {},\r\n                    useHdrs: false // Assume no headers\r\n                };\r\n                if (!useHeaders) {\r\n                    // Attempt to map headers to a query string if possible\r\n                    objForEachKey(_headers, function (name, value) {\r\n                        if (_collectorHeaderToQs[name]) {\r\n                            _addRequestDetails(requestDetails, _collectorHeaderToQs[name], value, false);\r\n                        }\r\n                        else {\r\n                            // No mapping, so just include in the headers anyway (may not get sent if using sendBeacon())\r\n                            requestDetails[_DYN_HDRS /* @min:%2ehdrs */][name] = value;\r\n                            requestDetails[_DYN_USE_HDRS /* @min:%2euseHdrs */] = true;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    // Copy the pre-defined headers into the payload headers\r\n                    requestDetails[_DYN_HDRS /* @min:%2ehdrs */] = extend(requestDetails[_DYN_HDRS /* @min:%2ehdrs */], _headers);\r\n                    requestDetails.useHdrs = (objKeys(requestDetails.hdrs)[_DYN_LENGTH /* @min:%2elength */] > 0);\r\n                }\r\n                _addRequestDetails(requestDetails, STR_CLIENT_ID, \"NO_AUTH\", useHeaders);\r\n                _addRequestDetails(requestDetails, STR_CLIENT_VERSION, FullVersionString, useHeaders);\r\n                var apiQsKeys = STR_EMPTY;\r\n                arrForEach(thePayload.apiKeys, function (apiKey) {\r\n                    if (apiQsKeys[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        apiQsKeys += \",\";\r\n                    }\r\n                    apiQsKeys += apiKey;\r\n                });\r\n                _addRequestDetails(requestDetails, STR_API_KEY, apiQsKeys, useHeaders);\r\n                _addRequestDetails(requestDetails, STR_UPLOAD_TIME, dateNow().toString(), useHeaders);\r\n                var msfpc = _getMsfpc(thePayload);\r\n                if (isValueAssigned(msfpc)) {\r\n                    requestDetails.url += \"&ext.intweb.msfpc=\" + msfpc;\r\n                }\r\n                if (_clockSkewManager[_DYN_SHOULD_ADD_CLOCK_SKE1 /* @min:%2eshouldAddClockSkewHeaders */]()) {\r\n                    _addRequestDetails(requestDetails, STR_TIME_DELTA_TO_APPLY, _clockSkewManager[_DYN_GET_CLOCK_SKEW_HEADE2 /* @min:%2egetClockSkewHeaderValue */](), useHeaders);\r\n                }\r\n                if (_core[_DYN_GET_WPARAM /* @min:%2egetWParam */]) {\r\n                    var wParam = _core[_DYN_GET_WPARAM /* @min:%2egetWParam */]();\r\n                    if (wParam >= 0) {\r\n                        requestDetails.url += \"&w=\" + wParam;\r\n                    }\r\n                }\r\n                for (var i = 0; i < _queryStringParameters[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                    requestDetails.url += \"&\" + _queryStringParameters[i].name + \"=\" + _queryStringParameters[i].value;\r\n                }\r\n                return requestDetails;\r\n            }\r\n            function _setTimingValue(timings, name, value) {\r\n                timings[name] = timings[name] || {};\r\n                timings[name][_postManager.identifier] = value;\r\n            }\r\n            function _doPayloadSend(thePayload, serializationStart, serializationCompleted, sendReason) {\r\n                if (thePayload && thePayload.payloadBlob && thePayload.payloadBlob[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var useSendHook_1 = !!_sendHook;\r\n                    var sendInterface_1 = _sendInterfaces[thePayload.sendType];\r\n                    // Send all data using a beacon style transport if closing mode is on or channel was teared down\r\n                    if (!_isBeaconPayload(thePayload[_DYN_SEND_TYPE /* @min:%2esendType */]) && thePayload[_DYN_IS_BEACON /* @min:%2eisBeacon */] && thePayload.sendReason === 2 /* SendRequestReason.Unload */) {\r\n                        sendInterface_1 = _sendInterfaces[2 /* EventSendType.SendBeacon */] || _sendInterfaces[3 /* EventSendType.SyncFetch */] || sendInterface_1;\r\n                    }\r\n                    var useHeaders_1 = _useHeaders;\r\n                    // Disable header usage if we know we are using sendBeacon as additional headers are not supported\r\n                    if (thePayload.isBeacon || sendInterface_1[_DYN__TRANSPORT /* @min:%2e_transport */] === 3 /* TransportType.Beacon */) {\r\n                        useHeaders_1 = false;\r\n                    }\r\n                    var requestDetails_1 = _buildRequestDetails(thePayload, useHeaders_1);\r\n                    useHeaders_1 = useHeaders_1 || requestDetails_1[_DYN_USE_HDRS /* @min:%2euseHdrs */];\r\n                    var sendEventStart_1 = getTime();\r\n                    doPerf(_core, function () { return \"HttpManager:_doPayloadSend\"; }, function () {\r\n                        // Increment the send attempt count and add timings after packaging (So it's not serialized in the 1st attempt)\r\n                        for (var batchLp = 0; batchLp < thePayload.batches[_DYN_LENGTH /* @min:%2elength */]; batchLp++) {\r\n                            var theBatch = thePayload[_DYN_BATCHES /* @min:%2ebatches */][batchLp];\r\n                            var theEvents = theBatch[_DYN_EVENTS /* @min:%2eevents */]();\r\n                            for (var evtLp = 0; evtLp < theEvents[_DYN_LENGTH /* @min:%2elength */]; evtLp++) {\r\n                                var telemetryItem = theEvents[evtLp];\r\n                                if (_enableEventTimings) {\r\n                                    var timings = telemetryItem[_DYN_TIMINGS /* @min:%2etimings */] = telemetryItem[_DYN_TIMINGS /* @min:%2etimings */] || {};\r\n                                    _setTimingValue(timings, \"sendEventStart\", sendEventStart_1);\r\n                                    _setTimingValue(timings, \"serializationStart\", serializationStart);\r\n                                    _setTimingValue(timings, \"serializationCompleted\", serializationCompleted);\r\n                                }\r\n                                telemetryItem[strSendAttempt] > 0 ? telemetryItem[strSendAttempt]++ : telemetryItem[strSendAttempt] = 1;\r\n                            }\r\n                        }\r\n                        // Note: always sending this notification in a synchronous manner.\r\n                        _sendBatchesNotification(thePayload[_DYN_BATCHES /* @min:%2ebatches */], (1000 /* EventBatchNotificationReason.SendingUndefined */ + (sendReason || 0 /* SendRequestReason.Undefined */)), thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], true);\r\n                        // Disabling the use of const because of Issue:\r\n                        // - Task 9227844: [1DS] Some environments and packagers automatically \"freeze\" objects which are defined as const which causes any mutations to throw\r\n                        // eslint-disable-next-line prefer-const\r\n                        var orgPayloadData = {\r\n                            data: thePayload[_DYN_PAYLOAD_BLOB /* @min:%2epayloadBlob */],\r\n                            urlString: requestDetails_1.url,\r\n                            headers: requestDetails_1[_DYN_HDRS /* @min:%2ehdrs */],\r\n                            _thePayload: thePayload,\r\n                            _sendReason: sendReason,\r\n                            timeout: _xhrTimeout,\r\n                            disableXhrSync: _disableXhrSync,\r\n                            disableFetchKeepAlive: _disableFetchKeepAlive\r\n                        };\r\n                        // Only automatically add the following headers if already sending headers and we are not attempting to avoid an options call\r\n                        if (useHeaders_1) {\r\n                            if (!_hasHeader(orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */], STR_CACHE_CONTROL)) {\r\n                                orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */][STR_CACHE_CONTROL] = DEFAULT_CACHE_CONTROL;\r\n                            }\r\n                            if (!_hasHeader(orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */], STR_CONTENT_TYPE_HEADER)) {\r\n                                orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */][STR_CONTENT_TYPE_HEADER] = DEFAULT_CONTENT_TYPE;\r\n                            }\r\n                        }\r\n                        var sender = null;\r\n                        if (sendInterface_1) {\r\n                            // Send sync requests if the request is immediate or we are tearing down telemetry.\r\n                            sender = function (payload) {\r\n                                // Notify the clock skew manager that we are sending the first request (Potentially blocking all further requests)\r\n                                _clockSkewManager[_DYN_FIRST_REQUEST_SENT /* @min:%2efirstRequestSent */]();\r\n                                var onComplete = function (status, headers) {\r\n                                    _retryRequestIfNeeded(status, headers, thePayload, sendReason);\r\n                                };\r\n                                var isSync = thePayload[_DYN_IS_TEARDOWN /* @min:%2eisTeardown */] || thePayload[_DYN_IS_SYNC /* @min:%2eisSync */];\r\n                                try {\r\n                                    sendInterface_1.sendPOST(payload, onComplete, isSync);\r\n                                    if (_sendListener) {\r\n                                        // Send the original payload to the listener\r\n                                        _sendListener(orgPayloadData, payload, isSync, thePayload[_DYN_IS_BEACON /* @min:%2eisBeacon */]);\r\n                                    }\r\n                                }\r\n                                catch (ex) {\r\n                                    _warnToConsole(_logger, \"Unexpected exception sending payload. Ex:\" + dumpObj(ex));\r\n                                    _doOnComplete(onComplete, 0, {});\r\n                                }\r\n                            };\r\n                        }\r\n                        doPerf(_core, function () { return \"HttpManager:_doPayloadSend.sender\"; }, function () {\r\n                            if (sender) {\r\n                                if (thePayload[_DYN_SEND_TYPE /* @min:%2esendType */] === 0 /* EventSendType.Batched */) {\r\n                                    _outstandingRequests++;\r\n                                }\r\n                                // Only call the hook if it's defined and we are not using sendBeacon as additional headers are not supported\r\n                                if (useSendHook_1 && !thePayload.isBeacon && sendInterface_1[_DYN__TRANSPORT /* @min:%2e_transport */] !== 3 /* TransportType.Beacon */) {\r\n                                    // Create a new IPayloadData that is sent into the hook method, so that the hook method\r\n                                    // can't change the object references to the orgPayloadData (it can still change the content -- mainly the headers)\r\n                                    // Disabling the use of const because of Issue:\r\n                                    // - Task 9227844: [1DS] Some environments and packagers automatically \"freeze\" objects which are defined as const which causes any mutations to throw\r\n                                    // eslint-disable-next-line prefer-const\r\n                                    var hookData_1 = {\r\n                                        data: orgPayloadData[_DYN_DATA /* @min:%2edata */],\r\n                                        urlString: orgPayloadData[_DYN_URL_STRING /* @min:%2eurlString */],\r\n                                        headers: extend({}, orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */]),\r\n                                        timeout: orgPayloadData[_DYN_TIMEOUT /* @min:%2etimeout */],\r\n                                        disableXhrSync: orgPayloadData[_DYN_DISABLE_XHR_SYNC /* @min:%2edisableXhrSync */],\r\n                                        disableFetchKeepAlive: orgPayloadData[_DYN_DISABLE_FETCH_KEEP_A6 /* @min:%2edisableFetchKeepAlive */]\r\n                                    };\r\n                                    var senderCalled_1 = false;\r\n                                    doPerf(_core, function () { return \"HttpManager:_doPayloadSend.sendHook\"; }, function () {\r\n                                        try {\r\n                                            _sendHook(hookData_1, function (payload) {\r\n                                                senderCalled_1 = true;\r\n                                                // Add back the internal properties\r\n                                                if (!_customHttpInterface && !payload[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */]) {\r\n                                                    payload[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */] = payload[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */] || orgPayloadData[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */];\r\n                                                    payload[_DYN__SEND_REASON /* @min:%2e_sendReason */] = payload[_DYN__SEND_REASON /* @min:%2e_sendReason */] || orgPayloadData[_DYN__SEND_REASON /* @min:%2e_sendReason */];\r\n                                                }\r\n                                                sender(payload);\r\n                                            }, thePayload.isSync || thePayload[_DYN_IS_TEARDOWN /* @min:%2eisTeardown */]);\r\n                                        }\r\n                                        catch (ex) {\r\n                                            if (!senderCalled_1) {\r\n                                                // The hook never called the sender -- assume that it never will\r\n                                                sender(orgPayloadData);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    sender(orgPayloadData);\r\n                                }\r\n                            }\r\n                        });\r\n                    }, function () { return ({ thePayload: thePayload, serializationStart: serializationStart, serializationCompleted: serializationCompleted, sendReason: sendReason }); }, thePayload[_DYN_IS_SYNC /* @min:%2eisSync */]);\r\n                }\r\n                if (thePayload.sizeExceed && thePayload.sizeExceed[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    // Ensure that we send any discard events for oversize events even when there was no payload to send\r\n                    _sendBatchesNotification(thePayload.sizeExceed, 8003 /* EventBatchNotificationReason.SizeLimitExceeded */, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */]);\r\n                }\r\n                if (thePayload.failedEvts && thePayload.failedEvts[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    // Ensure that we send any discard events for events that could not be serialized even when there was no payload to send\r\n                    _sendBatchesNotification(thePayload.failedEvts, 8002 /* EventBatchNotificationReason.InvalidEvent */, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */]);\r\n                }\r\n            }\r\n            function _addEventCompletedTimings(theEvents, sendEventCompleted) {\r\n                if (_enableEventTimings) {\r\n                    arrForEach(theEvents, function (theEvent) {\r\n                        var timings = theEvent[_DYN_TIMINGS /* @min:%2etimings */] = theEvent[_DYN_TIMINGS /* @min:%2etimings */] || {};\r\n                        _setTimingValue(timings, \"sendEventCompleted\", sendEventCompleted);\r\n                    });\r\n                }\r\n            }\r\n            function _retryRequestIfNeeded(status, headers, thePayload, sendReason) {\r\n                var reason = 9000 /* EventBatchNotificationReason.ResponseFailure */;\r\n                var droppedBatches = null;\r\n                var isRetrying = false;\r\n                var backOffTrans = false;\r\n                try {\r\n                    var shouldRetry = true;\r\n                    if (typeof status !== strUndefined) {\r\n                        if (headers) {\r\n                            _clockSkewManager[_DYN_SET_CLOCK_SKEW /* @min:%2esetClockSkew */](headers[STR_TIME_DELTA_HEADER]);\r\n                            var killDuration = headers[STR_KILL_DURATION_HEADER] || headers[\"kill-duration-seconds\"];\r\n                            arrForEach(_killSwitch[_DYN_SET_KILL_SWITCH_TENA11 /* @min:%2esetKillSwitchTenants */](headers[STR_KILL_TOKENS_HEADER], killDuration), function (killToken) {\r\n                                arrForEach(thePayload[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                                    if (theBatch[_DYN_I_KEY /* @min:%2eiKey */]() === killToken) {\r\n                                        // Make sure we have initialized the array\r\n                                        droppedBatches = droppedBatches || [];\r\n                                        // Create a copy of the batch with all of the events (and more importantly the action functions)\r\n                                        var removedEvents = theBatch[_DYN_SPLIT /* @min:%2esplit */](0);\r\n                                        // And then remove the events for the payload batch and reduce the actual number of processed\r\n                                        thePayload.numEvents -= removedEvents[_DYN_COUNT /* @min:%2ecount */]();\r\n                                        droppedBatches[_DYN_PUSH /* @min:%2epush */](removedEvents);\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                        // Disabling triple-equals rule to avoid httpOverrides from failing because they are returning a string value\r\n                        // tslint:disable-next-line:triple-equals\r\n                        if (status == 200 || status == 204) {\r\n                            // Response was successfully sent\r\n                            reason = 200 /* EventBatchNotificationReason.Complete */;\r\n                            return;\r\n                        }\r\n                        if (!retryPolicyShouldRetryForStatus(status) || thePayload.numEvents <= 0) {\r\n                            // Only retry for specific response codes and if there is still events after kill switch processing\r\n                            shouldRetry = false;\r\n                        }\r\n                        // Derive the notification response from the HttpStatus Code\r\n                        reason = 9000 /* EventBatchNotificationReason.ResponseFailure */ + (status % 1000);\r\n                    }\r\n                    if (shouldRetry) {\r\n                        // The events should be retried -- so change notification to requeue them\r\n                        reason = 100 /* EventBatchNotificationReason.RequeueEvents */;\r\n                        var retryCount_1 = thePayload.retryCnt;\r\n                        if (thePayload[_DYN_SEND_TYPE /* @min:%2esendType */] === 0 /* EventSendType.Batched */) {\r\n                            // attempt to resend the entire batch\r\n                            if (retryCount_1 < maxRequestRetriesBeforeBackoff) {\r\n                                isRetrying = true;\r\n                                _doAction(function () {\r\n                                    // try to resend the same batches\r\n                                    if (thePayload[_DYN_SEND_TYPE /* @min:%2esendType */] === 0 /* EventSendType.Batched */) {\r\n                                        // Reduce the outstanding request count (if this was an async request) as we didn't reduce the count\r\n                                        // previously and we are about to reschedule our retry attempt and we want an attempt to send\r\n                                        // to occur, it's also required to ensure that a follow up handleRequestFinished() call occurs\r\n                                        _outstandingRequests--;\r\n                                    }\r\n                                    _sendBatches(thePayload[_DYN_BATCHES /* @min:%2ebatches */], retryCount_1 + 1, thePayload[_DYN_IS_TEARDOWN /* @min:%2eisTeardown */], _isUnloading ? 2 /* EventSendType.SendBeacon */ : thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], 5 /* SendRequestReason.Retry */);\r\n                                }, _isUnloading, retryPolicyGetMillisToBackoffForRetry(retryCount_1));\r\n                            }\r\n                            else {\r\n                                backOffTrans = true;\r\n                                if (_isUnloading) {\r\n                                    // we are unloading so don't try and requeue the events otherwise let the events get requeued and resent during the backoff sending\r\n                                    // This will also cause the events to be purged based on the priority (if necessary)\r\n                                    reason = 8001 /* EventBatchNotificationReason.NonRetryableStatus */;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                finally {\r\n                    if (!isRetrying) {\r\n                        // Make sure the clockSkewManager doesn't blocking further sending of requests once we have a proper response\r\n                        // This won't override any previously sent clock Skew value\r\n                        _clockSkewManager[_DYN_SET_CLOCK_SKEW /* @min:%2esetClockSkew */]();\r\n                        _handleRequestFinished(thePayload, reason, sendReason, backOffTrans);\r\n                    }\r\n                    _sendBatchesNotification(droppedBatches, 8004 /* EventBatchNotificationReason.KillSwitch */, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */]);\r\n                }\r\n            }\r\n            function _handleRequestFinished(thePayload, batchReason, sendReason, backOffTrans) {\r\n                try {\r\n                    if (backOffTrans) {\r\n                        // Slow down the transmission requests\r\n                        _postManager[_DYN__BACK_OFF_TRANSMISSI12 /* @min:%2e_backOffTransmission */]();\r\n                    }\r\n                    var theBatches = thePayload[_DYN_BATCHES /* @min:%2ebatches */];\r\n                    if (batchReason === 200 /* EventBatchNotificationReason.Complete */) {\r\n                        theBatches = thePayload.sentEvts || thePayload[_DYN_BATCHES /* @min:%2ebatches */];\r\n                        if (!backOffTrans && !thePayload[_DYN_IS_SYNC /* @min:%2eisSync */]) {\r\n                            // We have a successful async response, so the lets open the floodgates\r\n                            // The reason for checking isSync is to avoid unblocking if beacon send occurred as it\r\n                            // doesn't wait for a response.\r\n                            _postManager._clearBackOff();\r\n                        }\r\n                        _addCompleteTimings(theBatches);\r\n                    }\r\n                    // Send the notifications synchronously\r\n                    _sendBatchesNotification(theBatches, batchReason, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], true);\r\n                }\r\n                finally {\r\n                    if (thePayload[_DYN_SEND_TYPE /* @min:%2esendType */] === 0 /* EventSendType.Batched */) {\r\n                        // we always need to decrement this value otherwise the httpmanager locks up and won't send any more events\r\n                        _outstandingRequests--;\r\n                        // Don't try to send additional queued events if this is a retry operation as the retried\r\n                        // response will eventually call _handleRequestFinished for the retried event\r\n                        if (sendReason !== 5 /* SendRequestReason.Retry */) {\r\n                            // Try and send any other queued batched events\r\n                            _self.sendQueuedRequests(thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], sendReason);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _addCompleteTimings(theBatches) {\r\n                if (_enableEventTimings) {\r\n                    var sendEventCompleted_1 = getTime();\r\n                    arrForEach(theBatches, function (theBatch) {\r\n                        if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                            _addEventCompletedTimings(theBatch[_DYN_EVENTS /* @min:%2eevents */](), sendEventCompleted_1);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            function _doAction(cb, isSync, interval) {\r\n                if (isSync) {\r\n                    cb();\r\n                }\r\n                else {\r\n                    _timeoutWrapper.set(cb, interval);\r\n                }\r\n            }\r\n            function _getMsfpc(thePayload) {\r\n                for (var lp = 0; lp < thePayload.batches[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var msfpc = thePayload[_DYN_BATCHES /* @min:%2ebatches */][lp].Msfpc();\r\n                    if (msfpc) {\r\n                        return encodeURIComponent(msfpc);\r\n                    }\r\n                }\r\n                return STR_EMPTY;\r\n            }\r\n            function _handleCollectorResponse(responseText) {\r\n                var responseHandlers = _responseHandlers;\r\n                try {\r\n                    for (var i = 0; i < responseHandlers[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                        try {\r\n                            responseHandlers[i](responseText);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 519 /* _eExtendedInternalMessageId.PostResponseHandler */, \"Response handler failed: \" + e);\r\n                        }\r\n                    }\r\n                    if (responseText) {\r\n                        var response = JSON.parse(responseText);\r\n                        if (isValueAssigned(response.webResult) && isValueAssigned(response.webResult[STR_MSFPC])) {\r\n                            // Set cookie\r\n                            _cookieMgr.set(\"MSFPC\", response.webResult[STR_MSFPC], 365 * 86400);\r\n                        }\r\n                    }\r\n                }\r\n                catch (ex) {\r\n                    // Doing nothing\r\n                }\r\n            }\r\n            function _sendBatchesNotification(theBatches, batchReason, sendType, sendSync) {\r\n                if (theBatches && theBatches[_DYN_LENGTH /* @min:%2elength */] > 0 && actions) {\r\n                    var theAction_1 = actions[_getNotificationAction(batchReason)];\r\n                    if (theAction_1) {\r\n                        var isSyncRequest_1 = sendType !== 0 /* EventSendType.Batched */;\r\n                        doPerf(_core, function () { return \"HttpManager:_sendBatchesNotification\"; }, function () {\r\n                            _doAction(function () {\r\n                                try {\r\n                                    theAction_1.call(actions, theBatches, batchReason, isSyncRequest_1, sendType);\r\n                                }\r\n                                catch (e) {\r\n                                    _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, \"send request notification failed: \" + e);\r\n                                }\r\n                            }, sendSync || isSyncRequest_1, 0);\r\n                        }, function () { return ({ batches: _createDebugBatches(theBatches), reason: batchReason, isSync: isSyncRequest_1, sendSync: sendSync, sendType: sendType }); }, !isSyncRequest_1);\r\n                    }\r\n                }\r\n            }\r\n            function _getNotificationAction(reason) {\r\n                var action = _eventActionMap[reason];\r\n                if (!isValueAssigned(action)) {\r\n                    action = STR_OTHER;\r\n                    if (reason >= 9000 /* EventBatchNotificationReason.ResponseFailure */ && reason <= 9999 /* EventBatchNotificationReason.ResponseFailureMax */) {\r\n                        action = STR_RESPONSE_FAIL;\r\n                    }\r\n                    else if (reason >= 8000 /* EventBatchNotificationReason.EventsDropped */ && reason <= 8999 /* EventBatchNotificationReason.EventsDroppedMax */) {\r\n                        action = STR_DROPPED;\r\n                    }\r\n                    else if (reason >= 1000 /* EventBatchNotificationReason.SendingUndefined */ && reason <= 1999 /* EventBatchNotificationReason.SendingEventMax */) {\r\n                        action = STR_SENDING;\r\n                    }\r\n                }\r\n                return action;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for HttpManager.prototype.initialize.\r\n// Removed Stub for HttpManager.prototype.addHeader.\r\n// Removed Stub for HttpManager.prototype.removeHeader.\r\n// Removed Stub for HttpManager.prototype.addResponseHandler.\r\n// Removed Stub for HttpManager.prototype.addBatch.\r\n// Removed Stub for HttpManager.prototype.canSendRequest.\r\n// Removed Stub for HttpManager.prototype.sendQueuedRequests.\r\n// Removed Stub for HttpManager.prototype.isCompletelyIdle.\r\n// Removed Stub for HttpManager.prototype.setUnloading.\r\n// Removed Stub for HttpManager.prototype.teardown.\r\n// Removed Stub for HttpManager.prototype.pause.\r\n// Removed Stub for HttpManager.prototype.resume.\r\n// Removed Stub for HttpManager.prototype.sendSynchronousBatch.\r\n// Removed Stub for HttpManager.prototype.serializeOfflineEvt.\r\n// Removed Stub for HttpManager.prototype.getOfflineRequestDetails.\r\n// Removed Stub for HttpManager.prototype.createOneDSPayload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    HttpManager.__ieDyn=1;\n\n    return HttpManager;\r\n}());\r\nexport { HttpManager };\r\n//# sourceMappingURL=HttpManager.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* TimeoutOverrideWrapper.ts\r\n* @author  Nev Wylie (newylie)\r\n* @copyright Microsoft 2022\r\n* Simple internal timeout wrapper\r\n*/\r\nimport { scheduleTimeoutWith } from \"@nevware21/ts-utils\";\r\nexport function createTimeoutWrapper(argSetTimeout, argClearTimeout) {\r\n    return {\r\n        set: function (callback, ms) {\r\n            var args = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                args[_i - 2] = arguments[_i];\r\n            }\r\n            return scheduleTimeoutWith([argSetTimeout, argClearTimeout], callback, ms, args);\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TimeoutOverrideWrapper.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n* PostManager.ts\r\n* @author Abhilash Panwar (abpanwar); Hector Hernandez (hectorh); Nev Wylie (newylie)\r\n* @copyright Microsoft 2018-2020\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BaseTelemetryPlugin, EventsDiscardedReason, _throwInternal, addPageHideEventListener, addPageShowEventListener, addPageUnloadEventListener, arrForEach, createProcessTelemetryContext, createUniqueNamespace, doPerf, getWindow, isChromium, isGreaterThanZero, isNumber, mergeEvtNamespace, objForEachKey, onConfigChange, optimizeObject, proxyFunctions, removePageHideEventListener, removePageShowEventListener, removePageUnloadEventListener, setProcessTelemetryTimings } from \"@microsoft/1ds-core-js\";\r\nimport { createPromise } from \"@nevware21/ts-async\";\r\nimport { isPromiseLike, objDeepFreeze } from \"@nevware21/ts-utils\";\r\nimport { BE_PROFILE, NRT_PROFILE, RT_PROFILE } from \"./DataModels\";\r\nimport { EventBatch } from \"./EventBatch\";\r\nimport { HttpManager } from \"./HttpManager\";\r\nimport { STR_AUTH_WEB_TOKEN, STR_MSA_DEVICE_TICKET, STR_TRACE, STR_USER } from \"./InternalConstants\";\r\nimport { retryPolicyGetMillisToBackoffForRetry } from \"./RetryPolicy\";\r\nimport { createTimeoutWrapper } from \"./TimeoutOverrideWrapper\";\r\nimport { _DYN_ADD_HEADER, _DYN_AUTO_FLUSH_EVENTS_LI14, _DYN_BASE_DATA, _DYN_BATCHES, _DYN_CAN_SEND_REQUEST, _DYN_CLEAR_TIMEOUT_OVERRI3, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_ONE_DSPAYLOAD, _DYN_DATA, _DYN_DISABLE_AUTO_BATCH_F15, _DYN_DISABLE_OPTIMIZE_OBJ, _DYN_DISABLE_TELEMETRY, _DYN_EVENTS, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_GET_OFFLINE_REQUEST_9, _DYN_GET_WPARAM, _DYN_IDENTIFIER, _DYN_IGNORE_MC1_MS0_COOKI13, _DYN_INITIALIZE, _DYN_IS_COMPLETELY_IDLE, _DYN_I_KEY, _DYN_LATENCY, _DYN_LENGTH, _DYN_OVERRIDE_INSTRUMENTA16, _DYN_PUSH, _DYN_RESUME, _DYN_SEND_ATTEMPT, _DYN_SEND_QUEUED_REQUESTS, _DYN_SEND_SYNCHRONOUS_BAT10, _DYN_SERIALIZE_OFFLINE_EV8, _DYN_SET_TIMEOUT_OVERRIDE, _DYN_SET_UNLOADING, _DYN_SPLICE, _DYN_SPLIT, _DYN_SYNC, _DYN__BACK_OFF_TRANSMISSI12 } from \"./__DynamicConstants\";\r\nvar FlushCheckTimer = 0.250; // This needs to be in seconds, so this is 250ms\r\nvar MaxNumberEventPerBatch = 500;\r\nvar EventsDroppedAtOneTime = 20;\r\nvar MaxSendAttempts = 6;\r\nvar MaxSyncUnloadSendAttempts = 2; // Assuming 2 based on beforeunload and unload\r\nvar MaxBackoffCount = 4;\r\nvar MaxConnections = 2;\r\nvar MaxRequestRetriesBeforeBackoff = 1;\r\nvar MaxEventsLimitInMem = 10000;\r\nvar strEventsDiscarded = \"eventsDiscarded\";\r\nvar EMPTY_STR = \"\";\r\nvar undefValue = undefined;\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultPostChannelConfig = objDeepFreeze({\r\n    eventsLimitInMem: { isVal: isGreaterThanZero, v: MaxEventsLimitInMem },\r\n    immediateEventLimit: { isVal: isGreaterThanZero, v: 500 },\r\n    autoFlushEventsLimit: { isVal: isGreaterThanZero, v: 0 },\r\n    disableAutoBatchFlushLimit: false,\r\n    httpXHROverride: { isVal: isOverrideFn, v: undefValue },\r\n    overrideInstrumentationKey: undefValue,\r\n    overrideEndpointUrl: undefValue,\r\n    disableTelemetry: false,\r\n    ignoreMc1Ms0CookieProcessing: false,\r\n    setTimeoutOverride: undefValue,\r\n    clearTimeoutOverride: undefValue,\r\n    payloadPreprocessor: undefValue,\r\n    payloadListener: undefValue,\r\n    disableEventTimings: undefValue,\r\n    valueSanitizer: undefValue,\r\n    stringifyObjects: undefValue,\r\n    enableCompoundKey: undefValue,\r\n    disableOptimizeObj: false,\r\n    fetchCredentials: undefValue,\r\n    // disableCacheHeader: undefValue, // See Task #7178858 - Collector requires a change to support this\r\n    transports: undefValue,\r\n    unloadTransports: undefValue,\r\n    useSendBeacon: undefValue,\r\n    disableFetchKeepAlive: undefValue,\r\n    avoidOptions: false,\r\n    xhrTimeout: undefValue,\r\n    disableXhrSync: undefValue,\r\n    alwaysUseXhrOverride: false,\r\n    maxEventRetryAttempts: { isVal: isNumber, v: MaxSendAttempts },\r\n    maxUnloadEventRetryAttempts: { isVal: isNumber, v: MaxSyncUnloadSendAttempts },\r\n    addNoResponse: undefValue,\r\n    excludeCsMetaData: undefValue\r\n});\r\nfunction isOverrideFn(httpXHROverride) {\r\n    return httpXHROverride && httpXHROverride.sendPOST;\r\n}\r\n/**\r\n * Class that manages adding events to inbound queues and batching of events\r\n * into requests.\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar PostChannel = /** @class */ (function (_super) {\r\n    __extends(PostChannel, _super);\r\n    function PostChannel() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"PostChannel\";\r\n        _this.priority = 1011;\r\n        _this.version = '4.3.4';\r\n        var _postConfig;\r\n        var _isTeardownCalled = false;\r\n        var _flushCallbackQueue = [];\r\n        var _flushCallbackTimer;\r\n        var _paused = false;\r\n        var _immediateQueueSize = 0;\r\n        var _immediateQueueSizeLimit;\r\n        var _queueSize = 0;\r\n        var _queueSizeLimit;\r\n        var _profiles = {};\r\n        var _currentProfile = RT_PROFILE;\r\n        var _scheduledTimer;\r\n        var _immediateTimer;\r\n        var _currentBackoffCount;\r\n        var _timerCount;\r\n        var _httpManager;\r\n        var _batchQueues;\r\n        var _autoFlushEventsLimit;\r\n        // either MaxBatchSize * (1+ Max Connections) or _queueLimit / 6 (where 3 latency Queues [normal, realtime, cost deferred] * 2 [allow half full -- allow for retry])\r\n        var _autoFlushBatchLimit;\r\n        var _delayedBatchSendLatency;\r\n        var _delayedBatchReason;\r\n        var _optimizeObject;\r\n        var _isPageUnloadTriggered;\r\n        var _maxEventSendAttempts;\r\n        var _maxUnloadEventSendAttempts;\r\n        var _evtNamespace;\r\n        var _timeoutWrapper;\r\n        var _ignoreMc1Ms0CookieProcessing;\r\n        var _disableAutoBatchFlushLimit;\r\n        var _notificationManager;\r\n        var _unloadHandlersAdded;\r\n        var _overrideInstrumentationKey;\r\n        var _disableTelemetry;\r\n        dynamicProto(PostChannel, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            // Special internal method to allow the DebugPlugin to hook embedded objects\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_httpManager, _postConfig];\r\n            };\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (theConfig, core, extensions) {\r\n                doPerf(core, function () { return \"PostChannel:initialize\"; }, function () {\r\n                    _base[_DYN_INITIALIZE /* @min:%2einitialize */](theConfig, core, extensions);\r\n                    _notificationManager = core.getNotifyMgr();\r\n                    try {\r\n                        _evtNamespace = mergeEvtNamespace(createUniqueNamespace(_self[_DYN_IDENTIFIER /* @min:%2eidentifier */]), core.evtNamespace && core.evtNamespace());\r\n                        _self._addHook(onConfigChange(theConfig, function (details) {\r\n                            var coreConfig = details.cfg;\r\n                            var ctx = createProcessTelemetryContext(null, coreConfig, core);\r\n                            _postConfig = ctx.getExtCfg(_self[_DYN_IDENTIFIER /* @min:%2eidentifier */], defaultPostChannelConfig);\r\n                            _timeoutWrapper = createTimeoutWrapper(_postConfig[_DYN_SET_TIMEOUT_OVERRIDE /* @min:%2esetTimeoutOverride */], _postConfig[_DYN_CLEAR_TIMEOUT_OVERRI3 /* @min:%2eclearTimeoutOverride */]);\r\n                            // Only try and use the optimizeObject() if this appears to be a chromium based browser and it has not been explicitly disabled\r\n                            _optimizeObject = !_postConfig[_DYN_DISABLE_OPTIMIZE_OBJ /* @min:%2edisableOptimizeObj */] && isChromium();\r\n                            _ignoreMc1Ms0CookieProcessing = _postConfig[_DYN_IGNORE_MC1_MS0_COOKI13 /* @min:%2eignoreMc1Ms0CookieProcessing */];\r\n                            _hookWParam(core); // _hookWParam uses _ignoreMc1Ms0CookieProcessing\r\n                            _queueSizeLimit = _postConfig[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */];\r\n                            _immediateQueueSizeLimit = _postConfig.immediateEventLimit;\r\n                            _autoFlushEventsLimit = _postConfig[_DYN_AUTO_FLUSH_EVENTS_LI14 /* @min:%2eautoFlushEventsLimit */];\r\n                            _maxEventSendAttempts = _postConfig.maxEventRetryAttempts;\r\n                            _maxUnloadEventSendAttempts = _postConfig.maxUnloadEventRetryAttempts;\r\n                            _disableAutoBatchFlushLimit = _postConfig[_DYN_DISABLE_AUTO_BATCH_F15 /* @min:%2edisableAutoBatchFlushLimit */];\r\n                            if (isPromiseLike(coreConfig.endpointUrl)) {\r\n                                _self.pause();\r\n                            }\r\n                            else if (!!_paused) {\r\n                                // if previous url is promise, resume\r\n                                _self[_DYN_RESUME /* @min:%2eresume */]();\r\n                            }\r\n                            _setAutoLimits();\r\n                            // Override iKey if provided in Post config if provided for during initialization\r\n                            _overrideInstrumentationKey = _postConfig[_DYN_OVERRIDE_INSTRUMENTA16 /* @min:%2eoverrideInstrumentationKey */];\r\n                            // DisableTelemetry was defined in the config provided during initialization\r\n                            _disableTelemetry = !!_postConfig[_DYN_DISABLE_TELEMETRY /* @min:%2edisableTelemetry */];\r\n                            if (_unloadHandlersAdded) {\r\n                                _removeUnloadHandlers();\r\n                            }\r\n                            var excludePageUnloadEvents = coreConfig.disablePageUnloadEvents || [];\r\n                            // When running in Web browsers try to send all telemetry if page is unloaded\r\n                            _unloadHandlersAdded = addPageUnloadEventListener(_handleUnloadEvents, excludePageUnloadEvents, _evtNamespace);\r\n                            _unloadHandlersAdded = addPageHideEventListener(_handleUnloadEvents, excludePageUnloadEvents, _evtNamespace) || _unloadHandlersAdded;\r\n                            _unloadHandlersAdded = addPageShowEventListener(_handleShowEvents, coreConfig.disablePageShowEvents, _evtNamespace) || _unloadHandlersAdded;\r\n                        }));\r\n                        // only initialize the manager once\r\n                        _httpManager[_DYN_INITIALIZE /* @min:%2einitialize */](theConfig, _self.core, _self);\r\n                    }\r\n                    catch (e) {\r\n                        // resetting the initialized state because of failure\r\n                        _self.setInitialized(false);\r\n                        throw e;\r\n                    }\r\n                }, function () { return ({ theConfig: theConfig, core: core, extensions: extensions }); });\r\n            };\r\n            _self.processTelemetry = function (ev, itemCtx) {\r\n                setProcessTelemetryTimings(ev, _self[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                itemCtx = itemCtx || _self._getTelCtx(itemCtx);\r\n                var event = ev;\r\n                if (!_disableTelemetry && !_isTeardownCalled) {\r\n                    // Override iKey if provided in Post config if provided for during initialization\r\n                    if (_overrideInstrumentationKey) {\r\n                        event[_DYN_I_KEY /* @min:%2eiKey */] = _overrideInstrumentationKey;\r\n                    }\r\n                    _addEventToQueues(event, true);\r\n                    if (_isPageUnloadTriggered) {\r\n                        // Unload event has been received so we need to try and flush new events\r\n                        _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                    }\r\n                    else {\r\n                        _scheduleTimer();\r\n                    }\r\n                }\r\n                _self.processNext(event, itemCtx);\r\n            };\r\n            _self.getOfflineSupport = function () {\r\n                try {\r\n                    var details_1 = _httpManager && _httpManager[_DYN_GET_OFFLINE_REQUEST_9 /* @min:%2egetOfflineRequestDetails */]();\r\n                    if (_httpManager) {\r\n                        return {\r\n                            getUrl: function () {\r\n                                if (details_1) {\r\n                                    return details_1.url;\r\n                                }\r\n                                return null;\r\n                            },\r\n                            serialize: _serialize,\r\n                            batch: _batch,\r\n                            shouldProcess: function (evt) {\r\n                                return !_disableTelemetry;\r\n                            },\r\n                            createPayload: function (evt) {\r\n                                return null;\r\n                            },\r\n                            createOneDSPayload: function (evts) {\r\n                                if (_httpManager[_DYN_CREATE_ONE_DSPAYLOAD /* @min:%2ecreateOneDSPayload */]) {\r\n                                    return _httpManager[_DYN_CREATE_ONE_DSPAYLOAD /* @min:%2ecreateOneDSPayload */](evts, _optimizeObject);\r\n                                }\r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                _isTeardownCalled = true;\r\n                _httpManager.teardown();\r\n                _removeUnloadHandlers();\r\n                // Just register to remove all events associated with this namespace\r\n                _initDefaults();\r\n            };\r\n            function _removeUnloadHandlers() {\r\n                removePageUnloadEventListener(null, _evtNamespace);\r\n                removePageHideEventListener(null, _evtNamespace);\r\n                removePageShowEventListener(null, _evtNamespace);\r\n            }\r\n            function _hookWParam(core) {\r\n                var existingGetWParamMethod = core[_DYN_GET_WPARAM /* @min:%2egetWParam */];\r\n                core[_DYN_GET_WPARAM /* @min:%2egetWParam */] = function () {\r\n                    var wparam = 0;\r\n                    if (_ignoreMc1Ms0CookieProcessing) {\r\n                        wparam = wparam | 2;\r\n                    }\r\n                    return wparam | existingGetWParamMethod.call(core);\r\n                };\r\n            }\r\n            function _batch(arr) {\r\n                var rlt = EMPTY_STR;\r\n                if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    arrForEach(arr, function (item) {\r\n                        if (rlt) {\r\n                            rlt += \"\\n\";\r\n                        }\r\n                        rlt += item;\r\n                    });\r\n                }\r\n                return rlt;\r\n            }\r\n            function _serialize(event) {\r\n                var rlt = EMPTY_STR;\r\n                try {\r\n                    _cleanEvent(event);\r\n                    rlt = _httpManager[_DYN_SERIALIZE_OFFLINE_EV8 /* @min:%2eserializeOfflineEvt */](event);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return rlt;\r\n            }\r\n            // Moving event handlers out from the initialize closure so that any local variables can be garbage collected\r\n            function _handleUnloadEvents(evt) {\r\n                var theEvt = evt || getWindow().event; // IE 8 does not pass the event\r\n                if (theEvt.type !== \"beforeunload\") {\r\n                    // Only set the unload trigger if not beforeunload event as beforeunload can be cancelled while the other events can't\r\n                    _isPageUnloadTriggered = true;\r\n                    _httpManager[_DYN_SET_UNLOADING /* @min:%2esetUnloading */](_isPageUnloadTriggered);\r\n                }\r\n                _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n            }\r\n            function _handleShowEvents(evt) {\r\n                // Handle the page becoming visible again\r\n                _isPageUnloadTriggered = false;\r\n                _httpManager[_DYN_SET_UNLOADING /* @min:%2esetUnloading */](_isPageUnloadTriggered);\r\n            }\r\n            function _cleanEvent(event) {\r\n                if (event.ext && event.ext[STR_TRACE]) {\r\n                    delete (event.ext[STR_TRACE]);\r\n                }\r\n                if (event.ext && event.ext[STR_USER] && event.ext[STR_USER][\"id\"]) {\r\n                    delete (event.ext[STR_USER][\"id\"]);\r\n                }\r\n                // v8 performance optimization for iterating over the keys\r\n                if (_optimizeObject) {\r\n                    event.ext = optimizeObject(event.ext);\r\n                    if (event[_DYN_BASE_DATA /* @min:%2ebaseData */]) {\r\n                        event[_DYN_BASE_DATA /* @min:%2ebaseData */] = optimizeObject(event[_DYN_BASE_DATA /* @min:%2ebaseData */]);\r\n                    }\r\n                    if (event[_DYN_DATA /* @min:%2edata */]) {\r\n                        event[_DYN_DATA /* @min:%2edata */] = optimizeObject(event[_DYN_DATA /* @min:%2edata */]);\r\n                    }\r\n                }\r\n            }\r\n            function _addEventToQueues(event, append) {\r\n                // If send attempt field is undefined we should set it to 0.\r\n                if (!event[_DYN_SEND_ATTEMPT /* @min:%2esendAttempt */]) {\r\n                    event[_DYN_SEND_ATTEMPT /* @min:%2esendAttempt */] = 0;\r\n                }\r\n                // Add default latency\r\n                if (!event[_DYN_LATENCY /* @min:%2elatency */]) {\r\n                    event[_DYN_LATENCY /* @min:%2elatency */] = 1 /* EventLatencyValue.Normal */;\r\n                }\r\n                _cleanEvent(event);\r\n                if (event[_DYN_SYNC /* @min:%2esync */]) {\r\n                    // If the transmission is backed off then do not send synchronous events.\r\n                    // We will convert these events to Real time latency instead.\r\n                    if (_currentBackoffCount || _paused) {\r\n                        event[_DYN_LATENCY /* @min:%2elatency */] = 3 /* EventLatencyValue.RealTime */;\r\n                        event[_DYN_SYNC /* @min:%2esync */] = false;\r\n                    }\r\n                    else {\r\n                        // Log the event synchronously\r\n                        if (_httpManager) {\r\n                            // v8 performance optimization for iterating over the keys\r\n                            if (_optimizeObject) {\r\n                                event = optimizeObject(event);\r\n                            }\r\n                            _httpManager[_DYN_SEND_SYNCHRONOUS_BAT10 /* @min:%2esendSynchronousBatch */](EventBatch.create(event[_DYN_I_KEY /* @min:%2eiKey */], [event]), event[_DYN_SYNC /* @min:%2esync */] === true ? 1 /* EventSendType.Synchronous */ : event[_DYN_SYNC /* @min:%2esync */], 3 /* SendRequestReason.SyncEvent */);\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                var evtLatency = event[_DYN_LATENCY /* @min:%2elatency */];\r\n                var queueSize = _queueSize;\r\n                var queueLimit = _queueSizeLimit;\r\n                if (evtLatency === 4 /* EventLatencyValue.Immediate */) {\r\n                    queueSize = _immediateQueueSize;\r\n                    queueLimit = _immediateQueueSizeLimit;\r\n                }\r\n                var eventDropped = false;\r\n                // Only add the event if the queue isn't full or it's a direct event (which don't add to the queue sizes)\r\n                if (queueSize < queueLimit) {\r\n                    eventDropped = !_addEventToProperQueue(event, append);\r\n                }\r\n                else {\r\n                    var dropLatency = 1 /* EventLatencyValue.Normal */;\r\n                    var dropNumber = EventsDroppedAtOneTime;\r\n                    if (evtLatency === 4 /* EventLatencyValue.Immediate */) {\r\n                        // Only drop other immediate events as they are not technically sharing the general queue\r\n                        dropLatency = 4 /* EventLatencyValue.Immediate */;\r\n                        dropNumber = 1;\r\n                    }\r\n                    // Drop old event from lower or equal latency\r\n                    eventDropped = true;\r\n                    if (_dropEventWithLatencyOrLess(event[_DYN_I_KEY /* @min:%2eiKey */], event[_DYN_LATENCY /* @min:%2elatency */], dropLatency, dropNumber)) {\r\n                        eventDropped = !_addEventToProperQueue(event, append);\r\n                    }\r\n                }\r\n                if (eventDropped) {\r\n                    // Can't drop events from current queues because the all the slots are taken by queues that are being flushed.\r\n                    _notifyEvents(strEventsDiscarded, [event], EventsDiscardedReason.QueueFull);\r\n                }\r\n            }\r\n            _self.setEventQueueLimits = function (eventLimit, autoFlushLimit) {\r\n                _postConfig[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */] = _queueSizeLimit = isGreaterThanZero(eventLimit) ? eventLimit : MaxEventsLimitInMem;\r\n                _postConfig[_DYN_AUTO_FLUSH_EVENTS_LI14 /* @min:%2eautoFlushEventsLimit */] = _autoFlushEventsLimit = isGreaterThanZero(autoFlushLimit) ? autoFlushLimit : 0;\r\n                _setAutoLimits();\r\n                // We only do this check here as during normal event addition if the queue is > then events start getting dropped\r\n                var doFlush = _queueSize > eventLimit;\r\n                if (!doFlush && _autoFlushBatchLimit > 0) {\r\n                    // Check the auto flush max batch size\r\n                    for (var latency = 1 /* EventLatencyValue.Normal */; !doFlush && latency <= 3 /* EventLatencyValue.RealTime */; latency++) {\r\n                        var batchQueue = _batchQueues[latency];\r\n                        if (batchQueue && batchQueue[_DYN_BATCHES /* @min:%2ebatches */]) {\r\n                            arrForEach(batchQueue[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                                if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() >= _autoFlushBatchLimit) {\r\n                                    // If any 1 batch is > than the limit then trigger an auto flush\r\n                                    doFlush = true;\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                _performAutoFlush(true, doFlush);\r\n            };\r\n            _self.pause = function () {\r\n                _clearScheduledTimer();\r\n                _paused = true;\r\n                _httpManager && _httpManager.pause();\r\n            };\r\n            _self[_DYN_RESUME /* @min:%2eresume */] = function () {\r\n                _paused = false;\r\n                _httpManager && _httpManager[_DYN_RESUME /* @min:%2eresume */]();\r\n                _scheduleTimer();\r\n            };\r\n            _self._loadTransmitProfiles = function (profiles) {\r\n                _resetTransmitProfiles();\r\n                objForEachKey(profiles, function (profileName, profileValue) {\r\n                    var profLen = profileValue[_DYN_LENGTH /* @min:%2elength */];\r\n                    if (profLen >= 2) {\r\n                        var directValue = (profLen > 2 ? profileValue[2] : 0);\r\n                        profileValue[_DYN_SPLICE /* @min:%2esplice */](0, profLen - 2);\r\n                        // Make sure if a higher latency is set to not send then don't send lower latency\r\n                        if (profileValue[1] < 0) {\r\n                            profileValue[0] = -1;\r\n                        }\r\n                        // Make sure each latency is multiple of the latency higher then it. If not a multiple\r\n                        // we round up so that it becomes a multiple.\r\n                        if (profileValue[1] > 0 && profileValue[0] > 0) {\r\n                            var timerMultiplier = profileValue[0] / profileValue[1];\r\n                            profileValue[0] = Math.ceil(timerMultiplier) * profileValue[1];\r\n                        }\r\n                        // Add back the direct profile timeout\r\n                        if (directValue >= 0 && profileValue[1] >= 0 && directValue > profileValue[1]) {\r\n                            // Make sure if it's not disabled (< 0) then make sure it's not larger than RealTime\r\n                            directValue = profileValue[1];\r\n                        }\r\n                        profileValue[_DYN_PUSH /* @min:%2epush */](directValue);\r\n                        _profiles[profileName] = profileValue;\r\n                    }\r\n                });\r\n            };\r\n            _self.flush = function (async, callback, sendReason) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                if (!_paused) {\r\n                    sendReason = sendReason || 1 /* SendRequestReason.ManualFlush */;\r\n                    if (async) {\r\n                        if (!callback) {\r\n                            result = createPromise(function (resolve) {\r\n                                // Set the callback to the promise resolve callback\r\n                                callback = resolve;\r\n                            });\r\n                        }\r\n                        if (_flushCallbackTimer == null) {\r\n                            // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                            _clearScheduledTimer();\r\n                            // Move all queued events to the HttpManager so that we don't discard new events (Auto flush scenario)\r\n                            _queueBatches(1 /* EventLatencyValue.Normal */, 0 /* EventSendType.Batched */, sendReason);\r\n                            _flushCallbackTimer = _createTimer(function () {\r\n                                _flushCallbackTimer = null;\r\n                                _flushImpl(callback, sendReason);\r\n                            }, 0);\r\n                        }\r\n                        else {\r\n                            // Even if null (no callback) this will ensure after the flushImpl finishes waiting\r\n                            // for a completely idle connection it will attempt to re-flush any queued events on the next cycle\r\n                            _flushCallbackQueue[_DYN_PUSH /* @min:%2epush */](callback);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                        var cleared = _clearScheduledTimer();\r\n                        // Now cause all queued events to be sent synchronously\r\n                        _sendEventsForLatencyAndAbove(1 /* EventLatencyValue.Normal */, 1 /* EventSendType.Synchronous */, sendReason);\r\n                        callback && callback();\r\n                        if (cleared) {\r\n                            // restart the normal event timer if it was cleared\r\n                            _scheduleTimer();\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            _self.setMsaAuthTicket = function (ticket) {\r\n                _httpManager[_DYN_ADD_HEADER /* @min:%2eaddHeader */](STR_MSA_DEVICE_TICKET, ticket);\r\n            };\r\n            _self.setAuthPluginHeader = function (token) {\r\n                _httpManager[_DYN_ADD_HEADER /* @min:%2eaddHeader */](STR_AUTH_WEB_TOKEN, token);\r\n            };\r\n            _self.removeAuthPluginHeader = function () {\r\n                _httpManager.removeHeader(STR_AUTH_WEB_TOKEN);\r\n            };\r\n            _self.hasEvents = _hasEvents;\r\n            _self._setTransmitProfile = function (profileName) {\r\n                if (_currentProfile !== profileName && _profiles[profileName] !== undefined) {\r\n                    _clearScheduledTimer();\r\n                    _currentProfile = profileName;\r\n                    _scheduleTimer();\r\n                }\r\n            };\r\n            proxyFunctions(_self, function () { return _httpManager; }, [\"addResponseHandler\"]);\r\n            /**\r\n             * Batch and send events currently in the queue for the given latency.\r\n             * @param latency - Latency for which to send events.\r\n             */\r\n            function _sendEventsForLatencyAndAbove(latency, sendType, sendReason) {\r\n                var queued = _queueBatches(latency, sendType, sendReason);\r\n                // Always trigger the request as while the post channel may not have queued additional events, the httpManager may already have waiting events\r\n                _httpManager[_DYN_SEND_QUEUED_REQUESTS /* @min:%2esendQueuedRequests */](sendType, sendReason);\r\n                return queued;\r\n            }\r\n            function _hasEvents() {\r\n                return _queueSize > 0;\r\n            }\r\n            /**\r\n             * Try to schedule the timer after which events will be sent. If there are\r\n             * no events to be sent, or there is already a timer scheduled, or the\r\n             * http manager doesn't have any idle connections this method is no-op.\r\n             */\r\n            function _scheduleTimer() {\r\n                // If we had previously attempted to send requests, but the http manager didn't have any idle connections then the requests where delayed\r\n                // so try and requeue then again now\r\n                if (_delayedBatchSendLatency >= 0 && _queueBatches(_delayedBatchSendLatency, 0 /* EventSendType.Batched */, _delayedBatchReason)) {\r\n                    _httpManager[_DYN_SEND_QUEUED_REQUESTS /* @min:%2esendQueuedRequests */](0 /* EventSendType.Batched */, _delayedBatchReason);\r\n                }\r\n                if (_immediateQueueSize > 0 && !_immediateTimer && !_paused) {\r\n                    // During initialization _profiles enforce that the direct [2] is less than real time [1] timer value\r\n                    // If the immediateTimeout is disabled the immediate events will be sent with Real Time events\r\n                    var immediateTimeOut = _profiles[_currentProfile][2];\r\n                    if (immediateTimeOut >= 0) {\r\n                        _immediateTimer = _createTimer(function () {\r\n                            _immediateTimer = null;\r\n                            // Only try to send direct events\r\n                            _sendEventsForLatencyAndAbove(4 /* EventLatencyValue.Immediate */, 0 /* EventSendType.Batched */, 1 /* SendRequestReason.NormalSchedule */);\r\n                            _scheduleTimer();\r\n                        }, immediateTimeOut);\r\n                    }\r\n                }\r\n                // During initialization the _profiles enforce that the normal [0] is a multiple of the real time [1] timer value\r\n                var timeOut = _profiles[_currentProfile][1];\r\n                if (!_scheduledTimer && !_flushCallbackTimer && timeOut >= 0 && !_paused) {\r\n                    if (_hasEvents()) {\r\n                        _scheduledTimer = _createTimer(function () {\r\n                            _scheduledTimer = null;\r\n                            _sendEventsForLatencyAndAbove(_timerCount === 0 ? 3 /* EventLatencyValue.RealTime */ : 1 /* EventLatencyValue.Normal */, 0 /* EventSendType.Batched */, 1 /* SendRequestReason.NormalSchedule */);\r\n                            // Increment the count for next cycle\r\n                            _timerCount++;\r\n                            _timerCount %= 2;\r\n                            _scheduleTimer();\r\n                        }, timeOut);\r\n                    }\r\n                    else {\r\n                        _timerCount = 0;\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN__BACK_OFF_TRANSMISSI12 /* @min:%2e_backOffTransmission */] = function () {\r\n                if (_currentBackoffCount < MaxBackoffCount) {\r\n                    _currentBackoffCount++;\r\n                    _clearScheduledTimer();\r\n                    _scheduleTimer();\r\n                }\r\n            };\r\n            _self._clearBackOff = function () {\r\n                if (_currentBackoffCount) {\r\n                    _currentBackoffCount = 0;\r\n                    _clearScheduledTimer();\r\n                    _scheduleTimer();\r\n                }\r\n            };\r\n            function _initDefaults() {\r\n                _postConfig = null;\r\n                _isTeardownCalled = false;\r\n                _flushCallbackQueue = [];\r\n                _flushCallbackTimer = null;\r\n                _paused = false;\r\n                _immediateQueueSize = 0;\r\n                _immediateQueueSizeLimit = 500;\r\n                _queueSize = 0;\r\n                _queueSizeLimit = MaxEventsLimitInMem;\r\n                _profiles = {};\r\n                _currentProfile = RT_PROFILE;\r\n                _scheduledTimer = null;\r\n                _immediateTimer = null;\r\n                _currentBackoffCount = 0;\r\n                _timerCount = 0;\r\n                _batchQueues = {};\r\n                _autoFlushEventsLimit = 0;\r\n                _unloadHandlersAdded = false;\r\n                // either MaxBatchSize * (1+ Max Connections) or _queueLimit / 6 (where 3 latency Queues [normal, realtime, cost deferred] * 2 [allow half full -- allow for retry])\r\n                _autoFlushBatchLimit = 0;\r\n                _delayedBatchSendLatency = -1;\r\n                _delayedBatchReason = null;\r\n                _optimizeObject = true;\r\n                _isPageUnloadTriggered = false;\r\n                _maxEventSendAttempts = MaxSendAttempts;\r\n                _maxUnloadEventSendAttempts = MaxSyncUnloadSendAttempts;\r\n                _evtNamespace = null;\r\n                _overrideInstrumentationKey = null;\r\n                _disableTelemetry = false;\r\n                _timeoutWrapper = createTimeoutWrapper();\r\n                _httpManager = new HttpManager(MaxNumberEventPerBatch, MaxConnections, MaxRequestRetriesBeforeBackoff, {\r\n                    requeue: _requeueEvents,\r\n                    send: _sendingEvent,\r\n                    sent: _eventsSentEvent,\r\n                    drop: _eventsDropped,\r\n                    rspFail: _eventsResponseFail,\r\n                    oth: _otherEvent\r\n                });\r\n                _initializeProfiles();\r\n                _clearQueues();\r\n                _setAutoLimits();\r\n            }\r\n            function _createTimer(theTimerFunc, timeOut) {\r\n                // If the transmission is backed off make the timer at least 1 sec to allow for back off.\r\n                if (timeOut === 0 && _currentBackoffCount) {\r\n                    timeOut = 1;\r\n                }\r\n                var timerMultiplier = 1000;\r\n                if (_currentBackoffCount) {\r\n                    timerMultiplier = retryPolicyGetMillisToBackoffForRetry(_currentBackoffCount - 1);\r\n                }\r\n                return _timeoutWrapper.set(theTimerFunc, timeOut * timerMultiplier);\r\n            }\r\n            function _clearScheduledTimer() {\r\n                if (_scheduledTimer !== null) {\r\n                    _scheduledTimer.cancel();\r\n                    _scheduledTimer = null;\r\n                    _timerCount = 0;\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            // Try to send all queued events using beacons if available\r\n            function _releaseAllQueues(sendType, sendReason) {\r\n                _clearScheduledTimer();\r\n                // Cancel all flush callbacks\r\n                if (_flushCallbackTimer) {\r\n                    _flushCallbackTimer.cancel();\r\n                    _flushCallbackTimer = null;\r\n                }\r\n                if (!_paused) {\r\n                    // Queue all the remaining requests to be sent. The requests will be sent using HTML5 Beacons if they are available.\r\n                    _sendEventsForLatencyAndAbove(1 /* EventLatencyValue.Normal */, sendType, sendReason);\r\n                }\r\n            }\r\n            /**\r\n             * Add empty queues for all latencies in the inbound queues map. This is called\r\n             * when Transmission Manager is being flushed. This ensures that new events added\r\n             * after flush are stored separately till we flush the current events.\r\n             */\r\n            function _clearQueues() {\r\n                _batchQueues[4 /* EventLatencyValue.Immediate */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n                _batchQueues[3 /* EventLatencyValue.RealTime */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n                _batchQueues[2 /* EventLatencyValue.CostDeferred */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n                _batchQueues[1 /* EventLatencyValue.Normal */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n            }\r\n            function _getEventBatch(iKey, latency, create) {\r\n                var batchQueue = _batchQueues[latency];\r\n                if (!batchQueue) {\r\n                    latency = 1 /* EventLatencyValue.Normal */;\r\n                    batchQueue = _batchQueues[latency];\r\n                }\r\n                var eventBatch = batchQueue.iKeyMap[iKey];\r\n                if (!eventBatch && create) {\r\n                    eventBatch = EventBatch.create(iKey);\r\n                    batchQueue.batches[_DYN_PUSH /* @min:%2epush */](eventBatch);\r\n                    batchQueue.iKeyMap[iKey] = eventBatch;\r\n                }\r\n                return eventBatch;\r\n            }\r\n            function _performAutoFlush(isAsync, doFlush) {\r\n                // Only perform the auto flush check if the httpManager has an idle connection and we are not in a backoff situation\r\n                if (_httpManager[_DYN_CAN_SEND_REQUEST /* @min:%2ecanSendRequest */]() && !_currentBackoffCount) {\r\n                    if (_autoFlushEventsLimit > 0 && _queueSize > _autoFlushEventsLimit) {\r\n                        // Force flushing\r\n                        doFlush = true;\r\n                    }\r\n                    if (doFlush && _flushCallbackTimer == null) {\r\n                        // Auto flush the queue, adding a callback to avoid the creation of a promise\r\n                        _self.flush(isAsync, function () { }, 20 /* SendRequestReason.MaxQueuedEvents */);\r\n                    }\r\n                }\r\n            }\r\n            function _addEventToProperQueue(event, append) {\r\n                // v8 performance optimization for iterating over the keys\r\n                if (_optimizeObject) {\r\n                    event = optimizeObject(event);\r\n                }\r\n                var latency = event[_DYN_LATENCY /* @min:%2elatency */];\r\n                var eventBatch = _getEventBatch(event[_DYN_I_KEY /* @min:%2eiKey */], latency, true);\r\n                if (eventBatch.addEvent(event)) {\r\n                    if (latency !== 4 /* EventLatencyValue.Immediate */) {\r\n                        _queueSize++;\r\n                        // Check for auto flushing based on total events in the queue, but not for requeued or retry events\r\n                        if (append && event[_DYN_SEND_ATTEMPT /* @min:%2esendAttempt */] === 0) {\r\n                            // Force the flushing of the batch if the batch (specific iKey / latency combination) reaches it's auto flush limit\r\n                            _performAutoFlush(!event.sync, _autoFlushBatchLimit > 0 && eventBatch[_DYN_COUNT /* @min:%2ecount */]() >= _autoFlushBatchLimit);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Direct events don't need auto flushing as they are scheduled (by default) for immediate delivery\r\n                        _immediateQueueSize++;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _dropEventWithLatencyOrLess(iKey, latency, currentLatency, dropNumber) {\r\n                while (currentLatency <= latency) {\r\n                    var eventBatch = _getEventBatch(iKey, latency, true);\r\n                    if (eventBatch && eventBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                        // Dropped oldest events from lowest possible latency\r\n                        var droppedEvents = eventBatch[_DYN_SPLIT /* @min:%2esplit */](0, dropNumber);\r\n                        var droppedCount = droppedEvents[_DYN_COUNT /* @min:%2ecount */]();\r\n                        if (droppedCount > 0) {\r\n                            if (currentLatency === 4 /* EventLatencyValue.Immediate */) {\r\n                                _immediateQueueSize -= droppedCount;\r\n                            }\r\n                            else {\r\n                                _queueSize -= droppedCount;\r\n                            }\r\n                            _notifyBatchEvents(strEventsDiscarded, [droppedEvents], EventsDiscardedReason.QueueFull);\r\n                            return true;\r\n                        }\r\n                    }\r\n                    currentLatency++;\r\n                }\r\n                // Unable to drop any events -- lets just make sure the queue counts are correct to avoid exhaustion\r\n                _resetQueueCounts();\r\n                return false;\r\n            }\r\n            /**\r\n             * Internal helper to reset the queue counts, used as a backstop to avoid future queue exhaustion errors\r\n             * that might occur because of counting issues.\r\n             */\r\n            function _resetQueueCounts() {\r\n                var immediateQueue = 0;\r\n                var normalQueue = 0;\r\n                var _loop_1 = function (latency) {\r\n                    var batchQueue = _batchQueues[latency];\r\n                    if (batchQueue && batchQueue[_DYN_BATCHES /* @min:%2ebatches */]) {\r\n                        arrForEach(batchQueue[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                            if (latency === 4 /* EventLatencyValue.Immediate */) {\r\n                                immediateQueue += theBatch[_DYN_COUNT /* @min:%2ecount */]();\r\n                            }\r\n                            else {\r\n                                normalQueue += theBatch[_DYN_COUNT /* @min:%2ecount */]();\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                for (var latency = 1 /* EventLatencyValue.Normal */; latency <= 4 /* EventLatencyValue.Immediate */; latency++) {\r\n                    _loop_1(latency);\r\n                }\r\n                _queueSize = normalQueue;\r\n                _immediateQueueSize = immediateQueue;\r\n            }\r\n            function _queueBatches(latency, sendType, sendReason) {\r\n                var eventsQueued = false;\r\n                var isAsync = sendType === 0 /* EventSendType.Batched */;\r\n                // Only queue batches (to the HttpManager) if this is a sync request or the httpManager has an idle connection\r\n                // Thus keeping the events within the PostChannel until the HttpManager has a connection available\r\n                // This is so we can drop \"old\" events if the queue is getting full because we can't successfully send events\r\n                if (!isAsync || _httpManager[_DYN_CAN_SEND_REQUEST /* @min:%2ecanSendRequest */]()) {\r\n                    doPerf(_self.core, function () { return \"PostChannel._queueBatches\"; }, function () {\r\n                        var droppedEvents = [];\r\n                        var latencyToProcess = 4 /* EventLatencyValue.Immediate */;\r\n                        while (latencyToProcess >= latency) {\r\n                            var batchQueue = _batchQueues[latencyToProcess];\r\n                            if (batchQueue && batchQueue.batches && batchQueue.batches[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                                arrForEach(batchQueue[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                                    // Add the batch to the http manager to send the requests\r\n                                    if (!_httpManager.addBatch(theBatch)) {\r\n                                        // The events from this iKey are being dropped (killed)\r\n                                        droppedEvents = droppedEvents[_DYN_CONCAT /* @min:%2econcat */](theBatch[_DYN_EVENTS /* @min:%2eevents */]());\r\n                                    }\r\n                                    else {\r\n                                        eventsQueued = eventsQueued || (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0);\r\n                                    }\r\n                                    if (latencyToProcess === 4 /* EventLatencyValue.Immediate */) {\r\n                                        _immediateQueueSize -= theBatch[_DYN_COUNT /* @min:%2ecount */]();\r\n                                    }\r\n                                    else {\r\n                                        _queueSize -= theBatch[_DYN_COUNT /* @min:%2ecount */]();\r\n                                    }\r\n                                });\r\n                                // Remove all batches from this Queue\r\n                                batchQueue[_DYN_BATCHES /* @min:%2ebatches */] = [];\r\n                                batchQueue.iKeyMap = {};\r\n                            }\r\n                            latencyToProcess--;\r\n                        }\r\n                        if (droppedEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                            _notifyEvents(strEventsDiscarded, droppedEvents, EventsDiscardedReason.KillSwitch);\r\n                        }\r\n                        if (eventsQueued && _delayedBatchSendLatency >= latency) {\r\n                            // We have queued events at the same level as the delayed values so clear the setting\r\n                            _delayedBatchSendLatency = -1;\r\n                            _delayedBatchReason = 0 /* SendRequestReason.Undefined */;\r\n                        }\r\n                    }, function () { return ({ latency: latency, sendType: sendType, sendReason: sendReason }); }, !isAsync);\r\n                }\r\n                else {\r\n                    // remember the min latency so that we can re-trigger later\r\n                    _delayedBatchSendLatency = _delayedBatchSendLatency >= 0 ? Math.min(_delayedBatchSendLatency, latency) : latency;\r\n                    _delayedBatchReason = Math.max(_delayedBatchReason, sendReason);\r\n                }\r\n                return eventsQueued;\r\n            }\r\n            /**\r\n             * This is the callback method is called as part of the manual flushing process.\r\n             * @param callback\r\n             * @param sendReason\r\n             */\r\n            function _flushImpl(callback, sendReason) {\r\n                // Add any additional queued events and cause all queued events to be sent asynchronously\r\n                _sendEventsForLatencyAndAbove(1 /* EventLatencyValue.Normal */, 0 /* EventSendType.Batched */, sendReason);\r\n                // All events (should) have been queue -- lets just make sure the queue counts are correct to avoid queue exhaustion (previous bug #9685112)\r\n                _resetQueueCounts();\r\n                _waitForIdleManager(function () {\r\n                    // Only called AFTER the httpManager does not have any outstanding requests\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                    if (_flushCallbackQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _flushCallbackTimer = _createTimer(function () {\r\n                            _flushCallbackTimer = null;\r\n                            _flushImpl(_flushCallbackQueue.shift(), sendReason);\r\n                        }, 0);\r\n                    }\r\n                    else {\r\n                        // No more flush requests\r\n                        _flushCallbackTimer = null;\r\n                        // Restart the normal timer schedule\r\n                        _scheduleTimer();\r\n                    }\r\n                });\r\n            }\r\n            function _waitForIdleManager(callback) {\r\n                if (_httpManager[_DYN_IS_COMPLETELY_IDLE /* @min:%2eisCompletelyIdle */]()) {\r\n                    callback();\r\n                }\r\n                else {\r\n                    _flushCallbackTimer = _createTimer(function () {\r\n                        _flushCallbackTimer = null;\r\n                        _waitForIdleManager(callback);\r\n                    }, FlushCheckTimer);\r\n                }\r\n            }\r\n            /**\r\n             * Resets the transmit profiles to the default profiles of Real Time, Near Real Time\r\n             * and Best Effort. This removes all the custom profiles that were loaded.\r\n             */\r\n            function _resetTransmitProfiles() {\r\n                _clearScheduledTimer();\r\n                _initializeProfiles();\r\n                _currentProfile = RT_PROFILE;\r\n                _scheduleTimer();\r\n            }\r\n            function _initializeProfiles() {\r\n                _profiles = {};\r\n                _profiles[RT_PROFILE] = [2, 1, 0];\r\n                _profiles[NRT_PROFILE] = [6, 3, 0];\r\n                _profiles[BE_PROFILE] = [18, 9, 0];\r\n            }\r\n            /**\r\n             * The notification handler for requeue events\r\n             * @ignore\r\n             */\r\n            function _requeueEvents(batches, reason) {\r\n                var droppedEvents = [];\r\n                var maxSendAttempts = _maxEventSendAttempts;\r\n                if (_isPageUnloadTriggered) {\r\n                    // If a page unlaod has been triggered reduce the number of times we try to \"retry\"\r\n                    maxSendAttempts = _maxUnloadEventSendAttempts;\r\n                }\r\n                arrForEach(batches, function (theBatch) {\r\n                    if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                        arrForEach(theBatch[_DYN_EVENTS /* @min:%2eevents */](), function (theEvent) {\r\n                            if (theEvent) {\r\n                                // Check if the request being added back is for a sync event in which case mark it no longer a sync event\r\n                                if (theEvent[_DYN_SYNC /* @min:%2esync */]) {\r\n                                    theEvent[_DYN_LATENCY /* @min:%2elatency */] = 4 /* EventLatencyValue.Immediate */;\r\n                                    theEvent[_DYN_SYNC /* @min:%2esync */] = false;\r\n                                }\r\n                                if (theEvent[_DYN_SEND_ATTEMPT /* @min:%2esendAttempt */] < maxSendAttempts) {\r\n                                    // Reset the event timings\r\n                                    setProcessTelemetryTimings(theEvent, _self[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                                    _addEventToQueues(theEvent, false);\r\n                                }\r\n                                else {\r\n                                    droppedEvents[_DYN_PUSH /* @min:%2epush */](theEvent);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                if (droppedEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _notifyEvents(strEventsDiscarded, droppedEvents, EventsDiscardedReason.NonRetryableStatus);\r\n                }\r\n                if (_isPageUnloadTriggered) {\r\n                    // Unload event has been received so we need to try and flush new events\r\n                    _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                }\r\n            }\r\n            function _callNotification(evtName, theArgs) {\r\n                var manager = (_notificationManager || {});\r\n                var notifyFunc = manager[evtName];\r\n                if (notifyFunc) {\r\n                    try {\r\n                        notifyFunc.apply(manager, theArgs);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self.diagLog(), 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, evtName + \" notification failed: \" + e);\r\n                    }\r\n                }\r\n            }\r\n            function _notifyEvents(evtName, theEvents) {\r\n                var extraArgs = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    extraArgs[_i - 2] = arguments[_i];\r\n                }\r\n                if (theEvents && theEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _callNotification(evtName, [theEvents][_DYN_CONCAT /* @min:%2econcat */](extraArgs));\r\n                }\r\n            }\r\n            function _notifyBatchEvents(evtName, batches) {\r\n                var extraArgs = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    extraArgs[_i - 2] = arguments[_i];\r\n                }\r\n                if (batches && batches[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(batches, function (theBatch) {\r\n                        if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                            _callNotification(evtName, [theBatch.events()][_DYN_CONCAT /* @min:%2econcat */](extraArgs));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            /**\r\n             * The notification handler for when batches are about to be sent\r\n             * @ignore\r\n             */\r\n            function _sendingEvent(batches, reason, isSyncRequest) {\r\n                if (batches && batches[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _callNotification(\"eventsSendRequest\", [(reason >= 1000 /* EventBatchNotificationReason.SendingUndefined */ && reason <= 1999 /* EventBatchNotificationReason.SendingEventMax */ ?\r\n                            reason - 1000 /* EventBatchNotificationReason.SendingUndefined */ :\r\n                            0 /* SendRequestReason.Undefined */), isSyncRequest !== true]);\r\n                }\r\n            }\r\n            /**\r\n             * This event represents that a batch of events have been successfully sent and a response received\r\n             * @param batches The notification handler for when the batches have been successfully sent\r\n             * @param reason For this event the reason will always be EventBatchNotificationReason.Complete\r\n             */\r\n            function _eventsSentEvent(batches, reason) {\r\n                _notifyBatchEvents(\"eventsSent\", batches, reason);\r\n                // Try and schedule the processing timer if we have events\r\n                _scheduleTimer();\r\n            }\r\n            function _eventsDropped(batches, reason) {\r\n                _notifyBatchEvents(strEventsDiscarded, batches, (reason >= 8000 /* EventBatchNotificationReason.EventsDropped */ && reason <= 8999 /* EventBatchNotificationReason.EventsDroppedMax */ ?\r\n                    reason - 8000 /* EventBatchNotificationReason.EventsDropped */ :\r\n                    EventsDiscardedReason.Unknown));\r\n            }\r\n            function _eventsResponseFail(batches) {\r\n                _notifyBatchEvents(strEventsDiscarded, batches, EventsDiscardedReason.NonRetryableStatus);\r\n                // Try and schedule the processing timer if we have events\r\n                _scheduleTimer();\r\n            }\r\n            function _otherEvent(batches, reason) {\r\n                _notifyBatchEvents(strEventsDiscarded, batches, EventsDiscardedReason.Unknown);\r\n                // Try and schedule the processing timer if we have events\r\n                _scheduleTimer();\r\n            }\r\n            function _setAutoLimits() {\r\n                if (!_disableAutoBatchFlushLimit) {\r\n                    _autoFlushBatchLimit = Math.max(MaxNumberEventPerBatch * (MaxConnections + 1), _queueSizeLimit / 6);\r\n                }\r\n                else {\r\n                    _autoFlushBatchLimit = 0;\r\n                }\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for PostChannel.prototype.initialize.\r\n// Removed Stub for PostChannel.prototype.processTelemetry.\r\n// Removed Stub for PostChannel.prototype.setEventQueueLimits.\r\n// Removed Stub for PostChannel.prototype.pause.\r\n// Removed Stub for PostChannel.prototype.resume.\r\n// Removed Stub for PostChannel.prototype.addResponseHandler.\r\n// Removed Stub for PostChannel.prototype.flush.\r\n// Removed Stub for PostChannel.prototype.setMsaAuthTicket.\r\n// Removed Stub for PostChannel.prototype.setAuthPluginHeader.\r\n// Removed Stub for PostChannel.prototype.removeAuthPluginHeader.\r\n// Removed Stub for PostChannel.prototype.hasEvents.\r\n// Removed Stub for PostChannel.prototype._loadTransmitProfiles.\r\n// Removed Stub for PostChannel.prototype._setTransmitProfile.\r\n// Removed Stub for PostChannel.prototype._backOffTransmission.\r\n// Removed Stub for PostChannel.prototype._clearBackOff.\r\n// Removed Stub for PostChannel.prototype.getOfflineSupport.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PostChannel.__ieDyn=1;\n\n    return PostChannel;\r\n}(BaseTelemetryPlugin));\r\nexport { PostChannel };\r\n//# sourceMappingURL=PostChannel.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nvar _maxHooks;\r\nvar _hookAddMonitor;\r\n/**\r\n * Test hook for setting the maximum number of unload hooks and calling a monitor function when the hooks are added or removed\r\n * This allows for automatic test failure when the maximum number of unload hooks is exceeded\r\n * @param maxHooks - The maximum number of unload hooks\r\n * @param addMonitor - The monitor function to call when hooks are added or removed\r\n */\r\nexport function _testHookMaxUnloadHooksCb(maxHooks, addMonitor) {\r\n    _maxHooks = maxHooks;\r\n    _hookAddMonitor = addMonitor;\r\n}\r\n/**\r\n * Create a IUnloadHookContainer which can be used to remember unload hook functions to be executed during the component unloading\r\n * process.\r\n * @returns A new IUnloadHookContainer instance\r\n */\r\nexport function createUnloadHookContainer() {\r\n    var _hooks = [];\r\n    function _doUnload(logger) {\r\n        var oldHooks = _hooks;\r\n        _hooks = [];\r\n        // Remove all registered unload hooks\r\n        arrForEach(oldHooks, function (fn) {\r\n            // allow either rm or remove callback function\r\n            try {\r\n                (fn.rm || fn.remove).call(fn);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unloading:\" + dumpObj(e));\r\n            }\r\n        });\r\n        if (_maxHooks && oldHooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n            _hookAddMonitor ? _hookAddMonitor(\"doUnload\", oldHooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n        }\r\n    }\r\n    function _addHook(hooks) {\r\n        if (hooks) {\r\n            arrAppend(_hooks, hooks);\r\n            if (_maxHooks && _hooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n                _hookAddMonitor ? _hookAddMonitor(\"Add\", _hooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        run: _doUnload,\r\n        add: _addHook\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHookContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isArray, isPlainObject, objForEachKey, symbolFor, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\n// Using Symbol.for so that if the same symbol was already created it would be returned\r\n// To handle multiple instances using potentially different versions we are not using\r\n// createUniqueNamespace()\r\nexport var CFG_HANDLER_LINK = symbolFor(\"[[ai_dynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects / arrays with if they should not be converted\r\n */\r\nvar BLOCK_DYNAMIC = symbolFor(\"[[ai_blkDynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects to indicate that when included into the configuration that\r\n * they should be converted into a trackable dynamic object.\r\n */\r\nvar FORCE_DYNAMIC = symbolFor(\"[[ai_frcDynCfg_1]]\");\r\nexport function _cfgDeepCopy(source) {\r\n    if (source) {\r\n        var target_1;\r\n        if (isArray(source)) {\r\n            target_1 = [];\r\n            target_1[_DYN_LENGTH /* @min:%2elength */] = source[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(source)) {\r\n            target_1 = {};\r\n        }\r\n        if (target_1) {\r\n            // Copying index values by property name as the extensionConfig can be an array or object\r\n            objForEachKey(source, function (key, value) {\r\n                // Perform a deep copy of the object\r\n                target_1[key] = _cfgDeepCopy(value);\r\n            });\r\n            return target_1;\r\n        }\r\n    }\r\n    return source;\r\n}\r\n/**\r\n * @internal\r\n * Get the dynamic config handler if the value is already dynamic\r\n * @param value\r\n * @returns\r\n */\r\nexport function getDynamicConfigHandler(value) {\r\n    if (value) {\r\n        var handler = value[CFG_HANDLER_LINK] || value;\r\n        if (handler.cfg && (handler.cfg === value || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n            return handler;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Mark the provided value so that if it's included into the configuration it will NOT have\r\n * its properties converted into a dynamic (reactive) object. If the object is not a plain object\r\n * or an array (ie. a class) this function has not affect as only Objects and Arrays are converted\r\n * into dynamic objects in the dynamic configuration.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * You should only need to use this function, if you are creating dynamic \"classes\" from objects\r\n * which confirm to the require interface. A common case for this is during unit testing where it's\r\n * easier to create mock extensions.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed\r\n *\r\n * @example\r\n * ```ts\r\n * // This is a valid \"extension\", but it is technically an object\r\n * // So when included in the config.extensions it WILL be cloned and then\r\n * // converted into a dynamic object, where all of its properties will become\r\n * // get/set object properties and will be tracked. While this WILL still\r\n * // function, when attempt to use a mocking framework on top of this the\r\n * // functions are now technically get accessors which return a function\r\n * // and this can cause some mocking frameworks to fail.\r\n * let mockChannel = {\r\n *      pause: () => { },\r\n*      resume: () => { },\r\n*      teardown: () => { },\r\n*      flush: (async: any, callBack: any) => { },\r\n*      processTelemetry: (env: any) => { },\r\n*      setNextPlugin: (next: any) => { },\r\n*      initialize: (config: any, core: any, extensions: any) => { },\r\n*      identifier: \"testChannel\",\r\n*      priority: 1003\r\n* };\r\n * ```\r\n * @param value - The object that you want to block from being converted into a\r\n * trackable dynamic object\r\n * @returns The original value\r\n */\r\nexport function blockDynamicConversion(value) {\r\n    if (value && (isPlainObject(value) || isArray(value))) {\r\n        try {\r\n            value[BLOCK_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is the reverse case of {@link blockDynamicConversion} in that this will tag an\r\n * object to indicate that it should always be converted into a dynamic trackable object\r\n * even when not an object or array. So all properties of this object will become\r\n * get / set accessor functions.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed.\r\n * @param value - The object that should be tagged and converted if included into a dynamic\r\n * configuration.\r\n * @returns The original value\r\n */\r\nexport function forceDynamicConversion(value) {\r\n    if (value) {\r\n        try {\r\n            value[FORCE_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @internal\r\n * @ignore\r\n * Helper function to check whether an object can or should be converted into a dynamic\r\n * object.\r\n * @param value - The object to check whether it should be converted\r\n * @returns `true` if the value should be converted otherwise `false`.\r\n */\r\nexport function _canMakeDynamic(getFunc, state, value) {\r\n    var result = false;\r\n    // Object must exist and be truthy\r\n    if (value && !getFunc[state.blkVal]) {\r\n        // Tagged as always convert\r\n        result = value[FORCE_DYNAMIC];\r\n        // Check that it's not explicitly tagged as blocked\r\n        if (!result && !value[BLOCK_DYNAMIC]) {\r\n            // Only convert plain objects or arrays by default\r\n            result = isPlainObject(value) || isArray(value);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Throws an invalid access exception\r\n * @param message - The message to include in the exception\r\n */\r\nexport function throwInvalidAccess(message) {\r\n    throwTypeError(\"InvalidAccess:\" + message);\r\n}\r\n//# sourceMappingURL=DynamicSupport.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ITask<T> {\n\t(): T;\n}\n\nexport class Delayer<T> {\n\n\tpublic defaultDelay: number;\n\tprivate timeout: any; // Timer\n\tprivate completionPromise: Promise<T> | null;\n\tprivate onSuccess: ((value: T | PromiseLike<T> | undefined) => void) | null;\n\tprivate task: ITask<T> | null;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.defaultDelay = defaultDelay;\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.onSuccess = null;\n\t\tthis.task = null;\n\t}\n\n\tpublic trigger(task: ITask<T>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tif (delay >= 0) {\n\t\t\tthis.cancelTimeout();\n\t\t}\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise<T | undefined>((resolve) => {\n\t\t\t\tthis.onSuccess = resolve;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.onSuccess = null;\n\t\t\t\tconst result = this.task!();\n\t\t\t\tthis.task = null;\n\t\t\t\treturn result;\n\t\t\t});\n\t\t}\n\n\t\tif (delay >= 0 || this.timeout === null) {\n\t\t\tthis.timeout = setTimeout(() => {\n\t\t\t\tthis.timeout = null;\n\t\t\t\tthis.onSuccess!(undefined);\n\t\t\t}, delay >= 0 ? delay : this.defaultDelay);\n\t\t}\n\n\t\treturn this.completionPromise;\n\t}\n\n\tpublic forceDelivery(): Promise<T> | null {\n\t\tif (!this.completionPromise) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.cancelTimeout();\n\t\tconst result = this.completionPromise;\n\t\tthis.onSuccess!(undefined);\n\t\treturn result;\n\t}\n\n\tpublic isTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tpublic cancel(): void {\n\t\tthis.cancelTimeout();\n\t\tthis.completionPromise = null;\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n}\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, createCustomError, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nvar aggregationErrorType;\r\n/**\r\n * Throws an Aggregation Error which includes all of the errors that led to this error occurring\r\n * @param message - The message describing the aggregation error (the sourceError details are added to this)\r\n * @param sourceErrors - An array of the errors that caused this situation\r\n */\r\nexport function throwAggregationError(message, sourceErrors) {\r\n    if (!aggregationErrorType) {\r\n        aggregationErrorType = createCustomError(\"AggregationError\", function (self, args) {\r\n            if (args[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                // Save the provided errors\r\n                self.errors = args[1];\r\n            }\r\n        });\r\n    }\r\n    var theMessage = message || \"One or more errors occurred.\";\r\n    arrForEach(sourceErrors, function (srcError, idx) {\r\n        theMessage += \"\\n\".concat(idx, \" > \").concat(dumpObj(srcError));\r\n    });\r\n    throw new aggregationErrorType(theMessage, sourceErrors || []);\r\n}\r\n//# sourceMappingURL=AggregationError.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, isArray, objDefine, objDefineProp, objForEachKey, objGetOwnPropertyDescriptor } from \"@nevware21/ts-utils\";\r\nimport { UNDEFINED_VALUE } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_APPLY, _DYN_HDLR, _DYN_LOGGER, _DYN_PUSH, _DYN_SPLICE, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nimport { CFG_HANDLER_LINK, _canMakeDynamic, blockDynamicConversion, throwInvalidAccess } from \"./DynamicSupport\";\r\nvar arrayMethodsToPatch = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"splice\"\r\n];\r\nexport var _throwDynamicError = function (logger, name, desc, e) {\r\n    logger && logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](3 /* eLoggingSeverity.DEBUG */, 108 /* _eInternalMessageId.DynamicConfigException */, \"\".concat(desc, \" [\").concat(name, \"] failed - \") + dumpObj(e));\r\n};\r\nfunction _patchArray(state, target, name) {\r\n    if (isArray(target)) {\r\n        // Monkey Patch the methods that might change the array\r\n        arrForEach(arrayMethodsToPatch, function (method) {\r\n            var orgMethod = target[method];\r\n            target[method] = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var result = orgMethod[_DYN_APPLY /* @min:%2eapply */](this, args);\r\n                // items may be added, removed or moved so need to make some new dynamic properties\r\n                _makeDynamicObject(state, target, name, \"Patching\");\r\n                return result;\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction _getOwnPropGetter(target, name) {\r\n    var propDesc = objGetOwnPropertyDescriptor(target, name);\r\n    return propDesc && propDesc.get;\r\n}\r\nfunction _createDynamicProperty(state, theConfig, name, value) {\r\n    // Does not appear to be dynamic so lets make it so\r\n    var detail = {\r\n        n: name,\r\n        h: [],\r\n        trk: function (handler) {\r\n            if (handler && handler.fn) {\r\n                if (arrIndexOf(detail.h, handler) === -1) {\r\n                    // Add this handler to the collection that should be notified when the value changes\r\n                    detail.h[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n                state.trk(handler, detail);\r\n            }\r\n        },\r\n        clr: function (handler) {\r\n            var idx = arrIndexOf(detail.h, handler);\r\n            if (idx !== -1) {\r\n                detail.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n            }\r\n        }\r\n    };\r\n    // Flag to optimize lookup response time by avoiding additional function calls\r\n    var checkDynamic = true;\r\n    var isObjectOrArray = false;\r\n    function _getProperty() {\r\n        if (checkDynamic) {\r\n            isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n            // Make sure that if it's an object that we make it dynamic\r\n            if (value && !value[CFG_HANDLER_LINK] && isObjectOrArray) {\r\n                // It doesn't look like it's already dynamic so lets make sure it's converted the object into a dynamic Config as well\r\n                value = _makeDynamicObject(state, value, name, \"Converting\");\r\n            }\r\n            // If it needed to be converted it now has been\r\n            checkDynamic = false;\r\n        }\r\n        // If there is an active handler then add it to the tracking set of handlers\r\n        var activeHandler = state.act;\r\n        if (activeHandler) {\r\n            detail.trk(activeHandler);\r\n        }\r\n        return value;\r\n    }\r\n    // Tag this getter as our dynamic property and provide shortcut for notifying a change\r\n    _getProperty[state.prop] = {\r\n        chng: function () {\r\n            state.add(detail);\r\n        }\r\n    };\r\n    function _setProperty(newValue) {\r\n        if (value !== newValue) {\r\n            if (!!_getProperty[state.ro] && !state.upd) {\r\n                // field is marked as readonly so return false\r\n                throwInvalidAccess(\"[\" + name + \"] is read-only:\" + dumpObj(theConfig));\r\n            }\r\n            if (checkDynamic) {\r\n                isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n                checkDynamic = false;\r\n            }\r\n            // The value must be a plain object or an array to enforce the reference (in-place updates)\r\n            var isReferenced = isObjectOrArray && _getProperty[state.rf];\r\n            if (isObjectOrArray) {\r\n                // We are about to replace a plain object or an array\r\n                if (isReferenced) {\r\n                    // Reassign the properties from the current value to the same properties from the newValue\r\n                    // This will set properties not in the newValue to undefined\r\n                    objForEachKey(value, function (key) {\r\n                        value[key] = newValue ? newValue[key] : UNDEFINED_VALUE;\r\n                    });\r\n                    // Now assign / re-assign value with all of the keys from newValue\r\n                    try {\r\n                        objForEachKey(newValue, function (key, theValue) {\r\n                            _setDynamicProperty(state, value, key, theValue);\r\n                        });\r\n                        // Now drop newValue so when we assign value later it keeps the existing reference\r\n                        newValue = value;\r\n                    }\r\n                    catch (e) {\r\n                        // Unable to convert to dynamic property so just leave as non-dynamic\r\n                        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Assigning\", e);\r\n                        // Mark as not an object or array so we don't try and do this again\r\n                        isObjectOrArray = false;\r\n                    }\r\n                }\r\n                else if (value && value[CFG_HANDLER_LINK]) {\r\n                    // As we are replacing the value, if it's already dynamic then we need to notify the listeners\r\n                    // for every property it has already\r\n                    objForEachKey(value, function (key) {\r\n                        // Check if the value is dynamic\r\n                        var getter = _getOwnPropGetter(value, key);\r\n                        if (getter) {\r\n                            // And if it is tell it's listeners that the value has changed\r\n                            var valueState = getter[state.prop];\r\n                            valueState && valueState.chng();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (newValue !== value) {\r\n                var newIsObjectOrArray = newValue && _canMakeDynamic(_getProperty, state, newValue);\r\n                if (!isReferenced && newIsObjectOrArray) {\r\n                    // As the newValue is an object/array lets preemptively make it dynamic\r\n                    newValue = _makeDynamicObject(state, newValue, name, \"Converting\");\r\n                }\r\n                // Now assign the internal \"value\" to the newValue\r\n                value = newValue;\r\n                isObjectOrArray = newIsObjectOrArray;\r\n            }\r\n            // Cause any listeners to be scheduled for notification\r\n            state.add(detail);\r\n        }\r\n    }\r\n    objDefine(theConfig, detail.n, { g: _getProperty, s: _setProperty });\r\n}\r\nexport function _setDynamicProperty(state, target, name, value) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        if (!isDynamic) {\r\n            _createDynamicProperty(state, target, name, value);\r\n        }\r\n        else {\r\n            // Looks like it's already dynamic just assign the new value\r\n            target[name] = value;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _setDynamicPropertyState(state, target, name, flags) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        var inPlace = flags && flags[0 /* _eSetDynamicPropertyFlags.inPlace */];\r\n        var rdOnly = flags && flags[1 /* _eSetDynamicPropertyFlags.readOnly */];\r\n        var blkProp = flags && flags[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */];\r\n        if (!isDynamic) {\r\n            if (blkProp) {\r\n                try {\r\n                    // Attempt to mark the target as blocked from conversion\r\n                    blockDynamicConversion(target);\r\n                }\r\n                catch (e) {\r\n                    _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Blocking\", e);\r\n                }\r\n            }\r\n            try {\r\n                // Make sure it's dynamic so that we can tag the property as per the state\r\n                _setDynamicProperty(state, target, name, target[name]);\r\n                getter = _getOwnPropGetter(target, name);\r\n            }\r\n            catch (e) {\r\n                // Unable to convert to dynamic property so just leave as non-dynamic\r\n                _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"State\", e);\r\n            }\r\n        }\r\n        // Assign the optional flags if true\r\n        if (inPlace) {\r\n            getter[state.rf] = inPlace;\r\n        }\r\n        if (rdOnly) {\r\n            getter[state.ro] = rdOnly;\r\n        }\r\n        if (blkProp) {\r\n            getter[state.blkVal] = true;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _makeDynamicObject(state, target, name, desc) {\r\n    try {\r\n        // Assign target with new value properties (converting into dynamic properties in the process)\r\n        objForEachKey(target, function (key, value) {\r\n            // Assign and/or make the property dynamic\r\n            _setDynamicProperty(state, target, key, value);\r\n        });\r\n        if (!target[CFG_HANDLER_LINK]) {\r\n            // Link the config back to the dynamic config details\r\n            objDefineProp(target, CFG_HANDLER_LINK, {\r\n                get: function () {\r\n                    return state[_DYN_HDLR /* @min:%2ehdlr */];\r\n                }\r\n            });\r\n            _patchArray(state, target, name);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Unable to convert to dynamic property so just leave as non-dynamic\r\n        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, desc, e);\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=DynamicProperty.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, newSymbol, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { throwAggregationError } from \"../JavaScriptSDK/AggregationError\";\r\nimport { _DYN_BLK_VAL, _DYN_CANCEL, _DYN_HDLR, _DYN_LENGTH, _DYN_LOGGER, _DYN_NOTIFY, _DYN_PUSH, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nvar symPrefix = \"[[ai_\";\r\nvar symPostfix = \"]]\";\r\nexport function _createState(cfgHandler) {\r\n    var _a;\r\n    var dynamicPropertySymbol = newSymbol(symPrefix + \"get\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReadOnly = newSymbol(symPrefix + \"ro\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReferenced = newSymbol(symPrefix + \"rf\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyBlockValue = newSymbol(symPrefix + \"blkVal\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyDetail = newSymbol(symPrefix + \"dtl\" + cfgHandler.uid + symPostfix);\r\n    var _waitingHandlers = null;\r\n    var _watcherTimer = null;\r\n    var theState;\r\n    function _useHandler(activeHandler, callback) {\r\n        var prevWatcher = theState.act;\r\n        try {\r\n            theState.act = activeHandler;\r\n            if (activeHandler && activeHandler[dynamicPropertyDetail]) {\r\n                // Clear out the previously tracked details for this handler, so that access are re-evaluated\r\n                arrForEach(activeHandler[dynamicPropertyDetail], function (detail) {\r\n                    detail.clr(activeHandler);\r\n                });\r\n                activeHandler[dynamicPropertyDetail] = [];\r\n            }\r\n            callback({\r\n                cfg: cfgHandler.cfg,\r\n                set: cfgHandler.set.bind(cfgHandler),\r\n                setDf: cfgHandler[_DYN_SET_DF /* @min:%2esetDf */].bind(cfgHandler),\r\n                ref: cfgHandler.ref.bind(cfgHandler),\r\n                rdOnly: cfgHandler[_DYN_RD_ONLY /* @min:%2erdOnly */].bind(cfgHandler)\r\n            });\r\n        }\r\n        catch (e) {\r\n            var logger = cfgHandler[_DYN_LOGGER /* @min:%2elogger */];\r\n            if (logger) {\r\n                // Don't let one individual failure break everyone\r\n                logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](1 /* eLoggingSeverity.CRITICAL */, 107 /* _eInternalMessageId.ConfigWatcherException */, dumpObj(e));\r\n            }\r\n            // Re-throw the exception so that any true \"error\" is reported back to the called\r\n            throw e;\r\n        }\r\n        finally {\r\n            theState.act = prevWatcher || null;\r\n        }\r\n    }\r\n    function _notifyWatchers() {\r\n        if (_waitingHandlers) {\r\n            var notifyHandlers = _waitingHandlers;\r\n            _waitingHandlers = null;\r\n            // Stop any timer as we are running them now anyway\r\n            _watcherTimer && _watcherTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n            _watcherTimer = null;\r\n            var watcherFailures_1 = [];\r\n            // Now run the handlers\r\n            arrForEach(notifyHandlers, function (handler) {\r\n                if (handler) {\r\n                    if (handler[dynamicPropertyDetail]) {\r\n                        arrForEach(handler[dynamicPropertyDetail], function (detail) {\r\n                            // Clear out this handler from  previously tracked details, so that access are re-evaluated\r\n                            detail.clr(handler);\r\n                        });\r\n                        handler[dynamicPropertyDetail] = null;\r\n                    }\r\n                    // The handler may have self removed as part of another handler so re-check\r\n                    if (handler.fn) {\r\n                        try {\r\n                            _useHandler(handler, handler.fn);\r\n                        }\r\n                        catch (e) {\r\n                            // Don't let a single failing watcher cause other watches to fail\r\n                            watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            // During notification we may have had additional updates -- so notify those updates as well\r\n            if (_waitingHandlers) {\r\n                try {\r\n                    _notifyWatchers();\r\n                }\r\n                catch (e) {\r\n                    watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                }\r\n            }\r\n            if (watcherFailures_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                throwAggregationError(\"Watcher error(s): \", watcherFailures_1);\r\n            }\r\n        }\r\n    }\r\n    function _addWatcher(detail) {\r\n        if (detail && detail.h[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            if (!_waitingHandlers) {\r\n                _waitingHandlers = [];\r\n            }\r\n            if (!_watcherTimer) {\r\n                _watcherTimer = scheduleTimeout(function () {\r\n                    _watcherTimer = null;\r\n                    _notifyWatchers();\r\n                }, 0);\r\n            }\r\n            // Add all of the handlers for this detail (if not already present) - using normal for-loop for performance\r\n            for (var idx = 0; idx < detail.h[_DYN_LENGTH /* @min:%2elength */]; idx++) {\r\n                var handler = detail.h[idx];\r\n                // Add this handler to the collection of handlers to re-execute\r\n                if (handler && arrIndexOf(_waitingHandlers, handler) === -1) {\r\n                    _waitingHandlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function _trackHandler(handler, detail) {\r\n        if (handler) {\r\n            var details = handler[dynamicPropertyDetail] = handler[dynamicPropertyDetail] || [];\r\n            if (arrIndexOf(details, detail) === -1) {\r\n                // If this detail is not already listed as tracked then add it so that we re-evaluate it's usage\r\n                details[_DYN_PUSH /* @min:%2epush */](detail);\r\n            }\r\n        }\r\n    }\r\n    theState = (_a = {\r\n            prop: dynamicPropertySymbol,\r\n            ro: dynamicPropertyReadOnly,\r\n            rf: dynamicPropertyReferenced\r\n        },\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = dynamicPropertyBlockValue,\r\n        _a[_DYN_HDLR /* @min:hdlr */] = cfgHandler,\r\n        _a.add = _addWatcher,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.use = _useHandler,\r\n        _a.trk = _trackHandler,\r\n        _a);\r\n    return theState;\r\n}\r\n//# sourceMappingURL=DynamicState.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj, isUndefined, objDefine, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { createUniqueNamespace } from \"../JavaScriptSDK/DataCacheHelper\";\r\nimport { STR_NOT_DYNAMIC_ERROR } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_LOGGER, _DYN_NOTIFY, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL, _DYN_WARN_TO_CONSOLE, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { _applyDefaultValue } from \"./ConfigDefaults\";\r\nimport { _makeDynamicObject, _setDynamicProperty, _setDynamicPropertyState, _throwDynamicError } from \"./DynamicProperty\";\r\nimport { _createState } from \"./DynamicState\";\r\nimport { CFG_HANDLER_LINK, _cfgDeepCopy, getDynamicConfigHandler, throwInvalidAccess } from \"./DynamicSupport\";\r\n/**\r\n * Identifies a function which will be re-called whenever any of it's accessed configuration values\r\n * change.\r\n * @param configHandler - The callback that will be called for the initial request and then whenever any\r\n * accessed configuration changes are identified.\r\n */\r\nfunction _createAndUseHandler(state, configHandler) {\r\n    var handler = {\r\n        fn: configHandler,\r\n        rm: function () {\r\n            // Clear all references to the handler so it can be garbage collected\r\n            // This will also cause this handler to never get called and eventually removed\r\n            handler.fn = null;\r\n            state = null;\r\n            configHandler = null;\r\n        }\r\n    };\r\n    objDefine(handler, \"toJSON\", { v: function () { return \"WatcherHandler\" + (handler.fn ? \"\" : \"[X]\"); } });\r\n    state.use(handler, configHandler);\r\n    return handler;\r\n}\r\n/**\r\n * Creates the dynamic config handler and associates with the target config as the root object\r\n * @param target - The config that you want to be root of the dynamic config\r\n * @param inPlace - Should the passed config be converted in-place or a new proxy returned\r\n * @returns The existing dynamic handler or a new instance with the provided config values\r\n */\r\nfunction _createDynamicHandler(logger, target, inPlace) {\r\n    var _a;\r\n    var dynamicHandler = getDynamicConfigHandler(target);\r\n    if (dynamicHandler) {\r\n        // The passed config is already dynamic so return it's tracker\r\n        return dynamicHandler;\r\n    }\r\n    var uid = createUniqueNamespace(\"dyncfg\", true);\r\n    var newTarget = (target && inPlace !== false) ? target : _cfgDeepCopy(target);\r\n    var theState;\r\n    function _notifyWatchers() {\r\n        theState[_DYN_NOTIFY /* @min:%2enotify */]();\r\n    }\r\n    function _setValue(target, name, value) {\r\n        try {\r\n            target = _setDynamicProperty(theState, target, name, value);\r\n        }\r\n        catch (e) {\r\n            // Unable to convert to dynamic property so just leave as non-dynamic\r\n            _throwDynamicError(logger, name, \"Setting value\", e);\r\n        }\r\n        return target[name];\r\n    }\r\n    function _watch(configHandler) {\r\n        return _createAndUseHandler(theState, configHandler);\r\n    }\r\n    function _block(configHandler, allowUpdate) {\r\n        theState.use(null, function (details) {\r\n            var prevUpd = theState.upd;\r\n            try {\r\n                if (!isUndefined(allowUpdate)) {\r\n                    theState.upd = allowUpdate;\r\n                }\r\n                configHandler(details);\r\n            }\r\n            finally {\r\n                theState.upd = prevUpd;\r\n            }\r\n        });\r\n    }\r\n    function _ref(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as referenced with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[0 /* _eSetDynamicPropertyFlags.inPlace */] = true, _a))[name];\r\n    }\r\n    function _rdOnly(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[1 /* _eSetDynamicPropertyFlags.readOnly */] = true, _a))[name];\r\n    }\r\n    function _blkPropValue(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */] = true, _a))[name];\r\n    }\r\n    function _applyDefaults(theConfig, defaultValues) {\r\n        if (defaultValues) {\r\n            // Resolve/apply the defaults\r\n            objForEachKey(defaultValues, function (name, value) {\r\n                // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                _applyDefaultValue(cfgHandler, theConfig, name, value);\r\n            });\r\n        }\r\n        return theConfig;\r\n    }\r\n    var cfgHandler = (_a = {\r\n            uid: null,\r\n            cfg: newTarget\r\n        },\r\n        _a[_DYN_LOGGER /* @min:logger */] = logger,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.set = _setValue,\r\n        _a[_DYN_SET_DF /* @min:setDf */] = _applyDefaults,\r\n        _a[_DYN_WATCH /* @min:watch */] = _watch,\r\n        _a.ref = _ref,\r\n        _a[_DYN_RD_ONLY /* @min:rdOnly */] = _rdOnly,\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = _blkPropValue,\r\n        _a._block = _block,\r\n        _a);\r\n    objDefine(cfgHandler, \"uid\", {\r\n        c: false,\r\n        e: false,\r\n        w: false,\r\n        v: uid\r\n    });\r\n    theState = _createState(cfgHandler);\r\n    // Setup tracking for all defined default keys\r\n    _makeDynamicObject(theState, newTarget, \"config\", \"Creating\");\r\n    return cfgHandler;\r\n}\r\n/**\r\n * Log an invalid access message to the console\r\n * @param message\r\n */\r\nfunction _logInvalidAccess(logger, message) {\r\n    if (logger) {\r\n        logger[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n        logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](2 /* eLoggingSeverity.WARNING */, 108 /* _eInternalMessageId.DynamicConfigException */, message);\r\n    }\r\n    else {\r\n        // We don't have a logger so just throw an exception\r\n        throwInvalidAccess(message);\r\n    }\r\n}\r\n/**\r\n * Create or return a dynamic version of the passed config, if it is not already dynamic\r\n * @param config - The config to be converted into a dynamic config\r\n * @param defaultConfig - The default values to apply on the config if the properties don't already exist\r\n * @param inPlace - Should the config be converted in-place into a dynamic config or a new instance returned, defaults to true\r\n * @returns The dynamic config handler for the config (whether new or existing)\r\n */\r\nexport function createDynamicConfig(config, defaultConfig, logger, inPlace) {\r\n    var dynamicHandler = _createDynamicHandler(logger, config || {}, inPlace);\r\n    if (defaultConfig) {\r\n        dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](dynamicHandler.cfg, defaultConfig);\r\n    }\r\n    return dynamicHandler;\r\n}\r\n/**\r\n * Watch and track changes for accesses to the current config, the provided config MUST already be\r\n * a dynamic config or a child accessed via the dynamic config\r\n * @param config\r\n * @param configHandler\r\n * @param logger - The logger instance to use if there is no existing handler\r\n * @returns A watcher handler instance that can be used to remove itself when being unloaded\r\n * @throws TypeError if the provided config is not a dynamic config instance\r\n */\r\nexport function onConfigChange(config, configHandler, logger) {\r\n    var handler = config[CFG_HANDLER_LINK] || config;\r\n    if (handler.cfg && (handler.cfg === config || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n        return handler[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n    }\r\n    _logInvalidAccess(logger, STR_NOT_DYNAMIC_ERROR + dumpObj(config));\r\n    return createDynamicConfig(config, null, logger)[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n}\r\n//# sourceMappingURL=DynamicConfig.js.map","/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar InstantiationStatus;\n(function (InstantiationStatus) {\n    InstantiationStatus[InstantiationStatus[\"NOT_INSTANTIATED\"] = 0] = \"NOT_INSTANTIATED\";\n    InstantiationStatus[InstantiationStatus[\"INSTANTIATING\"] = 1] = \"INSTANTIATING\";\n    InstantiationStatus[InstantiationStatus[\"INSTANTIATED\"] = 2] = \"INSTANTIATED\";\n})(InstantiationStatus || (InstantiationStatus = {}));\nexport class BaseTelemetrySender {\n    constructor(key, clientFactory) {\n        // Whether or not the client has been instantiated\n        this._instantiationStatus = InstantiationStatus.NOT_INSTANTIATED;\n        // Queues used to store events until the sender is ready\n        this._eventQueue = [];\n        this._exceptionQueue = [];\n        this._clientFactory = clientFactory;\n        this._key = key;\n    }\n    /**\n     * Sends the event to the passed in telemetry client\n     * The sender does no telemetry level checks as those are done by the reporter.\n     * @param eventName The name of the event to log\n     * @param data The data contanied in the event\n     */\n    sendEventData(eventName, data) {\n        if (!this._telemetryClient) {\n            if (this._instantiationStatus !== InstantiationStatus.INSTANTIATED) {\n                this._eventQueue.push({ eventName, data });\n            }\n            return;\n        }\n        this._telemetryClient.logEvent(eventName, data);\n    }\n    /**\n     * Sends an exception to the passed in telemetry client\n     * The sender does no telemetry level checks as those are done by the reporter.\n     * @param exception The exception to collect\n     * @param data Data associated with the exception\n     */\n    sendErrorData(exception, data) {\n        if (!this._telemetryClient) {\n            if (this._instantiationStatus !== InstantiationStatus.INSTANTIATED) {\n                this._exceptionQueue.push({ exception, data });\n            }\n            return;\n        }\n        const errorData = { stack: exception.stack, message: exception.message, name: exception.name };\n        if (data) {\n            const errorProperties = data.properties || data;\n            data.properties = { ...errorProperties, ...errorData };\n        }\n        else {\n            data = { properties: errorData };\n        }\n        this._telemetryClient.logEvent(\"unhandlederror\", data);\n    }\n    /**\n     * Flushes the buffered telemetry data\n     */\n    async flush() {\n        return this._telemetryClient?.flush();\n    }\n    async dispose() {\n        if (this._telemetryClient) {\n            await this._telemetryClient.dispose();\n            this._telemetryClient = undefined;\n        }\n        return;\n    }\n    /**\n     * Flushes the queued events that existed before the client was instantiated\n     */\n    _flushQueues() {\n        this._eventQueue.forEach(({ eventName, data }) => this.sendEventData(eventName, data));\n        this._eventQueue = [];\n        this._exceptionQueue.forEach(({ exception, data }) => this.sendErrorData(exception, data));\n        this._exceptionQueue = [];\n    }\n    /**\n     * Instantiates the telemetry client to make the sender \"active\"\n     */\n    instantiateSender() {\n        if (this._instantiationStatus !== InstantiationStatus.NOT_INSTANTIATED) {\n            return;\n        }\n        this._instantiationStatus = InstantiationStatus.INSTANTIATING;\n        // Call the client factory to get the client and then let it know it's instatntiated\n        this._clientFactory(this._key).then(client => {\n            this._telemetryClient = client;\n            this._instantiationStatus = InstantiationStatus.INSTANTIATED;\n            this._flushQueues();\n        }).catch(err => {\n            console.error(err);\n            // If it failed to instntiate, then we don't want to try again.\n            // So we mark it as instantiated. See #94\n            this._instantiationStatus = InstantiationStatus.INSTANTIATED;\n        });\n    }\n}\n//# sourceMappingURL=baseTelemetrySender.js.map","/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nexport class TelemetryUtil {\n    static applyReplacements(data, replacementOptions) {\n        for (const key of Object.keys(data)) {\n            for (const option of replacementOptions) {\n                if (option.lookup.test(key)) {\n                    if (option.replacementString !== undefined) {\n                        data[key] = option.replacementString;\n                    }\n                    else {\n                        delete data[key];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Given a key / connection string checks if it is a valid 1DS key\n     * @param key The key to check if it's a valid 1DS key\n     */\n    static shouldUseOneDataSystemSDK(key) {\n        // Simple to check to ensure the key is the right length and the dashes are in the right spot\n        return (key.length === 74 &&\n            key[32] === \"-\" &&\n            key[41] === \"-\" &&\n            key[46] === \"-\" &&\n            key[51] === \"-\" &&\n            key[56] === \"-\" &&\n            key[69] === \"-\");\n    }\n    // This also includes the common properties which core mixes in\n    // __GDPR__COMMON__ \"common.os\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.platformversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.extname\" : { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.extversion\" : { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodemachineid\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodesessionid\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodeversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.uikind\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.remotename\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.isnewappinstall\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.telemetryclientversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    static getAdditionalCommonProperties(osShim) {\n        return {\n            \"common.os\": osShim.platform,\n            \"common.nodeArch\": osShim.architecture,\n            \"common.platformversion\": (osShim.release || \"\").replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, \"$1$2$3\"),\n            // Do not change this string as it gets found and replaced upon packaging\n            \"common.telemetryclientversion\": \"0.9.8\"\n        };\n    }\n    // Get singleton instance of TelemetryUtil\n    static getInstance() {\n        if (!TelemetryUtil._instance) {\n            TelemetryUtil._instance = new TelemetryUtil();\n        }\n        return TelemetryUtil._instance;\n    }\n}\n//# sourceMappingURL=util.js.map","/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nexport class BaseTelemetryReporter {\n    constructor(telemetrySender, vscodeAPI, initializationOptions) {\n        this.telemetrySender = telemetrySender;\n        this.vscodeAPI = vscodeAPI;\n        this.userOptIn = false;\n        this.errorOptIn = false;\n        this.disposables = [];\n        this._onDidChangeTelemetryLevel = new this.vscodeAPI.EventEmitter();\n        this.onDidChangeTelemetryLevel = this._onDidChangeTelemetryLevel.event;\n        this.telemetryLogger = this.vscodeAPI.env.createTelemetryLogger(this.telemetrySender, initializationOptions);\n        // Keep track of the user's opt-in status\n        this.updateUserOptIn();\n        this.telemetryLogger.onDidChangeEnableStates(() => {\n            this.updateUserOptIn();\n        });\n    }\n    /**\n     * Updates the user's telemetry opt-in status\n     */\n    updateUserOptIn() {\n        this.errorOptIn = this.telemetryLogger.isErrorsEnabled;\n        this.userOptIn = this.telemetryLogger.isUsageEnabled;\n        // The sender is lazy loaded so if telemetry is off it's not loaded in\n        if (this.telemetryLogger.isErrorsEnabled || this.telemetryLogger.isUsageEnabled) {\n            this.telemetrySender.instantiateSender();\n        }\n        this._onDidChangeTelemetryLevel.fire(this.telemetryLevel);\n    }\n    get telemetryLevel() {\n        if (this.errorOptIn && this.userOptIn) {\n            return \"all\";\n        }\n        else if (this.errorOptIn) {\n            return \"error\";\n        }\n        else {\n            return \"off\";\n        }\n    }\n    /**\n     * Internal function which logs telemetry events and takes extra options.\n     * @param eventName The name of the event\n     * @param properties The properties of the event\n     * @param measurements The measurements (numeric values) to send with the event\n     * @param sanitize Whether or not to sanitize to the properties and measures\n     * @param dangerous Whether or not to ignore telemetry level\n     */\n    internalSendTelemetryEvent(eventName, properties, measurements, dangerous) {\n        // If it's dangerous we skip going through the logger as the logger checks opt-in status, etc.\n        if (dangerous) {\n            this.telemetrySender.sendEventData(eventName, { properties, measurements });\n        }\n        else {\n            this.telemetryLogger.logUsage(eventName, { properties, measurements });\n        }\n    }\n    /**\n     * Given an event name, some properties, and measurements sends a telemetry event.\n     * Properties are sanitized on best-effort basis to remove sensitive data prior to sending.\n     * @param eventName The name of the event\n     * @param properties The properties to send with the event\n     * @param measurements The measurements (numeric values) to send with the event\n     */\n    sendTelemetryEvent(eventName, properties, measurements) {\n        this.internalSendTelemetryEvent(eventName, properties, measurements, false);\n    }\n    /**\n     * Sends a raw (unsanitized) telemetry event with the given properties and measurements.\n     * NOTE: This will not be logged to the output channel due to API limitations.\n     * @param eventName The name of the event\n     * @param properties The set of properties to add to the event in the form of a string key value pair\n     * @param measurements The set of measurements to add to the event in the form of a string key  number value pair\n     */\n    sendRawTelemetryEvent(eventName, properties, measurements) {\n        const modifiedProperties = { ...properties };\n        for (const propertyKey of Object.keys(modifiedProperties ?? {})) {\n            const propertyValue = modifiedProperties[propertyKey];\n            if (typeof propertyKey === \"string\" && propertyValue !== undefined) {\n                // Trusted values are not sanitized, which is what we want for raw telemetry\n                modifiedProperties[propertyKey] = new this.vscodeAPI.TelemetryTrustedValue(typeof propertyValue === \"string\" ? propertyValue : propertyValue.value);\n            }\n        }\n        this.sendTelemetryEvent(eventName, modifiedProperties, measurements);\n    }\n    /**\n     * **DANGEROUS** Given an event name, some properties, and measurements sends a telemetry event without checking telemetry setting\n     * Do not use unless in a controlled environment i.e. sending telmetry from a CI pipeline or testing during development\n     * @param eventName The name of the event\n     * @param properties The properties to send with the event\n     * @param measurements The measurements (numeric values) to send with the event\n     * @param sanitize Whether or not to sanitize to the properties and measures, defaults to true\n     */\n    sendDangerousTelemetryEvent(eventName, properties, measurements) {\n        // Since telemetry is probably off when sending dangerously, we must start the sender\n        this.telemetrySender.instantiateSender();\n        this.internalSendTelemetryEvent(eventName, properties, measurements, true);\n    }\n    /**\n     * Internal function which logs telemetry error events and takes extra options.\n     * @param eventName The name of the event\n     * @param properties The properties of the event\n     * @param measurements The measurements (numeric values) to send with the event\n     * @param sanitize Whether or not to sanitize to the properties and measures\n     * @param dangerous Whether or not to ignore telemetry level\n     */\n    internalSendTelemetryErrorEvent(eventName, properties, measurements, dangerous) {\n        if (dangerous) {\n            this.telemetrySender.sendEventData(eventName, { properties, measurements });\n        }\n        else {\n            this.telemetryLogger.logError(eventName, { properties, measurements });\n        }\n    }\n    /**\n     * Given an event name, some properties, and measurements sends an error event\n     * @param eventName The name of the event\n     * @param properties The properties to send with the event\n     * @param measurements The measurements (numeric values) to send with the event\n     */\n    sendTelemetryErrorEvent(eventName, properties, measurements) {\n        this.internalSendTelemetryErrorEvent(eventName, properties, measurements, false);\n    }\n    /**\n     * **DANGEROUS** Given an event name, some properties, and measurements sends a telemetry error event without checking telemetry setting\n     * Do not use unless in a controlled environment i.e. sending telmetry from a CI pipeline or testing during development\n     * @param eventName The name of the event\n     * @param properties The properties to send with the event\n     * @param measurements The measurements (numeric values) to send with the event\n     * @param sanitize Whether or not to run the properties and measures through sanitiziation, defaults to true\n     */\n    sendDangerousTelemetryErrorEvent(eventName, properties, measurements) {\n        // Since telemetry is probably off when sending dangerously, we must start the sender\n        this.telemetrySender.instantiateSender();\n        this.internalSendTelemetryErrorEvent(eventName, properties, measurements, true);\n    }\n    /**\n     * Disposes of the telemetry reporter\n     */\n    async dispose() {\n        await this.telemetrySender.dispose();\n        this.telemetryLogger.dispose();\n        return Promise.all(this.disposables.map(d => d.dispose()));\n    }\n}\n//# sourceMappingURL=baseTelemetryReporter.js.map","/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nimport * as vscode from \"vscode\";\nimport { oneDataSystemClientFactory } from \"../common/1dsClientFactory\";\nimport { appInsightsClientFactory } from \"../common/appInsightsClientFactory\";\nimport { BaseTelemetryReporter } from \"../common/baseTelemetryReporter\";\nimport { BaseTelemetrySender } from \"../common/baseTelemetrySender\";\nimport { TelemetryUtil } from \"../common/util\";\nfunction getBrowserRelease(navigator) {\n    if (navigator.userAgentData) {\n        const browser = navigator.userAgentData.brands[navigator.userAgentData.brands.length - 1];\n        return `${navigator.userAgentData.platform} - ${browser?.brand} v${browser?.version}}`;\n    }\n    else {\n        // clean the user agent using the logic from here:\n        // https://github.com/microsoft/vscode/blob/main/src/vs/workbench/services/telemetry/browser/workbenchCommonProperties.ts#L14C1-L21C2\n        return navigator.userAgent.replace(/(\\d+\\.\\d+)(\\.\\d+)+/g, \"$1\");\n    }\n}\nexport default class TelemetryReporter extends BaseTelemetryReporter {\n    constructor(connectionString, replacementOptions) {\n        let clientFactory = (connectionString) => appInsightsClientFactory(connectionString, vscode.env.machineId, vscode.env.sessionId, undefined, replacementOptions);\n        // If key is usable by 1DS use the 1DS SDk\n        if (TelemetryUtil.shouldUseOneDataSystemSDK(connectionString)) {\n            clientFactory = (key) => oneDataSystemClientFactory(key, vscode);\n        }\n        const osShim = {\n            release: getBrowserRelease(navigator),\n            platform: \"web\",\n            architecture: \"web\",\n        };\n        const sender = new BaseTelemetrySender(connectionString, clientFactory);\n        // AIF is no longer supported\n        if (connectionString && (connectionString.indexOf(\"AIF\") === 0)) {\n            throw new Error(\"AIF keys are no longer supported. Please switch to 1DS keys for 1st party extensions\");\n        }\n        super(sender, vscode, { additionalCommonProperties: TelemetryUtil.getAdditionalCommonProperties(osShim) });\n    }\n}\n//# sourceMappingURL=telemetryReporter.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BreezeChannelIdentifier } from \"@microsoft/applicationinsights-common\";\nimport { TelemetryUtil } from \"./util\";\nexport const appInsightsClientFactory = async (connectionString, machineId, sessionId, xhrOverride, replacementOptions) => {\n    let appInsightsClient;\n    try {\n        const basicAISDK = await import /* webpackMode: \"eager\" */(\"@microsoft/applicationinsights-web-basic\");\n        const extensionConfig = {};\n        if (xhrOverride) {\n            // Configure the channel to use a XHR Request override since it's not available in node\n            const channelConfig = {\n                alwaysUseXhrOverride: true,\n                httpXHROverride: xhrOverride\n            };\n            extensionConfig[BreezeChannelIdentifier] = channelConfig;\n        }\n        let instrumentationKey;\n        if (!connectionString.startsWith(\"InstrumentationKey=\")) {\n            instrumentationKey = connectionString;\n        }\n        const authConfig = instrumentationKey ? { instrumentationKey } : { connectionString };\n        appInsightsClient = new basicAISDK.ApplicationInsights({\n            ...authConfig,\n            disableAjaxTracking: true,\n            disableExceptionTracking: true,\n            disableFetchTracking: true,\n            disableCorrelationHeaders: true,\n            disableCookiesUsage: true,\n            autoTrackPageVisitTime: false,\n            emitLineDelimitedJson: false,\n            disableInstrumentationKeyValidation: true,\n            extensionConfig,\n        });\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // Sets the appinsights client into a standardized form\n    const telemetryClient = {\n        logEvent: (eventName, data) => {\n            const properties = { ...data?.properties, ...data?.measurements };\n            if (replacementOptions?.length) {\n                TelemetryUtil.applyReplacements(properties, replacementOptions);\n            }\n            appInsightsClient?.track({\n                name: eventName,\n                data: properties,\n                baseType: \"EventData\",\n                ext: { user: { id: machineId, authId: machineId }, app: { sesId: sessionId } },\n                baseData: { name: eventName, properties: data?.properties, measurements: data?.measurements }\n            });\n        },\n        flush: async () => {\n            appInsightsClient?.flush(false);\n        },\n        dispose: async () => {\n            const unloadPromise = new Promise((resolve) => {\n                appInsightsClient?.unload(true, () => {\n                    resolve();\n                    appInsightsClient = undefined;\n                }, 1000);\n            });\n            return unloadPromise;\n        }\n    };\n    return telemetryClient;\n};\n//# sourceMappingURL=appInsightsClientFactory.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Configures 1DS properly and returns the core client object\n * @param key The ingestion key\n * @param xhrOverride An optional override to use for requests instead of the XHTMLRequest object. Useful for node environments\n * @returns The AI core object\n */\nconst getAICore = async (key, vscodeAPI, xhrOverride) => {\n    const oneDs = await import(/* webpackMode: \"eager\" */ \"@microsoft/1ds-core-js\");\n    const postPlugin = await import(/* webpackMode: \"eager\" */ \"@microsoft/1ds-post-js\");\n    const appInsightsCore = new oneDs.AppInsightsCore();\n    const collectorChannelPlugin = new postPlugin.PostChannel();\n    // Configure the app insights core to send to collector++ and disable logging of debug info\n    const coreConfig = {\n        instrumentationKey: key,\n        endpointUrl: \"https://mobile.events.data.microsoft.com/OneCollector/1.0\",\n        loggingLevelTelemetry: 0,\n        loggingLevelConsole: 0,\n        disableCookiesUsage: true,\n        disableDbgExt: true,\n        disableInstrumentationKeyValidation: true,\n        channels: [[\n                collectorChannelPlugin\n            ]]\n    };\n    if (xhrOverride) {\n        coreConfig.extensionConfig = {};\n        // Configure the channel to use a XHR Request override since it's not available in node\n        const channelConfig = {\n            alwaysUseXhrOverride: true,\n            httpXHROverride: xhrOverride\n        };\n        coreConfig.extensionConfig[collectorChannelPlugin.identifier] = channelConfig;\n    }\n    const config = vscodeAPI.workspace.getConfiguration(\"telemetry\");\n    const internalTesting = config.get(\"internalTesting\");\n    appInsightsCore.initialize(coreConfig, []);\n    appInsightsCore.addTelemetryInitializer((envelope) => {\n        envelope[\"ext\"] = envelope[\"ext\"] ?? {};\n        envelope[\"ext\"][\"web\"] = envelope[\"ext\"][\"web\"] ?? {};\n        envelope[\"ext\"][\"web\"][\"consentDetails\"] = \"{\\\"GPC_DataSharingOptIn\\\":false}\";\n        // Only add the remaining flags when `telemetry.internalTesting` is enabled\n        if (!internalTesting) {\n            return;\n        }\n        envelope[\"ext\"][\"utc\"] = envelope[\"ext\"][\"utc\"] ?? {};\n        // Sets it to be internal only based on Windows UTC flagging\n        envelope[\"ext\"][\"utc\"][\"flags\"] = 0x0000811ECD;\n    });\n    return appInsightsCore;\n};\n/**\n * Configures and creates a telemetry client using the 1DS sdk\n * @param key The ingestion key\n * @param xhrOverride An optional override to use for requests instead of the XHTMLRequest object. Useful for node environments\n */\nexport const oneDataSystemClientFactory = async (key, vscodeAPI, xhrOverride) => {\n    let appInsightsCore = await getAICore(key, vscodeAPI, xhrOverride);\n    const flushOneDS = async () => {\n        try {\n            const flushPromise = new Promise((resolve, reject) => {\n                if (!appInsightsCore) {\n                    resolve();\n                    return;\n                }\n                appInsightsCore.flush(true, (completedFlush) => {\n                    if (!completedFlush) {\n                        reject(\"Failed to flush app 1DS!\");\n                        return;\n                    }\n                });\n            });\n            return flushPromise;\n        }\n        catch (e) {\n            throw new Error(\"Failed to flush 1DS!\\n\" + e.message);\n        }\n    };\n    // Shape the app insights core from 1DS into a standard format\n    const telemetryClient = {\n        logEvent: (eventName, data) => {\n            try {\n                appInsightsCore?.track({\n                    name: eventName,\n                    baseData: { name: eventName, properties: data?.properties, measurements: data?.measurements }\n                });\n            }\n            catch (e) {\n                throw new Error(\"Failed to log event to app insights!\\n\" + e.message);\n            }\n        },\n        flush: flushOneDS,\n        dispose: async () => {\n            const disposePromise = new Promise((resolve) => {\n                if (!appInsightsCore) {\n                    resolve();\n                    return;\n                }\n                appInsightsCore.unload(false, () => {\n                    resolve();\n                    appInsightsCore = undefined;\n                    return;\n                }, 1000);\n            });\n            return disposePromise;\n        }\n    };\n    return telemetryClient;\n};\n//# sourceMappingURL=1dsClientFactory.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { random32 } from \"./RandomHelper\";\r\n// Added to help with minfication\r\nexport var Undefined = strShimUndefined;\r\nexport function newGuid() {\r\n    var uuid = generateW3CId();\r\n    return strSubstring(uuid, 0, 8) + \"-\" + strSubstring(uuid, 8, 12) + \"-\" + strSubstring(uuid, 12, 16) + \"-\" + strSubstring(uuid, 16, 20) + \"-\" + strSubstring(uuid, 20);\r\n}\r\n/**\r\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function strEndsWith(value, search) {\r\n    if (value && search) {\r\n        var len = value[_DYN_LENGTH /* @min:%2elength */];\r\n        var start = len - search[_DYN_LENGTH /* @min:%2elength */];\r\n        return strSubstring(value, start >= 0 ? start : 0, len) === search;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * generate W3C trace id\r\n */\r\nexport function generateW3CId() {\r\n    var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n    // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n    var oct = STR_EMPTY, tmp;\r\n    for (var a = 0; a < 4; a++) {\r\n        tmp = random32();\r\n        oct +=\r\n            hexValues[tmp & 0xF] +\r\n                hexValues[tmp >> 4 & 0xF] +\r\n                hexValues[tmp >> 8 & 0xF] +\r\n                hexValues[tmp >> 12 & 0xF] +\r\n                hexValues[tmp >> 16 & 0xF] +\r\n                hexValues[tmp >> 20 & 0xF] +\r\n                hexValues[tmp >> 24 & 0xF] +\r\n                hexValues[tmp >> 28 & 0xF];\r\n    }\r\n    // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n    var clockSequenceHi = hexValues[8 + (random32() & 0x03) | 0];\r\n    return strSubstr(oct, 0, 8) + strSubstr(oct, 9, 4) + \"4\" + strSubstr(oct, 13, 3) + clockSequenceHi + strSubstr(oct, 16, 3) + strSubstr(oct, 19, 12);\r\n}\r\n//# sourceMappingURL=CoreUtils.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(7282);\n"],"names":["SampleRate","ProcessLegacy","HttpMethod","DEFAULT_BREEZE_ENDPOINT","DEFAULT_BREEZE_PATH","strNotSpecified","_DYN_INGESTIONENDPOINT","_DYN_TO_STRING","_DYN_MESSAGE","_DYN_STRINGIFY","_DYN_EXCEPTIONS","_DYN_PARSED_STACK","_DYN_PROPERTIES","_DYN_MEASUREMENTS","_DYN_SIZE_IN_BYTES","_DYN_TYPE_NAME","_DYN_SEVERITY_LEVEL","_DYN_PROBLEM_GROUP","_DYN_IS_MANUAL","_DYN__CREATE_FROM_INTERFA1","_DYN_ASSEMBLY","_DYN_FILE_NAME","_DYN_HAS_FULL_STACK","_DYN_LEVEL","_DYN_METHOD","_DYN_LINE","_DYN_DURATION","_DYN_RECEIVED_RESPONSE","dataSanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","name","nameTrunc","dataSanitizeKey","i","uniqueField","undefined","dsPadNumber","dataSanitizeString","value","maxLength","valueTrunc","dataSanitizeUrl","url","dataSanitizeInput","dataSanitizeMessage","message","messageTrunc","dataSanitizeProperties","properties","tempProps_1","prop","e","exception","dataSanitizeMeasurements","measurements","tempMeasurements_1","measure","input","_msgId","inputTrunc","data","num","s","Event","this","aiDataContract","ver","_self","envelopeType","dataType","Trace","severityLevel","msToTimeSpan","totalms","isNaN","ms","Math","round","sec","floor","min","hour","days","PageView","durationMs","id","duration","dataSanitizeId","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","strError","strStack","strStackDetails","strErrorSrc","strMessage","strDescription","_stringify","convertToString","result","JSON","_formatMessage","theEvent","errorType","evtMessage","_isStackDetails","details","src","obj","_convertStackObj","errorStack","items","_getStackFromErrorObj","errorObj","errorMessage","stack","lines","lp","entry","_getOperaStack","reason","_getErrorType","typeName","results","exec","constructor","_formatErrorCode","Exception","exceptions","_isExceptionInternal","_ExceptionDetails","CreateAutoException","lineNumber","columnNumber","error","evt","errorSrc","_a","stackDetails","CreateFromInterface","ex","prototype","toInterface","_b","problemGroup","isManual","exceptionDetailsInterface","Array","CreateSimpleException","assembly","fileName","line","formatError","outerId","hasFullStack","parsedStack","_isExceptionDetailsInternal","frames","level_1","totalSizeInBytes_1","frame","theFrame","_StackFrame","regex","test","parsedFrame","left","right","size","acceptedLeft","acceptedRight","howMany","splice","_parseStack","exceptionTrunc","dataSanitizeException","_formatStackTrace","sourceFrame","level","method","matches","match","parseInt","sizeInBytes","baseSize","toString","DataPoint","kind","count","max","stdDev","Metric","metrics","dataPoint","_document","_htmlAnchorIdx","_htmlAnchorElement","urlParseHost","inclPort","fullHost","protocol","port","_internalEndpoints","isInternalApplicationInsightsEndpoint","endpointUrl","RemoteDependencyData","absoluteUrl","commandName","success","resultCode","requestAPI","correlationContext","target","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","anchorIdx","anchorCache","tempAnchor","parsedUrl","createElement","host","href","pathName","pathname","charAt","AjaxHelperParseDependencyPath","concat","_disableEvents","evtNamespace","LocalStorage","SessionStorage","_canUseSessionStorage","AI","AI_AND_W3C","W3C","Normal","Critical","_storagePrefix","_getVerifiedStorageObject","storageType","uid","Date","storage","name_1","setItem","fail","getItem","_getSessionStorageObject","utlCanUseSessionStorage","reset","utlGetSessionStorage","utlSetSessionStorage","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","traceStateHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","_aiNameFunc","baseName","aiName","_aiApplication","_aiDevice","_aiLocation","_aiOperation","_aiSession","_aiUser","_aiCloud","_aiInternal","ContextTagKeys","_super","call","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userAgent","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","internalSnippet","internalSdkSrc","CtxTagKeys","Envelope","_this","sampleRate","tags","time","iKey","Data","baseType","baseData","STR_DURATION","_DYN_TAGS","_DYN_DEVICE_TYPE","_DYN_DATA","_DYN_TRACE_ID","_DYN_DATA_TYPE","_DYN_ENVELOPE_TYPE","_DYN__GET","_DYN_ENQUEUE","_DYN_EVENTS_LIMIT_IN_MEM","_DYN_ITEM","_DYN_EMIT_LINE_DELIMITED_0","_DYN_CLEAR","_DYN_CREATE_NEW","_DYN_MARK_AS_SENT","_DYN_CLEAR_SENT","_DYN_BUFFER_OVERRIDE","_DYN__BUFFER__KEY","_DYN__SENT__BUFFER__KEY","_DYN_CONCAT","_DYN__MAX__BUFFER__SIZE","_DYN_TRIGGER_SEND","_DYN_DIAG_LOG","_DYN_INITIALIZE","_DYN__SENDER","_DYN_ENDPOINT_URL","_DYN_INSTRUMENTATION_KEY","_DYN_CUSTOM_HEADERS","_DYN_MAX_BATCH_SIZE_IN_BY1","_DYN_ONUNLOAD_DISABLE_BEA2","_DYN_IS_BEACON_API_DISABL3","_DYN_ALWAYS_USE_XHR_OVERR4","_DYN_DISABLE_XHR","_DYN_ENABLE_SESSION_STORA5","_DYN__BUFFER","_DYN_ONUNLOAD_DISABLE_FET6","_DYN_DISABLE_SEND_BEACON_7","_DYN_ENABLE_SEND_PROMISE","_DYN_GET_SENDER_INST","_DYN_UNLOAD_TRANSPORTS","_DYN_CONVERT_UNDEFINED","_DYN_MAX_BATCH_INTERVAL","_DYN_SERIALIZE","_DYN__ON_ERROR","_DYN__ON_PARTIAL_SUCCESS","_DYN__ON_SUCCESS","_DYN_ITEMS_RECEIVED","_DYN_ITEMS_ACCEPTED","_DYN_ORI_PAYLOAD","_DYN_BASE_TYPE","_DYN_SAMPLE_RATE","_DYN_EVENTS_SEND_REQUEST","_DYN_GET_SAMPLING_SCORE","strBaseType","strBaseData","strProperties","strTrue","_setValueIf","_extractPropsAndMeasurements","_convertPropsUndefinedToCustomDefinedValue","customUndefinedValue","_createEnvelope","telemetryItem","envelope","startTime","iKeyNoDashes","replace","item","env","envTags","itmExt","ext","itmTags","extUser","user","authId","localId","extApp","app","sesId","extDevice","device","deviceClass","ip","model","web","browserLang","browserVer","browser","envData","envBaseData","envProps","domain","screenRes","userConsent","extOs","os","osVer","extTrace","trace","parentID","tgs","tg","theTags","EnvelopeCreator","Version","_extractPartAExtensions","EnvelopeCreatorInit","EventEnvelopeCreator","customProperties","customMeasurements","eventName","eventData","BaseSendBuffer","config","_buffer","_bufferFullMessageSent","_maxRetryCnt","maxRetryCnt","_set","buffer","payload","cnt","getItems","slice","batchPayloads","payloads","payloadStr_1","join","newLogger","newConfig","canUseSessionStorage","newBuffer","SessionStorageSendBuffer","ArraySendBuffer","__ieDyn","_base","PREVIOUS_KEYS","_namePrefix","namePrefix","bufferItems","_getBuffer","itemsInSentBuffer","previousItems","events","_getItemsFromPreviousKey","prefixEvents","_getPreviousEvents","notDeliveredItems","_removePayloadsFromBuffer","remaining","payloadStr","_getBufferBase","bufferJson","buffer_1","parse","_setBuffer","prefixedKey","transFormedItems_1","internalItem","utlRemoveSessionStorage","BUFFER_KEY","sentElements","unsentItems","sentItems","VERSION","SENT_BUFFER_KEY","MAX_BUFFER_SIZE","Serializer","_serializeObject","source","circularReferenceCheck","output","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isArray","isPresent","isObj","sources","expectedType","parseFloat","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","hash","charCodeAt","abs","SamplingScoreGenerator","hashCodeGenerator","keys","telemetryTrace","random","Sample","_logger","throwInternal","samplingRate","samplingScoreGenerator","isSampledIn","samplingPercentage","UNDEFINED_VALUE","_getResponseText","xhr","responseText","defaultAppInsightsChannelConfig","disableTelemetry","isRetryDisabled","httpXHROverride","isVal","sendPOST","v","transports","retryCodes","EnvelopeTypeCreator","props","currentContextId","bd","uri","refUri","pageType","isLoggedIn","pageTags","pageViewData","exData","baseMetricData","average","sampleCount","remoteDepData","responseCode","Sender","_consecutiveErrors","_retryAt","_paused","_timeoutHandle","_serializer","_stamp_specific_redirects","_headers","priority","identifier","_syncUnloadSender","_offlineListener","_evtNamespace","_endpointUrl","_orgEndpointUrl","_maxBatchSizeInBytes","_beaconSupported","_beaconOnUnloadSupported","_beaconNormalSupported","_customHeaders","_disableTelemetry","_instrumentationKey","_convertUndefined","_isRetryDisabled","_maxBatchInterval","_sessionStorageUsed","_bufferOverrideUsed","_enableSendPromise","_alwaysUseCustomSend","_disableXhr","_fetchKeepAlive","_xhrSend","_fallbackSend","_disableBeaconSplit","_sendPostMgr","_retryCodes","_syncFetchPayload","_xdrOnLoad","xdr","_xhrReadyStateChange","countOfItemsInPayload","readyState","_checkResponsStatus","status","responseURL","response","_getPayloadArr","arr","_validate","diagLogger","_sample","_getEnvelope","defaultEnvelopeIkey","aiEnvelope","constructEnvelope","doNotSendItem","callBack","_serialize","rlt","valid","_batch","_createPayload","headers","_getHeaders","urlString","_doSend","sendInterface","isAsync","markAsSent","payloadData","_getPayload","sendPostFunc","_onSuccess","_getOnComplete","batch","disableXhrSync","disableFetchKeepAlive","_checkMaxSize","incomingPayload","incomingSize","isOnline","responseUrl","res","_appId","appId","_checkAndUpdateEndPointUrl","_resendPayload","length","_isRetriable","_doUnloadSend","_isStringArr","_fetchKeepAliveSender","transport","payloadSize","getSyncFetchPayload","linearFactor","_i","payload_1","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","_setRetryTime","_setupTimer","retryInterval","timerValue","_clearScheduledTimer","cancel","statusCode","indexOf","_initDefaults","g","pause","resume","flush","sendReason","onunloadFlush","addHeader","core","extensions","pluginChain","isInitialized","diagLog","parentEvtNamespace","_navigator","_isListening","listenerList","rState","onLine","uState","_currentState","calCurrentState","_enableEvents","body","ononline","enabled","_setOnline","_setOffline","listnerNoticeCheck","newState","callback","offlineState","isListening","unload","win","addListener","rm","index","setOnlineState","createOfflineListener","_addHook","storagePrefix","cfg","senderConfig","getExtCfg","curExtUrl","coreUrl","activeStatus","PENDING","ACTIVE","customHeader","header","bufferOverride","shouldUpdate","instrumentationKey","disableValidation","disableInstrumentationKeyValidation","RegExp","_validateInstrumentationKey","sendPostConfig","onCompleteFuncs","xdrOnComplete","oncomplete","fetchOnComplete","onComplete","resValue","statusText","xhrOnComplete","request","beaconOnRetry","canSend","droppedPayload","thePayload","_onBeaconRetry","isOneDs","disableCredentials","disableBeacon","disableBeaconSync","senderOnCompleteCallBack","_getSendPostMgrConfig","SetConfig","SenderPostManager","customInterface","httpInterface","syncInterface","theTransports","xhrInterface","getFallbackInst","syncTransports","filter","processTelemetry","itemCtx","_getTelCtx","payloadItem","processNext","isCompletelyIdle","getOfflineListener","async","forcedSender","sendRequest","func","manager","_notifySendRequest","ieVer","getOfflineSupport","getUrl","createPayload","shouldProcess","_doTeardown","unloadCtx","unloadState","event","_onError","failed","retry","errors_1","errors","reverse","extracted","itemsReceived","_onPartialSuccess","orig","convertUndefined","BaseTelemetryPlugin","parseConnectionString","connectionString","kvPairs","fields","kv","kvParts","endpointsuffix","locationPrefix","location","_DYN_CONNECTION_STRING","_DYN_INSTRUMENTATIONKEY0","_DYN_USER_OVERRIDE_ENDPOI1","SeverityLevel","Verbose","Information","Warning","Error","defaultConfigValues","diagnosticLogInterval","extensionConfig","ApplicationInsights","_config","AppInsightsCore","_track","track","_initialize","cfgHandler","addUnloadHook","configCs","ikeyPromise","resolve","reject","curCs","ikey","rejected","urlPromise","ingest","cs","initialize","_pureAssign","func1","func2","_pureRef","_primitiveTypes","UNDEF_VALUE","NULL_VALUE","EMPTY","FUNCTION","OBJECT","PROTOTYPE","__PROTO__","UNDEFINED","CONSTRUCTOR","SYMBOL","POLYFILL_TAG","LENGTH","NAME","CALL","TO_STRING","ObjClass","Object","ObjProto","StrCls","String","StrProto","MathCls","ArrCls","ArrProto","ArrSlice","safe","argArray","apply","_createIs","theType","_createObjIs","theName","objToString","isTypeof","isUndefined","isNullOrUndefined","isDefined","arg","isString","isFunction","isObject","isDate","isNumber","isBoolean","isError","isPromiseLike","then","isNotTruthy","isTruthy","cb","defValue","objGetOwnPropertyDescriptor","objHasOwnProperty","hasOwnProperty","objHasOwn","polyObjHasOwn","objForEachKey","theObject","callbackfn","thisArg","propMap","c","w","_createProp","l","get","desc","set","newValue","objDefineProp","objDefineProperties","objDefineAccessors","getProp","setProp","configurable","enumerable","objDefine","propDesc","_createKeyValueMap","values","keyType","valueType","completeFn","writable","theMap","_assignMapValue","asString","ERROR_TYPE","dumpObj","object","format","propertyValueDump","objType","stringify","throwError","throwTypeError","TypeError","_objFreeze","_doNothing","_getProto","objAssign","objKeys","objDeepFreeze","objFreeze","objSeal","objGetPrototypeOf","createEnum","createEnumKeyMap","createTypeMap","mapClass","createSimpleMap","_globalCfg","_wellKnownSymbolMap","asyncIterator","hasInstance","isConcatSpreadable","iterator","matchAll","search","species","split","toPrimitive","toStringTag","unscopables","GLOBAL_CONFIG_KEY","_getGlobalValue","globalThis","self","window","_getGlobalConfig","gbl","_unwrapFunction","_unwrapFunctionWithPoly","funcName","clsProto","polyFunc","clsFn","theFunc","theArgs","arguments","_unwrapProp","propName","mathMax","strSlice","strSubstring","strSubstr","polyStrSubstr","start","strLeft","_polySymbols","_wellKnownSymbolCache","_globalLazyTestHooks","UNIQUE_REGISTRY_ID","polyNewSymbol","description","theSymbol","polySymbolFor","registry","gblCfg","gblSym","k","_globalSymbolRegistry","newSymbol_1","regId_1","_initTestHooks","getLazy","lazyValue","b","lzy","createCachedValue","toJSON","_cachedGlobal","WINDOW","_getGlobalInstFn","getFn","cachedValue","getGlobal","useCached","getInst","hasDocument","getDocument","hasWindow","getWindow","hasNavigator","getNavigator","hasHistory","getHistory","_symbol","_symbolFor","_iterSymbol$1","isNode","process","versions","node","_initSymbol","_getSymbolKey","hasSymbol","getSymbol","getKnownSymbol","noPoly","knownName","sym","polyGetKnownSymbol","newSymbol","symbolFor","isIterator","next","isIterable","isStrictNullOrUndefined","iterForOf","iter","err","iterResult","done","throw","return","fnApply","fn","arrAppend","elms","push","elm","arrForEach","theArray","len","idx","arrIndexOf","arrMap","arrSlice","end","polyArrIncludes","searchElement","fromIndex","_isProtoArray","arrIncludes","arrReduce","objCreate","polyObjCreate","tempFunc","objSetPrototypeOf","proto","d","_setName","baseClass","createCustomError","constructCb","errorBase","theBaseClass","orgName","captureFn","captureStackTrace","__","_createCustomError","orgProto","utcNow","now","polyUtcNow","getTime","_createTrimFn","exp","_fnToString","_objCtrFnString","_gblWindow","strTrim","isPlainObject","Function","_defaultDeepCopyHandler","plainObjDeepCopyHandler","defaultDeepCopyHandlers","copyTo","_deepCopy","visitMap","ctx","userHandler","handler","newPath","path","newCtx","isPlain","isPrim","isPrimitiveType","origin","copy","newKey","_copyProps","theEntry","newEntry","_getSetVisited","deepExtend","obj1","obj2","obj3","obj4","obj5","obj6","theArg","objCopyProps","_doExtend","_perf","getLength","getPerformance","perfNow","perf","strEndsWith","polyStrEndsWith","searchString","searchValue","strIndexOf","strStartsWith","polyStrStartsWith","position","pos","REF","UNREF","HAS_REF","ENABLED","_createTimeoutWith","startTimer","overrideFn","isArr","setFn","setTimeout","clearFn","clearTimeout","timerFn","dn","refreshFn","cancelFn","theTimerHandler","ref","timerId","_unref","_cancel","_refresh","refresh","h","_createTimerHandler","scheduleTimeout","timeout","scheduleTimeoutWith","createTimeout","pluginStateData","_getPluginState","plugin","initializePlugins","processContext","pluginState","initPlugins","lastPlugin","proxy","thePlugin","getCfg","sortPlugins","plugins","sort","extA","extB","bHasProcess","createDistributedTraceContext","parentCtx","getName","setName","getTraceId","setTraceId","getSpanId","setSpanId","getTraceFlags","setTraceFlags","newTraceFlags","strHasOwnProperty","__assignFn","t","n","p","extendStaticsFn","__proto__","__extendsFn","__spreadArrayFn","to","from","il","j","createUnloadHandlerContainer","handlers","add","run","STR_EMPTY","_noResponseQs","STR_POST_METHOD","_isInitialized","_diagLog","_isOneDs","_onCompleteFuncs","_disableCredentials","_fetchCredentials","_fallbackInst","_disableBeacon","_disableBeaconSync","_disableFetchKeepAlive","_addNoResponse","_timeoutWrapper","_sendCredentials","_doOnComplete","_onNoPayloadUrl","_doBeaconSend","nav","plainTextBatch","Blob","sendBeacon","_beaconSender","sync","onRetry","_xhrSender","thePromise","resolveFunc","rejectFunc","endPointUrl","_doOnReadyFunc","onReadyFunc","headerName","onreadystatechange","onload","onerror","ontimeout","send","_doFetchSender","requestHeaders","Headers","batchLength","ignoreResponse","responseHandled","init","append","credentials","keepalive","Request","_handleError","_onFetchComplete","onCompleteFunc","fetch","response_1","ok","text","resp","_xdrSender","_window","XDomainRequest","onloadFunc","onprogress","hostingProtocol","endpoint","lastIndexOf","msg","open","fetchCredentials","enableSendPromise","disableXhr","timeWrapper","addNoResponse","location_1","getSenderInst","syncSupport","transportType","_transport","_isSync","_getSenderInterface","MergeConflictContentProvider","context","static","begin","subscriptions","vscode","workspace","registerTextDocumentContentProvider","scheme","dispose","provideTextDocumentContent","ranges","query","document","openTextDocument","with","lastPosition","Position","forEach","rangeObj","conflictRange","fullRange","fullStart","fullEnd","getText","Range","character","documentEnd","lineAt","lineCount","range","showErrorMessage","STR_DEFAULT_ENDPOINT_URL","STR_VERSION","STR_PROPERTIES","defaultConfig","S","propertyStorageOverride","getProperty","setProperty","notificationManager","logger_1","trackStart","latency","itemExt","sdk","itemProperties","pluginVersionString","ValueKind","NotSet","Pii_DistinguishedName","Pii_GenericData","Pii_IPV4Address","Pii_IPv6Address","Pii_MailSubject","Pii_PhoneNumber","Pii_QueryString","Pii_SipAddress","Pii_SmtpAddress","Pii_Identity","Pii_Uri","Pii_Fqdn","Pii_IPV4AddressLegacy","Pii_IPv6ScrubLastHextets","Pii_DropValue","CustomerContent_GenericContent","EventLatency","CostDeferred","RealTime","Immediate","EventPropertyType","Unspecified","Int32","UInt32","Int64","UInt64","Double","Bool","Guid","DateTime","EventPersistence","TraceLevel","NONE","ERROR","WARNING","INFORMATION","ValueSanitizer","fieldSanitizerProvider","_sanitizerMap","_sanitizers","_fieldSanitizers","_getFieldSanitizer","fieldLookup","canHandle","fieldHandler","_handleProperty","mapValue","fieldType","property","stringifyObjects","_callFieldSanitizer","_convertToProperty","fieldProvider","sanitizer","getSanitizer","propertyType","newValue_1","propValue","propKey","theValue","newProp","clearCache","addSanitizer","newSanitizer","addFieldSanitizer","fieldSanitizer","theSanitizer","theFieldSanitizer","isEmpty","subType","getFieldType","MinChannelPriorty","LoggingSeverity","DISABLED","CRITICAL","DEBUG","codeLensRegistrationHandle","tracker","trackerService","createTracker","enableCodeLens","registerCodeLensProvider","configurationUpdated","updatedConfig","provideCodeLenses","_token","conflicts","getConflicts","conflictsCount","commands","executeCommand","conflict","acceptCurrentCommand","command","title","l10n","acceptIncomingCommand","acceptBothCommand","diffCommand","CodeLens","languages","_isConfigDefaults","fb","_getDefault","dynamicHandler","theConfig","cfgDefaults","isDefaultValid","dfVal","fallbacks","fallback","fbValue","_resolveDefaultValue","_applyDefaultValue","defaultValue","isValid","mergeDf","reference","readOnly","blkDynamicValue","mrg","usingDefault","cfgValue","dfName","dfValue","decorations","decorationUsesWholeLine","updating","Map","registerDecorationTypes","visibleTextEditors","applyDecorations","onDidOpenTextDocument","applyDecorationsFromEvent","onDidChangeTextDocument","onDidChangeVisibleTextEditors","removeDecorations","enableDecorations","enableEditorOverview","createTextEditorDecorationType","generateBlockRenderOptions","isWholeLine","backgroundColor","ThemeColor","color","outlineStyle","outlineWidth","outlineColor","after","contentText","overviewRulerColor","renderOptions","overviewRulerLane","OverviewRulerLane","Full","eventDocument","editor","matchDecorations","pushDecoration","current","decoratorContent","incoming","commonAncestors","commonAncestorsRegion","splitter","decorationKey","decorationType","setDecorations","delete","parseResponse","itemsAccepted","defaultValues","perfEvtsSendAll","_runScheduledListeners","asyncNotifications","callbacks","_runListeners","listeners","listener","NotificationManager","unloadHandler","_listeners","_asyncNotifications","perfEvent","rn_1","waiting","_finishUnload","asyncUnload","module","exports","require","_DYN_LOGGER","_DYN_INDEX_OF","_DYN_TIMINGS","_DYN_POLL_INTERNAL_LOGS","_DYN_VALUE","_DYN_KIND","_DYN_LENGTH","_DYN_PROCESS_TELEMETRY_ST0","_DYN_HANDLE_FIELD","_DYN_RM_SANITIZER","_DYN_RM_FIELD_SANITIZER","_DYN_CAN_HANDLE","TRACE_PARENT_REGEX","DEFAULT_VERSION","INVALID_VERSION","INVALID_TRACE_ID","INVALID_SPAN_ID","SAMPLED_FLAG","_isValid","invalidValue","_formatValue","_formatFlags","createTraceParent","traceId","spanId","flags","version","isValidTraceId","isValidSpanId","traceFlags","parseTraceParent","selectIdx","isValidTraceParent","isSampledFlag","formatTraceParent","toLowerCase","findW3cTraceParent","traceParent","strTelemetryPluginChain","strHasRunFlags","strGetTelCtx","_chainId","_createInternalContext","telemetryChain","startAt","_nextProxy","_onComplete","createTelemetryProxyChain","_getNextProxyStart","_next","nextProxy","completeDetails","args","_getExtCfg","getConfig","extConfig","rootConfig","hasNext","getNext","setNext","nextPlugin","iterate","that","createIfMissing","idCfg","extCfg","createProcessTelemetryContext","internalContext","createProcessTelemetryUnloadContext","createProcessTelemetryUpdateContext","updateState","firstProxy","lastProxy_1","newProxy","chainId","hasProcessTelemetry","hasSetNext","proxyChain","getPlugin","_processChain","hasRun","pluginCore","update","updateCtx","_id","_setNext","processPluginFn","hasRunContext","nextId","hasNextRun","createTelemetryPluginProxy","ProcessTelemetryContext","ScanTask","origins","Set","delayTask","delayTime","initialOrigin","Delayer","addOrigin","hasOrigin","has","OriginDocumentMergeConflictTracker","parent","isPending","forget","telemetryReporter","cache","delayExpireTime","getCacheKey","Promise","getConflictsOrEmpty","cacheItem","trigger","task","clear","seenDocumentsWithConflicts","_origins","MergeConflictParser","containsConflict","scanDocument","sendTelemetryEvent","conflictCount","_stringToBoolOrDefault","cfgDfMerge","cfgDfValidate","validator","fallBackName","cfgDfBoolean","applied","descriptor","commitEdit","edit","resolution","commitTypeToString","applyEdit","content","replaceRangeWithContent","currentContent","incomingContent","isNewlineOnly","TelemetryInitializerPlugin","_initializers","addTelemetryInitializer","telemetryInitializer","theInitializer","remove","initializer","_addInitializer","telemetryInitializersCount","_runInitializers","strValidationError","strSdkUnloadingError","cookieCfg","rdOnly","loggingLevelConsole","_createPerfManager","notificationMgr","PerfManager","_isPluginPresent","exists","_deepMergeConfig","newValues","merge","_findWatcher","newWatcher","theListener","_configHandler","_eventQueue","_notificationManager","_perfManager","_cfgPerfManager","_cookieManager","_pluginChain","_configExtensions","_channelConfig","_channels","_isUnloading","_telemetryInitializerPlugin","_internalLogsEventName","_unloadHandlers","_hookContainer","_debugListener","_traceCtx","_cfgListeners","_extensions","_pluginVersionStringArr","_pluginVersionString","_activeStatus","_endpoint","_initInMemoMaxSize","_isStatusSet","_internalLogPoller","_internalLogPollerListening","_forceStopInternalLogPoller","_setStatus","_releaseQueues","releaseQueue","_startLogPoller","alwaysStart","queue","_addUnloadHook","interval","isRunning","_flushInternalLogs","unref","_setPluginVersions","thePlugins","_addPluginVersions","channels","updateCfg","DiagnosticLogger","cfgExtensions","_createTelCtx","theCtx","_getPluginChain","_initPluginChain","theExtensions","channelPriority","allExtensions","coreExtensions","extPriorities","extPriority","_validateExtensions","rootCtx","_doUpdate","_getPlugin","pluginIdentifier","theExt","channelHosts","getChannel","setEnabled","isEnabled","removeCb","pluginsToRemove","_removePlugins","removed","removeComplete","unloadChain","newConfigExtensions","newChannelConfig","newQueue","channel","logMessage","_flushChannels","cbTimeout","doneIterating","cbTimer","doCallback","handled_1","_updateHook","_logOrThrowError","_notifyInvalidEvent","hooks","_setPendingStatus","prevCfgPerfMgr","rootCfg","initInMemoMaxSize","promises","initTimeout","initTimeOut","allPromises","ikeyRes","endpointRes","configHandler","unloadContainer","debugListener","disableDbgExt","_initDebugListener","enablePerfMgr","createPerfMgr","teeController","unloadHdl","_registerDelayedCfgListener","getChannels","controls","getNotifyMgr","getCookieMgr","setCookieMgr","cookieMgr","setPerfMgr","perfMgr","eventCnt","eventQueue","unloadComplete","flushComplete","processUnloadCtx","_doUnload","addPlugin","replaceExisting","addCb","existingPlugin","_addPlugin","added","removedPlugins_1","mergeExisting","oldCfg","_block","getTraceCtx","createNew","setTraceCtx","traceCtx","onCfgChange","unloadHook","fnd","_createUnloadHook","getWParam","enableWParam","BreezeChannelIdentifier","EventsDiscardedReason","Unknown","NonRetryableStatus","InvalidEvent","SizeLimitExceeded","KillSwitch","QueueFull","CleanStorage","MaxInStorageTimeExceeded","rCamelCase","rNormalizeInvalid","rLeadingNumeric","isNotNullOrUndefined","normalizeJsName","_all","letter","toUpperCase","strContains","toISOString","date","getExceptionName","setValue","valChk","srcChk","getSetValue","_createProxyFunction","srcFunc","originalArguments","proxyAssign","chkSet","_loop_1","proxyFunctionAs","overwriteTarget","proxyFunctions","functionsToProxy","theFuncName","createClassFromInterface","defaults","optimizeObject","objExtend","extended","argLen","deep","isArgArray","isArgObj","isNewArray","clone","getResponseText","formatErrorMessageXdr","formatErrorMessageXhr","prependTransports","newTransports","strDisabledPropertyName","strWithCredentials","strTimeout","openXhr","withCredentials","disabled","isSync","_wrapSetXhrProp","XMLHttpRequest","convertAllHeadersToMap","headersString","headersArray","headerEntry","substring","_appendHeader","theHeaders","STR_KILL_DURATION_HEADER","STR_KILL_DURATION_SECONDS_HEADER","STR_TIME_DELTA_HEADER","_getAllResponseHeaders","STR_WARN_TO_CONSOLE","loggingLevelTelemetry","maxMessageLimit","enableDebug","_logFuncs","_sanitizeDiagnosticText","_logToConsole","theConsole","logFunc","_InternalLogMessage","msgId","isUserAct","strProps","diagnosticText","safeGetLogger","_loggingLevelConsole","_loggingLevelTelemetry","_maxInternalMessageLimit","_enableDebug","_unloadHandler","_messageCount","_messageLogged","_logInternalMessage","severity","messageKey","_debugExtMsg","throttleLimitMessage","throttleMessage","errorToConsole","dbgExt","_setDefaultsFromConfig","consoleLoggingLevel","debugToConsole","resetInternalMessageCount","_getLogger","_throwInternal","_warnToConsole","runTargetUnload","doUnloadAll","targets","resolved","instanceName","_dataUid","_canAcceptData","createUniqueNamespace","includeVersion","createElmNodeData","accept","addDefault","theCache","_getCache","kill","createEnumStyle","createValueMap","FullVersionString","ObjHasOwnProperty","_fieldTypeEventPropMap","uInt8ArraySupported","isDocumentObjectAvailable","isWindowObjectAvailable","isValueAssigned","getTenantId","apiKey","indexTenantId","isUint8ArrayAvailable","Uint8Array","ua","isSafariOrFirefox","isLatency","sanitizeProperty","propType","isArrayValid","isValueKind","getCommonSchemaMetaData","encodedTypeValue","isDataType","getFieldValueType","getCookieValue","decode","cookieValue","decodeURIComponent","createGuid","style","theGuid","extend","arrayValue","arrayIndex","setProcessTelemetryTimings","isChromium","isGreaterThanZero","ActiveStatus","INACTIVE","_doc","strToGMTString","strToUTCString","strCookie","strExpires","strIsCookieUseDisabled","strDisableCookiesUsage","strConfigCookieMgr","_supportsCookies","_allowUaSameSite","_parsedCookieValue","_cookieCache","_globalCookieConfig","rootDefaultConfig","ignoreCookies","blockedCookies","cookieDomain","cookiePath","_getDoc","_isMgrEnabled","_isIgnoredCookie","cookieMgrCfg","_isCfgEnabled","cookieMgrConfig","isCfgEnabled","cookieEnabled","safeGetCookieMgr","createCookieMgr","inst","_gblCookieMgr","_path","_domain","_enabled","_getCookieFn","_setCookieFn","_delCookieFn","getCookie","_getCookieValue","setCookie","_setCookieValue","delCookie","areCookiesSupported","gblManager","maxAgeSec","_isBlockedCookie","_extractParts","_isIE","expireMs","expiry","setTime","_formatDate","uaDisallowsSameSiteNone","_formatCookieValue","del","purge","doc","parts","thePart","theDate","theCookie","strShimFunction","strShimObject","strShimUndefined","strShimPrototype","services","aiKey","extension","packageJSON","configuration","createExtensionConfiguration","documentTracker","service","onDidChangeConfiguration","workspaceConfiguration","getConfiguration","codeLensEnabled","decoratorsEnabled","disposable","strOnPrefix","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","strEvents","strVisibilityChangeEvt","strPageHide","strPageShow","strUnload","strBeforeUnload","strPageHideNamespace","strPageShowNamespace","rRemoveEmptyNs","rRemoveTrailingEmptyNs","_guid","elmNodeData","eventNamespace","_normalizeNamespace","_getEvtNamespace","theNamespace_1","parsedEvent","ns","__getRegisteredEvents","theEvents","eventCache","evtName","evtType","registeredEvents","_getRegisteredEvents","aiEvts","_doDetach","handlerRef","useCapture","_doUnregister","unRegFn","capture","mergeEvtNamespace","theNamespace","namespaces","eventOn","_doAttach","registeredEvent","guid","eventOff","evtName_1","found_1","_unregisterEvents","regEvent","attachEvent","eventNameWithoutOn","detachEvent","addEventHandler","removeEventHandler","_addEventListeners","excludeEvents","addEventListeners","removeEventListeners","addPageUnloadEventListener","removePageUnloadEventListener","addPageHideEventListener","newNamespaces","pageUnloadAdded","visibilityState","removePageHideEventListener","addPageShowEventListener","pageShowAdded","removePageShowEventListener","_DYN_TO_LOWER_CASE","_DYN_BLK_VAL","_DYN_RD_ONLY","_DYN_NOTIFY","_DYN_WARN_TO_CONSOLE","_DYN_THROW_INTERNAL","_DYN_SET_DF","_DYN_WATCH","_DYN_APPLY","_DYN_PUSH","_DYN_SPLICE","_DYN_HDLR","_DYN_CANCEL","_DYN_IDENTIFIER","_DYN_REMOVE_NOTIFICATION_0","_DYN_ADD_NOTIFICATION_LIS1","_DYN_IS_INITIALIZED","_DYN__INACTIVE","_DYN_GET_NOTIFY_MGR","_DYN_GET_PLUGIN","_DYN_NAME","_DYN_I_KEY","_DYN_TIME","_DYN_PROCESS_NEXT","_DYN_GET_PROCESS_TEL_CONT2","_DYN_ENABLED","_DYN_STOP_POLLING_INTERNA3","_DYN_UNLOAD","_DYN_ON_COMPLETE","_DYN_VERSION","_DYN_LOGGING_LEVEL_CONSOL4","_DYN_TEARDOWN","_DYN_MESSAGE_ID","_DYN_IS_ASYNC","_DYN__DO_TEARDOWN","_DYN_UPDATE","_DYN_GET_NEXT","_DYN_SET_NEXT_PLUGIN","_DYN_PROTOCOL","_DYN_USER_AGENT","_DYN_SPLIT","_DYN_NODE_TYPE","_DYN_REPLACE","_DYN_LOG_INTERNAL_MESSAGE","_DYN_TYPE","_DYN_HANDLER","_DYN_STATUS","_DYN_GET_RESPONSE_HEADER","_DYN_GET_ALL_RESPONSE_HEA5","_DYN_IS_CHILD_EVT","_DYN_GET_CTX","_DYN_SET_CTX","_DYN_COMPLETE","_DYN_URL_STRING","_DYN_SEND_POST","_DYN_HEADERS","_DYN_TIMEOUT","_DYN_SET_REQUEST_HEADER","_DYN_SPAN_ID","_DYN_TRACE_FLAGS","STR_CHANNELS","STR_CORE","STR_CREATE_PERF_MGR","STR_DISABLED","STR_EXTENSION_CONFIG","STR_EXTENSIONS","STR_PROCESS_TELEMETRY","STR_PRIORITY","STR_EVENTS_SENT","STR_EVENTS_DISCARDED","STR_EVENTS_SEND_REQUEST","STR_PERF_EVENT","STR_OFFLINE_STORE","STR_OFFLINE_SENT","STR_OFFLINE_DROP","STR_GET_PERF_MGR","STR_DOMAIN","STR_PATH","STR_NOT_DYNAMIC_ERROR","UInt32Mask","MaxUInt32","SEED1","SEED2","_mwcSeeded","_mwcW","_mwcZ","_autoSeedMwc","seedValue","randomValue","maxValue","random32","signed","getRandomValues","Uint32Array","mwcRandom32","newId","number","chars","NavigationDirection","disposables","registerTextEditorCommand","acceptCurrent","acceptIncoming","acceptSelection","acceptBoth","acceptAllCurrent","acceptAllCurrentResources","acceptAllIncoming","acceptAllIncomingResources","acceptAllBoth","navigateNext","navigatePrevious","compare","resourceCB","registerCommand","every","resourceUri","activeTextEditor","acceptAll","resources","acceptAllResources","findConflictContainingSelection","showWarningMessage","leftRanges","rightRanges","leftUri","rightUri","mergeConflictLineOffsets","nextconflict","isEqual","selection","docPath","openToTheSide","opts","viewColumn","ViewColumn","Beside","Active","navigate","Forwards","Backwards","typeToAccept","tokenAfterCurrentBlock","active","isBefore","isAfter","direction","navigationResult","findConflictForNavigation","canNavigate","Selection","revealRange","TextEditorRevealType","Default","documents","all","resource","WorkspaceEdit","newText","contains","predicate","scanOrder","strDocumentMode","strLocation","strConsole","strJSON","strCrypto","strMsCrypto","strReactNative","strMsie","strTrident","strXMLHttpRequest","_isTrident","_navUserAgentCheck","_enableMocks","_useXDomainRequest","_beaconsSupported","_hasProperty","theClass","supported","tmp","setEnableEnvMocks","getLocation","checkForMock","mockLocation","getConsole","console","hasJSON","Boolean","getJSON","getCrypto","getMsCrypto","isReactNative","product","isIE","getIEVersion","userAgentStr","navigator_1","tridentVer","isBeaconsSupported","isFetchSupported","withKeepAlive","isSupported","useXDomainRequest","isXhrSupported","_getNamedValue","findMetaTag","querySelectorAll","findNamedServerTiming","navPerf","getEntriesByType","serverTiming","startHeaderMarker","endFooterMarker","currentConflict","conflictDescriptors","isEmptyOrWhitespace","startsWith","startHeader","endFooter","completeDescriptor","scanItemTolMergeConflictDescriptor","DocumentMergeConflict","scanned","rangeIncludingLineBreak","shiftBackOneCharacter","currentTokenLine","nextTokenLine","commonAncestorsMarker","includes","unlessEqual","ChannelControllerPriority","DisabledPropertyName","listenerFuncs","_aiNamespace","_listenerProxyFunc","getDebugExt","getDebugListener","strExecutionContextKey","strParentContextKey","strChildrenContextKey","_defaultPerfManager","PerfEvent","payloadDetails","theDetails_1","childTime","childEvts","childEvt","exTime","ParentContextKey","ChildrenContextKey","create","fire","doPerfActiveKey","doPerf","mgrSource","getSource","perfEvt","currentActive","children","getGblPerfMgr","_debugState","_debugResult","_debugHandled","STR_PROMISE","REJECTED","doAwaitResponse","doAwait","resolveFn","rejectFn","finallyFn","finally","doFinally","_hasInitEvent","_promiseDebugEnabled","STRING_STATES","DISPATCH_EVENT","_hasInitEventFn","createEvent","initEvent","_hasPromiseRejectionEvent","_promiseCls","_allSyncSettledCreator","_promiseCreator","NODE_UNHANDLED_REJECTION","UNHANDLED_REJECTION","_currentPromiseId","_uniquePromiseId","_unhandledRejectionTimeout","dumpFnObj","_createPromise","newPromise","processor","executor","_settledValue","_thePromise","additionalArgs","_state","_hasResolved","_queue","_parentId","_handled","_unHandledRejectionHandler","_then","onResolved","onRejected","_processQueue","pop","_strState","pending","_createSettleIfFn","allowState","_notifyUnhandledRejection","emit","populateEvent","useNewEvent","theEvt","emitEvent","onFinally","thenFinally","catchFinally","stateFn","_addDebugState$1","_rejectFn","_createAllPromise","values_1","pending_1","syncItemProcessor","createAsyncPromise","callbackTimeout","timeoutItemProcessor","createNativePromise","PrmCls","createSyncPromise","createSyncAllSettledPromise","processItem","createPromise","createAllPromise","strGetPlugin","_isinitialized","_rootCtx","_nextPlugin","_unloadHandlerContainer","currentCtx","_setDefaults","unloadDone","theUnloadCtx","theUnloadState","_unloadCallback","updateDone","theUpdateCtx","theUpdateState","_updateCallback","setInitialized","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynClassNamePrefix","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","DynProtoBaseProto","DynProtoGlobalSettings","DynProtoCurrent","strUseBaseInst","strSetInstFuncs","Obj","_objGetPrototypeOf","_objGetOwnProps","_gbl","_gblInst","o","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","_getObjProto","newProto","curProto","_forEachProp","_isDynamicCandidate","skipOwn","_throwTypeError","_hasVisited","_populatePrototype","className","baseInstFuncs","setInstanceFunc","instFuncTable","instFuncs_1","dynProtoProxy","instFunc","currentDynProtoProxy","canAddInst","objProto","visited","protoFunc","_getInstFunc","_getProtoFunc","_createDynamicPrototype","_getObjName","unknownValue","dynamicProto","delegateFunc","options","classProto","thisTarget","thisProto","_checkPrototype","perfOptions","useBaseInst","instFuncs","_getInstanceFuncs","baseFuncs","_instFuncProxy","funcHost","baseProto","_getBaseFuncs","RT_PROFILE","NRT_PROFILE","BE_PROFILE","STR_DROPPED","STR_REQUEUE","DEFAULT_CACHE_CONTROL","DEFAULT_CONTENT_TYPE","STR_CACHE_CONTROL","STR_CONTENT_TYPE_HEADER","STR_CLIENT_VERSION","STR_CLIENT_ID","STR_TIME_DELTA_TO_APPLY","STR_UPLOAD_TIME","STR_API_KEY","STR_MSA_DEVICE_TICKET","STR_AUTH_WEB_TOKEN","STR_AUTH_XTOKEN","STR_MSFPC","STR_TRACE","STR_USER","_DYN_ALLOW_REQUEST_SENDIN0","_DYN_FIRST_REQUEST_SENT","_DYN_SHOULD_ADD_CLOCK_SKE1","_DYN_GET_CLOCK_SKEW_HEADE2","_DYN_SET_CLOCK_SKEW","_DYN_COUNT","_DYN_EVENTS","_DYN_HDRS","_DYN_USE_HDRS","_DYN_SET_TIMEOUT_OVERRIDE","_DYN_CLEAR_TIMEOUT_OVERRI3","_DYN_OVERRIDE_ENDPOINT_UR4","_DYN_AVOID_OPTIONS","_DYN_ENABLE_COMPOUND_KEY","_DYN_DISABLE_XHR_SYNC","_DYN_DISABLE_FETCH_KEEP_A6","_DYN_USE_SEND_BEACON","_DYN_FETCH_CREDENTIALS","_DYN_ALWAYS_USE_XHR_OVERR7","_DYN_SERIALIZE_OFFLINE_EV8","_DYN_GET_OFFLINE_REQUEST_9","_DYN_CREATE_PAYLOAD","_DYN_CREATE_ONE_DSPAYLOAD","_DYN_PAYLOAD_BLOB","_DYN__THE_PAYLOAD","_DYN_BATCHES","_DYN_SEND_TYPE","_DYN_ADD_HEADER","_DYN_CAN_SEND_REQUEST","_DYN_SEND_QUEUED_REQUESTS","_DYN_IS_COMPLETELY_IDLE","_DYN_SET_UNLOADING","_DYN_RESUME","_DYN_SEND_SYNCHRONOUS_BAT10","_DYN__TRANSPORT","_DYN_GET_WPARAM","_DYN_IS_BEACON","_DYN_IS_TEARDOWN","_DYN_IS_SYNC","_DYN__SEND_REASON","_DYN_SET_KILL_SWITCH_TENA11","_DYN__BACK_OFF_TRANSMISSI12","_DYN_AUTO_FLUSH_EVENTS_LI14","_DYN_BASE_DATA","_DYN_SEND_ATTEMPT","_DYN_LATENCY","_DYN_SYNC","_getEventMsfpc","intWeb","_getMsfpc","msfpc","EventBatch","addEvents","_msfpc","Msfpc","addEvent","fromEvent","numEvents","ClockSkewManager","_allowRequestSending","_shouldAddClockSkewHeaders","_isFirstRequest","_clockSkewHeaderValue","_clockSkewSet","timeDeltaInMillis","_killedTokenDictionary","killTokens","killDuration","killedTokens","tenantToken","killDictionary","retryPolicyGetMillisToBackoffForRetry","retriesSoFar","waitDuration","randomBackoff","BaseBackoff","MaxRecordSize","MaxBeaconRecordSize","metadata","f","rCheckDot","perfManager","valueSanitizer","enableCompoundKey","getEncodedTypeOverride","excludeCsMetaData","strData","_checkForCompoundkey","_processSubKeys","_theSanitizer","_isReservedCache","_excludeCsMetaData","_getEncodedType","_processPathKeys","srcObj","thePath","checkReserved","metadataPathKeys","metadataCallback","processSubKeys","srcValue","theMetaPathKeys","destObj","subKeys","keyLen","subKey","isReserved","_isReservedField","handleField","retryCnt","isTeardown","isReducedPayload","sendType","apiKeys","payloadBlob","overflow","sizeExceed","failedEvts","batches","isBeacon","appendPayload","theBatch","maxEventsPerBatch","canAddEvents","payloadEvents","eventsAdded","sizeExceeded","isBeaconPayload","requestMaxSize","recordMaxSize","joinCount","eventBlob","getEventBlob","blobLength","evts","serializedEvent","_addMetadataCallback","serializedExt","pathKeys","getEncodedType","json","propKeys","propertyValue","metaData","metaTarget","newTarget","_addJSONPropertyMetaData","eventExt","serializedData","serializedBaseData","createTimeoutWrapper","argSetTimeout","argClearTimeout","strSendAttempt","UrlQueryString","_eventActionMap","_collectorQsHeaders","_collectorHeaderToQs","_addCollectorHeaderQsMapping","qsName","allowQs","_hasHeader","hasHeader","lowerHeader","_addRequestDetails","useHeaders","HttpManager","maxConnections","maxRequestRetriesBeforeBackoff","actions","_urlString","_killSwitch","_clockSkewManager","_outstandingRequests","_postManager","_sendInterfaces","_core","_customHttpInterface","_queryStringParameters","_batchQueue","_enableEventTimings","_cookieMgr","_useHeaders","_xhrTimeout","_disableXhrSync","_canHaveReducedPayload","_unloadHooks","_sendHook","_sendListener","_responseHandlers","_useBeacons","_xdrOncomplete","_fetchOnComplete","_xhrOnComplete","_handleCollectorResponse","headerMap","handleResponse","theUrl","nav_1","persistStorage","droppedBatches_1","sentBatches_1","sentEvts","_sendBatchesNotification","_isBeaconPayload","_adjustSendType","_hasIdleConnection","_clearQueue","theQueue","_canSendPayload","theBatches","_createDebugBatches","_sendBatches","retryCount","orgBatches_1","isSynchronous_1","droppedBatches","serializationStart","sendTransport","shift","isTenantKilled","_doPayloadSend","isSynchronous","useSendBeacon","_buildRequestDetails","requestDetails","hdrs","useHdrs","apiQsKeys","encodeURIComponent","wParam","_setTimingValue","timings","serializationCompleted","useSendHook_1","sendInterface_1","useHeaders_1","requestDetails_1","sendEventStart_1","batchLp","evtLp","orgPayloadData","_thePayload","_sendReason","sender","httpStatusCode","isRetrying","backOffTrans","shouldRetry","killToken","removedEvents","retryCount_1","_doAction","batchReason","_clearBackOff","sendEventCompleted_1","sendEventCompleted","_addEventCompletedTimings","_addCompleteTimings","sendQueuedRequests","_handleRequestFinished","_retryRequestIfNeeded","hookData_1","senderCalled_1","responseHandlers","webResult","sendSync","theAction_1","action","isSyncRequest_1","undefValue","postChannel","coreConfig","channelConfig","anonCookieName","qsParams","_addQueryStringParameter","_removeQueryStringParameter","payloadListener","xhrTimeout","syncHttpInterface","beaconHttpInterface","fetchSyncHttpInterface","beaconUnloadTransports","addResponseHandler","responseHandler","optimize","theBatches_1","removeHeader","addBatch","teardown","hook","MaxEventsLimitInMem","strEventsDiscarded","defaultPostChannelConfig","eventsLimitInMem","immediateEventLimit","autoFlushEventsLimit","disableAutoBatchFlushLimit","overrideInstrumentationKey","overrideEndpointUrl","ignoreMc1Ms0CookieProcessing","setTimeoutOverride","clearTimeoutOverride","payloadPreprocessor","disableEventTimings","disableOptimizeObj","unloadTransports","avoidOptions","alwaysUseXhrOverride","maxEventRetryAttempts","maxUnloadEventRetryAttempts","PostChannel","_postConfig","_flushCallbackTimer","_immediateQueueSizeLimit","_queueSizeLimit","_scheduledTimer","_immediateTimer","_currentBackoffCount","_timerCount","_httpManager","_batchQueues","_autoFlushEventsLimit","_autoFlushBatchLimit","_delayedBatchSendLatency","_delayedBatchReason","_optimizeObject","_isPageUnloadTriggered","_maxEventSendAttempts","_maxUnloadEventSendAttempts","_ignoreMc1Ms0CookieProcessing","_disableAutoBatchFlushLimit","_unloadHandlersAdded","_overrideInstrumentationKey","_isTeardownCalled","_flushCallbackQueue","_immediateQueueSize","_queueSize","_profiles","_currentProfile","_removeUnloadHandlers","_cleanEvent","_handleUnloadEvents","_releaseAllQueues","_handleShowEvents","_addEventToQueues","evtLatency","queueSize","queueLimit","eventDropped","_addEventToProperQueue","dropLatency","dropNumber","currentLatency","eventBatch","_getEventBatch","droppedEvents","droppedCount","_notifyBatchEvents","_resetQueueCounts","_dropEventWithLatencyOrLess","_notifyEvents","_sendEventsForLatencyAndAbove","queued","_queueBatches","_hasEvents","_scheduleTimer","immediateTimeOut","_createTimer","timeOut","requeue","_requeueEvents","_sendingEvent","sent","_eventsSentEvent","drop","_eventsDropped","rspFail","_eventsResponseFail","oth","_otherEvent","_initializeProfiles","iKeyMap","_setAutoLimits","theTimerFunc","timerMultiplier","batchQueue","_performAutoFlush","doFlush","immediateQueue","normalQueue","eventsQueued","latencyToProcess","_flushImpl","_waitForIdleManager","maxSendAttempts","_callNotification","notifyFunc","extraArgs","isSyncRequest","MaxNumberEventPerBatch","existingGetWParamMethod","wparam","_hookWParam","excludePageUnloadEvents","disablePageUnloadEvents","disablePageShowEvents","ev","details_1","serialize","createOneDSPayload","setEventQueueLimits","eventLimit","autoFlushLimit","_loadTransmitProfiles","profiles","profileName","profileValue","profLen","directValue","ceil","cleared","setMsaAuthTicket","ticket","setAuthPluginHeader","token","removeAuthPluginHeader","hasEvents","_setTransmitProfile","_maxHooks","_hookAddMonitor","_testHookMaxUnloadHooksCb","maxHooks","addMonitor","createUnloadHookContainer","_hooks","oldHooks","CFG_HANDLER_LINK","BLOCK_DYNAMIC","FORCE_DYNAMIC","_cfgDeepCopy","target_1","getDynamicConfigHandler","blockDynamicConversion","forceDynamicConversion","_canMakeDynamic","getFunc","state","blkVal","throwInvalidAccess","defaultDelay","completionPromise","onSuccess","delay","cancelTimeout","forceDelivery","isTriggered","aggregationErrorType","arrayMethodsToPatch","_throwDynamicError","_getOwnPropGetter","_setDynamicProperty","getter","detail","trk","clr","checkDynamic","isObjectOrArray","_getProperty","_makeDynamicObject","activeHandler","act","chng","ro","upd","isReferenced","rf","hdlr","valueState","newIsObjectOrArray","_createDynamicProperty","_setDynamicPropertyState","isDynamic","inPlace","blkProp","orgMethod","_patchArray","symPrefix","symPostfix","_createDynamicHandler","theState","use","_createAndUseHandler","allowUpdate","prevUpd","dynamicPropertySymbol","dynamicPropertyReadOnly","dynamicPropertyReferenced","dynamicPropertyBlockValue","dynamicPropertyDetail","_waitingHandlers","_watcherTimer","_useHandler","prevWatcher","bind","setDf","_notifyWatchers","notifyHandlers","watcherFailures_1","sourceErrors","theMessage","srcError","throwAggregationError","_createState","createDynamicConfig","onConfigChange","_logInvalidAccess","InstantiationStatus","TelemetryUtil","applyReplacements","replacementOptions","option","lookup","replacementString","shouldUseOneDataSystemSDK","getAdditionalCommonProperties","osShim","platform","architecture","release","getInstance","_instance","BaseTelemetryReporter","telemetrySender","vscodeAPI","initializationOptions","userOptIn","errorOptIn","_onDidChangeTelemetryLevel","EventEmitter","onDidChangeTelemetryLevel","telemetryLogger","createTelemetryLogger","updateUserOptIn","onDidChangeEnableStates","isErrorsEnabled","isUsageEnabled","instantiateSender","telemetryLevel","internalSendTelemetryEvent","dangerous","sendEventData","logUsage","sendRawTelemetryEvent","modifiedProperties","propertyKey","TelemetryTrustedValue","sendDangerousTelemetryEvent","internalSendTelemetryErrorEvent","logError","sendTelemetryErrorEvent","sendDangerousTelemetryErrorEvent","BaseTelemetrySender","clientFactory","_instantiationStatus","NOT_INSTANTIATED","_exceptionQueue","_clientFactory","_key","_telemetryClient","logEvent","INSTANTIATED","sendErrorData","errorData","errorProperties","_flushQueues","INSTANTIATING","client","catch","getBrowserRelease","navigator","userAgentData","brands","brand","TelemetryReporter","machineId","xhrOverride","appInsightsClient","basicAISDK","authConfig","disableAjaxTracking","disableExceptionTracking","disableFetchTracking","disableCorrelationHeaders","disableCookiesUsage","autoTrackPageVisitTime","emitLineDelimitedJson","appInsightsClientFactory","appInsightsCore","oneDs","postPlugin","collectorChannelPlugin","internalTesting","getAICore","completedFlush","oneDataSystemClientFactory","super","additionalCommonProperties","newGuid","uuid","generateW3CId","hexValues","oct","a","clockSequenceHi","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","defineProperty","r","Symbol","__webpack_exports__"],"sourceRoot":""}