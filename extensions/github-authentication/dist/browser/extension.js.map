{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Constants.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/__DynamicConstants.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/DataSanitizer.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Event.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Trace.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/HelperFuncs.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/PageView.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/PageViewPerformance.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Exception.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/DataPoint.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Metric.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/UrlHelperFuncs.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Util.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/RemoteDependencyData.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Offline.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Enums.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/StorageHelperFuncs.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/RequestResponseHeaders.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/Contracts/ContextTagKeys.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/PartAExtensions.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/Envelope.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Telemetry/Common/Data.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/InternalConstants.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/__DynamicConstants.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/EnvelopeCreator.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/SendBuffer.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/Sender.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/Serializer.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/SamplingScoreGenerators/HashCodeScoreGenerator.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/SamplingScoreGenerators/SamplingScoreGenerator.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-channel-js/dist-es5/TelemetryProcessors/Sample.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/ConnectionStringParser.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-web-basic/dist-es5/index.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-web-basic/dist-es5/__DynamicConstants.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/Interfaces/Contracts/SeverityLevel.js","webpack://github-authentication/./node_modules/@nevware21/ts-utils/dist/es5/mod/ts-utils.js","webpack://github-authentication/./src/common/keychain.ts","webpack://github-authentication/./src/browser/buffer.ts","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/TelemetryHelpers.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-shims/dist-es5/TsLibShims.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/UnloadHandlerContainer.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/SenderPostManager.js","webpack://github-authentication/./src/common/errors.ts","webpack://github-authentication/./node_modules/@microsoft/1ds-core-js/dist-es5/InternalConstants.js","webpack://github-authentication/./node_modules/@microsoft/1ds-core-js/dist-es5/AppInsightsCore.js","webpack://github-authentication/./node_modules/@microsoft/1ds-core-js/dist-es5/Enums.js","webpack://github-authentication/./node_modules/@microsoft/1ds-core-js/dist-es5/ValueSanitizer.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Interfaces/IChannelControls.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/LoggingEnums.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/ConfigDefaults.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/ResponseHelpers.js","webpack://github-authentication/./src/github.ts","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/NotificationManager.js","webpack://github-authentication/external commonjs \"vscode\"","webpack://github-authentication/./node_modules/vscode-tas-client/index.js","webpack://github-authentication/./node_modules/tas-client/tas-client/ExperimentationServiceBase.js","webpack://github-authentication/./node_modules/@microsoft/1ds-core-js/dist-es5/__DynamicConstants.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/W3cTraceParent.js","webpack://github-authentication/./node_modules/tas-client/tas-client/Util/HttpClient.js","webpack://github-authentication/./src/browser/authServer.ts","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/ProcessTelemetryContext.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/ConfigDefaultHelpers.js","webpack://github-authentication/./node_modules/vscode-tas-client/vscode-tas-client/VSCodeTasClient.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AppInsightsCore.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/TelemetryInitializerPlugin.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-common/dist-es5/applicationinsights-common.js","webpack://github-authentication/./node_modules/tas-client/index.js","webpack://github-authentication/./node_modules/tas-client/tas-client/Util/PollingService.js","webpack://github-authentication/./src/browser/crypto.ts","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/EventsDiscardedReason.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/HelperFuncs.js","webpack://github-authentication/./src/flows.ts","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DiagnosticLogger.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AsyncUtils.js","webpack://github-authentication/./node_modules/tas-client/tas-client/FeatureProvider/FilteredFeatureProvider.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DataCacheHelper.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/EnumHelperFuncs.js","webpack://github-authentication/./node_modules/@microsoft/1ds-core-js/dist-es5/Utils.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK.Enums/InitActiveStatusEnum.js","webpack://github-authentication/./src/common/logger.ts","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/CookieMgr.js","webpack://github-authentication/./node_modules/tas-client/tas-client/FeatureProvider/TasApiFeatureProvider.js","webpack://github-authentication/./src/extension.ts","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-shims/dist-es5/Constants.js","webpack://github-authentication/./node_modules/tas-client/tas-client/ExperimentationServiceAutoPolling.js","webpack://github-authentication/./src/browser/fetch.ts","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/EventHelpers.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/__DynamicConstants.js","webpack://github-authentication/./src/common/experimentationService.ts","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/InternalConstants.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/RandomHelper.js","webpack://github-authentication/./node_modules/tas-client/tas-client/FeatureProvider/BaseFeatureProvider.js","webpack://github-authentication/./src/common/utils.ts","webpack://github-authentication/./node_modules/tas-client/tas-client/ExperimentationService.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/EnvUtils.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/Constants.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/DbgExtensionUtils.js","webpack://github-authentication/./src/githubServer.ts","webpack://github-authentication/./src/common/env.ts","webpack://github-authentication/./node_modules/vscode-tas-client/vscode-tas-client/MementoKeyValueStorage.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/PerfManager.js","webpack://github-authentication/./node_modules/@nevware21/ts-async/dist/es5/mod/ts-async.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/BaseTelemetryPlugin.js","webpack://github-authentication/./node_modules/@microsoft/dynamicproto-js/dist-es5/DynamicProto.js","webpack://github-authentication/./src/config.ts","webpack://github-authentication/./node_modules/tas-client/tas-client/Util/MemoryKeyValueStorage.js","webpack://github-authentication/./node_modules/@microsoft/1ds-post-js/dist-es5/DataModels.js","webpack://github-authentication/./node_modules/@microsoft/1ds-post-js/dist-es5/InternalConstants.js","webpack://github-authentication/./node_modules/@microsoft/1ds-post-js/dist-es5/__DynamicConstants.js","webpack://github-authentication/./node_modules/@microsoft/1ds-post-js/dist-es5/EventBatch.js","webpack://github-authentication/./node_modules/@microsoft/1ds-post-js/dist-es5/ClockSkewManager.js","webpack://github-authentication/./node_modules/@microsoft/1ds-post-js/dist-es5/KillSwitch.js","webpack://github-authentication/./node_modules/@microsoft/1ds-post-js/dist-es5/RetryPolicy.js","webpack://github-authentication/./node_modules/@microsoft/1ds-post-js/dist-es5/Serializer.js","webpack://github-authentication/./node_modules/@microsoft/1ds-post-js/dist-es5/HttpManager.js","webpack://github-authentication/./node_modules/@microsoft/1ds-post-js/dist-es5/TimeoutOverrideWrapper.js","webpack://github-authentication/./node_modules/@microsoft/1ds-post-js/dist-es5/PostChannel.js","webpack://github-authentication/./node_modules/vscode-tas-client/vscode-tas-client/VSCodeFilterProvider.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/UnloadHookContainer.js","webpack://github-authentication/./node_modules/vscode-tas-client/vscode-tas-client/TelemetryDisabledExperimentationService.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicSupport.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/AggregationError.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicProperty.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicState.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/Config/DynamicConfig.js","webpack://github-authentication/./node_modules/@vscode/extension-telemetry/dist/browser/common/baseTelemetrySender.js","webpack://github-authentication/./node_modules/@vscode/extension-telemetry/dist/browser/common/util.js","webpack://github-authentication/./node_modules/@vscode/extension-telemetry/dist/browser/common/baseTelemetryReporter.js","webpack://github-authentication/./node_modules/@vscode/extension-telemetry/dist/browser/browser/telemetryReporter.js","webpack://github-authentication/./node_modules/@vscode/extension-telemetry/dist/browser/common/appInsightsClientFactory.js","webpack://github-authentication/./node_modules/@vscode/extension-telemetry/dist/browser/common/1dsClientFactory.js","webpack://github-authentication/./node_modules/@microsoft/applicationinsights-core-js/dist-es5/JavaScriptSDK/CoreUtils.js","webpack://github-authentication/../../node_modules/path-browserify/index.js","webpack://github-authentication/webpack/bootstrap","webpack://github-authentication/webpack/runtime/define property getters","webpack://github-authentication/webpack/runtime/hasOwnProperty shorthand","webpack://github-authentication/webpack/runtime/make namespace object","webpack://github-authentication/webpack/startup"],"sourcesContent":["/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n/**\r\n * This is an internal property used to cause internal (reporting) requests to be ignored from reporting\r\n * additional telemetry, to handle polyfil implementations ALL urls used with a disabled request will\r\n * also be ignored for future requests even when this property is not provided.\r\n * Tagging as Ignore as this is an internal value and is not expected to be used outside of the SDK\r\n * @ignore\r\n */\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var SampleRate = \"sampleRate\";\r\nexport var ProcessLegacy = \"ProcessLegacy\";\r\nexport var HttpMethod = \"http.method\";\r\nexport var DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\nexport var DEFAULT_BREEZE_PATH = \"/v2/track\";\r\nexport var strNotSpecified = \"not_specified\";\r\nexport var strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_SPLIT = \"split\"; // Count: 6\r\nexport var _DYN_LENGTH = \"length\"; // Count: 41\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 6\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 9\r\nexport var _DYN_PUSH = \"push\"; // Count: 5\r\nexport var _DYN_REMOVE_ITEM = \"removeItem\"; // Count: 3\r\nexport var _DYN_NAME = \"name\"; // Count: 11\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 10\r\nexport var _DYN_COUNT = \"count\"; // Count: 8\r\nexport var _DYN_PRE_TRIGGER_DATE = \"preTriggerDate\"; // Count: 4\r\nexport var _DYN_DISABLED = \"disabled\"; // Count: 3\r\nexport var _DYN_INTERVAL = \"interval\"; // Count: 3\r\nexport var _DYN_DAYS_OF_MONTH = \"daysOfMonth\"; // Count: 3\r\nexport var _DYN_DATE = \"date\"; // Count: 5\r\nexport var _DYN_GET_UTCDATE = \"getUTCDate\"; // Count: 3\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 4\r\nexport var _DYN_PATHNAME = \"pathname\"; // Count: 4\r\nexport var _DYN_CORRELATION_HEADER_E0 = \"correlationHeaderExcludePatterns\"; // Count: 2\r\nexport var _DYN_EXTENSION_CONFIG = \"extensionConfig\"; // Count: 4\r\nexport var _DYN_EXCEPTIONS = \"exceptions\"; // Count: 6\r\nexport var _DYN_PARSED_STACK = \"parsedStack\"; // Count: 13\r\nexport var _DYN_PROPERTIES = \"properties\"; // Count: 9\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 9\r\nexport var _DYN_SIZE_IN_BYTES = \"sizeInBytes\"; // Count: 11\r\nexport var _DYN_TYPE_NAME = \"typeName\"; // Count: 11\r\nexport var _DYN_SEVERITY_LEVEL = \"severityLevel\"; // Count: 5\r\nexport var _DYN_PROBLEM_GROUP = \"problemGroup\"; // Count: 3\r\nexport var _DYN_IS_MANUAL = \"isManual\"; // Count: 3\r\nexport var _DYN__CREATE_FROM_INTERFA1 = \"CreateFromInterface\"; // Count: 2\r\nexport var _DYN_ASSEMBLY = \"assembly\"; // Count: 7\r\nexport var _DYN_FILE_NAME = \"fileName\"; // Count: 8\r\nexport var _DYN_HAS_FULL_STACK = \"hasFullStack\"; // Count: 6\r\nexport var _DYN_LEVEL = \"level\"; // Count: 5\r\nexport var _DYN_METHOD = \"method\"; // Count: 7\r\nexport var _DYN_LINE = \"line\"; // Count: 6\r\nexport var _DYN_DURATION = \"duration\"; // Count: 4\r\nexport var _DYN_RECEIVED_RESPONSE = \"receivedResponse\"; // Count: 2\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, getJSON, hasJSON, isObject, objForEachKey, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { asString, strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_STRINGIFY, _DYN_TO_STRING } from \"../../__DynamicConstants\";\r\nexport function dataSanitizeKeyAndAddUniqueness(logger, key, map) {\r\n    var origLength = key[_DYN_LENGTH /* @min:%2elength */];\r\n    var field = dataSanitizeKey(logger, key);\r\n    // validation truncated the length.  We need to add uniqueness\r\n    if (field[_DYN_LENGTH /* @min:%2elength */] !== origLength) {\r\n        var i = 0;\r\n        var uniqueField = field;\r\n        while (map[uniqueField] !== undefined) {\r\n            i++;\r\n            uniqueField = strSubstring(field, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ - 3) + dsPadNumber(i);\r\n        }\r\n        field = uniqueField;\r\n    }\r\n    return field;\r\n}\r\nexport function dataSanitizeKey(logger, name) {\r\n    var nameTrunc;\r\n    if (name) {\r\n        // Remove any leading or trailing whitespace\r\n        name = strTrim(asString(name));\r\n        // truncate the string to 150 chars\r\n        if (name[_DYN_LENGTH /* @min:%2elength */] > 150 /* DataSanitizerValues.MAX_NAME_LENGTH */) {\r\n            nameTrunc = strSubstring(name, 0, 150 /* DataSanitizerValues.MAX_NAME_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 57 /* _eInternalMessageId.NameTooLong */, \"name is too long.  It has been truncated to \" + 150 /* DataSanitizerValues.MAX_NAME_LENGTH */ + \" characters.\", { name: name }, true);\r\n        }\r\n    }\r\n    return nameTrunc || name;\r\n}\r\nexport function dataSanitizeString(logger, value, maxLength) {\r\n    if (maxLength === void 0) { maxLength = 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; }\r\n    var valueTrunc;\r\n    if (value) {\r\n        maxLength = maxLength ? maxLength : 1024 /* DataSanitizerValues.MAX_STRING_LENGTH */; // in case default parameters dont work\r\n        value = strTrim(asString(value));\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            valueTrunc = strSubstring(value, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 61 /* _eInternalMessageId.StringValueTooLong */, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n        }\r\n    }\r\n    return valueTrunc || value;\r\n}\r\nexport function dataSanitizeUrl(logger, url) {\r\n    return dataSanitizeInput(logger, url, 2048 /* DataSanitizerValues.MAX_URL_LENGTH */, 66 /* _eInternalMessageId.UrlTooLong */);\r\n}\r\nexport function dataSanitizeMessage(logger, message) {\r\n    var messageTrunc;\r\n    if (message) {\r\n        if (message[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */) {\r\n            messageTrunc = strSubstring(message, 0, 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 56 /* _eInternalMessageId.MessageTruncated */, \"message is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_MESSAGE_LENGTH */ + \" characters.\", { message: message }, true);\r\n        }\r\n    }\r\n    return messageTrunc || message;\r\n}\r\nexport function dataSanitizeException(logger, exception) {\r\n    var exceptionTrunc;\r\n    if (exception) {\r\n        // Make surte its a string\r\n        var value = \"\" + exception;\r\n        if (value[_DYN_LENGTH /* @min:%2elength */] > 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */) {\r\n            exceptionTrunc = strSubstring(value, 0, 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 52 /* _eInternalMessageId.ExceptionTruncated */, \"exception is too long, it has been truncated to \" + 32768 /* DataSanitizerValues.MAX_EXCEPTION_LENGTH */ + \" characters.\", { exception: exception }, true);\r\n        }\r\n    }\r\n    return exceptionTrunc || exception;\r\n}\r\nexport function dataSanitizeProperties(logger, properties) {\r\n    if (properties) {\r\n        var tempProps_1 = {};\r\n        objForEachKey(properties, function (prop, value) {\r\n            if (isObject(value) && hasJSON()) {\r\n                // Stringify any part C properties\r\n                try {\r\n                    value = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"custom property is not valid\", { exception: e }, true);\r\n                }\r\n            }\r\n            value = dataSanitizeString(logger, value, 8192 /* DataSanitizerValues.MAX_PROPERTY_LENGTH */);\r\n            prop = dataSanitizeKeyAndAddUniqueness(logger, prop, tempProps_1);\r\n            tempProps_1[prop] = value;\r\n        });\r\n        properties = tempProps_1;\r\n    }\r\n    return properties;\r\n}\r\nexport function dataSanitizeMeasurements(logger, measurements) {\r\n    if (measurements) {\r\n        var tempMeasurements_1 = {};\r\n        objForEachKey(measurements, function (measure, value) {\r\n            measure = dataSanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements_1);\r\n            tempMeasurements_1[measure] = value;\r\n        });\r\n        measurements = tempMeasurements_1;\r\n    }\r\n    return measurements;\r\n}\r\nexport function dataSanitizeId(logger, id) {\r\n    return id ? dataSanitizeInput(logger, id, 128 /* DataSanitizerValues.MAX_ID_LENGTH */, 69 /* _eInternalMessageId.IdTooLong */)[_DYN_TO_STRING /* @min:%2etoString */]() : id;\r\n}\r\nexport function dataSanitizeInput(logger, input, maxLength, _msgId) {\r\n    var inputTrunc;\r\n    if (input) {\r\n        input = strTrim(asString(input));\r\n        if (input[_DYN_LENGTH /* @min:%2elength */] > maxLength) {\r\n            inputTrunc = strSubstring(input, 0, maxLength);\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n        }\r\n    }\r\n    return inputTrunc || input;\r\n}\r\nexport function dsPadNumber(num) {\r\n    var s = \"00\" + num;\r\n    return strSubstr(s, s[_DYN_LENGTH /* @min:%2elength */] - 3);\r\n}\r\n//# sourceMappingURL=DataSanitizer.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Event = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the EventTelemetry object\r\n     */\r\n    function Event(logger, name, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n    Event.dataType = \"EventData\";\r\n    return Event;\r\n}());\r\nexport { Event };\r\n//# sourceMappingURL=Event.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_PROPERTIES, _DYN_SEVERITY_LEVEL } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties } from \"./Common/DataSanitizer\";\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the TraceTelemetry object\r\n     */\r\n    function Trace(logger, message, severityLevel, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        message = message || strNotSpecified;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, message);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (severityLevel) {\r\n            _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n        }\r\n    }\r\n    Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n    Trace.dataType = \"MessageData\";\r\n    return Trace;\r\n}());\r\nexport { Trace };\r\n//# sourceMappingURL=Trace.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar strEmpty = \"\";\r\nexport function stringToBoolOrDefault(str, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = false; }\r\n    if (str === undefined || str === null) {\r\n        return defaultValue;\r\n    }\r\n    return str.toString()[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Convert ms to c# time span format\r\n */\r\nexport function msToTimeSpan(totalms) {\r\n    if (isNaN(totalms) || totalms < 0) {\r\n        totalms = 0;\r\n    }\r\n    totalms = Math.round(totalms);\r\n    var ms = strEmpty + totalms % 1000;\r\n    var sec = strEmpty + Math.floor(totalms / 1000) % 60;\r\n    var min = strEmpty + Math.floor(totalms / (1000 * 60)) % 60;\r\n    var hour = strEmpty + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n    var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n    ms = ms[_DYN_LENGTH /* @min:%2elength */] === 1 ? \"00\" + ms : ms[_DYN_LENGTH /* @min:%2elength */] === 2 ? \"0\" + ms : ms;\r\n    sec = sec[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + sec : sec;\r\n    min = min[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + min : min;\r\n    hour = hour[_DYN_LENGTH /* @min:%2elength */] < 2 ? \"0\" + hour : hour;\r\n    return (days > 0 ? days + \".\" : strEmpty) + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n}\r\nexport function getExtensionByName(extensions, identifier) {\r\n    var extension = null;\r\n    arrForEach(extensions, function (value) {\r\n        if (value.identifier === identifier) {\r\n            extension = value;\r\n            return -1;\r\n        }\r\n    });\r\n    return extension;\r\n}\r\nexport function isCrossOriginError(message, url, lineNumber, columnNumber, error) {\r\n    return !error && isString(message) && (message === \"Script error.\" || message === \"Script error\");\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeId, dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageView = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            id: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = dataSanitizeId(logger, id);\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        if (!isNaN(durationMs)) {\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(durationMs);\r\n        }\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n    PageView.dataType = \"PageviewData\";\r\n    return PageView;\r\n}());\r\nexport { PageView };\r\n//# sourceMappingURL=PageView.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES, _DYN_RECEIVED_RESPONSE } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar PageViewPerformance = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the PageEventTelemetry object\r\n     */\r\n    function PageViewPerformance(logger, name, url, unused, properties, measurements, cs4BaseData) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            url: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            perfTotal: 0 /* FieldType.Default */,\r\n            networkConnect: 0 /* FieldType.Default */,\r\n            sentRequest: 0 /* FieldType.Default */,\r\n            receivedResponse: 0 /* FieldType.Default */,\r\n            domProcessing: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.url = dataSanitizeUrl(logger, url);\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n        if (cs4BaseData) {\r\n            _self.domProcessing = cs4BaseData.domProcessing;\r\n            _self[_DYN_DURATION /* @min:%2eduration */] = cs4BaseData[_DYN_DURATION /* @min:%2eduration */];\r\n            _self.networkConnect = cs4BaseData.networkConnect;\r\n            _self.perfTotal = cs4BaseData.perfTotal;\r\n            _self[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */] = cs4BaseData[_DYN_RECEIVED_RESPONSE /* @min:%2ereceivedResponse */];\r\n            _self.sentRequest = cs4BaseData.sentRequest;\r\n        }\r\n    }\r\n    PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n    PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n    return PageViewPerformance;\r\n}());\r\nexport { PageViewPerformance };\r\n//# sourceMappingURL=PageViewPerformance.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, arrMap, isArray, isError, isFunction, isNullOrUndefined, isObject, isString, strTrim } from \"@microsoft/applicationinsights-core-js\";\r\nimport { getWindow, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_ASSEMBLY, _DYN_EXCEPTIONS, _DYN_FILE_NAME, _DYN_HAS_FULL_STACK, _DYN_IS_MANUAL, _DYN_LENGTH, _DYN_LEVEL, _DYN_LINE, _DYN_MEASUREMENTS, _DYN_MESSAGE, _DYN_METHOD, _DYN_NAME, _DYN_PARSED_STACK, _DYN_PROBLEM_GROUP, _DYN_PROPERTIES, _DYN_PUSH, _DYN_SEVERITY_LEVEL, _DYN_SIZE_IN_BYTES, _DYN_SPLIT, _DYN_STRINGIFY, _DYN_TO_STRING, _DYN_TYPE_NAME, _DYN__CREATE_FROM_INTERFA1 } from \"../__DynamicConstants\";\r\nimport { dataSanitizeException, dataSanitizeMeasurements, dataSanitizeMessage, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar NoMethod = \"<no_method>\";\r\nvar strError = \"error\";\r\nvar strStack = \"stack\";\r\nvar strStackDetails = \"stackDetails\";\r\nvar strErrorSrc = \"errorSrc\";\r\nvar strMessage = \"message\";\r\nvar strDescription = \"description\";\r\nfunction _stringify(value, convertToString) {\r\n    var result = value;\r\n    if (result && !isString(result)) {\r\n        if (JSON && JSON[_DYN_STRINGIFY /* @min:%2estringify */]) {\r\n            result = JSON[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            if (convertToString && (!result || result === \"{}\")) {\r\n                if (isFunction(value[_DYN_TO_STRING /* @min:%2etoString */])) {\r\n                    result = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                }\r\n                else {\r\n                    result = \"\" + value;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            result = \"\" + value + \" - (Missing JSON.stringify)\";\r\n        }\r\n    }\r\n    return result || \"\";\r\n}\r\nfunction _formatMessage(theEvent, errorType) {\r\n    var evtMessage = theEvent;\r\n    if (theEvent) {\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            evtMessage = theEvent[strMessage] || theEvent[strDescription] || evtMessage;\r\n        }\r\n        // Make sure the message is a string\r\n        if (evtMessage && !isString(evtMessage)) {\r\n            // tslint:disable-next-line: prefer-conditional-expression\r\n            evtMessage = _stringify(evtMessage, true);\r\n        }\r\n        if (theEvent[\"filename\"]) {\r\n            // Looks like an event object with filename\r\n            evtMessage = evtMessage + \" @\" + (theEvent[\"filename\"] || \"\") + \":\" + (theEvent[\"lineno\"] || \"?\") + \":\" + (theEvent[\"colno\"] || \"?\");\r\n        }\r\n    }\r\n    // Automatically add the error type to the message if it does already appear to be present\r\n    if (errorType && errorType !== \"String\" && errorType !== \"Object\" && errorType !== \"Error\" && strIndexOf(evtMessage || \"\", errorType) === -1) {\r\n        evtMessage = errorType + \": \" + evtMessage;\r\n    }\r\n    return evtMessage || \"\";\r\n}\r\nfunction _isExceptionDetailsInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return \"hasFullStack\" in value && \"typeName\" in value;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isExceptionInternal(value) {\r\n    try {\r\n        if (isObject(value)) {\r\n            return (\"ver\" in value && \"exceptions\" in value && \"properties\" in value);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // This can happen with some native browser objects, but should not happen for the type we are checking for\r\n    }\r\n    return false;\r\n}\r\nfunction _isStackDetails(details) {\r\n    return details && details.src && isString(details.src) && details.obj && isArray(details.obj);\r\n}\r\nfunction _convertStackObj(errorStack) {\r\n    var src = errorStack || \"\";\r\n    if (!isString(src)) {\r\n        if (isString(src[strStack])) {\r\n            src = src[strStack];\r\n        }\r\n        else {\r\n            src = \"\" + src;\r\n        }\r\n    }\r\n    var items = src[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    return {\r\n        src: src,\r\n        obj: items\r\n    };\r\n}\r\nfunction _getOperaStack(errorMessage) {\r\n    var stack = [];\r\n    var lines = errorMessage[_DYN_SPLIT /* @min:%2esplit */](\"\\n\");\r\n    for (var lp = 0; lp < lines[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n        var entry = lines[lp];\r\n        if (lines[lp + 1]) {\r\n            entry += \"@\" + lines[lp + 1];\r\n            lp++;\r\n        }\r\n        stack[_DYN_PUSH /* @min:%2epush */](entry);\r\n    }\r\n    return {\r\n        src: errorMessage,\r\n        obj: stack\r\n    };\r\n}\r\nfunction _getStackFromErrorObj(errorObj) {\r\n    var details = null;\r\n    if (errorObj) {\r\n        try {\r\n            /* Using bracket notation is support older browsers (IE 7/8 -- dont remember the version) that throw when using dot\r\n            notation for undefined objects and we don't want to loose the error from being reported */\r\n            if (errorObj[strStack]) {\r\n                // Chrome/Firefox\r\n                details = _convertStackObj(errorObj[strStack]);\r\n            }\r\n            else if (errorObj[strError] && errorObj[strError][strStack]) {\r\n                // Edge error event provides the stack and error object\r\n                details = _convertStackObj(errorObj[strError][strStack]);\r\n            }\r\n            else if (errorObj[\"exception\"] && errorObj.exception[strStack]) {\r\n                details = _convertStackObj(errorObj.exception[strStack]);\r\n            }\r\n            else if (_isStackDetails(errorObj)) {\r\n                details = errorObj;\r\n            }\r\n            else if (_isStackDetails(errorObj[strStackDetails])) {\r\n                details = errorObj[strStackDetails];\r\n            }\r\n            else if (getWindow() && getWindow()[\"opera\"] && errorObj[strMessage]) {\r\n                // Opera\r\n                details = _getOperaStack(errorObj[_DYN_MESSAGE /* @min:%2emessage */]);\r\n            }\r\n            else if (errorObj[\"reason\"] && errorObj.reason[strStack]) {\r\n                // UnhandledPromiseRejection\r\n                details = _convertStackObj(errorObj.reason[strStack]);\r\n            }\r\n            else if (isString(errorObj)) {\r\n                details = _convertStackObj(errorObj);\r\n            }\r\n            else {\r\n                var evtMessage = errorObj[strMessage] || errorObj[strDescription] || \"\";\r\n                if (isString(errorObj[strErrorSrc])) {\r\n                    if (evtMessage) {\r\n                        evtMessage += \"\\n\";\r\n                    }\r\n                    evtMessage += \" from \" + errorObj[strErrorSrc];\r\n                }\r\n                if (evtMessage) {\r\n                    details = _convertStackObj(evtMessage);\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // something unexpected happened so to avoid failing to report any error lets swallow the exception\r\n            // and fallback to the callee/caller method\r\n            details = _convertStackObj(e);\r\n        }\r\n    }\r\n    return details || {\r\n        src: \"\",\r\n        obj: null\r\n    };\r\n}\r\nfunction _formatStackTrace(stackDetails) {\r\n    var stack = \"\";\r\n    if (stackDetails) {\r\n        if (stackDetails.obj) {\r\n            arrForEach(stackDetails.obj, function (entry) {\r\n                stack += entry + \"\\n\";\r\n            });\r\n        }\r\n        else {\r\n            stack = stackDetails.src || \"\";\r\n        }\r\n    }\r\n    return stack;\r\n}\r\nfunction _parseStack(stack) {\r\n    var parsedStack;\r\n    var frames = stack.obj;\r\n    if (frames && frames[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        parsedStack = [];\r\n        var level_1 = 0;\r\n        var totalSizeInBytes_1 = 0;\r\n        arrForEach(frames, function (frame) {\r\n            var theFrame = frame[_DYN_TO_STRING /* @min:%2etoString */]();\r\n            if (_StackFrame.regex.test(theFrame)) {\r\n                var parsedFrame = new _StackFrame(theFrame, level_1++);\r\n                totalSizeInBytes_1 += parsedFrame[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                parsedStack[_DYN_PUSH /* @min:%2epush */](parsedFrame);\r\n            }\r\n        });\r\n        // DP Constraint - exception parsed stack must be < 32KB\r\n        // remove frames from the middle to meet the threshold\r\n        var exceptionParsedStackThreshold = 32 * 1024;\r\n        if (totalSizeInBytes_1 > exceptionParsedStackThreshold) {\r\n            var left = 0;\r\n            var right = parsedStack[_DYN_LENGTH /* @min:%2elength */] - 1;\r\n            var size = 0;\r\n            var acceptedLeft = left;\r\n            var acceptedRight = right;\r\n            while (left < right) {\r\n                // check size\r\n                var lSize = parsedStack[left][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                var rSize = parsedStack[right][_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */];\r\n                size += lSize + rSize;\r\n                if (size > exceptionParsedStackThreshold) {\r\n                    // remove extra frames from the middle\r\n                    var howMany = acceptedRight - acceptedLeft + 1;\r\n                    parsedStack.splice(acceptedLeft, howMany);\r\n                    break;\r\n                }\r\n                // update pointers\r\n                acceptedLeft = left;\r\n                acceptedRight = right;\r\n                left++;\r\n                right--;\r\n            }\r\n        }\r\n    }\r\n    return parsedStack;\r\n}\r\nfunction _getErrorType(errorType) {\r\n    // Gets the Error Type by passing the constructor (used to get the true type of native error object).\r\n    var typeName = \"\";\r\n    if (errorType) {\r\n        typeName = errorType.typeName || errorType[_DYN_NAME /* @min:%2ename */] || \"\";\r\n        if (!typeName) {\r\n            try {\r\n                var funcNameRegex = /function (.{1,200})\\(/;\r\n                var results = (funcNameRegex).exec((errorType).constructor[_DYN_TO_STRING /* @min:%2etoString */]());\r\n                typeName = (results && results[_DYN_LENGTH /* @min:%2elength */] > 1) ? results[1] : \"\";\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n            }\r\n        }\r\n    }\r\n    return typeName;\r\n}\r\n/**\r\n * Formats the provided errorObj for display and reporting, it may be a String, Object, integer or undefined depending on the browser.\r\n * @param errorObj - The supplied errorObj\r\n */\r\nexport function _formatErrorCode(errorObj) {\r\n    if (errorObj) {\r\n        try {\r\n            if (!isString(errorObj)) {\r\n                var errorType = _getErrorType(errorObj);\r\n                var result = _stringify(errorObj, false);\r\n                if (!result || result === \"{}\") {\r\n                    if (errorObj[strError]) {\r\n                        // Looks like an MS Error Event\r\n                        errorObj = errorObj[strError];\r\n                        errorType = _getErrorType(errorObj);\r\n                    }\r\n                    result = _stringify(errorObj, true);\r\n                }\r\n                if (strIndexOf(result, errorType) !== 0 && errorType !== \"String\") {\r\n                    return errorType + \":\" + result;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty -- Ignoring any failures as nothing we can do\r\n        }\r\n    }\r\n    // Fallback to just letting the object format itself into a string\r\n    return \"\" + (errorObj || \"\");\r\n}\r\nvar Exception = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the ExceptionTelemetry object\r\n     */\r\n    function Exception(logger, exception, properties, measurements, severityLevel, id) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            exceptions: 1 /* FieldType.Required */,\r\n            severityLevel: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2; // TODO: handle the CS\"4.0\" ==> breeze 2 conversion in a better way\r\n        if (!_isExceptionInternal(exception)) {\r\n            if (!properties) {\r\n                properties = {};\r\n            }\r\n            if (id) {\r\n                properties.id = id;\r\n            }\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = [new _ExceptionDetails(logger, exception, properties)];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n            if (severityLevel) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = severityLevel;\r\n            }\r\n            if (id) {\r\n                _self.id = id;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_EXCEPTIONS /* @min:%2eexceptions */] = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */] || [];\r\n            _self[_DYN_PROPERTIES /* @min:%2eproperties */] = exception[_DYN_PROPERTIES /* @min:%2eproperties */];\r\n            _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = exception[_DYN_MEASUREMENTS /* @min:%2emeasurements */];\r\n            if (exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */]) {\r\n                _self[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */] = exception[_DYN_SEVERITY_LEVEL /* @min:%2eseverityLevel */];\r\n            }\r\n            if (exception.id) {\r\n                _self.id = exception.id;\r\n                exception[_DYN_PROPERTIES /* @min:%2eproperties */].id = exception.id;\r\n            }\r\n            if (exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */]) {\r\n                _self[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */] = exception[_DYN_PROBLEM_GROUP /* @min:%2eproblemGroup */];\r\n            }\r\n            // bool/int types, use isNullOrUndefined\r\n            if (!isNullOrUndefined(exception[_DYN_IS_MANUAL /* @min:%2eisManual */])) {\r\n                _self[_DYN_IS_MANUAL /* @min:%2eisManual */] = exception[_DYN_IS_MANUAL /* @min:%2eisManual */];\r\n            }\r\n        }\r\n    }\r\n    Exception.CreateAutoException = function (message, url, lineNumber, columnNumber, error, evt, stack, errorSrc) {\r\n        var _a;\r\n        var errorType = _getErrorType(error || evt || message);\r\n        return _a = {},\r\n            _a[_DYN_MESSAGE /* @min:message */] = _formatMessage(message, errorType),\r\n            _a.url = url,\r\n            _a.lineNumber = lineNumber,\r\n            _a.columnNumber = columnNumber,\r\n            _a.error = _formatErrorCode(error || evt || message),\r\n            _a.evt = _formatErrorCode(evt || message),\r\n            _a[_DYN_TYPE_NAME /* @min:typeName */] = errorType,\r\n            _a.stackDetails = _getStackFromErrorObj(stack || error || evt),\r\n            _a.errorSrc = errorSrc,\r\n            _a;\r\n    };\r\n    Exception.CreateFromInterface = function (logger, exception, properties, measurements) {\r\n        var exceptions = exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */]\r\n            && arrMap(exception[_DYN_EXCEPTIONS /* @min:%2eexceptions */], function (ex) { return _ExceptionDetails[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](logger, ex); });\r\n        var exceptionData = new Exception(logger, __assign(__assign({}, exception), { exceptions: exceptions }), properties, measurements);\r\n        return exceptionData;\r\n    };\r\n    Exception.prototype.toInterface = function () {\r\n        var _a;\r\n        var _b = this, exceptions = _b.exceptions, properties = _b.properties, measurements = _b.measurements, severityLevel = _b.severityLevel, problemGroup = _b.problemGroup, id = _b.id, isManual = _b.isManual;\r\n        var exceptionDetailsInterface = exceptions instanceof Array\r\n            && arrMap(exceptions, function (exception) { return exception.toInterface(); })\r\n            || undefined;\r\n        return _a = {\r\n                ver: \"4.0\"\r\n            },\r\n            _a[_DYN_EXCEPTIONS /* @min:exceptions */] = exceptionDetailsInterface,\r\n            _a.severityLevel = severityLevel,\r\n            _a.properties = properties,\r\n            _a.measurements = measurements,\r\n            _a.problemGroup = problemGroup,\r\n            _a.id = id,\r\n            _a.isManual = isManual,\r\n            _a;\r\n    };\r\n    /**\r\n     * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n     */\r\n    Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n        var _a;\r\n        return {\r\n            exceptions: [\r\n                (_a = {},\r\n                    _a[_DYN_HAS_FULL_STACK /* @min:hasFullStack */] = true,\r\n                    _a.message = message,\r\n                    _a.stack = details,\r\n                    _a.typeName = typeName,\r\n                    _a)\r\n            ]\r\n        };\r\n    };\r\n    Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n    Exception.dataType = \"ExceptionData\";\r\n    Exception.formatError = _formatErrorCode;\r\n    return Exception;\r\n}());\r\nexport { Exception };\r\nvar _ExceptionDetails = /** @class */ (function () {\r\n    function _ExceptionDetails(logger, exception, properties) {\r\n        this.aiDataContract = {\r\n            id: 0 /* FieldType.Default */,\r\n            outerId: 0 /* FieldType.Default */,\r\n            typeName: 1 /* FieldType.Required */,\r\n            message: 1 /* FieldType.Required */,\r\n            hasFullStack: 0 /* FieldType.Default */,\r\n            stack: 0 /* FieldType.Default */,\r\n            parsedStack: 2 /* FieldType.Array */\r\n        };\r\n        var _self = this;\r\n        if (!_isExceptionDetailsInternal(exception)) {\r\n            var error = exception;\r\n            var evt = error && error.evt;\r\n            if (!isError(error)) {\r\n                error = error[strError] || evt || error;\r\n            }\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = dataSanitizeString(logger, _getErrorType(error)) || strNotSpecified;\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = dataSanitizeMessage(logger, _formatMessage(exception || error, _self[_DYN_TYPE_NAME /* @min:%2etypeName */])) || strNotSpecified;\r\n            var stack = exception[strStackDetails] || _getStackFromErrorObj(exception);\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = _parseStack(stack);\r\n            // after parsedStack is inited, iterate over each frame object, sanitize its assembly field\r\n            if (isArray(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */])) {\r\n                arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) {\r\n                    frame[_DYN_ASSEMBLY /* @min:%2eassembly */] = dataSanitizeString(logger, frame[_DYN_ASSEMBLY /* @min:%2eassembly */]);\r\n                    frame[_DYN_FILE_NAME /* @min:%2efileName */] = dataSanitizeString(logger, frame[_DYN_FILE_NAME /* @min:%2efileName */]);\r\n                });\r\n            }\r\n            _self[strStack] = dataSanitizeException(logger, _formatStackTrace(stack));\r\n            _self.hasFullStack = isArray(_self.parsedStack) && _self.parsedStack[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n            if (properties) {\r\n                properties[_DYN_TYPE_NAME /* @min:%2etypeName */] = properties[_DYN_TYPE_NAME /* @min:%2etypeName */] || _self[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_TYPE_NAME /* @min:%2etypeName */] = exception[_DYN_TYPE_NAME /* @min:%2etypeName */];\r\n            _self[_DYN_MESSAGE /* @min:%2emessage */] = exception[_DYN_MESSAGE /* @min:%2emessage */];\r\n            _self[strStack] = exception[strStack];\r\n            _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] = exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] || [];\r\n            _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */] = exception[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */];\r\n        }\r\n    }\r\n    _ExceptionDetails.prototype.toInterface = function () {\r\n        var _a;\r\n        var _self = this;\r\n        var parsedStack = _self[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(_self[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return frame.toInterface(); });\r\n        var exceptionDetailsInterface = (_a = {\r\n                id: _self.id,\r\n                outerId: _self.outerId,\r\n                typeName: _self[_DYN_TYPE_NAME /* @min:%2etypeName */],\r\n                message: _self[_DYN_MESSAGE /* @min:%2emessage */],\r\n                hasFullStack: _self[_DYN_HAS_FULL_STACK /* @min:%2ehasFullStack */],\r\n                stack: _self[strStack]\r\n            },\r\n            _a[_DYN_PARSED_STACK /* @min:parsedStack */] = parsedStack || undefined,\r\n            _a);\r\n        return exceptionDetailsInterface;\r\n    };\r\n    _ExceptionDetails.CreateFromInterface = function (logger, exception) {\r\n        var parsedStack = (exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */] instanceof Array\r\n            && arrMap(exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */], function (frame) { return _StackFrame[_DYN__CREATE_FROM_INTERFA1 /* @min:%2eCreateFromInterface */](frame); }))\r\n            || exception[_DYN_PARSED_STACK /* @min:%2eparsedStack */];\r\n        var exceptionDetails = new _ExceptionDetails(logger, __assign(__assign({}, exception), { parsedStack: parsedStack }));\r\n        return exceptionDetails;\r\n    };\r\n    return _ExceptionDetails;\r\n}());\r\nexport { _ExceptionDetails };\r\nvar _StackFrame = /** @class */ (function () {\r\n    function _StackFrame(sourceFrame, level) {\r\n        this.aiDataContract = {\r\n            level: 1 /* FieldType.Required */,\r\n            method: 1 /* FieldType.Required */,\r\n            assembly: 0 /* FieldType.Default */,\r\n            fileName: 0 /* FieldType.Default */,\r\n            line: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        // Not converting this to isString() as typescript uses this logic to \"understand\" the different\r\n        // types for the 2 different code paths\r\n        if (typeof sourceFrame === \"string\") {\r\n            var frame = sourceFrame;\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = level;\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = NoMethod;\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = strTrim(frame);\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = \"\";\r\n            _self[_DYN_LINE /* @min:%2eline */] = 0;\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches[_DYN_LENGTH /* @min:%2elength */] >= 5) {\r\n                _self[_DYN_METHOD /* @min:%2emethod */] = strTrim(matches[2]) || _self[_DYN_METHOD /* @min:%2emethod */];\r\n                _self[_DYN_FILE_NAME /* @min:%2efileName */] = strTrim(matches[4]);\r\n                _self[_DYN_LINE /* @min:%2eline */] = parseInt(matches[5]) || 0;\r\n            }\r\n        }\r\n        else {\r\n            _self[_DYN_LEVEL /* @min:%2elevel */] = sourceFrame[_DYN_LEVEL /* @min:%2elevel */];\r\n            _self[_DYN_METHOD /* @min:%2emethod */] = sourceFrame[_DYN_METHOD /* @min:%2emethod */];\r\n            _self[_DYN_ASSEMBLY /* @min:%2eassembly */] = sourceFrame[_DYN_ASSEMBLY /* @min:%2eassembly */];\r\n            _self[_DYN_FILE_NAME /* @min:%2efileName */] = sourceFrame[_DYN_FILE_NAME /* @min:%2efileName */];\r\n            _self[_DYN_LINE /* @min:%2eline */] = sourceFrame[_DYN_LINE /* @min:%2eline */];\r\n            _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] = 0;\r\n        }\r\n        _self.sizeInBytes += _self.method[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.fileName[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.assembly[_DYN_LENGTH /* @min:%2elength */];\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        _self[_DYN_SIZE_IN_BYTES /* @min:%2esizeInBytes */] += _StackFrame.baseSize;\r\n        _self.sizeInBytes += _self.level.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n        _self.sizeInBytes += _self.line.toString()[_DYN_LENGTH /* @min:%2elength */];\r\n    }\r\n    _StackFrame.CreateFromInterface = function (frame) {\r\n        return new _StackFrame(frame, null /* level is available in frame interface */);\r\n    };\r\n    _StackFrame.prototype.toInterface = function () {\r\n        var _self = this;\r\n        return {\r\n            level: _self[_DYN_LEVEL /* @min:%2elevel */],\r\n            method: _self[_DYN_METHOD /* @min:%2emethod */],\r\n            assembly: _self[_DYN_ASSEMBLY /* @min:%2eassembly */],\r\n            fileName: _self[_DYN_FILE_NAME /* @min:%2efileName */],\r\n            line: _self[_DYN_LINE /* @min:%2eline */]\r\n        };\r\n    };\r\n    // regex to match stack frames from ie/chrome/ff\r\n    // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n    _StackFrame.regex = /^([\\s]+at)?[\\s]{0,50}([^\\@\\()]+?)[\\s]{0,50}(\\@|\\()([^\\(\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n    _StackFrame.baseSize = 58; // '{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n    return _StackFrame;\r\n}());\r\nexport { _StackFrame };\r\n//# sourceMappingURL=Exception.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar DataPoint = /** @class */ (function () {\r\n    function DataPoint() {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            name: 1 /* FieldType.Required */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 1 /* FieldType.Required */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */\r\n        };\r\n        /**\r\n         * Metric type. Single measurement or the aggregated value.\r\n         */\r\n        this.kind = 0 /* DataPointType.Measurement */;\r\n    }\r\n    return DataPoint;\r\n}());\r\nexport { DataPoint };\r\n//# sourceMappingURL=DataPoint.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { strNotSpecified } from \"../Constants\";\r\nimport { _DYN_COUNT, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { DataPoint } from \"./Common/DataPoint\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString } from \"./Common/DataSanitizer\";\r\nvar Metric = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the MetricTelemetry object\r\n     */\r\n    function Metric(logger, name, value, count, min, max, stdDev, properties, measurements) {\r\n        this.aiDataContract = {\r\n            ver: 1 /* FieldType.Required */,\r\n            metrics: 1 /* FieldType.Required */,\r\n            properties: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        var dataPoint = new DataPoint();\r\n        dataPoint[_DYN_COUNT /* @min:%2ecount */] = count > 0 ? count : undefined;\r\n        dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n        dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n        dataPoint[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        dataPoint.value = value;\r\n        dataPoint.stdDev = isNaN(stdDev) || stdDev === null ? undefined : stdDev;\r\n        _self.metrics = [dataPoint];\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n    Metric.dataType = \"MetricData\";\r\n    return Metric;\r\n}());\r\nexport { Metric };\r\n//# sourceMappingURL=Metric.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getDocument, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PATHNAME, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _document = getDocument() || {};\r\nvar _htmlAnchorIdx = 0;\r\n// Use an array of temporary values as it's possible for multiple calls to parseUrl() will be called with different URLs\r\n// Using a cache size of 5 for now as it current depth usage is at least 2, so adding a minor buffer to handle future updates\r\nvar _htmlAnchorElement = [null, null, null, null, null];\r\nexport function urlParseUrl(url) {\r\n    var anchorIdx = _htmlAnchorIdx;\r\n    var anchorCache = _htmlAnchorElement;\r\n    var tempAnchor = anchorCache[anchorIdx];\r\n    if (!_document.createElement) {\r\n        // Always create the temp instance if createElement is not available\r\n        tempAnchor = { host: urlParseHost(url, true) };\r\n    }\r\n    else if (!anchorCache[anchorIdx]) {\r\n        // Create and cache the unattached anchor instance\r\n        tempAnchor = anchorCache[anchorIdx] = _document.createElement(\"a\");\r\n    }\r\n    tempAnchor.href = url;\r\n    // Move the cache index forward\r\n    anchorIdx++;\r\n    if (anchorIdx >= anchorCache[_DYN_LENGTH /* @min:%2elength */]) {\r\n        anchorIdx = 0;\r\n    }\r\n    _htmlAnchorIdx = anchorIdx;\r\n    return tempAnchor;\r\n}\r\nexport function urlGetAbsoluteUrl(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a.href;\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetPathName(url) {\r\n    var result;\r\n    var a = urlParseUrl(url);\r\n    if (a) {\r\n        result = a[_DYN_PATHNAME /* @min:%2epathname */];\r\n    }\r\n    return result;\r\n}\r\nexport function urlGetCompleteUrl(method, absoluteUrl) {\r\n    if (method) {\r\n        return method.toUpperCase() + \" \" + absoluteUrl;\r\n    }\r\n    return absoluteUrl;\r\n}\r\n// Fallback method to grab host from url if document.createElement method is not available\r\nexport function urlParseHost(url, inclPort) {\r\n    var fullHost = urlParseFullHost(url, inclPort) || \"\";\r\n    if (fullHost) {\r\n        var match = fullHost.match(/(www\\d{0,5}\\.)?([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 3 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            return match[2] + (match[3] || \"\");\r\n        }\r\n    }\r\n    return fullHost;\r\n}\r\nexport function urlParseFullHost(url, inclPort) {\r\n    var result = null;\r\n    if (url) {\r\n        var match = url.match(/(\\w{1,150}):\\/\\/([^\\/:]{1,256})(:\\d{1,20})?/i);\r\n        if (match != null && match[_DYN_LENGTH /* @min:%2elength */] > 2 && isString(match[2]) && match[2][_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            result = match[2] || \"\";\r\n            if (inclPort && match[_DYN_LENGTH /* @min:%2elength */] > 2) {\r\n                var protocol = (match[1] || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                var port = match[3] || \"\";\r\n                // IE includes the standard port so pass it off if it's the same as the protocol\r\n                if (protocol === \"http\" && port === \":80\") {\r\n                    port = \"\";\r\n                }\r\n                else if (protocol === \"https\" && port === \":443\") {\r\n                    port = \"\";\r\n                }\r\n                result += port;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=UrlHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dateNow, getPerformance, isNullOrUndefined, isValidSpanId, isValidTraceId } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH } from \"./Constants\";\r\nimport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nimport { dataSanitizeString } from \"./Telemetry/Common/DataSanitizer\";\r\nimport { urlParseFullHost, urlParseUrl } from \"./UrlHelperFuncs\";\r\nimport { _DYN_CORRELATION_HEADER_E0, _DYN_LENGTH, _DYN_NAME, _DYN_PATHNAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\n// listing only non-geo specific locations\r\nvar _internalEndpoints = [\r\n    DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH,\r\n    \"https://breeze.aimon.applicationinsights.io\" + DEFAULT_BREEZE_PATH,\r\n    \"https://dc-int.services.visualstudio.com\" + DEFAULT_BREEZE_PATH\r\n];\r\nvar _correlationIdPrefix = \"cid-v1:\";\r\nexport function isInternalApplicationInsightsEndpoint(endpointUrl) {\r\n    return arrIndexOf(_internalEndpoints, endpointUrl[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()) !== -1;\r\n}\r\nexport function correlationIdSetPrefix(prefix) {\r\n    _correlationIdPrefix = prefix;\r\n}\r\nexport function correlationIdGetPrefix() {\r\n    return _correlationIdPrefix;\r\n}\r\n/**\r\n * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers.\r\n * Headers are always included if the current domain matches the request domain. If they do not match (CORS),\r\n * they are regex-ed across correlationHeaderDomains and correlationHeaderExcludedDomains to determine if headers are included.\r\n * Some environments don't give information on currentHost via window.location.host (e.g. Cordova). In these cases, the user must\r\n * manually supply domains to include correlation headers on. Else, no headers will be included at all.\r\n */\r\nexport function correlationIdCanIncludeCorrelationHeader(config, requestUrl, currentHost) {\r\n    if (!requestUrl || (config && config.disableCorrelationHeaders)) {\r\n        return false;\r\n    }\r\n    if (config && config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */]) {\r\n        for (var i = 0; i < config.correlationHeaderExcludePatterns[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            if (config[_DYN_CORRELATION_HEADER_E0 /* @min:%2ecorrelationHeaderExcludePatterns */][i].test(requestUrl)) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    var requestHost = urlParseUrl(requestUrl).host[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    if (requestHost && (strIndexOf(requestHost, \":443\") !== -1 || strIndexOf(requestHost, \":80\") !== -1)) {\r\n        // [Bug #1260] IE can include the port even for http and https URLs so if present\r\n        // try and parse it to remove if it matches the default protocol port\r\n        requestHost = (urlParseFullHost(requestUrl, true) || \"\")[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    }\r\n    if ((!config || !config.enableCorsCorrelation) && (requestHost && requestHost !== currentHost)) {\r\n        return false;\r\n    }\r\n    var includedDomains = config && config.correlationHeaderDomains;\r\n    if (includedDomains) {\r\n        var matchExists_1;\r\n        arrForEach(includedDomains, function (domain) {\r\n            var regex = new RegExp(domain.toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n            matchExists_1 = matchExists_1 || regex.test(requestHost);\r\n        });\r\n        if (!matchExists_1) {\r\n            return false;\r\n        }\r\n    }\r\n    var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n    if (!excludedDomains || excludedDomains[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < excludedDomains[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\\\/g, \"\\\\\\\\\").replace(/\\./g, \"\\\\.\").replace(/\\*/g, \".*\"));\r\n        if (regex.test(requestHost)) {\r\n            return false;\r\n        }\r\n    }\r\n    // if we don't know anything about the requestHost, require the user to use included/excludedDomains.\r\n    // Previously we always returned false for a falsy requestHost\r\n    return requestHost && requestHost[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\n/**\r\n * Combines target appId and target role name from response header.\r\n */\r\nexport function correlationIdGetCorrelationContext(responseHeader) {\r\n    if (responseHeader) {\r\n        var correlationId = correlationIdGetCorrelationContextValue(responseHeader, RequestHeaders[1 /* eRequestHeaders.requestContextTargetKey */]);\r\n        if (correlationId && correlationId !== _correlationIdPrefix) {\r\n            return correlationId;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Gets key from correlation response header\r\n */\r\nexport function correlationIdGetCorrelationContextValue(responseHeader, key) {\r\n    if (responseHeader) {\r\n        var keyValues = responseHeader[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        for (var i = 0; i < keyValues[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            var keyValue = keyValues[i][_DYN_SPLIT /* @min:%2esplit */](\"=\");\r\n            if (keyValue[_DYN_LENGTH /* @min:%2elength */] === 2 && keyValue[0] === key) {\r\n                return keyValue[1];\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName) {\r\n    var target, name = commandName, data = commandName;\r\n    if (absoluteUrl && absoluteUrl[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        var parsedUrl = urlParseUrl(absoluteUrl);\r\n        target = parsedUrl.host;\r\n        if (!name) {\r\n            if (parsedUrl[_DYN_PATHNAME /* @min:%2epathname */] != null) {\r\n                var pathName = (parsedUrl.pathname[_DYN_LENGTH /* @min:%2elength */] === 0) ? \"/\" : parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                if (pathName.charAt(0) !== \"/\") {\r\n                    pathName = \"/\" + pathName;\r\n                }\r\n                data = parsedUrl[_DYN_PATHNAME /* @min:%2epathname */];\r\n                name = dataSanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n            }\r\n            else {\r\n                name = dataSanitizeString(logger, absoluteUrl);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        target = commandName;\r\n        name = commandName;\r\n    }\r\n    return {\r\n        target: target,\r\n        name: name,\r\n        data: data\r\n    };\r\n}\r\nexport function dateTimeUtilsNow() {\r\n    // returns the window or webworker performance object\r\n    var perf = getPerformance();\r\n    if (perf && perf.now && perf.timing) {\r\n        var now = perf.now() + perf.timing.navigationStart;\r\n        // Known issue with IE where this calculation can be negative, so if it is then ignore and fallback\r\n        if (now > 0) {\r\n            return now;\r\n        }\r\n    }\r\n    return dateNow();\r\n}\r\nexport function dateTimeUtilsDuration(start, end) {\r\n    var result = null;\r\n    if (start !== 0 && end !== 0 && !isNullOrUndefined(start) && !isNullOrUndefined(end)) {\r\n        result = end - start;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext from an optional telemetryTrace\r\n * @param telemetryTrace - The telemetryTrace instance that is being wrapped\r\n * @param parentCtx - An optional parent distributed trace instance, almost always undefined as this scenario is only used in the case of multiple property handlers.\r\n * @returns A new IDistributedTraceContext instance that is backed by the telemetryTrace or temporary object\r\n */\r\nexport function createDistributedTraceContextFromTrace(telemetryTrace, parentCtx) {\r\n    var trace = telemetryTrace || {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace.traceID;\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace.traceID = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace.parentID;\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace.parentID = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace.traceFlags;\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace.traceFlags = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=Util.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { msToTimeSpan } from \"../HelperFuncs\";\r\nimport { AjaxHelperParseDependencyPath } from \"../Util\";\r\nimport { _DYN_DURATION, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_PROPERTIES } from \"../__DynamicConstants\";\r\nimport { dataSanitizeMeasurements, dataSanitizeProperties, dataSanitizeString, dataSanitizeUrl } from \"./Common/DataSanitizer\";\r\nvar RemoteDependencyData = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the RemoteDependencyData object\r\n     */\r\n    function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, requestAPI, correlationContext, properties, measurements) {\r\n        if (requestAPI === void 0) { requestAPI = \"Ajax\"; }\r\n        this.aiDataContract = {\r\n            id: 1 /* FieldType.Required */,\r\n            ver: 1 /* FieldType.Required */,\r\n            name: 0 /* FieldType.Default */,\r\n            resultCode: 0 /* FieldType.Default */,\r\n            duration: 0 /* FieldType.Default */,\r\n            success: 0 /* FieldType.Default */,\r\n            data: 0 /* FieldType.Default */,\r\n            target: 0 /* FieldType.Default */,\r\n            type: 0 /* FieldType.Default */,\r\n            properties: 0 /* FieldType.Default */,\r\n            measurements: 0 /* FieldType.Default */,\r\n            kind: 0 /* FieldType.Default */,\r\n            value: 0 /* FieldType.Default */,\r\n            count: 0 /* FieldType.Default */,\r\n            min: 0 /* FieldType.Default */,\r\n            max: 0 /* FieldType.Default */,\r\n            stdDev: 0 /* FieldType.Default */,\r\n            dependencyKind: 0 /* FieldType.Default */,\r\n            dependencySource: 0 /* FieldType.Default */,\r\n            commandName: 0 /* FieldType.Default */,\r\n            dependencyTypeName: 0 /* FieldType.Default */\r\n        };\r\n        var _self = this;\r\n        _self.ver = 2;\r\n        _self.id = id;\r\n        _self[_DYN_DURATION /* @min:%2eduration */] = msToTimeSpan(value);\r\n        _self.success = success;\r\n        _self.resultCode = resultCode + \"\";\r\n        _self.type = dataSanitizeString(logger, requestAPI);\r\n        var dependencyFields = AjaxHelperParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n        _self.data = dataSanitizeUrl(logger, commandName) || dependencyFields.data; // get a value from hosturl if commandName not available\r\n        _self.target = dataSanitizeString(logger, dependencyFields.target);\r\n        if (correlationContext) {\r\n            _self.target = \"\".concat(_self.target, \" | \").concat(correlationContext);\r\n        }\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, dependencyFields[_DYN_NAME /* @min:%2ename */]);\r\n        _self[_DYN_PROPERTIES /* @min:%2eproperties */] = dataSanitizeProperties(logger, properties);\r\n        _self[_DYN_MEASUREMENTS /* @min:%2emeasurements */] = dataSanitizeMeasurements(logger, measurements);\r\n    }\r\n    RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n    RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n    return RemoteDependencyData;\r\n}());\r\nexport { RemoteDependencyData };\r\n//# sourceMappingURL=RemoteDependencyData.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, createUniqueNamespace, eventOff, eventOn, getDocument, getNavigator, getWindow, isNullOrUndefined, isUndefined, mergeEvtNamespace } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_PUSH } from \"./__DynamicConstants\";\r\nfunction _disableEvents(target, evtNamespace) {\r\n    eventOff(target, null, null, evtNamespace);\r\n}\r\n/**\r\n * Create a new OfflineListener instance to monitor browser online / offline events\r\n * @param parentEvtNamespace - The parent event namespace to append to any specific events for this instance\r\n */\r\nexport function createOfflineListener(parentEvtNamespace) {\r\n    var _document = getDocument();\r\n    var _navigator = getNavigator(); // Gets the window.navigator or workerNavigator depending on the global\r\n    var _isListening = false;\r\n    var listenerList = [];\r\n    // Set the initial state\r\n    // rState is changed by the browser, both via events and when we check the navigator.onLine property\r\n    var rState = 1 /* eOfflineValue.Online */;\r\n    if (_navigator && !isNullOrUndefined(_navigator.onLine) && !_navigator.onLine) { // navigator.onLine is undefined in react-native\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n    }\r\n    // ustate is changed by the user calling setOnlineState\r\n    var uState = 0 /* eOfflineValue.Unknown */;\r\n    // current state would be updated each time rState or uState is changed\r\n    // it is a resolved value of rState and uState\r\n    var _currentState = calCurrentState();\r\n    var _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"OfflineListener\"), parentEvtNamespace);\r\n    try {\r\n        if (_enableEvents(getWindow())) {\r\n            _isListening = true;\r\n        }\r\n        if (_document) {\r\n            // Also attach to the document.body or document\r\n            var target = _document.body || _document;\r\n            if (target.ononline) {\r\n                if (_enableEvents(target)) {\r\n                    _isListening = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // this makes react-native less angry\r\n        _isListening = false;\r\n    }\r\n    function _enableEvents(target) {\r\n        var enabled = false;\r\n        if (target) {\r\n            enabled = eventOn(target, \"online\", _setOnline, _evtNamespace);\r\n            if (enabled) {\r\n                eventOn(target, \"offline\", _setOffline, _evtNamespace);\r\n            }\r\n        }\r\n        return enabled;\r\n    }\r\n    function _isOnline() {\r\n        return _currentState;\r\n    }\r\n    function calCurrentState() {\r\n        if (uState === 2 /* eOfflineValue.Offline */ || rState === 2 /* eOfflineValue.Offline */) {\r\n            return false;\r\n        }\r\n        return true; // if both unknown, then we assume the network is good\r\n    }\r\n    function listnerNoticeCheck() {\r\n        // we were offline and are now online or we were online and now offline\r\n        var newState = calCurrentState();\r\n        if (_currentState !== newState) {\r\n            _currentState = newState; // use the resolved state to update\r\n            // send all the callbacks with the current state\r\n            arrForEach(listenerList, function (callback) {\r\n                var offlineState = {\r\n                    isOnline: _currentState,\r\n                    rState: rState,\r\n                    uState: uState\r\n                };\r\n                try {\r\n                    callback(offlineState);\r\n                }\r\n                catch (e) {\r\n                    // Do nothing, just making sure we run all of the callbacks\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function setOnlineState(newState) {\r\n        uState = newState;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOnline() {\r\n        rState = 1 /* eOfflineValue.Online */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _setOffline() {\r\n        rState = 2 /* eOfflineValue.Offline */;\r\n        listnerNoticeCheck();\r\n    }\r\n    function _unload() {\r\n        var win = getWindow();\r\n        if (win && _isListening) {\r\n            _disableEvents(win, _evtNamespace);\r\n            if (_document) {\r\n                // Also attach to the document.body or document\r\n                var target = _document.body || _document;\r\n                if (!isUndefined(target.ononline)) {\r\n                    _disableEvents(target, _evtNamespace);\r\n                }\r\n            }\r\n            _isListening = false;\r\n        }\r\n    }\r\n    function addListener(callback) {\r\n        listenerList[_DYN_PUSH /* @min:%2epush */](callback);\r\n        // Define rm as an instance of IUnloadHook\r\n        return {\r\n            rm: function () {\r\n                var index = listenerList.indexOf(callback);\r\n                if (index > -1) {\r\n                    return listenerList.splice(index, 1);\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    return {\r\n        isOnline: _isOnline,\r\n        isListening: function () { return _isListening; },\r\n        unload: _unload,\r\n        addListener: addListener,\r\n        setOnlineState: setOnlineState\r\n    };\r\n}\r\n//# sourceMappingURL=Offline.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\nexport var StorageType = createEnumStyle({\r\n    LocalStorage: 0 /* eStorageType.LocalStorage */,\r\n    SessionStorage: 1 /* eStorageType.SessionStorage */\r\n});\r\nexport var DistributedTracingModes = createEnumStyle({\r\n    AI: 0 /* eDistributedTracingModes.AI */,\r\n    AI_AND_W3C: 1 /* eDistributedTracingModes.AI_AND_W3C */,\r\n    W3C: 2 /* eDistributedTracingModes.W3C */\r\n});\r\n/**\r\n * The EventPersistence contains a set of values that specify the event's persistence.\r\n */\r\nexport var EventPersistence = createEnumStyle({\r\n    /**\r\n     * Normal persistence.\r\n     */\r\n    Normal: 1 /* EventPersistenceValue.Normal */,\r\n    /**\r\n     * Critical persistence.\r\n     */\r\n    Critical: 2 /* EventPersistenceValue.Critical */\r\n});\r\n//# sourceMappingURL=Enums.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _throwInternal, dumpObj, getExceptionName, getGlobal, getGlobalInst, isNullOrUndefined, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { StorageType } from \"./Enums\";\r\nimport { _DYN_PUSH, _DYN_REMOVE_ITEM, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar _canUseLocalStorage = undefined;\r\nvar _canUseSessionStorage = undefined;\r\nvar _storagePrefix = \"\";\r\n/**\r\n * Gets the localStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getLocalStorageObject() {\r\n    if (utlCanUseLocalStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n * @param storageType - Type of storage\r\n * @return {Storage} Returns storage object verified that it is usable\r\n */\r\nfunction _getVerifiedStorageObject(storageType) {\r\n    try {\r\n        if (isNullOrUndefined(getGlobal())) {\r\n            return null;\r\n        }\r\n        var uid = (new Date)[_DYN_TO_STRING /* @min:%2etoString */]();\r\n        var storage = getGlobalInst(storageType === StorageType.LocalStorage ? \"localStorage\" : \"sessionStorage\");\r\n        var name_1 = _storagePrefix + uid;\r\n        storage.setItem(name_1, uid);\r\n        var fail = storage.getItem(name_1) !== uid;\r\n        storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name_1);\r\n        if (!fail) {\r\n            return storage;\r\n        }\r\n    }\r\n    catch (exception) {\r\n        // eslint-disable-next-line no-empty\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Gets the sessionStorage object if available\r\n * @return {Storage} - Returns the storage object if available else returns null\r\n */\r\nfunction _getSessionStorageObject() {\r\n    if (utlCanUseSessionStorage()) {\r\n        return _getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Disables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlDisableStorage() {\r\n    _canUseLocalStorage = false;\r\n    _canUseSessionStorage = false;\r\n}\r\nexport function utlSetStoragePrefix(storagePrefix) {\r\n    _storagePrefix = storagePrefix || \"\";\r\n}\r\n/**\r\n * Re-enables the global SDK usage of local or session storage if available\r\n */\r\nexport function utlEnableStorage() {\r\n    _canUseLocalStorage = utlCanUseLocalStorage(true);\r\n    _canUseSessionStorage = utlCanUseSessionStorage(true);\r\n}\r\n/**\r\n * Returns whether LocalStorage can be used, if the reset parameter is passed a true this will override\r\n * any previous disable calls.\r\n * @param reset - Should the usage be reset and determined only based on whether LocalStorage is available\r\n */\r\nexport function utlCanUseLocalStorage(reset) {\r\n    if (reset || _canUseLocalStorage === undefined) {\r\n        _canUseLocalStorage = !!_getVerifiedStorageObject(StorageType.LocalStorage);\r\n    }\r\n    return _canUseLocalStorage;\r\n}\r\nexport function utlGetLocalStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 1 /* _eInternalMessageId.BrowserCannotReadLocalStorage */, \"Browser failed read of local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetLocalStorage(logger, name, data) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 3 /* _eInternalMessageId.BrowserCannotWriteLocalStorage */, \"Browser failed write to local storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveStorage(logger, name) {\r\n    var storage = _getLocalStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseLocalStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 5 /* _eInternalMessageId.BrowserFailedRemovalFromLocalStorage */, \"Browser failed removal of local storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlCanUseSessionStorage(reset) {\r\n    if (reset || _canUseSessionStorage === undefined) {\r\n        _canUseSessionStorage = !!_getVerifiedStorageObject(StorageType.SessionStorage);\r\n    }\r\n    return _canUseSessionStorage;\r\n}\r\nexport function utlGetSessionStorageKeys() {\r\n    var keys = [];\r\n    if (utlCanUseSessionStorage()) {\r\n        objForEachKey(getGlobalInst(\"sessionStorage\"), function (key) {\r\n            keys[_DYN_PUSH /* @min:%2epush */](key);\r\n        });\r\n    }\r\n    return keys;\r\n}\r\nexport function utlGetSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            return storage.getItem(name);\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 2 /* _eInternalMessageId.BrowserCannotReadSessionStorage */, \"Browser failed read of session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function utlSetSessionStorage(logger, name, data) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage.setItem(name, data);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 4 /* _eInternalMessageId.BrowserCannotWriteSessionStorage */, \"Browser failed write to session storage. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function utlRemoveSessionStorage(logger, name) {\r\n    var storage = _getSessionStorageObject();\r\n    if (storage !== null) {\r\n        try {\r\n            storage[_DYN_REMOVE_ITEM /* @min:%2eremoveItem */](name);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            _canUseSessionStorage = false;\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 6 /* _eInternalMessageId.BrowserFailedRemovalFromSessionStorage */, \"Browser failed removal of session storage item. \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=StorageHelperFuncs.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createValueMap } from \"@microsoft/applicationinsights-core-js\";\r\nexport var RequestHeaders = createValueMap({\r\n    requestContextHeader: [0 /* eRequestHeaders.requestContextHeader */, \"Request-Context\"],\r\n    requestContextTargetKey: [1 /* eRequestHeaders.requestContextTargetKey */, \"appId\"],\r\n    requestContextAppIdFormat: [2 /* eRequestHeaders.requestContextAppIdFormat */, \"appId=cid-v1:\"],\r\n    requestIdHeader: [3 /* eRequestHeaders.requestIdHeader */, \"Request-Id\"],\r\n    traceParentHeader: [4 /* eRequestHeaders.traceParentHeader */, \"traceparent\"],\r\n    traceStateHeader: [5 /* eRequestHeaders.traceStateHeader */, \"tracestate\"],\r\n    sdkContextHeader: [6 /* eRequestHeaders.sdkContextHeader */, \"Sdk-Context\"],\r\n    sdkContextHeaderAppIdRequest: [7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */, \"appId\"],\r\n    requestContextHeaderLowerCase: [8 /* eRequestHeaders.requestContextHeaderLowerCase */, \"request-context\"]\r\n});\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport { createClassFromInterface } from \"@microsoft/applicationinsights-core-js\";\r\nfunction _aiNameFunc(baseName) {\r\n    var aiName = \"ai.\" + baseName + \".\";\r\n    return function (name) {\r\n        return aiName + name;\r\n    };\r\n}\r\nvar _aiApplication = _aiNameFunc(\"application\");\r\nvar _aiDevice = _aiNameFunc(\"device\");\r\nvar _aiLocation = _aiNameFunc(\"location\");\r\nvar _aiOperation = _aiNameFunc(\"operation\");\r\nvar _aiSession = _aiNameFunc(\"session\");\r\nvar _aiUser = _aiNameFunc(\"user\");\r\nvar _aiCloud = _aiNameFunc(\"cloud\");\r\nvar _aiInternal = _aiNameFunc(\"internal\");\r\nvar ContextTagKeys = /** @class */ (function (_super) {\r\n    __extends(ContextTagKeys, _super);\r\n    function ContextTagKeys() {\r\n        return _super.call(this) || this;\r\n    }\r\n    return ContextTagKeys;\r\n}(createClassFromInterface({\r\n    applicationVersion: _aiApplication(\"ver\"),\r\n    applicationBuild: _aiApplication(\"build\"),\r\n    applicationTypeId: _aiApplication(\"typeId\"),\r\n    applicationId: _aiApplication(\"applicationId\"),\r\n    applicationLayer: _aiApplication(\"layer\"),\r\n    deviceId: _aiDevice(\"id\"),\r\n    deviceIp: _aiDevice(\"ip\"),\r\n    deviceLanguage: _aiDevice(\"language\"),\r\n    deviceLocale: _aiDevice(\"locale\"),\r\n    deviceModel: _aiDevice(\"model\"),\r\n    deviceFriendlyName: _aiDevice(\"friendlyName\"),\r\n    deviceNetwork: _aiDevice(\"network\"),\r\n    deviceNetworkName: _aiDevice(\"networkName\"),\r\n    deviceOEMName: _aiDevice(\"oemName\"),\r\n    deviceOS: _aiDevice(\"os\"),\r\n    deviceOSVersion: _aiDevice(\"osVersion\"),\r\n    deviceRoleInstance: _aiDevice(\"roleInstance\"),\r\n    deviceRoleName: _aiDevice(\"roleName\"),\r\n    deviceScreenResolution: _aiDevice(\"screenResolution\"),\r\n    deviceType: _aiDevice(\"type\"),\r\n    deviceMachineName: _aiDevice(\"machineName\"),\r\n    deviceVMName: _aiDevice(\"vmName\"),\r\n    deviceBrowser: _aiDevice(\"browser\"),\r\n    deviceBrowserVersion: _aiDevice(\"browserVersion\"),\r\n    locationIp: _aiLocation(\"ip\"),\r\n    locationCountry: _aiLocation(\"country\"),\r\n    locationProvince: _aiLocation(\"province\"),\r\n    locationCity: _aiLocation(\"city\"),\r\n    operationId: _aiOperation(\"id\"),\r\n    operationName: _aiOperation(\"name\"),\r\n    operationParentId: _aiOperation(\"parentId\"),\r\n    operationRootId: _aiOperation(\"rootId\"),\r\n    operationSyntheticSource: _aiOperation(\"syntheticSource\"),\r\n    operationCorrelationVector: _aiOperation(\"correlationVector\"),\r\n    sessionId: _aiSession(\"id\"),\r\n    sessionIsFirst: _aiSession(\"isFirst\"),\r\n    sessionIsNew: _aiSession(\"isNew\"),\r\n    userAccountAcquisitionDate: _aiUser(\"accountAcquisitionDate\"),\r\n    userAccountId: _aiUser(\"accountId\"),\r\n    userAgent: _aiUser(\"userAgent\"),\r\n    userId: _aiUser(\"id\"),\r\n    userStoreRegion: _aiUser(\"storeRegion\"),\r\n    userAuthUserId: _aiUser(\"authUserId\"),\r\n    userAnonymousUserAcquisitionDate: _aiUser(\"anonUserAcquisitionDate\"),\r\n    userAuthenticatedUserAcquisitionDate: _aiUser(\"authUserAcquisitionDate\"),\r\n    cloudName: _aiCloud(\"name\"),\r\n    cloudRole: _aiCloud(\"role\"),\r\n    cloudRoleVer: _aiCloud(\"roleVer\"),\r\n    cloudRoleInstance: _aiCloud(\"roleInstance\"),\r\n    cloudEnvironment: _aiCloud(\"environment\"),\r\n    cloudLocation: _aiCloud(\"location\"),\r\n    cloudDeploymentUnit: _aiCloud(\"deploymentUnit\"),\r\n    internalNodeName: _aiInternal(\"nodeName\"),\r\n    internalSdkVersion: _aiInternal(\"sdkVersion\"),\r\n    internalAgentVersion: _aiInternal(\"agentVersion\"),\r\n    internalSnippet: _aiInternal(\"snippet\"),\r\n    internalSdkSrc: _aiInternal(\"sdkSrc\")\r\n})));\r\nexport { ContextTagKeys };\r\n//# sourceMappingURL=ContextTagKeys.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { ContextTagKeys } from \"./Contracts/ContextTagKeys\";\r\nexport var Extensions = {\r\n    UserExt: \"user\",\r\n    DeviceExt: \"device\",\r\n    TraceExt: \"trace\",\r\n    WebExt: \"web\",\r\n    AppExt: \"app\",\r\n    OSExt: \"os\",\r\n    SessionExt: \"ses\",\r\n    SDKExt: \"sdk\"\r\n};\r\nexport var CtxTagKeys = new ContextTagKeys();\r\n//# sourceMappingURL=PartAExtensions.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { strNotSpecified } from \"../../Constants\";\r\nimport { _DYN_NAME } from \"../../__DynamicConstants\";\r\nimport { dataSanitizeString } from \"./DataSanitizer\";\r\nvar Envelope = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Envelope(logger, data, name) {\r\n        var _this = this;\r\n        var _self = this;\r\n        _self.ver = 1;\r\n        _self.sampleRate = 100.0;\r\n        _self.tags = {};\r\n        _self[_DYN_NAME /* @min:%2ename */] = dataSanitizeString(logger, name) || strNotSpecified;\r\n        _self.data = data;\r\n        _self.time = toISOString(new Date());\r\n        _self.aiDataContract = {\r\n            time: 1 /* FieldType.Required */,\r\n            iKey: 1 /* FieldType.Required */,\r\n            name: 1 /* FieldType.Required */,\r\n            sampleRate: function () {\r\n                return (_this.sampleRate === 100) ? 4 /* FieldType.Hidden */ : 1 /* FieldType.Required */;\r\n            },\r\n            tags: 1 /* FieldType.Required */,\r\n            data: 1 /* FieldType.Required */\r\n        };\r\n    }\r\n    return Envelope;\r\n}());\r\nexport { Envelope };\r\n//# sourceMappingURL=Envelope.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar Data = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of telemetry data.\r\n     */\r\n    function Data(baseType, data) {\r\n        /**\r\n         * The data contract for serializing this object.\r\n         */\r\n        this.aiDataContract = {\r\n            baseType: 1 /* FieldType.Required */,\r\n            baseData: 1 /* FieldType.Required */\r\n        };\r\n        this.baseType = baseType;\r\n        this.baseData = data;\r\n    }\r\n    return Data;\r\n}());\r\nexport { Data };\r\n//# sourceMappingURL=Data.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_DURATION = \"duration\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TAGS = \"tags\"; // Count: 17\r\nexport var _DYN_DEVICE_TYPE = \"deviceType\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 15\r\nexport var _DYN_NAME = \"name\"; // Count: 8\r\nexport var _DYN_TRACE_ID = \"traceID\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 38\r\nexport var _DYN_STRINGIFY = \"stringify\"; // Count: 5\r\nexport var _DYN_MEASUREMENTS = \"measurements\"; // Count: 7\r\nexport var _DYN_DATA_TYPE = \"dataType\"; // Count: 10\r\nexport var _DYN_ENVELOPE_TYPE = \"envelopeType\"; // Count: 7\r\nexport var _DYN_TO_STRING = \"toString\"; // Count: 7\r\nexport var _DYN__GET = \"_get\"; // Count: 5\r\nexport var _DYN_ENQUEUE = \"enqueue\"; // Count: 7\r\nexport var _DYN_COUNT = \"count\"; // Count: 7\r\nexport var _DYN_EVENTS_LIMIT_IN_MEM = \"eventsLimitInMem\"; // Count: 2\r\nexport var _DYN_PUSH = \"push\"; // Count: 9\r\nexport var _DYN_ITEM = \"item\"; // Count: 6\r\nexport var _DYN_EMIT_LINE_DELIMITED_0 = \"emitLineDelimitedJson\"; // Count: 3\r\nexport var _DYN_CLEAR = \"clear\"; // Count: 6\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 3\r\nexport var _DYN_MARK_AS_SENT = \"markAsSent\"; // Count: 4\r\nexport var _DYN_CLEAR_SENT = \"clearSent\"; // Count: 5\r\nexport var _DYN_BUFFER_OVERRIDE = \"bufferOverride\"; // Count: 3\r\nexport var _DYN__BUFFER__KEY = \"BUFFER_KEY\"; // Count: 5\r\nexport var _DYN__SENT__BUFFER__KEY = \"SENT_BUFFER_KEY\"; // Count: 8\r\nexport var _DYN_CONCAT = \"concat\"; // Count: 6\r\nexport var _DYN__MAX__BUFFER__SIZE = \"MAX_BUFFER_SIZE\"; // Count: 5\r\nexport var _DYN_TRIGGER_SEND = \"triggerSend\"; // Count: 5\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 16\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 3\r\nexport var _DYN__SENDER = \"_sender\"; // Count: 5\r\nexport var _DYN_ENDPOINT_URL = \"endpointUrl\"; // Count: 5\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 5\r\nexport var _DYN_CUSTOM_HEADERS = \"customHeaders\"; // Count: 3\r\nexport var _DYN_MAX_BATCH_SIZE_IN_BY1 = \"maxBatchSizeInBytes\"; // Count: 2\r\nexport var _DYN_ONUNLOAD_DISABLE_BEA2 = \"onunloadDisableBeacon\"; // Count: 3\r\nexport var _DYN_IS_BEACON_API_DISABL3 = \"isBeaconApiDisabled\"; // Count: 3\r\nexport var _DYN_ALWAYS_USE_XHR_OVERR4 = \"alwaysUseXhrOverride\"; // Count: 2\r\nexport var _DYN_DISABLE_XHR = \"disableXhr\"; // Count: 3\r\nexport var _DYN_ENABLE_SESSION_STORA5 = \"enableSessionStorageBuffer\"; // Count: 2\r\nexport var _DYN__BUFFER = \"_buffer\"; // Count: 9\r\nexport var _DYN_ONUNLOAD_DISABLE_FET6 = \"onunloadDisableFetch\"; // Count: 2\r\nexport var _DYN_DISABLE_SEND_BEACON_7 = \"disableSendBeaconSplit\"; // Count: 2\r\nexport var _DYN_ENABLE_SEND_PROMISE = \"enableSendPromise\"; // Count: 2\r\nexport var _DYN_GET_SENDER_INST = \"getSenderInst\"; // Count: 4\r\nexport var _DYN_UNLOAD_TRANSPORTS = \"unloadTransports\"; // Count: 2\r\nexport var _DYN_CONVERT_UNDEFINED = \"convertUndefined\"; // Count: 2\r\nexport var _DYN_MAX_BATCH_INTERVAL = \"maxBatchInterval\"; // Count: 2\r\nexport var _DYN_SERIALIZE = \"serialize\"; // Count: 4\r\nexport var _DYN__ON_ERROR = \"_onError\"; // Count: 7\r\nexport var _DYN__ON_PARTIAL_SUCCESS = \"_onPartialSuccess\"; // Count: 3\r\nexport var _DYN__ON_SUCCESS = \"_onSuccess\"; // Count: 6\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_ITEMS_ACCEPTED = \"itemsAccepted\"; // Count: 3\r\nexport var _DYN_ORI_PAYLOAD = \"oriPayload\"; // Count: 3\r\nexport var _DYN_BASE_TYPE = \"baseType\"; // Count: 4\r\nexport var _DYN_SAMPLE_RATE = \"sampleRate\"; // Count: 4\r\nexport var _DYN_EVENTS_SEND_REQUEST = \"eventsSendRequest\"; // Count: 2\r\nexport var _DYN_GET_SAMPLING_SCORE = \"getSamplingScore\"; // Count: 2\r\nexport var _DYN_GET_HASH_CODE_SCORE = \"getHashCodeScore\"; // Count: 4\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __assignFn as __assign } from \"@microsoft/applicationinsights-shims\";\r\nimport { CtxTagKeys, Data, Envelope, Event, Exception, HttpMethod, Metric, PageView, PageViewPerformance, RemoteDependencyData, SampleRate, Trace, dataSanitizeString } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, _warnToConsole, getJSON, hasJSON, isNullOrUndefined, isNumber, isString, isTruthy, objForEachKey, optimizeObject, setValue, toISOString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { STR_DURATION } from \"./InternalConstants\";\r\nimport { _DYN_DATA, _DYN_DATA_TYPE, _DYN_DEVICE_TYPE, _DYN_ENVELOPE_TYPE, _DYN_LENGTH, _DYN_MEASUREMENTS, _DYN_NAME, _DYN_STRINGIFY, _DYN_TAGS, _DYN_TO_STRING, _DYN_TRACE_ID } from \"./__DynamicConstants\";\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nvar strBaseType = \"baseType\";\r\nvar strBaseData = \"baseData\";\r\nvar strProperties = \"properties\";\r\nvar strTrue = \"true\";\r\nfunction _setValueIf(target, field, value) {\r\n    return setValue(target, field, value, isTruthy);\r\n}\r\n/*\r\n * Maps Part A data from CS 4.0\r\n */\r\nfunction _extractPartAExtensions(logger, item, env) {\r\n    // todo: switch to keys from common in this method\r\n    var envTags = env[_DYN_TAGS /* @min:%2etags */] = env[_DYN_TAGS /* @min:%2etags */] || {};\r\n    var itmExt = item.ext = item.ext || {};\r\n    var itmTags = item[_DYN_TAGS /* @min:%2etags */] = item[_DYN_TAGS /* @min:%2etags */] || [];\r\n    var extUser = itmExt.user;\r\n    if (extUser) {\r\n        _setValueIf(envTags, CtxTagKeys.userAuthUserId, extUser.authId);\r\n        _setValueIf(envTags, CtxTagKeys.userId, extUser.id || extUser.localId);\r\n    }\r\n    var extApp = itmExt.app;\r\n    if (extApp) {\r\n        _setValueIf(envTags, CtxTagKeys.sessionId, extApp.sesId);\r\n    }\r\n    var extDevice = itmExt.device;\r\n    if (extDevice) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceId, extDevice.id || extDevice.localId);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice.deviceClass);\r\n        _setValueIf(envTags, CtxTagKeys.deviceIp, extDevice.ip);\r\n        _setValueIf(envTags, CtxTagKeys.deviceModel, extDevice.model);\r\n        _setValueIf(envTags, CtxTagKeys[_DYN_DEVICE_TYPE /* @min:%2edeviceType */], extDevice[_DYN_DEVICE_TYPE /* @min:%2edeviceType */]);\r\n    }\r\n    var web = item.ext.web;\r\n    if (web) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceLanguage, web.browserLang);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowserVersion, web.browserVer);\r\n        _setValueIf(envTags, CtxTagKeys.deviceBrowser, web.browser);\r\n        var envData = env[_DYN_DATA /* @min:%2edata */] = env[_DYN_DATA /* @min:%2edata */] || {};\r\n        var envBaseData = envData[strBaseData] = envData[strBaseData] || {};\r\n        var envProps = envBaseData[strProperties] = envBaseData[strProperties] || {};\r\n        _setValueIf(envProps, \"domain\", web.domain);\r\n        _setValueIf(envProps, \"isManual\", web.isManual ? strTrue : null);\r\n        _setValueIf(envProps, \"screenRes\", web.screenRes);\r\n        _setValueIf(envProps, \"userConsent\", web.userConsent ? strTrue : null);\r\n    }\r\n    var extOs = itmExt.os;\r\n    if (extOs) {\r\n        _setValueIf(envTags, CtxTagKeys.deviceOS, extOs[_DYN_NAME /* @min:%2ename */]);\r\n        _setValueIf(envTags, CtxTagKeys.deviceOSVersion, extOs.osVer);\r\n    }\r\n    // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n    var extTrace = itmExt.trace;\r\n    if (extTrace) {\r\n        _setValueIf(envTags, CtxTagKeys.operationParentId, extTrace.parentID);\r\n        _setValueIf(envTags, CtxTagKeys.operationName, dataSanitizeString(logger, extTrace[_DYN_NAME /* @min:%2ename */]));\r\n        _setValueIf(envTags, CtxTagKeys.operationId, extTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n    }\r\n    // Sample 4.0 schema\r\n    //  {\r\n    //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n    //     \"name\" : \"MetricWithNamespace\",\r\n    //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n    //     \"ext\": {  \"cloud\": {\r\n    //          \"role\": \"WATSON3\",\r\n    //          \"roleInstance\": \"CO4AEAP00000260\"\r\n    //      },\r\n    //      \"device\": {}, \"correlation\": {} },\r\n    //      \"tags\": [\r\n    //        { \"amazon.region\" : \"east2\" },\r\n    //        { \"os.expid\" : \"wp:02df239\" }\r\n    //     ]\r\n    //   }\r\n    var tgs = {};\r\n    // deals with tags.push({object})\r\n    for (var i = itmTags[_DYN_LENGTH /* @min:%2elength */] - 1; i >= 0; i--) {\r\n        var tg = itmTags[i];\r\n        objForEachKey(tg, function (key, value) {\r\n            tgs[key] = value;\r\n        });\r\n        itmTags.splice(i, 1);\r\n    }\r\n    // deals with tags[key]=value (and handles hasOwnProperty)\r\n    objForEachKey(itmTags, function (tg, value) {\r\n        tgs[tg] = value;\r\n    });\r\n    var theTags = __assign(__assign({}, envTags), tgs);\r\n    if (!theTags[CtxTagKeys.internalSdkVersion]) {\r\n        // Append a version in case it is not already set\r\n        theTags[CtxTagKeys.internalSdkVersion] = dataSanitizeString(logger, \"javascript:\".concat(EnvelopeCreator.Version), 64);\r\n    }\r\n    env[_DYN_TAGS /* @min:%2etags */] = optimizeObject(theTags);\r\n}\r\nfunction _extractPropsAndMeasurements(data, properties, measurements) {\r\n    if (!isNullOrUndefined(data)) {\r\n        objForEachKey(data, function (key, value) {\r\n            if (isNumber(value)) {\r\n                measurements[key] = value;\r\n            }\r\n            else if (isString(value)) {\r\n                properties[key] = value;\r\n            }\r\n            else if (hasJSON()) {\r\n                properties[key] = getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue) {\r\n    if (!isNullOrUndefined(properties)) {\r\n        objForEachKey(properties, function (key, value) {\r\n            properties[key] = value || customUndefinedValue;\r\n        });\r\n    }\r\n}\r\n// TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\nfunction _createEnvelope(logger, envelopeType, telemetryItem, data) {\r\n    var envelope = new Envelope(logger, data, envelopeType);\r\n    _setValueIf(envelope, \"sampleRate\", telemetryItem[SampleRate]);\r\n    if ((telemetryItem[strBaseData] || {}).startTime) {\r\n        // Starting from Version 3.0.3, the time property will be assigned by the startTime value,\r\n        // which records the loadEvent time for the pageView event.\r\n        envelope.time = toISOString(telemetryItem[strBaseData].startTime);\r\n    }\r\n    envelope.iKey = telemetryItem.iKey;\r\n    var iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n    envelope[_DYN_NAME /* @min:%2ename */] = envelope[_DYN_NAME /* @min:%2ename */].replace(\"{0}\", iKeyNoDashes);\r\n    // extract all extensions from ctx\r\n    _extractPartAExtensions(logger, telemetryItem, envelope);\r\n    // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n    telemetryItem[_DYN_TAGS /* @min:%2etags */] = telemetryItem[_DYN_TAGS /* @min:%2etags */] || [];\r\n    return optimizeObject(envelope);\r\n}\r\nfunction EnvelopeCreatorInit(logger, telemetryItem) {\r\n    if (isNullOrUndefined(telemetryItem[strBaseData])) {\r\n        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 46 /* _eInternalMessageId.TelemetryEnvelopeInvalid */, \"telemetryItem.baseData cannot be null.\");\r\n    }\r\n}\r\nexport var EnvelopeCreator = {\r\n    Version: '3.3.4'\r\n};\r\nexport function DependencyEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    if (isNullOrUndefined(bd)) {\r\n        _warnToConsole(logger, \"Invalid input for dependency data\");\r\n        return null;\r\n    }\r\n    var method = bd[strProperties] && bd[strProperties][HttpMethod] ? bd[strProperties][HttpMethod] : \"GET\";\r\n    var remoteDepData = new RemoteDependencyData(logger, bd.id, bd.target, bd[_DYN_NAME /* @min:%2ename */], bd[STR_DURATION /* @min:%2eduration */], bd.success, bd.responseCode, method, bd.type, bd.correlationContext, customProperties, customMeasurements);\r\n    var data = new Data(RemoteDependencyData[_DYN_DATA_TYPE /* @min:%2edataType */], remoteDepData);\r\n    return _createEnvelope(logger, RemoteDependencyData[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function EventEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var customProperties = {};\r\n    var customMeasurements = {};\r\n    if (telemetryItem[strBaseType] !== Event[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n        customProperties[\"baseTypeSource\"] = telemetryItem[strBaseType]; // save the passed in base type as a property\r\n    }\r\n    if (telemetryItem[strBaseType] === Event[_DYN_DATA_TYPE /* @min:%2edataType */]) { // take collection\r\n        customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n        customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    }\r\n    else { // if its not a known type, convert to custom event\r\n        if (telemetryItem[strBaseData]) {\r\n            _extractPropsAndMeasurements(telemetryItem[strBaseData], customProperties, customMeasurements);\r\n        }\r\n    }\r\n    // Extract root level properties from part C telemetryItem.data\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var eventName = telemetryItem[strBaseData][_DYN_NAME /* @min:%2ename */];\r\n    var eventData = new Event(logger, eventName, customProperties, customMeasurements);\r\n    var data = new Data(Event[_DYN_DATA_TYPE /* @min:%2edataType */], eventData);\r\n    return _createEnvelope(logger, Event[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function ExceptionEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Extract root level properties from part C telemetryItem.data\r\n    var customMeasurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    var customProperties = telemetryItem[strBaseData][strProperties] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], customProperties, customMeasurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(customProperties, customUndefinedValue);\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    var exData = Exception.CreateFromInterface(logger, bd, customProperties, customMeasurements);\r\n    var data = new Data(Exception[_DYN_DATA_TYPE /* @min:%2edataType */], exData);\r\n    return _createEnvelope(logger, Exception[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function MetricEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var baseData = telemetryItem[strBaseData];\r\n    var props = baseData[strProperties] || {};\r\n    var measurements = baseData[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseMetricData = new Metric(logger, baseData[_DYN_NAME /* @min:%2ename */], baseData.average, baseData.sampleCount, baseData.min, baseData.max, baseData.stdDev, props, measurements);\r\n    var data = new Data(Metric[_DYN_DATA_TYPE /* @min:%2edataType */], baseMetricData);\r\n    return _createEnvelope(logger, Metric[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n    var duration;\r\n    var baseData = telemetryItem[strBaseData];\r\n    if (!isNullOrUndefined(baseData) &&\r\n        !isNullOrUndefined(baseData[strProperties]) &&\r\n        !isNullOrUndefined(baseData[strProperties][STR_DURATION])) { // from part B properties\r\n        duration = baseData[strProperties][STR_DURATION];\r\n        delete baseData[strProperties][STR_DURATION];\r\n    }\r\n    else if (!isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */]) &&\r\n        !isNullOrUndefined(telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION])) { // from custom properties\r\n        duration = telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n        delete telemetryItem[_DYN_DATA /* @min:%2edata */][STR_DURATION];\r\n    }\r\n    var bd = telemetryItem[strBaseData];\r\n    // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n    var currentContextId;\r\n    if (((telemetryItem.ext || {}).trace || {})[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n        currentContextId = telemetryItem.ext.trace[_DYN_TRACE_ID /* @min:%2etraceID */];\r\n    }\r\n    var id = bd.id || currentContextId;\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.refUri)) {\r\n        properties[\"refUri\"] = bd.refUri;\r\n    }\r\n    // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.pageType)) {\r\n        properties[\"pageType\"] = bd.pageType;\r\n    }\r\n    // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd.isLoggedIn)) {\r\n        properties[\"isLoggedIn\"] = bd.isLoggedIn[_DYN_TO_STRING /* @min:%2etoString */]();\r\n    }\r\n    // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n    if (!isNullOrUndefined(bd[strProperties])) {\r\n        var pageTags = bd[strProperties];\r\n        objForEachKey(pageTags, function (key, value) {\r\n            properties[key] = value;\r\n        });\r\n    }\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var pageViewData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n    var data = new Data(PageView[_DYN_DATA_TYPE /* @min:%2edataType */], pageViewData);\r\n    return _createEnvelope(logger, PageView[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function PageViewPerformanceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var bd = telemetryItem[strBaseData];\r\n    var name = bd[_DYN_NAME /* @min:%2ename */];\r\n    var url = bd.uri || bd.url;\r\n    var properties = bd[strProperties] || {};\r\n    var measurements = bd[_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], properties, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(properties, customUndefinedValue);\r\n    }\r\n    var baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n    var data = new Data(PageViewPerformance[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, PageViewPerformance[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\nexport function TraceEnvelopeCreator(logger, telemetryItem, customUndefinedValue) {\r\n    EnvelopeCreatorInit(logger, telemetryItem);\r\n    var message = telemetryItem[strBaseData].message;\r\n    var severityLevel = telemetryItem[strBaseData].severityLevel;\r\n    var props = telemetryItem[strBaseData][strProperties] || {};\r\n    var measurements = telemetryItem[strBaseData][_DYN_MEASUREMENTS /* @min:%2emeasurements */] || {};\r\n    _extractPropsAndMeasurements(telemetryItem[_DYN_DATA /* @min:%2edata */], props, measurements);\r\n    if (!isNullOrUndefined(customUndefinedValue)) {\r\n        _convertPropsUndefinedToCustomDefinedValue(props, customUndefinedValue);\r\n    }\r\n    var baseData = new Trace(logger, message, severityLevel, props, measurements);\r\n    var data = new Data(Trace[_DYN_DATA_TYPE /* @min:%2edataType */], baseData);\r\n    return _createEnvelope(logger, Trace[_DYN_ENVELOPE_TYPE /* @min:%2eenvelopeType */], telemetryItem, data);\r\n}\r\n//# sourceMappingURL=EnvelopeCreator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { utlGetSessionStorage, utlRemoveSessionStorage, utlSetSessionStorage } from \"@microsoft/applicationinsights-common\";\r\nimport { _throwInternal, arrForEach, arrIndexOf, dumpObj, getExceptionName, getJSON, isArray, isFunction, isNullOrUndefined, isString } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_ITEM, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_PUSH, _DYN_STRINGIFY, _DYN__BUFFER__KEY, _DYN__GET, _DYN__MAX__BUFFER__SIZE, _DYN__SENT__BUFFER__KEY } from \"./__DynamicConstants\";\r\nvar BaseSendBuffer = /** @class */ (function () {\r\n    function BaseSendBuffer(logger, config) {\r\n        var _buffer = [];\r\n        var _bufferFullMessageSent = false;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        this[_DYN__GET /* @min:%2e_get */] = function () {\r\n            return _buffer;\r\n        };\r\n        this._set = function (buffer) {\r\n            _buffer = buffer;\r\n            return _buffer;\r\n        };\r\n        dynamicProto(BaseSendBuffer, this, function (_self) {\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= config[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 105 /* _eInternalMessageId.InMemoryStorageBufferFull */, \"Maximum in-memory buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _buffer[_DYN_PUSH /* @min:%2epush */](payload);\r\n                return;\r\n            };\r\n            _self[_DYN_COUNT /* @min:%2ecount */] = function () {\r\n                return _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.size = function () {\r\n                var size = _buffer[_DYN_LENGTH /* @min:%2elength */];\r\n                for (var lp = 0; lp < _buffer[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    size += (_buffer[lp].item)[_DYN_LENGTH /* @min:%2elength */];\r\n                }\r\n                if (!config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */]) {\r\n                    size += 2;\r\n                }\r\n                return size;\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _buffer = [];\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self.getItems = function () {\r\n                return _buffer.slice(0);\r\n            };\r\n            _self.batchPayloads = function (payloads) {\r\n                if (payloads && payloads[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var payloadStr_1 = [];\r\n                    arrForEach(payloads, function (payload) {\r\n                        payloadStr_1[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                    });\r\n                    var batch = config[_DYN_EMIT_LINE_DELIMITED_0 /* @min:%2eemitLineDelimitedJson */] ?\r\n                        payloadStr_1.join(\"\\n\") :\r\n                        \"[\" + payloadStr_1.join(\",\") + \"]\";\r\n                    return batch;\r\n                }\r\n                return null;\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                var items = _buffer.slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                var newBuffer = !!canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(items, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                return newBuffer;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for BaseSendBuffer.prototype.enqueue.\r\n// Removed Stub for BaseSendBuffer.prototype.count.\r\n// Removed Stub for BaseSendBuffer.prototype.size.\r\n// Removed Stub for BaseSendBuffer.prototype.clear.\r\n// Removed Stub for BaseSendBuffer.prototype.getItems.\r\n// Removed Stub for BaseSendBuffer.prototype.batchPayloads.\r\n// Removed Stub for BaseSendBuffer.prototype.createNew.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseSendBuffer.__ieDyn=1;\n\n    return BaseSendBuffer;\r\n}());\r\n/*\r\n * An array based send buffer.\r\n */\r\nvar ArraySendBuffer = /** @class */ (function (_super) {\r\n    __extends(ArraySendBuffer, _super);\r\n    function ArraySendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        dynamicProto(ArraySendBuffer, _this, function (_self, _base) {\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                // not supported\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for ArraySendBuffer.prototype.markAsSent.\r\n// Removed Stub for ArraySendBuffer.prototype.clearSent.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ArraySendBuffer.__ieDyn=1;\n\n    return ArraySendBuffer;\r\n}(BaseSendBuffer));\r\nexport { ArraySendBuffer };\r\nvar PREVIOUS_KEYS = [\"AI_buffer\", \"AI_sentBuffer\"];\r\n/*\r\n * Session storage buffer holds a copy of all unsent items in the browser session storage.\r\n */\r\nvar SessionStorageSendBuffer = /** @class */ (function (_super) {\r\n    __extends(SessionStorageSendBuffer, _super);\r\n    function SessionStorageSendBuffer(logger, config) {\r\n        var _this = _super.call(this, logger, config) || this;\r\n        var _bufferFullMessageSent = false;\r\n        //Note: should not use config.namePrefix directly, because it will always refers to the latest namePrefix\r\n        var _namePrefix = config === null || config === void 0 ? void 0 : config.namePrefix;\r\n        // TODO: add remove buffer override as well\r\n        var _b = config[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */] || { getItem: utlGetSessionStorage, setItem: utlSetSessionStorage }, getItem = _b.getItem, setItem = _b.setItem;\r\n        var _maxRetryCnt = config.maxRetryCnt;\r\n        dynamicProto(SessionStorageSendBuffer, _this, function (_self, _base) {\r\n            var bufferItems = _getBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */]);\r\n            var itemsInSentBuffer = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n            var previousItems = _getPreviousEvents();\r\n            var notDeliveredItems = itemsInSentBuffer[_DYN_CONCAT /* @min:%2econcat */](previousItems);\r\n            var buffer = _self._set(bufferItems[_DYN_CONCAT /* @min:%2econcat */](notDeliveredItems));\r\n            // If the buffer has too many items, drop items from the end.\r\n            if (buffer[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                buffer[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n            }\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n            _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], buffer);\r\n            _self[_DYN_ENQUEUE /* @min:%2eenqueue */] = function (payload) {\r\n                if (_self[_DYN_COUNT /* @min:%2ecount */]() >= SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                    // sent internal log only once per page view\r\n                    if (!_bufferFullMessageSent) {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Maximum buffer size reached: \" + _self[_DYN_COUNT /* @min:%2ecount */](), true);\r\n                        _bufferFullMessageSent = true;\r\n                    }\r\n                    return;\r\n                }\r\n                payload.cnt = payload.cnt || 0;\r\n                // max retry is defined, and max retry is reached, do not add the payload to buffer\r\n                if (!isNullOrUndefined(_maxRetryCnt)) {\r\n                    if (payload.cnt > _maxRetryCnt) {\r\n                        // TODO: add log here on dropping payloads\r\n                        return;\r\n                    }\r\n                }\r\n                _base[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n            };\r\n            _self[_DYN_CLEAR /* @min:%2eclear */] = function () {\r\n                _base[_DYN_CLEAR /* @min:%2eclear */]();\r\n                _setBuffer(SessionStorageSendBuffer.BUFFER_KEY, _self[_DYN__GET /* @min:%2e_get */]());\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], []);\r\n                _bufferFullMessageSent = false;\r\n            };\r\n            _self[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */] = function (payload) {\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__BUFFER__KEY /* @min:%2eBUFFER_KEY */], _self._set(_removePayloadsFromBuffer(payload, _self[_DYN__GET /* @min:%2e_get */]())));\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                if (sentElements instanceof Array && payload instanceof Array) {\r\n                    sentElements = sentElements[_DYN_CONCAT /* @min:%2econcat */](payload);\r\n                    if (sentElements[_DYN_LENGTH /* @min:%2elength */] > SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */]) {\r\n                        // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                        // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 67 /* _eInternalMessageId.SessionStorageBufferFull */, \"Sent buffer reached its maximum size: \" + sentElements[_DYN_LENGTH /* @min:%2elength */], true);\r\n                        sentElements[_DYN_LENGTH /* @min:%2elength */] = SessionStorageSendBuffer[_DYN__MAX__BUFFER__SIZE /* @min:%2eMAX_BUFFER_SIZE */];\r\n                    }\r\n                    _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n                }\r\n            };\r\n            _self[_DYN_CLEAR_SENT /* @min:%2eclearSent */] = function (payload) {\r\n                var sentElements = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]);\r\n                sentElements = _removePayloadsFromBuffer(payload, sentElements);\r\n                _setBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */], sentElements);\r\n            };\r\n            _self[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = function (newLogger, newConfig, canUseSessionStorage) {\r\n                canUseSessionStorage = !!canUseSessionStorage;\r\n                var unsentItems = _self[_DYN__GET /* @min:%2e_get */]().slice(0);\r\n                var sentItems = _getBuffer(SessionStorageSendBuffer[_DYN__SENT__BUFFER__KEY /* @min:%2eSENT_BUFFER_KEY */]).slice(0);\r\n                newLogger = newLogger || logger;\r\n                newConfig = newConfig || {};\r\n                // to make sure that we do not send duplicated payloads when it is switched back to previous one\r\n                _self[_DYN_CLEAR /* @min:%2eclear */]();\r\n                var newBuffer = canUseSessionStorage ? new SessionStorageSendBuffer(newLogger, newConfig) : new ArraySendBuffer(newLogger, newConfig);\r\n                arrForEach(unsentItems, function (payload) {\r\n                    newBuffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payload);\r\n                });\r\n                if (canUseSessionStorage) {\r\n                    // arr buffer will clear all payloads if markAsSent() is called\r\n                    newBuffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](sentItems);\r\n                }\r\n                return newBuffer;\r\n            };\r\n            function _removePayloadsFromBuffer(payloads, buffer) {\r\n                var remaining = [];\r\n                var payloadStr = [];\r\n                arrForEach(payloads, function (payload) {\r\n                    payloadStr[_DYN_PUSH /* @min:%2epush */](payload[_DYN_ITEM /* @min:%2eitem */]);\r\n                });\r\n                arrForEach(buffer, function (value) {\r\n                    if (!isFunction(value) && arrIndexOf(payloadStr, value[_DYN_ITEM /* @min:%2eitem */]) === -1) {\r\n                        remaining[_DYN_PUSH /* @min:%2epush */](value);\r\n                    }\r\n                });\r\n                return remaining;\r\n            }\r\n            function _getBuffer(key) {\r\n                var prefixedKey = key;\r\n                prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                return _getBufferBase(prefixedKey);\r\n            }\r\n            function _getBufferBase(key) {\r\n                try {\r\n                    var bufferJson = getItem(logger, key);\r\n                    if (bufferJson) {\r\n                        var buffer_1 = getJSON().parse(bufferJson);\r\n                        if (isString(buffer_1)) {\r\n                            // When using some version prototype.js the stringify / parse cycle does not decode array's correctly\r\n                            buffer_1 = getJSON().parse(buffer_1);\r\n                        }\r\n                        if (buffer_1 && isArray(buffer_1)) {\r\n                            return buffer_1;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 42 /* _eInternalMessageId.FailedToRestoreStorageBuffer */, \" storage key: \" + key + \", \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            function _setBuffer(key, buffer) {\r\n                var prefixedKey = key;\r\n                try {\r\n                    prefixedKey = _namePrefix ? _namePrefix + \"_\" + prefixedKey : prefixedKey;\r\n                    var bufferJson = JSON[_DYN_STRINGIFY /* @min:%2estringify */](buffer);\r\n                    setItem(logger, prefixedKey, bufferJson);\r\n                }\r\n                catch (e) {\r\n                    // if there was an error, clear the buffer\r\n                    // telemetry is stored in the _buffer array so we won't loose any items\r\n                    setItem(logger, prefixedKey, JSON[_DYN_STRINGIFY /* @min:%2estringify */]([]));\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \" storage key: \" + prefixedKey + \", \" + getExceptionName(e) + \". Buffer cleared\", { exception: dumpObj(e) });\r\n                }\r\n            }\r\n            // this removes buffer with prefix+key\r\n            function _getPreviousEvents() {\r\n                var items = [];\r\n                try {\r\n                    arrForEach(PREVIOUS_KEYS, function (key) {\r\n                        var events = _getItemsFromPreviousKey(key);\r\n                        items = items[_DYN_CONCAT /* @min:%2econcat */](events);\r\n                        // to make sure that we also transfer items from old prefixed + key buffer\r\n                        if (_namePrefix) {\r\n                            var prefixedKey = _namePrefix + \"_\" + key;\r\n                            var prefixEvents = _getItemsFromPreviousKey(prefixedKey);\r\n                            items = items[_DYN_CONCAT /* @min:%2econcat */](prefixEvents);\r\n                        }\r\n                    });\r\n                    return items;\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 41 /* _eInternalMessageId.FailedToSetStorageBuffer */, \"Transfer events from previous buffers: \" + getExceptionName(e) + \". previous Buffer items can not be removed\", { exception: dumpObj(e) });\r\n                }\r\n                return [];\r\n            }\r\n            // transform string[] to IInternalStorageItem[]\r\n            function _getItemsFromPreviousKey(key) {\r\n                try {\r\n                    var items = _getBufferBase(key);\r\n                    var transFormedItems_1 = [];\r\n                    arrForEach(items, function (item) {\r\n                        var internalItem = {\r\n                            item: item,\r\n                            cnt: 0 // previous events will be default to 0 count\r\n                        };\r\n                        transFormedItems_1[_DYN_PUSH /* @min:%2epush */](internalItem);\r\n                    });\r\n                    // remove the session storage if we can add events back\r\n                    utlRemoveSessionStorage(logger, key);\r\n                    return transFormedItems_1;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return [];\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for SessionStorageSendBuffer.prototype.enqueue.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clear.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.markAsSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.clearSent.\r\n// Removed Stub for SessionStorageSendBuffer.prototype.createNew.\r\n    var _a;\r\n    _a = SessionStorageSendBuffer;\r\n    SessionStorageSendBuffer.VERSION = \"_1\";\r\n    SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\" + _a.VERSION;\r\n    SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\" + _a.VERSION;\r\n    // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped.\r\n    SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n    return SessionStorageSendBuffer;\r\n}(BaseSendBuffer));\r\nexport { SessionStorageSendBuffer };\r\n//# sourceMappingURL=SendBuffer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { __assignFn as __assign, __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BreezeChannelIdentifier, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, Event, Exception, Metric, PageView, PageViewPerformance, ProcessLegacy, RemoteDependencyData, RequestHeaders, SampleRate, Trace, createOfflineListener, isInternalApplicationInsightsEndpoint, utlCanUseSessionStorage, utlSetStoragePrefix } from \"@microsoft/applicationinsights-common\";\r\nimport { ActiveStatus, BaseTelemetryPlugin, SenderPostManager, _throwInternal, _warnToConsole, arrForEach, cfgDfBoolean, cfgDfValidate, createProcessTelemetryContext, createUniqueNamespace, dateNow, dumpObj, formatErrorMessageXdr, formatErrorMessageXhr, getExceptionName, getIEVersion, isArray, isBeaconsSupported, isFetchSupported, isNullOrUndefined, mergeEvtNamespace, objExtend, onConfigChange, parseResponse, prependTransports, runTargetUnload } from \"@microsoft/applicationinsights-core-js\";\r\nimport { isNumber, isPromiseLike, isString, isTruthy, objDeepFreeze, objDefine, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { DependencyEnvelopeCreator, EventEnvelopeCreator, ExceptionEnvelopeCreator, MetricEnvelopeCreator, PageViewEnvelopeCreator, PageViewPerformanceEnvelopeCreator, TraceEnvelopeCreator } from \"./EnvelopeCreator\";\r\nimport { ArraySendBuffer, SessionStorageSendBuffer } from \"./SendBuffer\";\r\nimport { Serializer } from \"./Serializer\";\r\nimport { Sample } from \"./TelemetryProcessors/Sample\";\r\nimport { _DYN_ALWAYS_USE_XHR_OVERR4, _DYN_BASE_TYPE, _DYN_BUFFER_OVERRIDE, _DYN_CLEAR, _DYN_CLEAR_SENT, _DYN_CONVERT_UNDEFINED, _DYN_COUNT, _DYN_CREATE_NEW, _DYN_CUSTOM_HEADERS, _DYN_DATA, _DYN_DIAG_LOG, _DYN_DISABLE_SEND_BEACON_7, _DYN_DISABLE_XHR, _DYN_EMIT_LINE_DELIMITED_0, _DYN_ENABLE_SEND_PROMISE, _DYN_ENABLE_SESSION_STORA5, _DYN_ENDPOINT_URL, _DYN_ENQUEUE, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_EVENTS_SEND_REQUEST, _DYN_GET_SENDER_INST, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_BEACON_API_DISABL3, _DYN_ITEM, _DYN_ITEMS_ACCEPTED, _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_MARK_AS_SENT, _DYN_MAX_BATCH_INTERVAL, _DYN_MAX_BATCH_SIZE_IN_BY1, _DYN_ONUNLOAD_DISABLE_BEA2, _DYN_ONUNLOAD_DISABLE_FET6, _DYN_ORI_PAYLOAD, _DYN_PUSH, _DYN_SAMPLE_RATE, _DYN_SERIALIZE, _DYN_TAGS, _DYN_TRIGGER_SEND, _DYN_UNLOAD_TRANSPORTS, _DYN__BUFFER, _DYN__ON_ERROR, _DYN__ON_PARTIAL_SUCCESS, _DYN__ON_SUCCESS, _DYN__SENDER } from \"./__DynamicConstants\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar EMPTY_STR = \"\";\r\nvar FetchSyncRequestSizeLimitBytes = 65000; // approx 64kb (the current Edge, Firefox and Chrome max limit)\r\nfunction _getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nfunction isOverrideFn(httpXHROverride) {\r\n    return httpXHROverride && httpXHROverride.sendPOST;\r\n}\r\nvar defaultAppInsightsChannelConfig = objDeepFreeze((_a = {\r\n        // Use the default value (handles empty string in the configuration)\r\n        endpointUrl: cfgDfValidate(isTruthy, DEFAULT_BREEZE_ENDPOINT + DEFAULT_BREEZE_PATH)\r\n    },\r\n    _a[_DYN_EMIT_LINE_DELIMITED_0 /* @min:emitLineDelimitedJson */] = cfgDfBoolean(),\r\n    _a[_DYN_MAX_BATCH_INTERVAL /* @min:maxBatchInterval */] = 15000,\r\n    _a[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:maxBatchSizeInBytes */] = 102400,\r\n    _a.disableTelemetry = cfgDfBoolean(),\r\n    _a[_DYN_ENABLE_SESSION_STORA5 /* @min:enableSessionStorageBuffer */] = cfgDfBoolean(true),\r\n    _a.isRetryDisabled = cfgDfBoolean(),\r\n    _a[_DYN_IS_BEACON_API_DISABL3 /* @min:isBeaconApiDisabled */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_SEND_BEACON_7 /* @min:disableSendBeaconSplit */] = cfgDfBoolean(true),\r\n    _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:onunloadDisableFetch */] = cfgDfBoolean(),\r\n    _a[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:onunloadDisableBeacon */] = cfgDfBoolean(),\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a.namePrefix = UNDEFINED_VALUE,\r\n    _a.samplingPercentage = cfgDfValidate(_chkSampling, 100),\r\n    _a[_DYN_CUSTOM_HEADERS /* @min:customHeaders */] = UNDEFINED_VALUE,\r\n    _a[_DYN_CONVERT_UNDEFINED /* @min:convertUndefined */] = UNDEFINED_VALUE,\r\n    _a[_DYN_EVENTS_LIMIT_IN_MEM /* @min:eventsLimitInMem */] = 10000,\r\n    _a[_DYN_BUFFER_OVERRIDE /* @min:bufferOverride */] = false,\r\n    _a.httpXHROverride = { isVal: isOverrideFn, v: UNDEFINED_VALUE },\r\n    _a[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:alwaysUseXhrOverride */] = cfgDfBoolean(),\r\n    _a.transports = UNDEFINED_VALUE,\r\n    _a.retryCodes = UNDEFINED_VALUE,\r\n    _a.maxRetryCnt = { isVal: isNumber, v: 10 },\r\n    _a));\r\nfunction _chkSampling(value) {\r\n    return !isNaN(value) && value > 0 && value <= 100;\r\n}\r\nvar EnvelopeTypeCreator = (_b = {},\r\n    _b[Event.dataType] = EventEnvelopeCreator,\r\n    _b[Trace.dataType] = TraceEnvelopeCreator,\r\n    _b[PageView.dataType] = PageViewEnvelopeCreator,\r\n    _b[PageViewPerformance.dataType] = PageViewPerformanceEnvelopeCreator,\r\n    _b[Exception.dataType] = ExceptionEnvelopeCreator,\r\n    _b[Metric.dataType] = MetricEnvelopeCreator,\r\n    _b[RemoteDependencyData.dataType] = DependencyEnvelopeCreator,\r\n    _b);\r\nvar Sender = /** @class */ (function (_super) {\r\n    __extends(Sender, _super);\r\n    function Sender() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 1001;\r\n        _this.identifier = BreezeChannelIdentifier;\r\n        // Don't set the defaults here, set them in the _initDefaults() as this is also called during unload\r\n        var _consecutiveErrors; // How many times in a row a retryable error condition has occurred.\r\n        var _retryAt; // The time to retry at in milliseconds from 1970/01/01 (this makes the timer calculation easy).\r\n        var _lastSend; // The time of the last send operation.\r\n        var _paused; // Flag indicating that the sending should be paused\r\n        var _timeoutHandle; // Handle to the timer for delayed sending of batches of data.\r\n        var _serializer;\r\n        var _stamp_specific_redirects;\r\n        var _headers;\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _syncUnloadSender; // The identified sender to use for the synchronous unload stage\r\n        var _offlineListener;\r\n        var _evtNamespace;\r\n        var _endpointUrl;\r\n        var _orgEndpointUrl;\r\n        var _maxBatchSizeInBytes;\r\n        var _beaconSupported;\r\n        var _beaconOnUnloadSupported;\r\n        var _beaconNormalSupported;\r\n        var _customHeaders;\r\n        var _disableTelemetry;\r\n        var _instrumentationKey;\r\n        var _convertUndefined;\r\n        var _isRetryDisabled;\r\n        var _maxBatchInterval;\r\n        var _sessionStorageUsed;\r\n        var _bufferOverrideUsed;\r\n        var _namePrefix;\r\n        var _enableSendPromise;\r\n        var _alwaysUseCustomSend;\r\n        var _disableXhr;\r\n        var _fetchKeepAlive;\r\n        var _xhrSend;\r\n        var _fallbackSend;\r\n        var _disableBeaconSplit;\r\n        var _sendPostMgr;\r\n        var _retryCodes;\r\n        dynamicProto(Sender, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.pause = function () {\r\n                _clearScheduledTimer();\r\n                _paused = true;\r\n            };\r\n            _self.resume = function () {\r\n                if (_paused) {\r\n                    _paused = false;\r\n                    _retryAt = null;\r\n                    // flush if we have exceeded the max-size already\r\n                    _checkMaxSize();\r\n                    _setupTimer();\r\n                }\r\n            };\r\n            _self.flush = function (isAsync, callBack, sendReason) {\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_paused) {\r\n                    // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                    _clearScheduledTimer();\r\n                    try {\r\n                        return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](isAsync, null, sendReason || 1 /* SendRequestReason.ManualFlush */);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 22 /* _eInternalMessageId.FlushFailed */, \"flush failed, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            };\r\n            _self.onunloadFlush = function () {\r\n                if (!_paused) {\r\n                    if (_beaconSupported || _alwaysUseCustomSend) {\r\n                        try {\r\n                            return _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, _doUnloadSend, 2 /* SendRequestReason.Unload */);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"failed to flush with beacon sender on page unload, telemetry will not be collected: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                    else {\r\n                        _self.flush(false);\r\n                    }\r\n                }\r\n            };\r\n            _self.addHeader = function (name, value) {\r\n                _headers[name] = value;\r\n            };\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                if (_self.isInitialized()) {\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _base[_DYN_INITIALIZE /* @min:%2einitialize */](config, core, extensions, pluginChain);\r\n                var identifier = _self.identifier;\r\n                _serializer = new Serializer(core.logger);\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = 0;\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _stamp_specific_redirects = 0;\r\n                var diagLog = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"Sender\"), core.evtNamespace && core.evtNamespace());\r\n                _offlineListener = createOfflineListener(_evtNamespace);\r\n                // This function will be re-called whenever any referenced configuration is changed\r\n                _self._addHook(onConfigChange(config, function (details) {\r\n                    var config = details.cfg;\r\n                    if (config.storagePrefix) {\r\n                        utlSetStoragePrefix(config.storagePrefix);\r\n                    }\r\n                    var ctx = createProcessTelemetryContext(null, config, core);\r\n                    // getExtCfg only finds undefined values from core\r\n                    var senderConfig = ctx.getExtCfg(identifier, defaultAppInsightsChannelConfig);\r\n                    var curExtUrl = senderConfig[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                    // if it is not inital change (_endpointUrl has value)\r\n                    // if current sender endpoint url is not changed directly\r\n                    // means ExtCfg is not changed directly\r\n                    // then we need to monitor endpoint url changes from core\r\n                    if (_endpointUrl && curExtUrl === _endpointUrl) {\r\n                        var coreUrl = config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                        // if core endpoint url is changed\r\n                        if (coreUrl && coreUrl !== curExtUrl) {\r\n                            // and endpoint promise changes is handled by this as well\r\n                            senderConfig[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = coreUrl;\r\n                        }\r\n                    }\r\n                    if (isPromiseLike(senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */])) {\r\n                        // if it is promise, means the endpoint url is from core.endpointurl\r\n                        senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    }\r\n                    objDefine(_self, \"_senderConfig\", {\r\n                        g: function () {\r\n                            return senderConfig;\r\n                        }\r\n                    });\r\n                    // Only update the endpoint if the original config !== the current config\r\n                    // This is so any redirect endpointUrl is not overwritten\r\n                    if (_orgEndpointUrl !== senderConfig[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */]) {\r\n                        if (_orgEndpointUrl) {\r\n                            // TODO: add doc to remind users to flush before changing endpoint, otherwise all unsent payload will be sent to new endpoint\r\n                        }\r\n                        _endpointUrl = _orgEndpointUrl = senderConfig[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                    }\r\n                    // or is not string\r\n                    if (core.activeStatus() === ActiveStatus.PENDING) {\r\n                        // waiting for core promises to be resolved\r\n                        // NOTE: if active status is set to pending, stop sending, clear timer here\r\n                        _self.pause();\r\n                    }\r\n                    else if (core.activeStatus() === ActiveStatus.ACTIVE) {\r\n                        // core status changed from pending to other status\r\n                        _self.resume();\r\n                    }\r\n                    if (_customHeaders && _customHeaders !== senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */]) {\r\n                        // Removing any previously defined custom headers as they have changed\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            delete _headers[customHeader.header];\r\n                        });\r\n                    }\r\n                    _maxBatchSizeInBytes = senderConfig[_DYN_MAX_BATCH_SIZE_IN_BY1 /* @min:%2emaxBatchSizeInBytes */];\r\n                    _beaconSupported = (senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false || senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false) && isBeaconsSupported();\r\n                    _beaconOnUnloadSupported = senderConfig[_DYN_ONUNLOAD_DISABLE_BEA2 /* @min:%2eonunloadDisableBeacon */] === false && isBeaconsSupported();\r\n                    _beaconNormalSupported = senderConfig[_DYN_IS_BEACON_API_DISABL3 /* @min:%2eisBeaconApiDisabled */] === false && isBeaconsSupported();\r\n                    _alwaysUseCustomSend = senderConfig[_DYN_ALWAYS_USE_XHR_OVERR4 /* @min:%2ealwaysUseXhrOverride */];\r\n                    _disableXhr = !!senderConfig[_DYN_DISABLE_XHR /* @min:%2edisableXhr */];\r\n                    _retryCodes = senderConfig.retryCodes;\r\n                    var bufferOverride = senderConfig[_DYN_BUFFER_OVERRIDE /* @min:%2ebufferOverride */];\r\n                    var canUseSessionStorage = !!senderConfig[_DYN_ENABLE_SESSION_STORA5 /* @min:%2eenableSessionStorageBuffer */] &&\r\n                        (!!bufferOverride || utlCanUseSessionStorage());\r\n                    var namePrefix = senderConfig.namePrefix;\r\n                    //Note: emitLineDelimitedJson and eventsLimitInMem is directly accessed via config in senderBuffer\r\n                    //Therefore, if canUseSessionStorage is not changed, we do not need to re initialize a new one\r\n                    var shouldUpdate = (canUseSessionStorage !== _sessionStorageUsed)\r\n                        || (canUseSessionStorage && (_namePrefix !== namePrefix)) // prefixName is only used in session storage\r\n                        || (canUseSessionStorage && (_bufferOverrideUsed !== bufferOverride));\r\n                    if (_self[_DYN__BUFFER /* @min:%2e_buffer */]) {\r\n                        // case1 (Pre and Now enableSessionStorageBuffer settings are same)\r\n                        // if namePrefix changes, transfer current buffer to new buffer\r\n                        // else no action needed\r\n                        //case2 (Pre and Now enableSessionStorageBuffer settings are changed)\r\n                        // transfer current buffer to new buffer\r\n                        if (shouldUpdate) {\r\n                            try {\r\n                                _self._buffer = _self._buffer[_DYN_CREATE_NEW /* @min:%2ecreateNew */](diagLog, senderConfig, canUseSessionStorage);\r\n                            }\r\n                            catch (e) {\r\n                                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"failed to transfer telemetry to different buffer storage, telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                            }\r\n                        }\r\n                        _checkMaxSize();\r\n                    }\r\n                    else {\r\n                        _self[_DYN__BUFFER /* @min:%2e_buffer */] = canUseSessionStorage\r\n                            ? new SessionStorageSendBuffer(diagLog, senderConfig) : new ArraySendBuffer(diagLog, senderConfig);\r\n                    }\r\n                    _namePrefix = namePrefix;\r\n                    _sessionStorageUsed = canUseSessionStorage;\r\n                    _bufferOverrideUsed = bufferOverride;\r\n                    _fetchKeepAlive = !senderConfig[_DYN_ONUNLOAD_DISABLE_FET6 /* @min:%2eonunloadDisableFetch */] && isFetchSupported(true);\r\n                    _disableBeaconSplit = !!senderConfig[_DYN_DISABLE_SEND_BEACON_7 /* @min:%2edisableSendBeaconSplit */];\r\n                    _self._sample = new Sample(senderConfig.samplingPercentage, diagLog);\r\n                    _instrumentationKey = senderConfig[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    if (!isPromiseLike(_instrumentationKey) && !_validateInstrumentationKey(_instrumentationKey, config)) {\r\n                        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, \"Invalid Instrumentation key \" + _instrumentationKey);\r\n                    }\r\n                    _customHeaders = senderConfig[_DYN_CUSTOM_HEADERS /* @min:%2ecustomHeaders */];\r\n                    if (isString(_endpointUrl) && !isInternalApplicationInsightsEndpoint(_endpointUrl) && _customHeaders && _customHeaders[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        arrForEach(_customHeaders, function (customHeader) {\r\n                            _this.addHeader(customHeader.header, customHeader.value);\r\n                        });\r\n                    }\r\n                    else {\r\n                        _customHeaders = null;\r\n                    }\r\n                    _enableSendPromise = senderConfig[_DYN_ENABLE_SEND_PROMISE /* @min:%2eenableSendPromise */];\r\n                    var sendPostConfig = _getSendPostMgrConfig();\r\n                    // only init it once\r\n                    if (!_sendPostMgr) {\r\n                        _sendPostMgr = new SenderPostManager();\r\n                        _sendPostMgr[_DYN_INITIALIZE /* @min:%2einitialize */](sendPostConfig, diagLog);\r\n                    }\r\n                    else {\r\n                        _sendPostMgr.SetConfig(sendPostConfig);\r\n                    }\r\n                    var customInterface = senderConfig.httpXHROverride;\r\n                    var httpInterface = null;\r\n                    var syncInterface = null;\r\n                    // User requested transport(s) values > Beacon > Fetch > XHR\r\n                    // Beacon would be filtered out if user has set disableBeaconApi to true at _getSenderInterface\r\n                    var theTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */], senderConfig.transports);\r\n                    httpInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](theTransports, false);\r\n                    var xhrInterface = _sendPostMgr && _sendPostMgr.getFallbackInst();\r\n                    _xhrSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync);\r\n                    };\r\n                    _fallbackSend = function (payload, isAsync) {\r\n                        return _doSend(xhrInterface, payload, isAsync, false);\r\n                    };\r\n                    httpInterface = _alwaysUseCustomSend ? customInterface : (httpInterface || customInterface || xhrInterface);\r\n                    _self[_DYN__SENDER /* @min:%2e_sender */] = function (payload, isAsync) {\r\n                        return _doSend(httpInterface, payload, isAsync);\r\n                    };\r\n                    if (_fetchKeepAlive) {\r\n                        // Try and use the fetch with keepalive\r\n                        _syncUnloadSender = _fetchKeepAliveSender;\r\n                    }\r\n                    var syncTransports = prependTransports([3 /* TransportType.Beacon */, 1 /* TransportType.Xhr */], senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */]);\r\n                    if (!_fetchKeepAlive) {\r\n                        // remove fetch from theTransports\r\n                        syncTransports = syncTransports.filter(function (transport) { return transport !== 2 /* TransportType.Fetch */; });\r\n                    }\r\n                    syncInterface = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */](syncTransports, true);\r\n                    syncInterface = _alwaysUseCustomSend ? customInterface : (syncInterface || customInterface);\r\n                    if ((_alwaysUseCustomSend || senderConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */] || !_syncUnloadSender) && syncInterface) {\r\n                        _syncUnloadSender = function (payload, isAsync) {\r\n                            return _doSend(syncInterface, payload, isAsync);\r\n                        };\r\n                    }\r\n                    if (!_syncUnloadSender) {\r\n                        _syncUnloadSender = _xhrSend;\r\n                    }\r\n                    _disableTelemetry = senderConfig.disableTelemetry;\r\n                    _convertUndefined = senderConfig[_DYN_CONVERT_UNDEFINED /* @min:%2econvertUndefined */] || UNDEFINED_VALUE;\r\n                    _isRetryDisabled = senderConfig.isRetryDisabled;\r\n                    _maxBatchInterval = senderConfig[_DYN_MAX_BATCH_INTERVAL /* @min:%2emaxBatchInterval */];\r\n                }));\r\n            };\r\n            _self.processTelemetry = function (telemetryItem, itemCtx) {\r\n                var _a;\r\n                itemCtx = _self._getTelCtx(itemCtx);\r\n                var diagLogger = itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var isValidate = _validate(telemetryItem, diagLogger);\r\n                    if (!isValidate) {\r\n                        return;\r\n                    }\r\n                    var aiEnvelope = _getEnvelope(telemetryItem, diagLogger);\r\n                    if (!aiEnvelope) {\r\n                        return;\r\n                    }\r\n                    // check if the incoming payload is too large, truncate if necessary\r\n                    var payload = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](aiEnvelope);\r\n                    // flush if we would exceed the max-size limit by adding this item\r\n                    var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                    _checkMaxSize(payload);\r\n                    var payloadItem = (_a = {},\r\n                        _a[_DYN_ITEM /* @min:item */] = payload,\r\n                        _a.cnt = 0 // inital cnt will always be 0\r\n                    ,\r\n                        _a);\r\n                    // enqueue the payload\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](payloadItem);\r\n                    // ensure an invocation timeout is set\r\n                    _setupTimer();\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 12 /* _eInternalMessageId.FailedAddingTelemetryToBuffer */, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                }\r\n                // hand off the telemetry item to the next plugin\r\n                _self.processNext(telemetryItem, itemCtx);\r\n            };\r\n            _self.isCompletelyIdle = function () {\r\n                return !_paused && _syncFetchPayload === 0 && _self._buffer[_DYN_COUNT /* @min:%2ecount */]() === 0;\r\n            };\r\n            _self.getOfflineListener = function () {\r\n                return _offlineListener;\r\n            };\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            _self._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n                // since version 3.2.0, this function is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xhrReadyStateChange(xhr, payload, countOfItemsInPayload);\r\n            };\r\n            /**\r\n             * Immediately send buffered data\r\n             * @param async - {boolean} - Indicates if the events should be sent asynchronously\r\n             * @param forcedSender - {SenderFunction} - Indicates the forcedSender, undefined if not passed\r\n             */\r\n            _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */] = function (async, forcedSender, sendReason) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                if (!_paused) {\r\n                    try {\r\n                        var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                        // Send data only if disableTelemetry is false\r\n                        if (!_disableTelemetry) {\r\n                            if (buffer[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                var payload = buffer.getItems();\r\n                                _notifySendRequest(sendReason || 0 /* SendRequestReason.Undefined */, async);\r\n                                // invoke send\r\n                                if (forcedSender) {\r\n                                    result = forcedSender.call(_self, payload, async);\r\n                                }\r\n                                else {\r\n                                    result = _self[_DYN__SENDER /* @min:%2e_sender */](payload, async);\r\n                                }\r\n                            }\r\n                            // update lastSend time to enable throttling\r\n                            _lastSend = +new Date;\r\n                        }\r\n                        else {\r\n                            buffer[_DYN_CLEAR /* @min:%2eclear */]();\r\n                        }\r\n                        _clearScheduledTimer();\r\n                    }\r\n                    catch (e) {\r\n                        /* Ignore this error for IE under v10 */\r\n                        var ieVer = getIEVersion();\r\n                        if (!ieVer || ieVer > 9) {\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Telemetry transmission failed, some telemetry will be lost: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            _self.getOfflineSupport = function () {\r\n                var _a;\r\n                return _a = {\r\n                        getUrl: function () {\r\n                            return _endpointUrl;\r\n                        },\r\n                        createPayload: _createPayload\r\n                    },\r\n                    _a[_DYN_SERIALIZE /* @min:serialize */] = _serialize,\r\n                    _a.batch = _batch,\r\n                    _a.shouldProcess = function (evt) {\r\n                        return !!_validate(evt);\r\n                    },\r\n                    _a;\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _self.onunloadFlush();\r\n                runTargetUnload(_offlineListener, false);\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * error handler\r\n             */\r\n            _self[_DYN__ON_ERROR /* @min:%2e_onError */] = function (payload, message, event) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onError(payload, message, event);\r\n            };\r\n            /**\r\n             * partial success handler\r\n             */\r\n            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */] = function (payload, results) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onPartialSuccess(payload, results);\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */] = function (payload, countOfItemsInPayload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _onSuccess(payload, countOfItemsInPayload);\r\n                //_self._buffer && _self._buffer.clearSent(payload);\r\n            };\r\n            /**\r\n             * xdr state changes\r\n             */\r\n            _self._xdrOnLoad = function (xdr, payload) {\r\n                // since version 3.1.3, string[] is no-op\r\n                if (_isStringArr(payload)) {\r\n                    return;\r\n                }\r\n                return _xdrOnLoad(xdr, payload);\r\n            };\r\n            function _xdrOnLoad(xdr, payload) {\r\n                var responseText = _getResponseText(xdr);\r\n                if (xdr && (responseText + \"\" === \"200\" || responseText === \"\")) {\r\n                    _consecutiveErrors = 0;\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, 0);\r\n                }\r\n                else {\r\n                    var results = parseResponse(responseText);\r\n                    if (results && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] > results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]\r\n                        && !_isRetryDisabled) {\r\n                        _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, results);\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, formatErrorMessageXdr(xdr));\r\n                    }\r\n                }\r\n            }\r\n            function _getSendPostMgrConfig() {\r\n                var _a;\r\n                try {\r\n                    var onCompleteFuncs = {\r\n                        xdrOnComplete: function (xdr, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xdrOnLoad(xdr, data);\r\n                        },\r\n                        fetchOnComplete: function (response, onComplete, resValue, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _checkResponsStatus(response.status, data, response.url, data[_DYN_LENGTH /* @min:%2elength */], response.statusText, resValue || \"\");\r\n                        },\r\n                        xhrOnComplete: function (request, oncomplete, payload) {\r\n                            var data = _getPayloadArr(payload);\r\n                            if (!data) {\r\n                                return;\r\n                            }\r\n                            return _xhrReadyStateChange(request, data, data[_DYN_LENGTH /* @min:%2elength */]);\r\n                        },\r\n                        beaconOnRetry: function (data, onComplete, canSend) {\r\n                            return _onBeaconRetry(data, onComplete, canSend);\r\n                        }\r\n                    };\r\n                    var config = (_a = {},\r\n                        _a[_DYN_ENABLE_SEND_PROMISE /* @min:enableSendPromise */] = _enableSendPromise,\r\n                        _a.isOneDs = false,\r\n                        _a.disableCredentials = false,\r\n                        _a[_DYN_DISABLE_XHR /* @min:disableXhr */] = _disableXhr,\r\n                        _a.disableBeacon = !_beaconNormalSupported,\r\n                        _a.disableBeaconSync = !_beaconOnUnloadSupported,\r\n                        _a.senderOnCompleteCallBack = onCompleteFuncs,\r\n                        _a);\r\n                    return config;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * xhr state changes\r\n             */\r\n            function _xhrReadyStateChange(xhr, payload, countOfItemsInPayload) {\r\n                if (xhr.readyState === 4) {\r\n                    _checkResponsStatus(xhr.status, payload, xhr.responseURL, countOfItemsInPayload, formatErrorMessageXhr(xhr), _getResponseText(xhr) || xhr.response);\r\n                }\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(payload, message, event) {\r\n                _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            /**\r\n             * partial success handler\r\n             */\r\n            function _onPartialSuccess(payload, results) {\r\n                var failed = [];\r\n                var retry = [];\r\n                // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n                var errors = results.errors.reverse();\r\n                for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n                    var error = errors_1[_i];\r\n                    var extracted = payload.splice(error.index, 1)[0];\r\n                    if (_isRetriable(error.statusCode)) {\r\n                        retry[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                    else {\r\n                        // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                        failed[_DYN_PUSH /* @min:%2epush */](extracted);\r\n                    }\r\n                }\r\n                if (payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */]);\r\n                }\r\n                if (failed[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _self[_DYN__ON_ERROR /* @min:%2e_onError */](failed, formatErrorMessageXhr(null, [\"partial success\", results[_DYN_ITEMS_ACCEPTED /* @min:%2eitemsAccepted */], \"of\", results.itemsReceived].join(\" \")));\r\n                }\r\n                if (retry[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _resendPayload(retry);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \"Partial success. \" +\r\n                        \"Delivered: \" + payload[_DYN_LENGTH /* @min:%2elength */] + \", Failed: \" + failed[_DYN_LENGTH /* @min:%2elength */] +\r\n                        \". Will retry to send \" + retry[_DYN_LENGTH /* @min:%2elength */] + \" our of \" + results[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] + \" items\");\r\n                }\r\n            }\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(payload, countOfItemsInPayload) {\r\n                _self._buffer && _self._buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n            }\r\n            function _getPayloadArr(payload) {\r\n                try {\r\n                    if (payload) {\r\n                        var internalPayload = payload;\r\n                        var arr = internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                        if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                            return arr;\r\n                        }\r\n                        return null;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _validate(telemetryItem, diagLogger) {\r\n                if (_disableTelemetry) {\r\n                    // Do not send/save data\r\n                    return false;\r\n                }\r\n                // validate input\r\n                if (!telemetryItem) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 7 /* _eInternalMessageId.CannotSendEmptyTelemetry */, \"Cannot send empty telemetry\");\r\n                    return false;\r\n                }\r\n                // validate event\r\n                if (telemetryItem.baseData && !telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 70 /* _eInternalMessageId.InvalidEvent */, \"Cannot send telemetry without baseData and baseType\");\r\n                    return false;\r\n                }\r\n                if (!telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */]) {\r\n                    // Default\r\n                    telemetryItem[_DYN_BASE_TYPE /* @min:%2ebaseType */] = \"EventData\";\r\n                }\r\n                // ensure a sender was constructed\r\n                if (!_self[_DYN__SENDER /* @min:%2e_sender */]) {\r\n                    diagLogger && _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender was not initialized\");\r\n                    return false;\r\n                }\r\n                // check if this item should be sampled in, else add sampleRate tag\r\n                if (!_isSampledIn(telemetryItem)) {\r\n                    // Item is sampled out, do not send it\r\n                    diagLogger && _throwInternal(diagLogger, 2 /* eLoggingSeverity.WARNING */, 33 /* _eInternalMessageId.TelemetrySampledAndNotSent */, \"Telemetry item was sampled out and not sent\", { SampleRate: _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] });\r\n                    return false;\r\n                }\r\n                else {\r\n                    telemetryItem[SampleRate] = _self._sample[_DYN_SAMPLE_RATE /* @min:%2esampleRate */];\r\n                }\r\n                return true;\r\n            }\r\n            function _getEnvelope(telemetryItem, diagLogger) {\r\n                // construct an envelope that Application Insights endpoint can understand\r\n                // if ikey of telemetry is provided and not empty, envelope will use this iKey instead of senderConfig iKey\r\n                var defaultEnvelopeIkey = telemetryItem.iKey || _instrumentationKey;\r\n                var aiEnvelope = Sender.constructEnvelope(telemetryItem, defaultEnvelopeIkey, diagLogger, _convertUndefined);\r\n                if (!aiEnvelope) {\r\n                    _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 47 /* _eInternalMessageId.CreateEnvelopeError */, \"Unable to create an AppInsights envelope\");\r\n                    return;\r\n                }\r\n                var doNotSendItem = false;\r\n                // this is for running in legacy mode, where customer may already have a custom initializer present\r\n                if (telemetryItem[_DYN_TAGS /* @min:%2etags */] && telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy]) {\r\n                    arrForEach(telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy], function (callBack) {\r\n                        try {\r\n                            if (callBack && callBack(aiEnvelope) === false) {\r\n                                doNotSendItem = true;\r\n                                _warnToConsole(diagLogger, \"Telemetry processor check returns false\");\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            // log error but dont stop executing rest of the telemetry initializers\r\n                            // doNotSendItem = true;\r\n                            _throwInternal(diagLogger, 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"One of telemetry initializers failed, telemetry item will not be sent: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n                        }\r\n                    });\r\n                    delete telemetryItem[_DYN_TAGS /* @min:%2etags */][ProcessLegacy];\r\n                }\r\n                if (doNotSendItem) {\r\n                    return; // do not send, no need to execute next plugin\r\n                }\r\n                return aiEnvelope;\r\n            }\r\n            function _serialize(item) {\r\n                var rlt = EMPTY_STR;\r\n                var diagLogger = _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n                try {\r\n                    var valid = _validate(item, diagLogger);\r\n                    var envelope = null;\r\n                    if (valid) {\r\n                        envelope = _getEnvelope(item, diagLogger);\r\n                    }\r\n                    if (envelope) {\r\n                        rlt = _serializer[_DYN_SERIALIZE /* @min:%2eserialize */](envelope);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return rlt;\r\n            }\r\n            function _batch(arr) {\r\n                var rlt = EMPTY_STR;\r\n                if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    rlt = \"[\" + arr.join(\",\") + \"]\";\r\n                }\r\n                return rlt;\r\n            }\r\n            function _createPayload(data) {\r\n                var _a;\r\n                var headers = _getHeaders();\r\n                return _a = {\r\n                        urlString: _endpointUrl\r\n                    },\r\n                    _a[_DYN_DATA /* @min:data */] = data,\r\n                    _a.headers = headers,\r\n                    _a;\r\n            }\r\n            function _isSampledIn(envelope) {\r\n                return _self._sample.isSampledIn(envelope);\r\n            }\r\n            function _getOnComplete(payload, status, headers, response) {\r\n                // ***********************************************************************************************\r\n                //TODO: handle other status codes\r\n                if (status === 200 && payload) {\r\n                    _self._onSuccess(payload, payload[_DYN_LENGTH /* @min:%2elength */]);\r\n                }\r\n                else {\r\n                    response && _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, response);\r\n                }\r\n            }\r\n            function _doSend(sendInterface, payload, isAsync, markAsSent) {\r\n                if (markAsSent === void 0) { markAsSent = true; }\r\n                var onComplete = function (status, headers, response) {\r\n                    return _getOnComplete(payload, status, headers, response);\r\n                };\r\n                var payloadData = _getPayload(payload);\r\n                var sendPostFunc = sendInterface && sendInterface.sendPOST;\r\n                if (sendPostFunc && payloadData) {\r\n                    // ***********************************************************************************************\r\n                    // mark payload as sent at the beginning of calling each send function\r\n                    if (markAsSent) {\r\n                        _self._buffer[_DYN_MARK_AS_SENT /* @min:%2emarkAsSent */](payload);\r\n                    }\r\n                    return sendPostFunc(payloadData, onComplete, !isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            function _getPayload(payload) {\r\n                var _a;\r\n                if (isArray(payload) && payload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var batch = _self[_DYN__BUFFER /* @min:%2e_buffer */].batchPayloads(payload);\r\n                    var headers = _getHeaders();\r\n                    var payloadData = (_a = {},\r\n                        _a[_DYN_DATA /* @min:data */] = batch,\r\n                        _a.urlString = _endpointUrl,\r\n                        _a.headers = headers,\r\n                        _a.disableXhrSync = _disableXhr,\r\n                        _a.disableFetchKeepAlive = !_fetchKeepAlive,\r\n                        _a[_DYN_ORI_PAYLOAD /* @min:oriPayload */] = payload,\r\n                        _a);\r\n                    return payloadData;\r\n                }\r\n                return null;\r\n            }\r\n            function _getHeaders() {\r\n                try {\r\n                    var headers = _headers || {};\r\n                    if (isInternalApplicationInsightsEndpoint(_endpointUrl)) {\r\n                        headers[RequestHeaders[6 /* eRequestHeaders.sdkContextHeader */]] = RequestHeaders[7 /* eRequestHeaders.sdkContextHeaderAppIdRequest */];\r\n                    }\r\n                    return headers;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _checkMaxSize(incomingPayload) {\r\n                var incomingSize = incomingPayload ? incomingPayload[_DYN_LENGTH /* @min:%2elength */] : 0;\r\n                if ((_self[_DYN__BUFFER /* @min:%2e_buffer */].size() + incomingSize) > _maxBatchSizeInBytes) {\r\n                    if (!_offlineListener || _offlineListener.isOnline()) { // only trigger send when currently online\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 10 /* SendRequestReason.MaxBatchSize */);\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _checkResponsStatus(status, payload, responseUrl, countOfItemsInPayload, errorMessage, res) {\r\n                var response = null;\r\n                if (!_self._appId) {\r\n                    response = parseResponse(res);\r\n                    if (response && response.appId) {\r\n                        _self._appId = response.appId;\r\n                    }\r\n                }\r\n                if ((status < 200 || status >= 300) && status !== 0) {\r\n                    // Update End Point url if permanent redirect or moved permanently\r\n                    // Updates the end point url before retry\r\n                    if (status === 301 || status === 307 || status === 308) {\r\n                        if (!_checkAndUpdateEndPointUrl(responseUrl)) {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (_offlineListener && !_offlineListener.isOnline()) { // offline\r\n                        // Note: Don't check for status == 0, since adblock gives this code\r\n                        if (!_isRetryDisabled) {\r\n                            var offlineBackOffMultiplier = 10; // arbritrary number\r\n                            _resendPayload(payload, offlineBackOffMultiplier);\r\n                            _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". Offline - Response Code: \".concat(status, \". Offline status: \").concat(!_offlineListener.isOnline(), \". Will retry to send \").concat(payload.length, \" items.\"));\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (!_isRetryDisabled && _isRetriable(status)) {\r\n                        _resendPayload(payload);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" +\r\n                            \"Response code \" + status + \". Will retry to send \" + payload[_DYN_LENGTH /* @min:%2elength */] + \" items.\");\r\n                    }\r\n                    else {\r\n                        _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                    }\r\n                }\r\n                else {\r\n                    // check if the xhr's responseURL or fetch's response.url is same as endpoint url\r\n                    // TODO after 10 redirects force send telemetry with 'redirect=false' as query parameter.\r\n                    _checkAndUpdateEndPointUrl(responseUrl);\r\n                    if (status === 206) {\r\n                        if (!response) {\r\n                            response = parseResponse(res);\r\n                        }\r\n                        if (response && !_isRetryDisabled) {\r\n                            _self[_DYN__ON_PARTIAL_SUCCESS /* @min:%2e_onPartialSuccess */](payload, response);\r\n                        }\r\n                        else {\r\n                            _self[_DYN__ON_ERROR /* @min:%2e_onError */](payload, errorMessage);\r\n                        }\r\n                    }\r\n                    else {\r\n                        _consecutiveErrors = 0;\r\n                        _self[_DYN__ON_SUCCESS /* @min:%2e_onSuccess */](payload, countOfItemsInPayload);\r\n                    }\r\n                }\r\n            }\r\n            function _checkAndUpdateEndPointUrl(responseUrl) {\r\n                // Maximum stamp specific redirects allowed(uncomment this when breeze is ready with not allowing redirects feature)\r\n                if (_stamp_specific_redirects >= 10) {\r\n                    //  _self._senderConfig.endpointUrl = () => Sender._getDefaultAppInsightsChannelConfig().endpointUrl()+\"/?redirect=false\";\r\n                    //  _stamp_specific_redirects = 0;\r\n                    return false;\r\n                }\r\n                if (!isNullOrUndefined(responseUrl) && responseUrl !== \"\") {\r\n                    if (responseUrl !== _endpointUrl) {\r\n                        _endpointUrl = responseUrl;\r\n                        ++_stamp_specific_redirects;\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            function _doUnloadSend(payload, isAsync) {\r\n                if (_syncUnloadSender) {\r\n                    // We are unloading so always call the sender with sync set to false\r\n                    _syncUnloadSender(payload, false);\r\n                }\r\n                else {\r\n                    // Fallback to the previous beacon Sender (which causes a CORB warning on chrome now)\r\n                    var beaconInst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([3 /* TransportType.Beacon */], true);\r\n                    return _doSend(beaconInst, payload, isAsync);\r\n                }\r\n            }\r\n            function _onBeaconRetry(payload, onComplete, canSend) {\r\n                var internalPayload = payload;\r\n                var data = internalPayload && internalPayload[_DYN_ORI_PAYLOAD /* @min:%2eoriPayload */];\r\n                if (!_disableBeaconSplit) {\r\n                    // Failed to send entire payload so try and split data and try to send as much events as possible\r\n                    var droppedPayload = [];\r\n                    for (var lp = 0; lp < data[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        var thePayload = data[lp];\r\n                        var arr = [thePayload];\r\n                        var item = _getPayload(arr);\r\n                        if (!canSend(item, onComplete)) {\r\n                            // Can't send anymore, so split the batch and drop the rest\r\n                            droppedPayload[_DYN_PUSH /* @min:%2epush */](thePayload);\r\n                        }\r\n                        else {\r\n                            _self._onSuccess(arr, arr[_DYN_LENGTH /* @min:%2elength */]);\r\n                        }\r\n                    }\r\n                    if (droppedPayload[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _fallbackSend && _fallbackSend(droppedPayload, true);\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                    }\r\n                }\r\n                else {\r\n                    _fallbackSend && _fallbackSend(data, true);\r\n                    _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                }\r\n            }\r\n            function _isStringArr(arr) {\r\n                try {\r\n                    if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        return (isString(arr[0]));\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    //TODO: log, sender use IInternalStorageItem instead of string since 3.1.3\r\n                }\r\n                return null;\r\n            }\r\n            function _fetchKeepAliveSender(payload, isAsync) {\r\n                var transport = null;\r\n                if (isArray(payload)) {\r\n                    var payloadSize = payload[_DYN_LENGTH /* @min:%2elength */];\r\n                    for (var lp = 0; lp < payload[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        payloadSize += payload[lp].item[_DYN_LENGTH /* @min:%2elength */];\r\n                    }\r\n                    var syncFetchPayload = _sendPostMgr.getSyncFetchPayload();\r\n                    if ((syncFetchPayload + payloadSize) <= FetchSyncRequestSizeLimitBytes) {\r\n                        transport = 2 /* TransportType.Fetch */;\r\n                    }\r\n                    else if (isBeaconsSupported()) {\r\n                        // Fallback to beacon sender as we at least get told which events can't be scheduled\r\n                        transport = 3 /* TransportType.Beacon */;\r\n                    }\r\n                    else {\r\n                        // Payload is going to be too big so just try and send via XHR\r\n                        transport = 1 /* TransportType.Xhr */;\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with xhrSender.\");\r\n                    }\r\n                    var inst = _sendPostMgr && _sendPostMgr[_DYN_GET_SENDER_INST /* @min:%2egetSenderInst */]([transport], true);\r\n                    return _doSend(inst, payload, isAsync);\r\n                }\r\n                return null;\r\n            }\r\n            /**\r\n             * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n             * @param payload\r\n             */\r\n            function _resendPayload(payload, linearFactor) {\r\n                if (linearFactor === void 0) { linearFactor = 1; }\r\n                if (!payload || payload[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    return;\r\n                }\r\n                var buffer = _self[_DYN__BUFFER /* @min:%2e_buffer */];\r\n                buffer[_DYN_CLEAR_SENT /* @min:%2eclearSent */](payload);\r\n                _consecutiveErrors++;\r\n                for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n                    var item = payload_1[_i];\r\n                    item.cnt = item.cnt || 0; // to make sure we have cnt for each payload\r\n                    item.cnt++; // when resend, increase cnt\r\n                    buffer[_DYN_ENQUEUE /* @min:%2eenqueue */](item);\r\n                }\r\n                // setup timer\r\n                _setRetryTime(linearFactor);\r\n                _setupTimer();\r\n            }\r\n            /**\r\n             * Calculates the time to wait before retrying in case of an error based on\r\n             * http://en.wikipedia.org/wiki/Exponential_backoff\r\n             */\r\n            function _setRetryTime(linearFactor) {\r\n                var SlotDelayInSeconds = 10;\r\n                var delayInSeconds;\r\n                if (_consecutiveErrors <= 1) {\r\n                    delayInSeconds = SlotDelayInSeconds;\r\n                }\r\n                else {\r\n                    var backOffSlot = (Math.pow(2, _consecutiveErrors) - 1) / 2;\r\n                    // tslint:disable-next-line:insecure-random\r\n                    var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n                    backOffDelay = linearFactor * backOffDelay;\r\n                    delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n                }\r\n                // TODO: Log the backoff time like the C# version does.\r\n                var retryAfterTimeSpan = dateNow() + (delayInSeconds * 1000);\r\n                // TODO: Log the retry at time like the C# version does.\r\n                _retryAt = retryAfterTimeSpan;\r\n            }\r\n            /**\r\n             * Sets up the timer which triggers actually sending the data.\r\n             */\r\n            function _setupTimer() {\r\n                if (!_timeoutHandle && !_paused) {\r\n                    var retryInterval = _retryAt ? Math.max(0, _retryAt - dateNow()) : 0;\r\n                    var timerValue = Math.max(_maxBatchInterval, retryInterval);\r\n                    _timeoutHandle = scheduleTimeout(function () {\r\n                        _timeoutHandle = null;\r\n                        _self[_DYN_TRIGGER_SEND /* @min:%2etriggerSend */](true, null, 1 /* SendRequestReason.NormalSchedule */);\r\n                    }, timerValue);\r\n                }\r\n            }\r\n            function _clearScheduledTimer() {\r\n                _timeoutHandle && _timeoutHandle.cancel();\r\n                _timeoutHandle = null;\r\n                _retryAt = null;\r\n            }\r\n            /**\r\n             * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n             * @param statusCode\r\n             */\r\n            function _isRetriable(statusCode) {\r\n                // retryCodes = [] means should not retry\r\n                if (!isNullOrUndefined(_retryCodes)) {\r\n                    return _retryCodes[_DYN_LENGTH /* @min:%2elength */] && _retryCodes.indexOf(statusCode) > -1;\r\n                }\r\n                return statusCode === 401 // Unauthorized\r\n                    // Removing as private links can return a 403 which causes excessive retries and session storage usage\r\n                    // || statusCode === 403 // Forbidden\r\n                    || statusCode === 408 // Timeout\r\n                    || statusCode === 429 // Too many requests.\r\n                    || statusCode === 500 // Internal server error.\r\n                    || statusCode === 502 // Bad Gateway.\r\n                    || statusCode === 503 // Service unavailable.\r\n                    || statusCode === 504; // Gateway timeout.\r\n            }\r\n            // Using function lookups for backward compatibility as the getNotifyMgr() did not exist until after v2.5.6\r\n            function _getNotifyMgr() {\r\n                var func = \"getNotifyMgr\";\r\n                if (_self.core[func]) {\r\n                    return _self.core[func]();\r\n                }\r\n                // using _self.core['_notificationManager'] for backward compatibility\r\n                return _self.core[\"_notificationManager\"];\r\n            }\r\n            function _notifySendRequest(sendRequest, isAsync) {\r\n                var manager = _getNotifyMgr();\r\n                if (manager && manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */]) {\r\n                    try {\r\n                        manager[_DYN_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendRequest, isAsync);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, \"send request notification failed: \" + getExceptionName(e), { exception: dumpObj(e) });\r\n                    }\r\n                }\r\n            }\r\n            /**\r\n             * Validate UUID Format\r\n             * Specs taken from https://tools.ietf.org/html/rfc4122 and breeze repo\r\n             */\r\n            function _validateInstrumentationKey(instrumentationKey, config) {\r\n                var disableValidation = config.disableInstrumentationKeyValidation;\r\n                var disableIKeyValidationFlag = isNullOrUndefined(disableValidation) ? false : disableValidation;\r\n                if (disableIKeyValidationFlag) {\r\n                    return true;\r\n                }\r\n                var UUID_Regex = \"^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$\";\r\n                var regexp = new RegExp(UUID_Regex);\r\n                return regexp.test(instrumentationKey);\r\n            }\r\n            function _initDefaults() {\r\n                _self[_DYN__SENDER /* @min:%2e_sender */] = null;\r\n                _self[_DYN__BUFFER /* @min:%2e_buffer */] = null;\r\n                _self._appId = null;\r\n                _self._sample = null;\r\n                _headers = {};\r\n                _offlineListener = null;\r\n                _consecutiveErrors = 0;\r\n                _retryAt = null;\r\n                _lastSend = null;\r\n                _paused = false;\r\n                _timeoutHandle = null;\r\n                _serializer = null;\r\n                _stamp_specific_redirects = 0;\r\n                _syncFetchPayload = 0;\r\n                _syncUnloadSender = null;\r\n                _evtNamespace = null;\r\n                _endpointUrl = null;\r\n                _orgEndpointUrl = null;\r\n                _maxBatchSizeInBytes = 0;\r\n                _beaconSupported = false;\r\n                _customHeaders = null;\r\n                _disableTelemetry = false;\r\n                _instrumentationKey = null;\r\n                _convertUndefined = UNDEFINED_VALUE;\r\n                _isRetryDisabled = false;\r\n                _sessionStorageUsed = null;\r\n                _namePrefix = UNDEFINED_VALUE;\r\n                _disableXhr = false;\r\n                _fetchKeepAlive = false;\r\n                _disableBeaconSplit = false;\r\n                _xhrSend = null;\r\n                _fallbackSend = null;\r\n                _sendPostMgr = null;\r\n                objDefine(_self, \"_senderConfig\", {\r\n                    g: function () {\r\n                        return objExtend({}, defaultAppInsightsChannelConfig);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n    Sender.constructEnvelope = function (orig, iKey, logger, convertUndefined) {\r\n        var envelope;\r\n        if (iKey !== orig.iKey && !isNullOrUndefined(iKey)) {\r\n            envelope = __assign(__assign({}, orig), { iKey: iKey });\r\n        }\r\n        else {\r\n            envelope = orig;\r\n        }\r\n        var creator = EnvelopeTypeCreator[envelope.baseType] || EventEnvelopeCreator;\r\n        return creator(logger, envelope, convertUndefined);\r\n    };\r\n// Removed Stub for Sender.prototype.pause.\r\n// Removed Stub for Sender.prototype.resume.\r\n// Removed Stub for Sender.prototype.flush.\r\n// Removed Stub for Sender.prototype.onunloadFlush.\r\n// Removed Stub for Sender.prototype.initialize.\r\n// Removed Stub for Sender.prototype.processTelemetry.\r\n// Removed Stub for Sender.prototype._xhrReadyStateChange.\r\n// Removed Stub for Sender.prototype.triggerSend.\r\n// Removed Stub for Sender.prototype._onError.\r\n// Removed Stub for Sender.prototype._onPartialSuccess.\r\n// Removed Stub for Sender.prototype._onSuccess.\r\n// Removed Stub for Sender.prototype._xdrOnLoad.\r\n// Removed Stub for Sender.prototype.addHeader.\r\n// Removed Stub for Sender.prototype.isCompletelyIdle.\r\n// Removed Stub for Sender.prototype.getOfflineSupport.\r\n// Removed Stub for Sender.prototype.getOfflineListener.\r\n    return Sender;\r\n}(BaseTelemetryPlugin));\r\nexport { Sender };\r\n//# sourceMappingURL=Sender.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _throwInternal, getJSON, isArray, isFunction, isObject, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_LENGTH, _DYN_PUSH, _DYN_SERIALIZE, _DYN_STRINGIFY, _DYN_TO_STRING } from \"./__DynamicConstants\";\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer(logger) {\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            /**\r\n             * Serializes the current object to a JSON string.\r\n             */\r\n            _self[_DYN_SERIALIZE /* @min:%2eserialize */] = function (input) {\r\n                var output = _serializeObject(input, \"root\");\r\n                try {\r\n                    return getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](output);\r\n                }\r\n                catch (e) {\r\n                    // if serialization fails return an empty string\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                }\r\n            };\r\n            function _serializeObject(source, name) {\r\n                var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n                var output = {};\r\n                if (!source) {\r\n                    _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (source[circularReferenceCheck]) {\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 50 /* _eInternalMessageId.CircularReferenceDetected */, \"Circular reference detected while serializing object\", { name: name }, true);\r\n                    return output;\r\n                }\r\n                if (!source.aiDataContract) {\r\n                    // special case for measurements/properties/tags\r\n                    if (name === \"measurements\") {\r\n                        output = _serializeStringMap(source, \"number\", name);\r\n                    }\r\n                    else if (name === \"properties\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (name === \"tags\") {\r\n                        output = _serializeStringMap(source, \"string\", name);\r\n                    }\r\n                    else if (isArray(source)) {\r\n                        output = _serializeArray(source, name);\r\n                    }\r\n                    else {\r\n                        _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 49 /* _eInternalMessageId.CannotSerializeObjectNonSerializable */, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                        try {\r\n                            // verify that the object can be stringified\r\n                            getJSON()[_DYN_STRINGIFY /* @min:%2estringify */](source);\r\n                            output = source;\r\n                        }\r\n                        catch (e) {\r\n                            // if serialization fails return an empty string\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.CannotSerializeObject */, (e && isFunction(e[_DYN_TO_STRING /* @min:%2etoString */])) ? e[_DYN_TO_STRING /* @min:%2etoString */]() : \"Error serializing object\", null, true);\r\n                        }\r\n                    }\r\n                    return output;\r\n                }\r\n                source[circularReferenceCheck] = true;\r\n                objForEachKey(source.aiDataContract, function (field, contract) {\r\n                    var isRequired = (isFunction(contract)) ? (contract() & 1 /* FieldType.Required */) : (contract & 1 /* FieldType.Required */);\r\n                    var isHidden = (isFunction(contract)) ? (contract() & 4 /* FieldType.Hidden */) : (contract & 4 /* FieldType.Hidden */);\r\n                    var isArray = contract & 2 /* FieldType.Array */;\r\n                    var isPresent = source[field] !== undefined;\r\n                    var isObj = isObject(source[field]) && source[field] !== null;\r\n                    if (isRequired && !isPresent && !isArray) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 24 /* _eInternalMessageId.MissingRequiredFieldSpecification */, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                        // If not in debug mode, continue and hope the error is permissible\r\n                    }\r\n                    else if (!isHidden) { // Don't serialize hidden fields\r\n                        var value = void 0;\r\n                        if (isObj) {\r\n                            if (isArray) {\r\n                                // special case; recurse on each object in the source array\r\n                                value = _serializeArray(source[field], field);\r\n                            }\r\n                            else {\r\n                                // recurse on the source object in this field\r\n                                value = _serializeObject(source[field], field);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // assign the source field to the output even if undefined or required\r\n                            value = source[field];\r\n                        }\r\n                        // only emit this field if the value is defined\r\n                        if (value !== undefined) {\r\n                            output[field] = value;\r\n                        }\r\n                    }\r\n                });\r\n                delete source[circularReferenceCheck];\r\n                return output;\r\n            }\r\n            function _serializeArray(sources, name) {\r\n                var output;\r\n                if (!!sources) {\r\n                    if (!isArray(sources)) {\r\n                        _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, 54 /* _eInternalMessageId.ItemNotInArray */, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n                    }\r\n                    else {\r\n                        output = [];\r\n                        for (var i = 0; i < sources[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                            var source = sources[i];\r\n                            var item = _serializeObject(source, name + \"[\" + i + \"]\");\r\n                            output[_DYN_PUSH /* @min:%2epush */](item);\r\n                        }\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            function _serializeStringMap(map, expectedType, name) {\r\n                var output;\r\n                if (map) {\r\n                    output = {};\r\n                    objForEachKey(map, function (field, value) {\r\n                        if (expectedType === \"string\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else if (!value[_DYN_TO_STRING /* @min:%2etoString */]) {\r\n                                output[field] = \"invalid field: toString() is not defined.\";\r\n                            }\r\n                            else {\r\n                                output[field] = value[_DYN_TO_STRING /* @min:%2etoString */]();\r\n                            }\r\n                        }\r\n                        else if (expectedType === \"number\") {\r\n                            if (value === undefined) {\r\n                                output[field] = \"undefined\";\r\n                            }\r\n                            else if (value === null) {\r\n                                output[field] = \"null\";\r\n                            }\r\n                            else {\r\n                                var num = parseFloat(value);\r\n                                output[field] = num;\r\n                            }\r\n                        }\r\n                        else {\r\n                            output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                            _throwInternal(logger, 1 /* eLoggingSeverity.CRITICAL */, output[field], null, true);\r\n                        }\r\n                    });\r\n                }\r\n                return output;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Serializer.prototype.serialize.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    Serializer.__ieDyn=1;\n\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n//# sourceMappingURL=Serializer.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { _DYN_CONCAT, _DYN_LENGTH } from \"../../__DynamicConstants\";\r\n// (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\nvar MIN_INPUT_LENGTH = 8;\r\nvar HashCodeScoreGenerator = /** @class */ (function () {\r\n    function HashCodeScoreGenerator() {\r\n    }\r\n    HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n        var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n        return score * 100;\r\n    };\r\n    HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n        if (input === \"\") {\r\n            return 0;\r\n        }\r\n        while (input[_DYN_LENGTH /* @min:%2elength */] < MIN_INPUT_LENGTH) {\r\n            input = input[_DYN_CONCAT /* @min:%2econcat */](input);\r\n        }\r\n        // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n        var hash = 5381;\r\n        for (var i = 0; i < input[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n            hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n            // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n            // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n            hash = hash & hash;\r\n        }\r\n        return Math.abs(hash);\r\n    };\r\n    // We're using 32 bit math, hence max value is (2^31 - 1)\r\n    HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n    return HashCodeScoreGenerator;\r\n}());\r\nexport { HashCodeScoreGenerator };\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ContextTagKeys } from \"@microsoft/applicationinsights-common\";\r\nimport { _DYN_GET_HASH_CODE_SCORE, _DYN_GET_SAMPLING_SCORE, _DYN_TAGS, _DYN_TRACE_ID } from \"../../__DynamicConstants\";\r\nimport { HashCodeScoreGenerator } from \"./HashCodeScoreGenerator\";\r\nvar SamplingScoreGenerator = /** @class */ (function () {\r\n    function SamplingScoreGenerator() {\r\n        var _self = this;\r\n        var hashCodeGenerator = new HashCodeScoreGenerator();\r\n        var keys = new ContextTagKeys();\r\n        _self[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */] = function (item) {\r\n            var score = 0;\r\n            if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.userId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.userId]);\r\n            }\r\n            else if (item.ext && item.ext.user && item.ext.user.id) {\r\n                score = hashCodeGenerator[_DYN_GET_HASH_CODE_SCORE /* @min:%2egetHashCodeScore */](item.ext.user.id);\r\n            }\r\n            else if (item[_DYN_TAGS /* @min:%2etags */] && item[_DYN_TAGS /* @min:%2etags */][keys.operationId]) { // search in tags first, then ext\r\n                score = hashCodeGenerator.getHashCodeScore(item[_DYN_TAGS /* @min:%2etags */][keys.operationId]);\r\n            }\r\n            else if (item.ext && item.ext.telemetryTrace && item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]) {\r\n                score = hashCodeGenerator.getHashCodeScore(item.ext.telemetryTrace[_DYN_TRACE_ID /* @min:%2etraceID */]);\r\n            }\r\n            else {\r\n                // tslint:disable-next-line:insecure-random\r\n                score = (Math.random() * 100);\r\n            }\r\n            return score;\r\n        };\r\n    }\r\n    return SamplingScoreGenerator;\r\n}());\r\nexport { SamplingScoreGenerator };\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","/*\n * Application Insights JavaScript SDK - Channel, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { Metric } from \"@microsoft/applicationinsights-common\";\r\nimport { safeGetLogger } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_DATA_TYPE, _DYN_GET_SAMPLING_SCORE, _DYN_SAMPLE_RATE } from \"../__DynamicConstants\";\r\nimport { SamplingScoreGenerator } from \"./SamplingScoreGenerators/SamplingScoreGenerator\";\r\nvar Sample = /** @class */ (function () {\r\n    function Sample(sampleRate, logger) {\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        this.INT_MAX_VALUE = 2147483647;\r\n        var _logger = logger || safeGetLogger(null);\r\n        if (sampleRate > 100 || sampleRate < 0) {\r\n            _logger.throwInternal(2 /* eLoggingSeverity.WARNING */, 58 /* _eInternalMessageId.SampleRateOutOfRange */, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n            sampleRate = 100;\r\n        }\r\n        this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */] = sampleRate;\r\n        this.samplingScoreGenerator = new SamplingScoreGenerator();\r\n    }\r\n    /**\r\n    * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n    */\r\n    Sample.prototype.isSampledIn = function (envelope) {\r\n        var samplingPercentage = this[_DYN_SAMPLE_RATE /* @min:%2esampleRate */]; // 0 - 100\r\n        var isSampledIn = false;\r\n        if (samplingPercentage === null || samplingPercentage === undefined || samplingPercentage >= 100) {\r\n            return true;\r\n        }\r\n        else if (envelope.baseType === Metric[_DYN_DATA_TYPE /* @min:%2edataType */]) {\r\n            // exclude MetricData telemetry from sampling\r\n            return true;\r\n        }\r\n        isSampledIn = this.samplingScoreGenerator[_DYN_GET_SAMPLING_SCORE /* @min:%2egetSamplingScore */](envelope) < samplingPercentage;\r\n        return isSampledIn;\r\n    };\r\n    return Sample;\r\n}());\r\nexport { Sample };\r\n//# sourceMappingURL=Sample.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrReduce, objKeys, strEndsWith } from \"@microsoft/applicationinsights-core-js\";\r\nimport { DEFAULT_BREEZE_ENDPOINT } from \"./Constants\";\r\nimport { _DYN_INGESTIONENDPOINT, _DYN_LENGTH, _DYN_SPLIT, _DYN_TO_LOWER_CASE } from \"./__DynamicConstants\";\r\nvar _FIELDS_SEPARATOR = \";\";\r\nvar _FIELD_KEY_VALUE_SEPARATOR = \"=\";\r\nexport function parseConnectionString(connectionString) {\r\n    if (!connectionString) {\r\n        return {};\r\n    }\r\n    var kvPairs = connectionString[_DYN_SPLIT /* @min:%2esplit */](_FIELDS_SEPARATOR);\r\n    var result = arrReduce(kvPairs, function (fields, kv) {\r\n        var kvParts = kv[_DYN_SPLIT /* @min:%2esplit */](_FIELD_KEY_VALUE_SEPARATOR);\r\n        if (kvParts[_DYN_LENGTH /* @min:%2elength */] === 2) { // only save fields with valid formats\r\n            var key = kvParts[0][_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n            var value = kvParts[1];\r\n            fields[key] = value;\r\n        }\r\n        return fields;\r\n    }, {});\r\n    if (objKeys(result)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // this is a valid connection string, so parse the results\r\n        if (result.endpointsuffix) {\r\n            // apply the default endpoints\r\n            var locationPrefix = result.location ? result.location + \".\" : \"\";\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || (\"https://\" + locationPrefix + \"dc.\" + result.endpointsuffix);\r\n        }\r\n        // apply user override endpoint or the default endpoints\r\n        result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] || DEFAULT_BREEZE_ENDPOINT;\r\n        if (strEndsWith(result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */], \"/\")) {\r\n            result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */] = result[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */].slice(0, -1);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport var ConnectionStringParser = {\r\n    parse: parseConnectionString\r\n};\r\n//# sourceMappingURL=ConnectionStringParser.js.map","/*\n * Application Insights JavaScript Web SDK - Basic, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\nimport { DEFAULT_BREEZE_PATH, parseConnectionString } from \"@microsoft/applicationinsights-common\";\r\nimport { AppInsightsCore, cfgDfValidate, createDynamicConfig, onConfigChange, proxyFunctions } from \"@microsoft/applicationinsights-core-js\";\r\nimport { createSyncPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { isNullOrUndefined, isPromiseLike, isString, objDefine, throwError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_CONNECTION_STRING, _DYN_ENDPOINT_URL, _DYN_INGESTIONENDPOINT, _DYN_INSTRUMENTATIONKEY0, _DYN_INSTRUMENTATION_KEY, _DYN_USER_OVERRIDE_ENDPOI1 } from \"./__DynamicConstants\";\r\nvar UNDEFINED_VALUE = undefined;\r\nvar defaultConfigValues = (_a = {\r\n        diagnosticLogInterval: cfgDfValidate(_chkDiagLevel, 10000)\r\n    },\r\n    _a[_DYN_CONNECTION_STRING /* @min:connectionString */] = UNDEFINED_VALUE,\r\n    _a[_DYN_ENDPOINT_URL /* @min:endpointUrl */] = UNDEFINED_VALUE,\r\n    _a[_DYN_INSTRUMENTATION_KEY /* @min:instrumentationKey */] = UNDEFINED_VALUE,\r\n    _a.extensionConfig = {},\r\n    _a);\r\nfunction _chkDiagLevel(value) {\r\n    // Make sure we have a value > 0\r\n    return value && value > 0;\r\n}\r\n/**\r\n * @export\r\n * @class ApplicationInsights\r\n */\r\nvar ApplicationInsights = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ApplicationInsights.\r\n     * @param config\r\n     * @memberof ApplicationInsights\r\n     */\r\n    function ApplicationInsights(config) {\r\n        var core = new AppInsightsCore();\r\n        var _config;\r\n        // initialize the queue and config in case they are undefined\r\n        if (isNullOrUndefined(config) ||\r\n            (isNullOrUndefined(config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */]) && isNullOrUndefined(config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */]))) {\r\n            throwError(\"Invalid input configuration\");\r\n        }\r\n        dynamicProto(ApplicationInsights, this, function (_self) {\r\n            // Define _self.config\r\n            objDefine(_self, \"config\", {\r\n                g: function () { return _config; }\r\n            });\r\n            _initialize();\r\n            _self.initialize = _initialize;\r\n            _self.track = _track;\r\n            proxyFunctions(_self, core, [\r\n                \"flush\",\r\n                \"pollInternalLogs\",\r\n                \"stopPollingInternalLogs\",\r\n                \"unload\",\r\n                \"getPlugin\",\r\n                \"addPlugin\",\r\n                \"evtNamespace\",\r\n                \"addUnloadCb\",\r\n                \"onCfgChange\",\r\n                \"getTraceCtx\",\r\n                \"updateCfg\",\r\n                \"addTelemetryInitializer\"\r\n            ]);\r\n            function _initialize() {\r\n                var cfgHandler = createDynamicConfig(config || {}, defaultConfigValues);\r\n                _config = cfgHandler.cfg;\r\n                core.addUnloadHook(onConfigChange(cfgHandler, function () {\r\n                    var configCs = _config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */];\r\n                    if (isPromiseLike(configCs)) {\r\n                        var ikeyPromise = createSyncPromise(function (resolve, reject) {\r\n                            doAwaitResponse(configCs, function (res) {\r\n                                var curCs = res.value;\r\n                                var ikey = _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                                if (!res.rejected && curCs) {\r\n                                    // replace cs with resolved values in case of circular promises\r\n                                    _config[_DYN_CONNECTION_STRING /* @min:%2econnectionString */] = curCs;\r\n                                    var resolvedCs = parseConnectionString(curCs);\r\n                                    ikey = resolvedCs[_DYN_INSTRUMENTATIONKEY0 /* @min:%2einstrumentationkey */] || ikey;\r\n                                }\r\n                                resolve(ikey);\r\n                            });\r\n                        });\r\n                        var urlPromise = createSyncPromise(function (resolve, reject) {\r\n                            doAwaitResponse(configCs, function (res) {\r\n                                var curCs = res.value;\r\n                                var url = _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                                if (!res.rejected && curCs) {\r\n                                    var resolvedCs = parseConnectionString(curCs);\r\n                                    var ingest = resolvedCs[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */];\r\n                                    url = ingest ? ingest + DEFAULT_BREEZE_PATH : url;\r\n                                }\r\n                                resolve(url);\r\n                            });\r\n                        });\r\n                        _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = ikeyPromise;\r\n                        _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] || urlPromise;\r\n                    }\r\n                    if (isString(configCs)) {\r\n                        var cs = parseConnectionString(configCs);\r\n                        var ingest = cs[_DYN_INGESTIONENDPOINT /* @min:%2eingestionendpoint */];\r\n                        _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] ? _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] : (ingest + DEFAULT_BREEZE_PATH); // only add /v2/track when from connectionstring\r\n                        _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = cs[_DYN_INSTRUMENTATIONKEY0 /* @min:%2einstrumentationkey */] || _config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    }\r\n                    // userOverrideEndpointUrl have the highest priority\r\n                    _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */] = _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] ? _config[_DYN_USER_OVERRIDE_ENDPOI1 /* @min:%2euserOverrideEndpointUrl */] : _config[_DYN_ENDPOINT_URL /* @min:%2eendpointUrl */];\r\n                }));\r\n                // initialize core\r\n                core.initialize(_config, [new Sender()]);\r\n            }\r\n        });\r\n        function _track(item) {\r\n            if (item) {\r\n                // to pass sender.processTelemetry()\r\n                item.baseData = item.baseData || {};\r\n                item.baseType = item.baseType || \"EventData\";\r\n            }\r\n            core.track(item);\r\n        }\r\n    }\r\n// Removed Stub for ApplicationInsights.prototype.initialize.\r\n// Removed Stub for ApplicationInsights.prototype.track.\r\n// Removed Stub for ApplicationInsights.prototype.flush.\r\n// Removed Stub for ApplicationInsights.prototype.pollInternalLogs.\r\n// Removed Stub for ApplicationInsights.prototype.stopPollingInternalLogs.\r\n// Removed Stub for ApplicationInsights.prototype.unload.\r\n// Removed Stub for ApplicationInsights.prototype.getPlugin.\r\n// Removed Stub for ApplicationInsights.prototype.addPlugin.\r\n// Removed Stub for ApplicationInsights.prototype.evtNamespace.\r\n// Removed Stub for ApplicationInsights.prototype.addUnloadCb.\r\n// Removed Stub for ApplicationInsights.prototype.getTraceCtx.\r\n// Removed Stub for ApplicationInsights.prototype.addTelemetryInitializer.\r\n// Removed Stub for ApplicationInsights.prototype.updateCfg.\r\n// Removed Stub for ApplicationInsights.prototype.onCfgChange.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ApplicationInsights.__ieDyn=1;\n\n    return ApplicationInsights;\r\n}());\r\nexport { ApplicationInsights };\r\nexport { AppInsightsCore, arrForEach, isNullOrUndefined, throwError, proxyFunctions } from \"@microsoft/applicationinsights-core-js\";\r\nexport { SeverityLevel } from \"@microsoft/applicationinsights-common\";\r\nexport { Sender } from \"@microsoft/applicationinsights-channel-js\";\r\n//# sourceMappingURL=index.js.map","/*\n * Application Insights JavaScript Web SDK - Basic, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 6\r\nexport var _DYN_CONNECTION_STRING = \"connectionString\"; // Count: 4\r\nexport var _DYN_INSTRUMENTATIONKEY0 = \"instrumentationkey\"; // Count: 2\r\nexport var _DYN_ENDPOINT_URL = \"endpointUrl\"; // Count: 6\r\nexport var _DYN_INGESTIONENDPOINT = \"ingestionendpoint\"; // Count: 2\r\nexport var _DYN_USER_OVERRIDE_ENDPOI1 = \"userOverrideEndpointUrl\"; // Count: 5\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * Defines the level of severity for the event.\r\n */\r\nexport var SeverityLevel = createEnumStyle({\r\n    Verbose: 0 /* eSeverityLevel.Verbose */,\r\n    Information: 1 /* eSeverityLevel.Information */,\r\n    Warning: 2 /* eSeverityLevel.Warning */,\r\n    Error: 3 /* eSeverityLevel.Error */,\r\n    Critical: 4 /* eSeverityLevel.Critical */\r\n});\r\n//# sourceMappingURL=SeverityLevel.js.map","/*! https://github.com/nevware21/ts-utils v0.11.6 */\n/*\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureRef(value, name) {\n    return value[name];\n}\n\nvar UNDEF_VALUE = undefined;\nvar NULL_VALUE = null;\nvar EMPTY = \"\";\nvar FUNCTION = \"function\";\nvar OBJECT = \"object\";\nvar PROTOTYPE = \"prototype\";\nvar __PROTO__ = \"__proto__\";\nvar UNDEFINED = \"undefined\";\nvar CONSTRUCTOR = \"constructor\";\nvar SYMBOL = \"Symbol\";\nvar POLYFILL_TAG = \"_polyfill\";\nvar LENGTH = \"length\";\nvar NAME = \"name\";\nvar CALL = \"call\";\nvar TO_STRING = \"toString\";\nvar ObjClass = ( /*#__PURE__*/_pureAssign(Object));\nvar ObjProto = ( /*#__PURE__*/_pureRef(ObjClass, PROTOTYPE));\nvar StrCls = ( /*#__PURE__*/_pureAssign(String));\nvar StrProto = ( /*#__PURE__*/_pureRef(StrCls, PROTOTYPE));\nvar MathCls = ( /*#__PURE__*/_pureAssign(Math));\nvar ArrCls = ( /*#__PURE__*/_pureAssign(Array));\nvar ArrProto = ( /*#__PURE__*/_pureRef(ArrCls, PROTOTYPE));\nvar ArrSlice = ( /*#__PURE__*/_pureRef(ArrProto, \"slice\"));\n\nfunction safe(func, argArray) {\n    try {\n        return {\n            v: func.apply(this, argArray)\n        };\n    }\n    catch (e) {\n        return { e: e };\n    }\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGet(cb, defValue) {\n    var result = safe(cb);\n    return result.e ? defValue : result.v;\n}\n\nvar _primitiveTypes;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createIs(theType) {\n    return function (value) {\n        return typeof value === theType;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createObjIs(theName) {\n    var theType = \"[object \" + theName + \"]\";\n    return function (value) {\n        return !!(value && objToString(value) === theType);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objToString(value) {\n    return ObjProto[TO_STRING].call(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTypeof(value, theType) {\n    return typeof value === theType;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isUndefined(value) {\n    return typeof value === UNDEFINED || value === UNDEFINED;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictUndefined(arg) {\n    return !isDefined(arg);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNullOrUndefined(value) {\n    return value === NULL_VALUE || isUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isStrictNullOrUndefined(value) {\n    return value === NULL_VALUE || !isDefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isDefined(arg) {\n    return !!arg || arg !== UNDEF_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitive(value) {\n    return value === NULL_VALUE || isPrimitiveType(typeof value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPrimitiveType(theType) {\n    !_primitiveTypes && (_primitiveTypes = [\"string\", \"number\", \"boolean\", UNDEFINED, \"symbol\", \"bigint\"]);\n    return !!(theType !== OBJECT && _primitiveTypes.indexOf(theType) !== -1);\n}\nvar isString = ( /*#__PURE__*/_createIs(\"string\"));\nvar isFunction = ( /*#__PURE__*/_createIs(FUNCTION));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isObject(value) {\n    if (!value && isNullOrUndefined(value)) {\n        return false;\n    }\n    return !!value && typeof value === OBJECT;\n}\nvar isArray = ( /* #__PURE__*/_pureRef(ArrCls, \"isArray\"));\nvar isDate = ( /*#__PURE__*/_createObjIs(\"Date\"));\nvar isNumber = ( /*#__PURE__*/_createIs(\"number\"));\nvar isBoolean = ( /*#__PURE__*/_createIs(\"boolean\"));\nvar isRegExp = ( /*#__PURE__*/_createObjIs(\"RegExp\"));\nvar isFile = ( /*#__PURE__*/_createObjIs(\"File\"));\nvar isFormData = ( /*#__PURE__*/_createObjIs(\"FormData\"));\nvar isBlob = ( /*#__PURE__*/_createObjIs(\"Blob\"));\nvar isArrayBuffer = ( /*#__PURE__*/_createObjIs(\"ArrayBuffer\"));\nvar isError = ( /*#__PURE__*/_createObjIs(\"Error\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromiseLike(value) {\n    return !!(value && value.then && isFunction(value.then));\n}\nvar isThenable = isPromiseLike;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPromise(value) {\n    return !!(value && value.then && value.catch && isFunction(value.then) && isFunction(value.catch));\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isNotTruthy(value) {\n    return !value || !isTruthy(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isTruthy(value) {\n    return !(!value || safeGet(function () { return !(value && (0 + value)); }, !value));\n}\n\nvar objGetOwnPropertyDescriptor = ( /* #__PURE__ */_pureRef(ObjClass, \"getOwnPropertyDescriptor\"));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction objHasOwnProperty(obj, prop) {\n    return !!obj && ObjProto.hasOwnProperty[CALL](obj, prop);\n}\n\nvar objHasOwn = ( /*#__PURE__*/_pureAssign(( /* #__PURE__ */_pureRef(ObjClass, \"hasOwn\")), polyObjHasOwn));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjHasOwn(obj, prop) {\n    return objHasOwnProperty(obj, prop) || !!objGetOwnPropertyDescriptor(obj, prop);\n}\n\nfunction objForEachKey(theObject, callbackfn, thisArg) {\n    if (theObject && isObject(theObject)) {\n        for (var prop in theObject) {\n            if (objHasOwn(theObject, prop)) {\n                if (callbackfn[CALL](thisArg || theObject, prop, theObject[prop]) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar propMap = {\n    e: \"enumerable\",\n    c: \"configurable\",\n    v: \"value\",\n    w: \"writable\",\n    g: \"get\",\n    s: \"set\"\n};\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createProp(value) {\n    var prop = {};\n    prop[propMap[\"c\"]] = true;\n    prop[propMap[\"e\"]] = true;\n    if (value.l) {\n        prop.get = function () { return value.l.v; };\n        var desc = objGetOwnPropertyDescriptor(value.l, \"v\");\n        if (desc && desc.set) {\n            prop.set = function (newValue) {\n                value.l.v = newValue;\n            };\n        }\n    }\n    objForEachKey(value, function (key, value) {\n        prop[propMap[key]] = isStrictUndefined(value) ? prop[propMap[key]] : value;\n    });\n    return prop;\n}\nvar objDefineProp = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperty\"));\nvar objDefineProperties = ( /*#__PURE__*/_pureRef(ObjClass, \"defineProperties\"));\nfunction objDefineGet(target, key, value, configurable, enumerable) {\n    var _a;\n    return objDefineProp(target, key, _createProp((_a = {\n            e: enumerable,\n            c: configurable\n        },\n        _a[isFunction(value) ? \"g\" : \"v\"] = value,\n        _a)));\n}\nfunction objDefineAccessors(target, prop, getProp, setProp, configurable, enumerable) {\n    var desc = {\n        e: enumerable,\n        c: configurable\n    };\n    if (getProp) {\n        desc.g = getProp;\n    }\n    if (setProp) {\n        desc.s = setProp;\n    }\n    return objDefineProp(target, prop, _createProp(desc));\n}\nfunction objDefine(target, key, propDesc) {\n    return objDefineProp(target, key, _createProp(propDesc));\n}\nfunction objDefineProps(target, propDescMap) {\n    var props = {};\n    objForEachKey(propDescMap, function (key, value) {\n        props[key] = _createProp(value);\n    });\n    return objDefineProperties(target, props);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createKeyValueMap(values, keyType, valueType, completeFn, writable) {\n    var theMap = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(theMap, key, keyType ? value : key, writable);\n        _assignMapValue(theMap, value, valueType ? value : key, writable);\n    });\n    return completeFn ? completeFn(theMap) : theMap;\n}\nfunction _assignMapValue(theMap, key, value, writable) {\n    objDefineProp(theMap, key, {\n        value: value,\n        enumerable: true,\n        writable: !!writable\n    });\n}\n\nvar asString = ( /* #__PURE__ */_pureAssign(StrCls));\n\nvar ERROR_TYPE = \"[object Error]\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction dumpObj(object, format) {\n    var propertyValueDump = EMPTY;\n    var objType = ObjProto[TO_STRING][CALL](object);\n    if (objType === ERROR_TYPE) {\n        object = { stack: asString(object.stack), message: asString(object.message), name: asString(object.name) };\n    }\n    try {\n        propertyValueDump = JSON.stringify(object, NULL_VALUE, format ? ((typeof format === \"number\") ? format : 4) : UNDEF_VALUE);\n        propertyValueDump = (propertyValueDump ? propertyValueDump.replace(/\"(\\w+)\"\\s*:\\s{0,1}/g, \"$1: \") : NULL_VALUE) || asString(object);\n    }\n    catch (e) {\n        propertyValueDump = \" - \" + dumpObj(e, format);\n    }\n    return objType + \": \" + propertyValueDump;\n}\n\nfunction throwError(message) {\n    throw new Error(message);\n}\nfunction throwTypeError(message) {\n    throw new TypeError(message);\n}\nfunction throwRangeError(message) {\n    throw new RangeError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjKeys(obj) {\n    if (!isObject(obj) || obj === NULL_VALUE) {\n        throwTypeError(\"non-object \" + dumpObj(obj));\n    }\n    var result = [];\n    for (var prop in obj) {\n        if (objHasOwn(obj, prop)) {\n            result.push(prop);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjEntries(value) {\n    var result = [];\n    objForEachKey(value, function (key, value) {\n        result.push([key, value]);\n    });\n    return result;\n}\n\nvar _objFreeze = ( /* #__PURE__ */_pureRef(ObjClass, \"freeze\"));\nfunction _doNothing(value) {\n    return value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getProto(value) {\n    return value[__PROTO__] || NULL_VALUE;\n}\nvar objAssign = ( /*#__PURE__*/_pureRef(ObjClass, \"assign\"));\nvar objKeys = ( /*#__PURE__*/_pureRef(ObjClass, \"keys\"));\nfunction objDeepFreeze(value) {\n    if (_objFreeze) {\n        objForEachKey(value, function (key, value) {\n            if (isArray(value) || isObject(value)) {\n                objDeepFreeze(value);\n            }\n        });\n    }\n    return objFreeze(value);\n}\nvar objFreeze = ( /* #__PURE__*/_pureAssign(_objFreeze, _doNothing));\nvar objSeal = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"seal\")), _doNothing));\nvar objGetPrototypeOf = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"getPrototypeOf\")), _getProto));\nvar objEntries = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"entries\")), polyObjEntries));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnum(values) {\n    return _createKeyValueMap(values, 1 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumKeyMap(values) {\n    return _createKeyValueMap(values, 0 , 0 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createEnumValueMap(values) {\n    return _createKeyValueMap(values, 1 , 1 , objFreeze);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createSimpleMap(values) {\n    var mapClass = {};\n    objForEachKey(values, function (key, value) {\n        _assignMapValue(mapClass, key, value[1]);\n        _assignMapValue(mapClass, value[0], value[1]);\n    });\n    return objFreeze(mapClass);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createTypeMap(values) {\n    return createSimpleMap(values);\n}\n\nvar _wellKnownSymbolMap = /*#__PURE__*/ createEnumKeyMap({\n    asyncIterator: 0 ,\n    hasInstance: 1 ,\n    isConcatSpreadable: 2 ,\n    iterator: 3 ,\n    match: 4 ,\n    matchAll: 5 ,\n    replace: 6 ,\n    search: 7 ,\n    species: 8 ,\n    split: 9 ,\n    toPrimitive: 10 ,\n    toStringTag: 11 ,\n    unscopables: 12\n});\n\nvar GLOBAL_CONFIG_KEY = \"__tsUtils$gblCfg\";\nvar _globalCfg;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalValue() {\n    var result;\n    if (typeof globalThis !== UNDEFINED) {\n        result = globalThis;\n    }\n    if (!result && typeof self !== UNDEFINED) {\n        result = self;\n    }\n    if (!result && typeof window !== UNDEFINED) {\n        result = window;\n    }\n    if (!result && typeof global !== UNDEFINED) {\n        result = global;\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getGlobalConfig() {\n    if (!_globalCfg) {\n        var gbl = safe(_getGlobalValue).v || {};\n        _globalCfg = gbl[GLOBAL_CONFIG_KEY] = gbl[GLOBAL_CONFIG_KEY] || {};\n    }\n    return _globalCfg;\n}\n\nvar _unwrapFunction = ( _unwrapFunctionWithPoly);\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapFunctionWithPoly(funcName, clsProto, polyFunc) {\n    var clsFn = clsProto ? clsProto[funcName] : NULL_VALUE;\n    return function (thisArg) {\n        var theFunc = (thisArg ? thisArg[funcName] : NULL_VALUE) || clsFn;\n        if (theFunc || polyFunc) {\n            var theArgs = arguments;\n            return (theFunc || polyFunc).apply(thisArg, theFunc ? ArrSlice[CALL](theArgs, 1) : theArgs);\n        }\n        throwTypeError(\"\\\"\" + asString(funcName) + \"\\\" not defined for \" + dumpObj(thisArg));\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _unwrapProp(propName) {\n    return function (thisArg) {\n        return thisArg[propName];\n    };\n}\n\nvar mathMin = ( /*#__PURE__*/_pureRef(MathCls, \"min\"));\nvar mathMax = ( /*#__PURE__*/_pureRef(MathCls, \"max\"));\n\nvar strSlice = ( /*#__PURE__*/_unwrapFunction(\"slice\", StrProto));\n\nvar strSubstring = ( /*#__PURE__*/_unwrapFunction(\"substring\", StrProto));\nvar strSubstr = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"substr\", StrProto, polyStrSubstr));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSubstr(value, start, length) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"Invalid \" + dumpObj(value));\n    }\n    if (length < 0) {\n        return EMPTY;\n    }\n    start = start || 0;\n    if (start < 0) {\n        start = mathMax(start + value[LENGTH], 0);\n    }\n    if (isUndefined(length)) {\n        return strSlice(value, start);\n    }\n    return strSlice(value, start, start + length);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLeft(value, count) {\n    return strSubstring(value, 0, count);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strRight(value, count) {\n    return count <= 0 ? EMPTY : (value[LENGTH] > count ? strSlice(value, -count) : value);\n}\n\nvar UNIQUE_REGISTRY_ID = \"_urid\";\nvar _polySymbols;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _globalSymbolRegistry() {\n    if (!_polySymbols) {\n        var gblCfg = _getGlobalConfig();\n        _polySymbols = gblCfg.gblSym = gblCfg.gblSym || { k: {}, s: {} };\n    }\n    return _polySymbols;\n}\nvar _wellKnownSymbolCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyNewSymbol(description) {\n    var theSymbol = {\n        description: asString(description),\n        toString: function () { return SYMBOL + \"(\" + description + \")\"; }\n    };\n    theSymbol[POLYFILL_TAG] = true;\n    return theSymbol;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolFor(key) {\n    var registry = _globalSymbolRegistry();\n    if (!objHasOwn(registry.k, key)) {\n        var newSymbol_1 = polyNewSymbol(key);\n        var regId_1 = objKeys(registry.s).length;\n        newSymbol_1[UNIQUE_REGISTRY_ID] = function () { return regId_1 + \"_\" + newSymbol_1[TO_STRING](); };\n        registry.k[key] = newSymbol_1;\n        registry.s[newSymbol_1[UNIQUE_REGISTRY_ID]()] = asString(key);\n    }\n    return registry.k[key];\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polySymbolKeyFor(sym) {\n    if (!sym || !sym[TO_STRING] || strSubstring(sym[TO_STRING](), 0, 6) != SYMBOL) {\n        throwTypeError(sym + \" is not a symbol\");\n    }\n    var regId = sym[POLYFILL_TAG] && sym[UNIQUE_REGISTRY_ID] && sym[UNIQUE_REGISTRY_ID]();\n    return regId ? _globalSymbolRegistry().s[regId] : undefined;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyGetKnownSymbol(name) {\n    !_wellKnownSymbolCache && (_wellKnownSymbolCache = {});\n    var result;\n    var knownName = _wellKnownSymbolMap[name];\n    if (knownName) {\n        result = _wellKnownSymbolCache[knownName] = _wellKnownSymbolCache[knownName] || polyNewSymbol(SYMBOL + \".\" + knownName);\n    }\n    return result;\n}\n\nvar _globalLazyTestHooks;\nfunction _initTestHooks() {\n    _globalLazyTestHooks = _getGlobalConfig();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getLazy(cb) {\n    var lazyValue = {};\n    !_globalLazyTestHooks && _initTestHooks();\n    lazyValue.b = _globalLazyTestHooks.lzy;\n    objDefineProp(lazyValue, \"v\", {\n        configurable: true,\n        get: function () {\n            var result = cb();\n            if (!_globalLazyTestHooks.lzy) {\n                objDefineProp(lazyValue, \"v\", {\n                    value: result\n                });\n            }\n            lazyValue.b = _globalLazyTestHooks.lzy;\n            return result;\n        }\n    });\n    return lazyValue;\n}\nfunction setBypassLazyCache(newValue) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _globalLazyTestHooks.lzy = newValue;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCachedValue(value) {\n    return objDefineProp({\n        toJSON: function () { return value; }\n    }, \"v\", { value: value });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createDeferredCachedValue(cb) {\n    var theValue = {\n        toJSON: function () { return theValue.v; }\n    };\n    return objDefineProp(theValue, \"v\", {\n        get: function () {\n            var result = cb();\n            cb = NULL_VALUE;\n            objDefineProp(theValue, \"v\", { value: result });\n            return result;\n        },\n        configurable: true\n    });\n}\n\nvar WINDOW = \"window\";\nvar _cachedGlobal;\nfunction _getGlobalInstFn(getFn, theArgs) {\n    var cachedValue;\n    return function () {\n        !_globalLazyTestHooks && _initTestHooks();\n        if (!cachedValue || _globalLazyTestHooks.lzy) {\n            cachedValue = createCachedValue(safe(getFn, theArgs).v);\n        }\n        return cachedValue.v;\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction lazySafeGetInst(name) {\n    return getLazy(function () { return safe((getInst), [name]).v || UNDEF_VALUE; });\n}\nfunction getGlobal(useCached) {\n    !_globalLazyTestHooks && _initTestHooks();\n    if (!_cachedGlobal || useCached === false || _globalLazyTestHooks.lzy) {\n        _cachedGlobal = createCachedValue(safe(_getGlobalValue).v || NULL_VALUE);\n    }\n    return _cachedGlobal.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getInst(name, useCached) {\n    var gbl;\n    if (!_cachedGlobal || useCached === false) {\n        gbl = getGlobal(useCached);\n    }\n    else {\n        gbl = _cachedGlobal.v;\n    }\n    if (gbl && gbl[name]) {\n        return gbl[name];\n    }\n    if (name === WINDOW) {\n        try {\n            return window;\n        }\n        catch (e) {\n        }\n    }\n    return NULL_VALUE;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasDocument() {\n    return !!( /*#__PURE__*/getDocument());\n}\nvar getDocument = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"document\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasWindow() {\n    return !!( /*#__PURE__*/getWindow());\n}\nvar getWindow = ( /*#__PURE__*/_getGlobalInstFn(getInst, [WINDOW]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasNavigator() {\n    return !!( /*#__PURE__*/getNavigator());\n}\nvar getNavigator = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"navigator\"]));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasHistory() {\n    return !!( /*#__PURE__*/getHistory());\n}\nvar getHistory = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"history\"]));\nvar isNode = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return (process && (process.versions || {}).node); }).v);\n}));\nvar isWebWorker = ( /*#__PURE__*/_getGlobalInstFn(function () {\n    return !!( /*#__PURE__*/safe(function () { return self && self instanceof WorkerGlobalScope; }).v);\n}));\n\nvar _symbol;\nvar _symbolFor;\nvar _symbolKeyFor;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _initSymbol() {\n    _symbol = ( /*#__PURE__*/createCachedValue(safe((getInst), [SYMBOL]).v));\n    return _symbol;\n}\nfunction _getSymbolKey(key) {\n    var gblSym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return (gblSym.v ? gblSym.v[key] : UNDEF_VALUE);\n}\nvar isSymbol = ( /*#__PURE__*/_createIs(\"symbol\"));\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasSymbol() {\n    return !!( /*#__PURE__*/getSymbol());\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getSymbol() {\n    !_globalLazyTestHooks && _initTestHooks();\n    return ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol()).v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getKnownSymbol(name, noPoly) {\n    var knownName = _wellKnownSymbolMap[name];\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v[knownName || name] : (!noPoly ? polyGetKnownSymbol(name) : UNDEF_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction newSymbol(description, noPoly) {\n    !_globalLazyTestHooks && _initTestHooks();\n    var sym = ((!_globalLazyTestHooks.lzy ? _symbol : 0) || _initSymbol());\n    return sym.v ? sym.v(description) : (!noPoly ? polyNewSymbol(description) : NULL_VALUE);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolFor(key) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolFor = ((!_globalLazyTestHooks.lzy ? _symbolFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"for\"]).v)));\n    return (_symbolFor.v || polySymbolFor)(key);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction symbolKeyFor(sym) {\n    !_globalLazyTestHooks && _initTestHooks();\n    _symbolKeyFor = ((!_globalLazyTestHooks.lzy ? _symbolKeyFor : 0) || ( /*#__PURE__*/createCachedValue(safe((_getSymbolKey), [\"keyFor\"]).v)));\n    return (_symbolKeyFor.v || polySymbolKeyFor)(sym);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterator(value) {\n    return !!value && isFunction(value.next);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction isIterable(value) {\n    return !isStrictNullOrUndefined(value) && isFunction(value[getKnownSymbol(3 )]);\n}\n\nvar _iterSymbol$1;\nfunction iterForOf(iter, callbackfn, thisArg) {\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterSymbol$1 && (_iterSymbol$1 = createCachedValue(getKnownSymbol(3 )));\n            iter = iter[_iterSymbol$1.v] ? iter[_iterSymbol$1.v]() : NULL_VALUE;\n        }\n        if (isIterator(iter)) {\n            var err = UNDEF_VALUE;\n            var iterResult = UNDEF_VALUE;\n            try {\n                var count = 0;\n                while (!(iterResult = iter.next()).done) {\n                    if (callbackfn[CALL](thisArg || iter, iterResult.value, count, iter) === -1) {\n                        break;\n                    }\n                    count++;\n                }\n            }\n            catch (failed) {\n                err = { e: failed };\n                if (iter.throw) {\n                    iterResult = NULL_VALUE;\n                    iter.throw(err);\n                }\n            }\n            finally {\n                try {\n                    if (iterResult && !iterResult.done) {\n                        iter.return && iter.return(iterResult);\n                    }\n                }\n                finally {\n                    if (err) {\n                        // eslint-disable-next-line no-unsafe-finally\n                        throw err.e;\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction fnApply(fn, thisArg, argArray) {\n    return fn.apply(thisArg, argArray);\n}\nfunction fnCall(fn, thisArg) {\n    return fn.apply(thisArg, ArrSlice[CALL](arguments, 2));\n}\nfunction fnBind(fn, thisArg) {\n    return fn.bind.apply(fn, ArrSlice[CALL](arguments, 1));\n}\n\nfunction arrAppend(target, elms) {\n    if (!isUndefined(elms) && target) {\n        if (isArray(elms)) {\n            fnApply(target.push, target, elms);\n        }\n        else if (isIterator(elms) || isIterable(elms)) {\n            iterForOf(elms, function (elm) {\n                target.push(elm);\n            });\n        }\n        else {\n            target.push(elms);\n        }\n    }\n    return target;\n}\n\nvar arrEvery = /*#__PURE__*/ _unwrapFunction(\"every\", ArrProto);\nvar arrFilter = /*#__PURE__*/ _unwrapFunction(\"filter\", ArrProto);\n\nfunction arrForEach(theArray, callbackfn, thisArg) {\n    if (theArray) {\n        var len = theArray[LENGTH] >>> 0;\n        for (var idx = 0; idx < len; idx++) {\n            if (idx in theArray) {\n                if (callbackfn[CALL](thisArg || theArray, theArray[idx], idx, theArray) === -1) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nvar arrIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", ArrProto));\nvar arrLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", ArrProto));\n\nvar arrMap = ( /*#__PURE__*/_unwrapFunction(\"map\", ArrProto));\n\nfunction arrSlice(theArray, start, end) {\n    return ((theArray ? theArray[\"slice\"] : NULL_VALUE) || ArrSlice).apply(theArray, ArrSlice[CALL](arguments, 1));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyIsArray(value) {\n    if (isNullOrUndefined(value)) {\n        return false;\n    }\n    return objToString(value) === \"[object Array]\";\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyArrIncludes(theArray, searchElement, fromIndex) {\n    return arrIndexOf(theArray, searchElement, fromIndex) !== -1;\n}\nfunction polyArrFind(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    arrForEach(theArray, function (value, index) {\n        if (callbackFn[CALL](thisArg | theArray, value, index, theArray)) {\n            result = index;\n            return -1;\n        }\n    });\n    return result;\n}\nfunction polyArrFindLast(theArray, callbackFn, thisArg) {\n    var result;\n    var idx = polyArrFindLastIndex(theArray, callbackFn, thisArg);\n    return idx !== -1 ? theArray[idx] : result;\n}\nfunction polyArrFindLastIndex(theArray, callbackFn, thisArg) {\n    var result = -1;\n    var len = theArray[LENGTH] >>> 0;\n    for (var idx = len - 1; idx >= 0; idx--) {\n        if (idx in theArray && callbackFn[CALL](thisArg | theArray, theArray[idx], idx, theArray)) {\n            result = idx;\n            break;\n        }\n    }\n    return result;\n}\nfunction polyArrFrom(theValue, mapFn, thisArg) {\n    if (isArray(theValue)) {\n        var result_1 = arrSlice(theValue);\n        return mapFn ? arrMap(result_1, mapFn, thisArg) : result_1;\n    }\n    var result = [];\n    iterForOf(theValue, function (value, cnt) {\n        return result.push(mapFn ? mapFn[CALL](thisArg, value, cnt) : value);\n    });\n    return result;\n}\n\nvar arrFind = /*#__PURE__*/ _unwrapFunctionWithPoly(\"find\", ArrProto, polyArrFind);\nvar arrFindIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findIndex\", ArrProto, polyArrFindIndex);\nvar arrFindLast = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLast\", ArrProto, polyArrFindLast);\nvar arrFindLastIndex = /*#__PURE__*/ _unwrapFunctionWithPoly(\"findLastIndex\", ArrProto, polyArrFindLastIndex);\n\nvar arrFrom = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ArrCls, \"from\")), polyArrFrom));\n\nvar arrIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", ArrProto, polyArrIncludes));\nvar arrContains = arrIncludes;\n\nvar arrReduce = ( /*#__PURE__*/_unwrapFunction(\"reduce\", ArrProto));\n\nvar arrSome = ( /*#__PURE__*/_unwrapFunction(\"some\", ArrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFnDeferredProxy(hostFn, funcName) {\n    return function () {\n        var theArgs = ArrSlice[CALL](arguments);\n        var theHost = hostFn();\n        return fnApply(theHost[funcName], theHost, theArgs);\n    };\n}\nfunction createProxyFuncs(target, host, funcDefs) {\n    if (target && host && isArray(funcDefs)) {\n        var isDeferred_1 = isFunction(host);\n        arrForEach(funcDefs, function (funcDef) {\n            var targetName = (funcDef.as || funcDef.n);\n            if (funcDef.rp === false && target[targetName]) {\n                return;\n            }\n            target[targetName] = isDeferred_1 ?\n                createFnDeferredProxy(host, funcDef.n) :\n                fnBind(host[funcDef.n], host);\n        });\n    }\n    return target;\n}\n\nvar _iterSymbol;\n/*#__NO_SIDE_EFFECTS__*/\nfunction readArgs(theArgs, start, end) {\n    if (!objHasOwn(theArgs, LENGTH)) {\n        !_iterSymbol && (_iterSymbol = createCachedValue(hasSymbol() && getKnownSymbol(3 )));\n        var iterFn = void 0;\n        if (_iterSymbol.v) {\n            iterFn = theArgs[_iterSymbol.v];\n        }\n        if (iterFn) {\n            var values_1 = [];\n            var from_1 = (start === UNDEF_VALUE || start < 0) ? 0 : start;\n            var to_1 = end < 0 || start < 0 ? UNDEF_VALUE : end;\n            iterForOf(iterFn[CALL](theArgs), function (value, cnt) {\n                if (to_1 !== UNDEF_VALUE && cnt >= to_1) {\n                    return -1;\n                }\n                if (cnt >= from_1) {\n                    values_1.push(value);\n                }\n            });\n            if ((start === UNDEF_VALUE || start >= 0) && (end === UNDEF_VALUE || end >= 0)) {\n                return values_1;\n            }\n            theArgs = values_1;\n        }\n    }\n    return arrSlice(theArgs, start, end);\n}\n\nvar objCreate = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(ObjClass, \"create\")), polyObjCreate));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyObjCreate(obj) {\n    if (!obj) {\n        return {};\n    }\n    var type = typeof obj;\n    if (type !== OBJECT && type !== FUNCTION) {\n        throwTypeError(\"Prototype must be an Object or function: \" + dumpObj(obj));\n    }\n    function tempFunc() { }\n    tempFunc[PROTOTYPE] = obj;\n    return new tempFunc();\n}\n\nvar _isProtoArray;\nfunction objSetPrototypeOf(obj, proto) {\n    var fn = ObjClass[\"setPrototypeOf\"] ||\n        function (d, b) {\n            var _a;\n            !_isProtoArray && (_isProtoArray = createCachedValue((_a = {}, _a[__PROTO__] = [], _a) instanceof Array));\n            _isProtoArray.v ? d[__PROTO__] = b : objForEachKey(b, function (key, value) { return d[key] = value; });\n        };\n    return fn(obj, proto);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createCustomError(name, d, b) {\n    safe(objDefine, [d, NAME, { v: name, c: true, e: false }]);\n    d = objSetPrototypeOf(d, b);\n    function __() {\n        this[CONSTRUCTOR] = d;\n        safe(objDefine, [this, NAME, { v: name, c: true, e: false }]);\n    }\n    d[PROTOTYPE] = b === NULL_VALUE ? objCreate(b) : (__[PROTOTYPE] = b[PROTOTYPE], new __());\n    return d;\n}\nfunction _setName(baseClass, name) {\n    name && (baseClass[NAME] = name);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createCustomError(name, constructCb, errorBase) {\n    var theBaseClass = errorBase || Error;\n    var orgName = theBaseClass[PROTOTYPE][NAME];\n    var captureFn = Error.captureStackTrace;\n    return _createCustomError(name, function () {\n        var _this = this;\n        var theArgs = arguments;\n        try {\n            safe(_setName, [theBaseClass, name]);\n            var _self = fnApply(theBaseClass, _this, ArrSlice[CALL](theArgs)) || _this;\n            if (_self !== _this) {\n                var orgProto = objGetPrototypeOf(_this);\n                if (orgProto !== objGetPrototypeOf(_self)) {\n                    objSetPrototypeOf(_self, orgProto);\n                }\n            }\n            captureFn && captureFn(_self, _this[CONSTRUCTOR]);\n            constructCb && constructCb(_self, theArgs);\n            return _self;\n        }\n        finally {\n            safe(_setName, [theBaseClass, orgName]);\n        }\n    }, theBaseClass);\n}\nvar _unsupportedError;\nfunction throwUnsupported(message) {\n    if (!_unsupportedError) {\n        _unsupportedError = createCustomError(\"UnsupportedError\");\n    }\n    throw new _unsupportedError(message);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction utcNow() {\n    return (Date.now || polyUtcNow)();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyUtcNow() {\n    return new Date().getTime();\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTrimFn(exp) {\n    return function _doTrim(value) {\n        if (isNullOrUndefined(value)) {\n            throwTypeError(\"strTrim called [\" + dumpObj(value) + \"]\");\n        }\n        if (value && value.replace) {\n            value = value.replace(exp, EMPTY);\n        }\n        return value;\n    };\n}\nvar polyStrTrim = ( /*#__PURE__*/_createTrimFn(/^\\s+|(?=\\s)\\s+$/g));\nvar polyStrTrimStart = ( /*#__PURE__*/_createTrimFn(/^\\s+/g));\nvar polyStrTrimEnd = ( /*#__PURE__*/_createTrimFn(/(?=\\s)\\s+$/g));\n\nvar strTrim = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trim\", StrProto, polyStrTrim));\nvar strTrimStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimStart\", StrProto, polyStrTrimStart));\nvar strTrimLeft = ( /*#__PURE__*/_pureAssign(strTrimStart));\nvar strTrimEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"trimEnd\", StrProto, polyStrTrimEnd));\nvar strTrimRight = ( /*#__PURE__*/_pureAssign(strTrimEnd));\n\nvar strUpper = ( /*#__PURE__*/_unwrapFunction(\"toUpperCase\", StrProto));\nvar strLower = ( /*#__PURE__*/_unwrapFunction(\"toLowerCase\", StrProto));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _convertCase(value, newPrefix, upperWord) {\n    return strTrim(asString(value)).replace(/((_|\\W)+(\\w){0,1}|([a-z])([A-Z]))/g, function (_match, _g1, _g2, wordStart, upperPrefix, upperLetter) {\n        var convertMatch = wordStart || upperLetter || EMPTY;\n        if (upperWord) {\n            convertMatch = strUpper(convertMatch);\n        }\n        return (upperPrefix || EMPTY) + newPrefix + convertMatch;\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strLetterCase(value) {\n    return asString(value).replace(/(_|\\b)\\w/g, strUpper);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strCamelCase(value, upperFirst) {\n    var result = _convertCase(value, \"\", true);\n    return result.replace(/^\\w/, upperFirst ? strUpper : strLower);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strKebabCase(value, scream) {\n    var result = _convertCase(value, \"-\");\n    return (scream ? strUpper : strLower)(result);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strSnakeCase(value, scream) {\n    var result = _convertCase(value, \"_\");\n    return (scream ? strUpper : strLower)(result);\n}\n\nvar mathFloor = ( /*#__PURE__*/_pureRef(MathCls, \"floor\"));\nvar mathCeil = ( /*#__PURE__*/_pureRef(MathCls, \"ceil\"));\n\nvar mathTrunc = ( /* #__PURE__*/_pureAssign(( /* #__PURE__*/_pureRef(MathCls, \"trunc\")), polyMathTrunc));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyMathTrunc(value) {\n    var theValue = +value;\n    return (theValue > 0 ? mathFloor : mathCeil)(theValue);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction mathToInt(value, throwInfinity) {\n    var result = +value;\n    if (result == Infinity && throwInfinity) {\n        throwRangeError(\"invalid value [\" + dumpObj(value) + \"]\");\n    }\n    return result !== result || result === 0 ? 0 : mathTrunc(result);\n}\n\nvar strRepeat = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"repeat\", StrProto, polyStrRepeat));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrRepeat(value, count) {\n    if (isNullOrUndefined(value)) {\n        throwTypeError(\"can't convert [\" + dumpObj(value) + \"]\");\n    }\n    count = mathToInt(count, true);\n    if (count < 0) {\n        throwRangeError(\"invalid count must be >= 0 && < Infinity\");\n    }\n    var pad = isString(value) ? value : asString(value);\n    var result = EMPTY;\n    for (; count > 0; (count >>>= 1) && (pad += pad)) {\n        if (count & 1) {\n            result += pad;\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _padValue(value, targetLength, padString) {\n    var result = EMPTY;\n    targetLength = mathToInt(targetLength, true);\n    targetLength >>= 0;\n    var len = value[LENGTH];\n    if (len < targetLength) {\n        result = isNullOrUndefined(padString) ? \" \" : asString(padString);\n        targetLength = targetLength - len;\n        if (targetLength > result[LENGTH]) {\n            result = strRepeat(result, mathCeil(targetLength / result[LENGTH]));\n        }\n        if (result[LENGTH] > targetLength) {\n            result = strSubstring(result, 0, targetLength);\n        }\n    }\n    return result;\n}\nvar strPadStart = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padStart\", StrProto, polyStrPadStart));\nvar strPadEnd = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"padEnd\", StrProto, polyStrPadEnd));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadStart(value, targetLength, padString) {\n    return _padValue(value, targetLength, padString) + value;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrPadEnd(value, targetLength, padString) {\n    return value + _padValue(value, targetLength, padString);\n}\n\nvar DBL_QUOTE = \"\\\"\";\nvar INVALID_JS_NAME = /([^\\w\\d_$])/g;\nvar _htmlEntityCache;\n/*#__NO_SIDE_EFFECTS__*/\nfunction normalizeJsName(jsName, camelCase) {\n    var result = asString(jsName).replace(INVALID_JS_NAME, \"_\");\n    return !isUndefined(camelCase) ? strCamelCase(result, !camelCase) : result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsJson(value, format) {\n    var result;\n    if (isString(value)) {\n        result = DBL_QUOTE + value.replace(/[^\\w .,\\-!@#$%\\^&*\\(\\)_+={}\\[\\]:;|<>?]/g, function (match) {\n            if (match === DBL_QUOTE || match === \"\\\\\") {\n                return \"\\\\\" + match;\n            }\n            var hex = match.charCodeAt(0)[TO_STRING](16);\n            return \"\\\\u\" + strPadStart(strUpper(hex), 4, \"0\");\n        }) + DBL_QUOTE;\n    }\n    else {\n        try {\n            result = JSON.stringify(value, NULL_VALUE, format ? (isNumber(format) ? format : 4) : UNDEF_VALUE);\n        }\n        catch (e) {\n            result = DBL_QUOTE + dumpObj(e) + DBL_QUOTE;\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction encodeAsHtml(value) {\n    !_htmlEntityCache && (_htmlEntityCache = {\n        \"&\": \"amp\",\n        \"<\": \"lt\",\n        \">\": \"gt\",\n        \"\\\"\": \"quot\",\n        \"'\": \"#39\"\n    });\n    return asString(value).replace(/[&<>\"']/g, function (match) { return \"&\" + _htmlEntityCache[match] + \";\"; });\n}\n\nvar _fnToString;\nvar _objCtrFnString;\nvar _gblWindow;\n/*#__NO_SIDE_EFFECTS__*/\nfunction isPlainObject(value) {\n    if (!value || typeof value !== OBJECT) {\n        return false;\n    }\n    if (!_gblWindow) {\n        _gblWindow = hasWindow() ? getWindow() : true;\n    }\n    var result = false;\n    if (value !== _gblWindow) {\n        if (!_objCtrFnString) {\n            _fnToString = Function[PROTOTYPE][TO_STRING];\n            _objCtrFnString = _fnToString[CALL](ObjClass);\n        }\n        try {\n            var proto = objGetPrototypeOf(value);\n            result = !proto;\n            if (!result) {\n                if (objHasOwnProperty(proto, CONSTRUCTOR)) {\n                    proto = proto[CONSTRUCTOR];\n                }\n                result = !!(proto && typeof proto === FUNCTION && _fnToString[CALL](proto) === _objCtrFnString);\n            }\n        }\n        catch (ex) {\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _defaultDeepCopyHandler(details) {\n    details.value && plainObjDeepCopyHandler(details);\n    return true;\n}\nvar defaultDeepCopyHandlers = [\n    arrayDeepCopyHandler,\n    plainObjDeepCopyHandler,\n    functionDeepCopyHandler,\n    dateDeepCopyHandler\n];\n/*#__NO_SIDE_EFFECTS__*/\nfunction _getSetVisited(visitMap, source, newPath, cb) {\n    var theEntry;\n    arrForEach(visitMap, function (entry) {\n        if (entry.k === source) {\n            theEntry = entry;\n            return -1;\n        }\n    });\n    if (!theEntry) {\n        theEntry = { k: source, v: source };\n        visitMap.push(theEntry);\n        cb(theEntry);\n    }\n    return theEntry.v;\n}\nfunction _deepCopy(visitMap, value, ctx, key) {\n    var userHandler = ctx.handler;\n    var newPath = ctx.path ? (key ? ctx.path.concat(key) : ctx.path) : [];\n    var newCtx = {\n        handler: ctx.handler,\n        src: ctx.src,\n        path: newPath\n    };\n    var theType = typeof value;\n    var isPlain = false;\n    var isPrim = value === NULL_VALUE;\n    if (!isPrim) {\n        if (value && theType === OBJECT) {\n            isPlain = isPlainObject(value);\n        }\n        else {\n            isPrim = isPrimitiveType(theType);\n        }\n    }\n    var details = {\n        type: theType,\n        isPrim: isPrim,\n        isPlain: isPlain,\n        value: value,\n        result: value,\n        path: newPath,\n        origin: ctx.src,\n        copy: function (source, newKey) {\n            return _deepCopy(visitMap, source, newKey ? newCtx : ctx, newKey);\n        },\n        copyTo: function (target, source) {\n            return _copyProps(visitMap, target, source, newCtx);\n        }\n    };\n    if (!details.isPrim) {\n        return _getSetVisited(visitMap, value, newPath, function (newEntry) {\n            objDefine(details, \"result\", {\n                g: function () {\n                    return newEntry.v;\n                },\n                s: function (newValue) {\n                    newEntry.v = newValue;\n                }\n            });\n            var idx = 0;\n            var handler = userHandler;\n            while (!(handler || (idx < defaultDeepCopyHandlers.length ? defaultDeepCopyHandlers[idx++] : _defaultDeepCopyHandler))[CALL](ctx, details)) {\n                handler = NULL_VALUE;\n            }\n        });\n    }\n    if (userHandler && userHandler[CALL](ctx, details)) {\n        return details.result;\n    }\n    return value;\n}\nfunction _copyProps(visitMap, target, source, ctx) {\n    if (!isNullOrUndefined(source)) {\n        for (var key in source) {\n            target[key] = _deepCopy(visitMap, source[key], ctx, key);\n        }\n    }\n    return target;\n}\nfunction objCopyProps(target, source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source,\n        path: []\n    };\n    return _copyProps([], target, source, ctx);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction objDeepCopy(source, handler) {\n    var ctx = {\n        handler: handler,\n        src: source\n    };\n    return _deepCopy([], source, ctx);\n}\nfunction arrayDeepCopyHandler(details) {\n    var value = details.value;\n    if (isArray(value)) {\n        var target = details.result = [];\n        target.length = value.length;\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\nfunction dateDeepCopyHandler(details) {\n    var value = details.value;\n    if (isDate(value)) {\n        details.result = new Date(value.getTime());\n        return true;\n    }\n    return false;\n}\nfunction functionDeepCopyHandler(details) {\n    if (details.type === FUNCTION) {\n        return true;\n    }\n    return false;\n}\nfunction plainObjDeepCopyHandler(details) {\n    var value = details.value;\n    if (value && details.isPlain) {\n        var target = details.result = {};\n        details.copyTo(target, value);\n        return true;\n    }\n    return false;\n}\n\nfunction _doExtend(target, theArgs) {\n    arrForEach(theArgs, function (theArg) {\n        objCopyProps(target, theArg);\n    });\n    return target;\n}\nfunction deepExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(objDeepCopy(target) || {}, ArrSlice[CALL](arguments));\n}\nfunction objExtend(target, obj1, obj2, obj3, obj4, obj5, obj6) {\n    return _doExtend(target || {}, ArrSlice[CALL](arguments));\n}\n\nvar getLength = ( /*#__PURE__*/_unwrapProp(LENGTH));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getIntValue(value, defValue) {\n    if (!isNullOrUndefined(value)) {\n        if (isNumber(value)) {\n            return value;\n        }\n        var theValue = parseInt(value, 10);\n        return isNaN(theValue) ? defValue : theValue;\n    }\n    return defValue;\n}\n\nvar _perf;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasPerformance() {\n    return !!getPerformance();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getPerformance() {\n    !_globalLazyTestHooks && _initTestHooks();\n    if (!_perf || _globalLazyTestHooks.lzy) {\n        _perf = createCachedValue(safe((getInst), [\"performance\"]).v);\n    }\n    return _perf.v;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction perfNow() {\n    var perf = getPerformance();\n    if (perf && perf.now) {\n        return perf.now();\n    }\n    return utcNow();\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction elapsedTime(startTime) {\n    return perfNow() - startTime;\n}\n\nvar MATCH_ANY = \"(.*)\";\nvar MATCH_SINGLE = \"(.)\";\nfunction _createRegExp(value, escapeRgx, replaceFn, ignoreCase, fullMatch) {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp((fullMatch ? \"^\" : EMPTY) + replaceFn(value.replace(escapeRgx, \"\\\\$1\")) + (fullMatch ? \"$\" : EMPTY), ignoreCase ? \"i\" : \"\");\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createWildcardRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.\\?{}()\\[\\]\\\\/\\\"\\'])/g, function (value) {\n        return value.replace(/\\*/g, MATCH_ANY);\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createFilenameRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\\\\\\\|\\\\\\/|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            return g1 == \"*\" ? MATCH_ANY : MATCH_SINGLE;\n        });\n    }, !!ignoreCase, fullMatch);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction makeGlobRegex(value, ignoreCase, fullMatch) {\n    return _createRegExp(asString(value), /([-+|^$#.{}()\\\\\\/\\[\\]\\\"\\'])/g, function (value) {\n        return value.replace(/(\\*\\*\\\\[\\\\\\/]|\\\\\\\\|\\\\\\/|\\*\\*|\\*|\\?)/g, function (_all, g1) {\n            if (g1 == \"**\\\\/\" || g1 == \"**\\\\\\\\\") {\n                return \"(.*[\\\\\\\\\\\\/])*\";\n            }\n            if (g1 === \"\\\\/\" || g1 == \"\\\\\\\\\") {\n                return \"[\\\\\\\\\\\\/]{1}\";\n            }\n            if (g1 === \"**\") {\n                return MATCH_ANY;\n            }\n            return g1 === \"*\" ? \"([^\\\\\\\\\\\\/]*)\" : \"([^\\\\\\\\\\\\/]{1})\";\n        });\n    }, !!ignoreCase, fullMatch);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction safeGetLazy(cb, defValue) {\n    return getLazy(function () {\n        var result = safe(cb);\n        return result.e ? defValue : result.v;\n    });\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _checkLength(value, props) {\n    var result;\n    arrForEach(props, function (prop) {\n        if (prop in value) {\n            var propValue = value[prop];\n            result = (isFunction(propValue) ? propValue() : propValue) > 0;\n            return -1;\n        }\n    });\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _hasValue(value, depth) {\n    var result = value === false || value === 0;\n    if (!result && !isNullOrUndefined(value)) {\n        if (isArray(value)) {\n            result = value[LENGTH] > 0;\n        }\n        else if (isDate(value)) {\n            result = !isNaN(value.getTime());\n        }\n        else if (isBoolean(value)) {\n            return true;\n        }\n        else if (isObject(value)) {\n            try {\n                var chkValue = _checkLength(value, [LENGTH, \"byteLength\", \"size\", \"count\"]);\n                if (isBoolean(chkValue)) {\n                    return chkValue;\n                }\n                if (isFunction(value.valueOf) && depth < 5) {\n                    return _hasValue(value.valueOf(), ++depth);\n                }\n            }\n            catch (e) {\n            }\n            return !!objKeys(value)[LENGTH];\n        }\n        else {\n            result = isTruthy(value);\n        }\n    }\n    return result;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasValue(value) {\n    return _hasValue(value, 0);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterable(ctx) {\n    return makeIterable({}, ctx);\n}\nfunction makeIterable(target, ctx) {\n    var itSymbol = getKnownSymbol(3 );\n    function _createIterator() {\n        return createIterator(ctx);\n    }\n    target[itSymbol] = _createIterator;\n    return target;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction createIterator(ctx) {\n    var isDone = false;\n    function _value() {\n        return ctx.v;\n    }\n    function _next() {\n        if (!isDone) {\n            isDone = (ctx.n ? ctx.n(arguments) : true);\n        }\n        var result = {\n            done: isDone\n        };\n        if (!isDone) {\n            objDefine(result, \"value\", { g: _value });\n        }\n        return result;\n    }\n    function _return(value) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.r && ctx.r(value)\n        };\n    }\n    function _throw(e) {\n        isDone = true;\n        return {\n            done: true,\n            value: ctx.t && ctx.t(e)\n        };\n    }\n    var theIterator = {\n        next: _next\n    };\n    if (ctx.r) {\n        theIterator.return = _return;\n    }\n    if (ctx.t) {\n        theIterator.throw = _throw;\n    }\n    return theIterator;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createArrayIterator(values) {\n    var idx = -1;\n    var theValues = values ? values.slice() : [];\n    var len = theValues[LENGTH];\n    function _value() {\n        if (idx >= 0 && idx < len) {\n            return theValues[idx];\n        }\n    }\n    function _getNext() {\n        idx++;\n        return idx >= len;\n    }\n    var ctx = {\n        n: _getNext\n    };\n    objDefine(ctx, \"v\", { g: _value });\n    return createIterator(ctx);\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction createRangeIterator(start, end, step) {\n    var nextValue = start;\n    var theValue = UNDEF_VALUE;\n    if (isNullOrUndefined(end)) {\n        end = start;\n    }\n    var theStep = step;\n    if (!theStep) {\n        theStep = (start <= end) ? 1 : -1;\n    }\n    function _value() {\n        return theValue;\n    }\n    function _getNext() {\n        var isDone = (theStep > 0) ? (nextValue > end) : (nextValue < end);\n        if (!isDone) {\n            theValue = nextValue;\n            nextValue += theStep;\n        }\n        return isDone;\n    }\n    return createIterator(objDefine({\n        n: _getNext\n    }, \"v\", { g: _value }));\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrSymSplit(value, splitter, limit) {\n    var splitFn = splitter ? splitter[getKnownSymbol(9 )] : UNDEF_VALUE;\n    return splitFn ? splitFn(value, limit) : [value];\n}\n\nvar strSplit = ( /*#__PURE__*/_unwrapFunction(\"split\", StrProto));\nvar strSymSplit = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"split\", StrProto, !hasSymbol() ? polyStrSymSplit : NULL_VALUE));\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByKey(target, path, defValue) {\n    if (!path || !target) {\n        return defValue;\n    }\n    var parts = strSplit(path, \".\");\n    var cnt = parts.length;\n    for (var lp = 0; lp < cnt && !isNullOrUndefined(target); lp++) {\n        target = target[parts[lp]];\n    }\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction getValueByIter(target, iter, defValue) {\n    if (!iter || !target) {\n        return defValue;\n    }\n    iterForOf(iter, function (value) {\n        if (isNullOrUndefined(target)) {\n            return -1;\n        }\n        target = target[value];\n    });\n    return (!isNullOrUndefined(target) ? target : defValue);\n}\nfunction setValueByKey(target, path, value) {\n    if (target && path) {\n        var parts = strSplit(path, \".\");\n        var lastKey = parts.pop();\n        arrForEach(parts, function (key) {\n            if (isNullOrUndefined(target[key])) {\n                target[key] = {};\n            }\n            target = target[key];\n        });\n        target[lastKey] = value;\n    }\n}\nfunction setValueByIter(target, iter, value) {\n    if (target && iter) {\n        var lastKey_1;\n        iterForOf(iter, function (key) {\n            if (lastKey_1) {\n                if (isNullOrUndefined(target[lastKey_1])) {\n                    target[lastKey_1] = {};\n                }\n                target = target[lastKey_1];\n            }\n            lastKey_1 = key;\n        });\n        target[lastKey_1] = value;\n    }\n}\n\nvar strEndsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"endsWith\", StrProto, polyStrEndsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrEndsWith(value, searchString, length) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var end = (!isUndefined(length) && length < value[LENGTH]) ? length : value[LENGTH];\n    return strSubstring(value, end - searchValue[LENGTH], end) === searchValue;\n}\n\nvar strIndexOf = ( /*#__PURE__*/_unwrapFunction(\"indexOf\", StrProto));\nvar strLastIndexOf = ( /*#__PURE__*/_unwrapFunction(\"lastIndexOf\", StrProto));\n\nvar strIncludes = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"includes\", StrProto, polyStrIncludes));\nvar strContains = ( /*#__PURE__*/_pureAssign(strIncludes));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrIncludes(value, searchString, position) {\n    if (isRegExp(searchString)) {\n        throwTypeError(\"'searchString' must not be a regular expression\" + dumpObj(searchString));\n    }\n    return strIndexOf(value, asString(searchString), position) !== -1;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrWhiteSpace(value) {\n    if (isString(value)) {\n        return value.replace(/[\\s\\t\\r\\n\\f]+/g, EMPTY) === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction strIsNullOrEmpty(value) {\n    if (isString(value)) {\n        return value === EMPTY;\n    }\n    return isNullOrUndefined(value);\n}\n\nvar strStartsWith = ( /*#__PURE__*/_unwrapFunctionWithPoly(\"startsWith\", StrProto, polyStrStartsWith));\n/*#__NO_SIDE_EFFECTS__*/\nfunction polyStrStartsWith(value, searchString, position) {\n    if (!isString(value)) {\n        throwTypeError(\"'\" + dumpObj(value) + \"' is not a string\");\n    }\n    var searchValue = isString(searchString) ? searchString : asString(searchString);\n    var pos = position > 0 ? position : 0;\n    return strSubstring(value, pos, pos + searchValue[LENGTH]) === searchValue;\n}\n\nvar REF = \"ref\";\nvar UNREF = \"unref\";\nvar HAS_REF = \"hasRef\";\nvar ENABLED = \"enabled\";\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createTimerHandler(startTimer, refreshFn, cancelFn) {\n    var ref = true;\n    var timerId = startTimer ? refreshFn(NULL_VALUE) : NULL_VALUE;\n    var theTimerHandler;\n    function _unref() {\n        ref = false;\n        timerId && timerId[UNREF] && timerId[UNREF]();\n        return theTimerHandler;\n    }\n    function _cancel() {\n        timerId && cancelFn(timerId);\n        timerId = NULL_VALUE;\n    }\n    function _refresh() {\n        timerId = refreshFn(timerId);\n        if (!ref) {\n            _unref();\n        }\n        return theTimerHandler;\n    }\n    function _setEnabled(value) {\n        !value && timerId && _cancel();\n        value && !timerId && _refresh();\n    }\n    theTimerHandler = {\n        cancel: _cancel,\n        refresh: _refresh\n    };\n    theTimerHandler[HAS_REF] = function () {\n        if (timerId && timerId[HAS_REF]) {\n            return timerId[HAS_REF]();\n        }\n        return ref;\n    };\n    theTimerHandler[REF] = function () {\n        ref = true;\n        timerId && timerId[REF] && timerId[REF]();\n        return theTimerHandler;\n    };\n    theTimerHandler[UNREF] = _unref;\n    theTimerHandler = objDefineProp(theTimerHandler, ENABLED, {\n        get: function () { return !!timerId; },\n        set: _setEnabled\n    });\n    return {\n        h: theTimerHandler,\n        dn: function () {\n            timerId = NULL_VALUE;\n        }\n    };\n}\n\nfunction _createTimeoutWith(startTimer, overrideFn, theArgs) {\n    var isArr = isArray(overrideFn);\n    var len = isArr ? overrideFn.length : 0;\n    var setFn = (len > 0 ? overrideFn[0] : (!isArr ? overrideFn : UNDEF_VALUE)) || setTimeout;\n    var clearFn = (len > 1 ? overrideFn[1] : UNDEF_VALUE) || clearTimeout;\n    var timerFn = theArgs[0];\n    theArgs[0] = function () {\n        handler.dn();\n        fnApply(timerFn, UNDEF_VALUE, ArrSlice[CALL](arguments));\n    };\n    var handler = _createTimerHandler(startTimer, function (timerId) {\n        if (timerId) {\n            if (timerId.refresh) {\n                timerId.refresh();\n                return timerId;\n            }\n            fnApply(clearFn, UNDEF_VALUE, [timerId]);\n        }\n        return fnApply(setFn, UNDEF_VALUE, theArgs);\n    }, function (timerId) {\n        fnApply(clearFn, UNDEF_VALUE, [timerId]);\n    });\n    return handler.h;\n}\nfunction scheduleTimeout(callback, timeout) {\n    return _createTimeoutWith(true, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction scheduleTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(true, overrideFn, ArrSlice[CALL](arguments, 1));\n}\nfunction createTimeout(callback, timeout) {\n    return _createTimeoutWith(false, UNDEF_VALUE, ArrSlice[CALL](arguments));\n}\nfunction createTimeoutWith(overrideFn, callback, timeout) {\n    return _createTimeoutWith(false, overrideFn, ArrSlice[CALL](arguments, 1));\n}\n\nvar _defaultIdleTimeout = 100;\nvar _maxExecutionTime = 50;\n/*#__NO_SIDE_EFFECTS__*/\nfunction hasIdleCallback() {\n    return !!( /*#__PURE__*/getIdleCallback());\n}\nvar getIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"requestIdleCallback\"]));\nvar getCancelIdleCallback = ( /*#__PURE__*/_getGlobalInstFn(getInst, [\"cancelIdleCallback\"]));\nfunction setDefaultIdleTimeout(timeout) {\n    _defaultIdleTimeout = timeout;\n}\nfunction setDefaultMaxExecutionTime(maxTime) {\n    _maxExecutionTime = maxTime;\n}\nfunction scheduleIdleCallback(callback, options) {\n    function _createDeadline(timedOut) {\n        var startTime = perfNow();\n        return {\n            didTimeout: timedOut,\n            timeRemaining: function () {\n                return _maxExecutionTime - elapsedTime(startTime);\n            }\n        };\n    }\n    if (hasIdleCallback()) {\n        var handler_1 = _createTimerHandler(true, function (idleId) {\n            idleId && getCancelIdleCallback()(idleId);\n            return getIdleCallback()(function (deadline) {\n                handler_1.dn();\n                callback(deadline || _createDeadline(false));\n            }, options);\n        }, function (idleId) {\n            getCancelIdleCallback()(idleId);\n        });\n        return handler_1.h;\n    }\n    var timeout = (options || {}).timeout;\n    if (isUndefined(timeout)) {\n        timeout = _defaultIdleTimeout;\n    }\n    return scheduleTimeout(function () {\n        callback(_createDeadline(true));\n    }, timeout);\n}\n\nfunction scheduleInterval(callback, timeout) {\n    var theArguments = ArrSlice[CALL](arguments);\n    var handler = _createTimerHandler(true, function (intervalId) {\n        intervalId && clearInterval(intervalId);\n        return fnApply(setInterval, UNDEF_VALUE, theArguments);\n    }, function (intervalId) {\n        fnApply(clearInterval, UNDEF_VALUE, [intervalId]);\n    });\n    return handler.h;\n}\n\nexport { arrAppend, arrContains, arrEvery, arrFilter, arrFind, arrFindIndex, arrFindLast, arrFindLastIndex, arrForEach, arrFrom, arrIncludes, arrIndexOf, arrLastIndexOf, arrMap, arrReduce, arrSlice, arrSome, arrayDeepCopyHandler, asString, createArrayIterator, createCachedValue, createCustomError, createDeferredCachedValue, createEnum, createEnumKeyMap, createEnumValueMap, createFilenameRegex, createFnDeferredProxy, createIterable, createIterator, createProxyFuncs, createRangeIterator, createSimpleMap, createTimeout, createTimeoutWith, createTypeMap, createWildcardRegex, dateDeepCopyHandler, deepExtend, dumpObj, elapsedTime, encodeAsHtml, encodeAsJson, fnApply, fnBind, fnCall, functionDeepCopyHandler, getCancelIdleCallback, getDocument, getGlobal, getHistory, getIdleCallback, getInst, getIntValue, getKnownSymbol, getLazy, getLength, getNavigator, getPerformance, getSymbol, getValueByIter, getValueByKey, getWindow, hasDocument, hasHistory, hasIdleCallback, hasNavigator, hasPerformance, hasSymbol, hasValue, hasWindow, isArray, isArrayBuffer, isBlob, isBoolean, isDate, isDefined, isError, isFile, isFormData, isFunction, isIterable, isIterator, isNode, isNotTruthy, isNullOrUndefined, isNumber, isObject, isPlainObject, isPrimitive, isPrimitiveType, isPromise, isPromiseLike, isRegExp, isStrictNullOrUndefined, isStrictUndefined, isString, isSymbol, isThenable, isTruthy, isTypeof, isUndefined, isWebWorker, iterForOf, lazySafeGetInst, makeGlobRegex, makeIterable, mathCeil, mathFloor, mathMax, mathMin, mathToInt, mathTrunc, newSymbol, normalizeJsName, objAssign, objCopyProps, objCreate, objDeepCopy, objDeepFreeze, objDefine, objDefineAccessors, objDefineGet, objDefineProp, objDefineProperties, objDefineProps, objEntries, objExtend, objForEachKey, objFreeze, objGetOwnPropertyDescriptor, objGetPrototypeOf, objHasOwn, objHasOwnProperty, objKeys, objSeal, objSetPrototypeOf, objToString, perfNow, plainObjDeepCopyHandler, polyArrFind, polyArrFindIndex, polyArrFindLast, polyArrFindLastIndex, polyArrFrom, polyArrIncludes, polyGetKnownSymbol, polyIsArray, polyNewSymbol, polyObjEntries, polyObjHasOwn, polyObjKeys, polyStrIncludes, polyStrSubstr, polyStrSymSplit, polyStrTrim, polyStrTrimEnd, polyStrTrimStart, polySymbolFor, polySymbolKeyFor, polyUtcNow, readArgs, safe, safeGet, safeGetLazy, scheduleIdleCallback, scheduleInterval, scheduleTimeout, scheduleTimeoutWith, setBypassLazyCache, setDefaultIdleTimeout, setDefaultMaxExecutionTime, setValueByIter, setValueByKey, strCamelCase, strContains, strEndsWith, strIncludes, strIndexOf, strIsNullOrEmpty, strIsNullOrWhiteSpace, strKebabCase, strLastIndexOf, strLeft, strLetterCase, strLower, strPadEnd, strPadStart, strRepeat, strRight, strSlice, strSnakeCase, strSplit, strStartsWith, strSubstr, strSubstring, strSymSplit, strTrim, strTrimEnd, strTrimLeft, strTrimRight, strTrimStart, strUpper, symbolFor, symbolKeyFor, throwError, throwRangeError, throwTypeError, throwUnsupported, utcNow };\n//# sourceMappingURL=ts-utils.js.map\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { Log } from './logger';\n\nexport class Keychain {\n\tconstructor(\n\t\tprivate readonly context: vscode.ExtensionContext,\n\t\tprivate readonly serviceId: string,\n\t\tprivate readonly Logger: Log\n\t) { }\n\n\tasync setToken(token: string): Promise<void> {\n\t\ttry {\n\t\t\treturn await this.context.secrets.store(this.serviceId, token);\n\t\t} catch (e) {\n\t\t\t// Ignore\n\t\t\tthis.Logger.error(`Setting token failed: ${e}`);\n\t\t}\n\t}\n\n\tasync getToken(): Promise<string | null | undefined> {\n\t\ttry {\n\t\t\tconst secret = await this.context.secrets.get(this.serviceId);\n\t\t\tif (secret && secret !== '[]') {\n\t\t\t\tthis.Logger.trace('Token acquired from secret storage.');\n\t\t\t}\n\t\t\treturn secret;\n\t\t} catch (e) {\n\t\t\t// Ignore\n\t\t\tthis.Logger.error(`Getting token failed: ${e}`);\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t}\n\n\tasync deleteToken(): Promise<void> {\n\t\ttry {\n\t\t\treturn await this.context.secrets.delete(this.serviceId);\n\t\t} catch (e) {\n\t\t\t// Ignore\n\t\t\tthis.Logger.error(`Deleting token failed: ${e}`);\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function base64Encode(text: string): string {\n\treturn btoa(text);\n}\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, isFunction } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_INITIALIZE, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_NEXT_PLUGIN, _DYN_SPAN_ID, _DYN_TEARDOWN, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { createElmNodeData } from \"./DataCacheHelper\";\r\nimport { STR_CORE, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { isValidSpanId, isValidTraceId } from \"./W3cTraceParent\";\r\nvar pluginStateData = createElmNodeData(\"plugin\");\r\nexport function _getPluginState(plugin) {\r\n    return pluginStateData.get(plugin, \"state\", {}, true);\r\n}\r\n/**\r\n * Initialize the queue of plugins\r\n * @param plugins - The array of plugins to initialize and setting of the next plugin\r\n * @param config - The current config for the instance\r\n * @param core - THe current core instance\r\n * @param extensions - The extensions\r\n */\r\nexport function initializePlugins(processContext, extensions) {\r\n    // Set the next plugin and identified the uninitialized plugins\r\n    var initPlugins = [];\r\n    var lastPlugin = null;\r\n    var proxy = processContext[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    var pluginState;\r\n    while (proxy) {\r\n        var thePlugin = proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n        if (thePlugin) {\r\n            if (lastPlugin && lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] && thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]) {\r\n                // Set this plugin as the next for the previous one\r\n                lastPlugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](thePlugin);\r\n            }\r\n            pluginState = _getPluginState(thePlugin);\r\n            var isInitialized = !!pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */];\r\n            if (thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]) {\r\n                isInitialized = thePlugin[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]();\r\n            }\r\n            if (!isInitialized) {\r\n                initPlugins[_DYN_PUSH /* @min:%2epush */](thePlugin);\r\n            }\r\n            lastPlugin = thePlugin;\r\n            proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n        }\r\n    }\r\n    // Now initialize the plugins\r\n    arrForEach(initPlugins, function (thePlugin) {\r\n        var core = processContext[STR_CORE /* @min:%2ecore */]();\r\n        thePlugin[_DYN_INITIALIZE /* @min:%2einitialize */](processContext.getCfg(), core, extensions, processContext[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n        pluginState = _getPluginState(thePlugin);\r\n        // Only add the core to the state if the plugin didn't set it (doesn't extend from BaseTelemetryPlugin)\r\n        if (!thePlugin[STR_CORE] && !pluginState[STR_CORE]) {\r\n            pluginState[STR_CORE] = core;\r\n        }\r\n        pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = true;\r\n        delete pluginState[_DYN_TEARDOWN /* @min:%2eteardown */];\r\n    });\r\n}\r\nexport function sortPlugins(plugins) {\r\n    // Sort by priority\r\n    return plugins.sort(function (extA, extB) {\r\n        var result = 0;\r\n        if (extB) {\r\n            var bHasProcess = extB[STR_PROCESS_TELEMETRY];\r\n            if (extA[STR_PROCESS_TELEMETRY]) {\r\n                result = bHasProcess ? extA[STR_PRIORITY] - extB[STR_PRIORITY] : 1;\r\n            }\r\n            else if (bHasProcess) {\r\n                result = -1;\r\n            }\r\n        }\r\n        else {\r\n            result = extA ? 1 : -1;\r\n        }\r\n        return result;\r\n    });\r\n    // sort complete\r\n}\r\n/**\r\n * Teardown / Unload helper to perform teardown/unloading operations for the provided components synchronously or asynchronously, this will call any\r\n * _doTeardown() or _doUnload() functions on the provided components to allow them to finish removal.\r\n * @param components - The components you want to unload\r\n * @param unloadCtx - This is the context that should be used during unloading.\r\n * @param unloadState - The details / state of the unload process, it holds details like whether it should be unloaded synchronously or asynchronously and the reason for the unload.\r\n * @param asyncCallback - An optional callback that the plugin must call if it returns true to inform the caller that it has completed any async unload/teardown operations.\r\n * @returns boolean - true if the plugin has or will call asyncCallback, this allows the plugin to perform any asynchronous operations.\r\n */\r\nexport function unloadComponents(components, unloadCtx, unloadState, asyncCallback) {\r\n    var idx = 0;\r\n    function _doUnload() {\r\n        while (idx < components[_DYN_LENGTH /* @min:%2elength */]) {\r\n            var component = components[idx++];\r\n            if (component) {\r\n                var func = component._doUnload || component[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */];\r\n                if (isFunction(func)) {\r\n                    if (func.call(component, unloadCtx, unloadState, _doUnload) === true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return _doUnload();\r\n}\r\n/**\r\n * Creates a IDistributedTraceContext which optionally also \"sets\" the value on a parent\r\n * @param parentCtx - An optional parent distributed trace instance\r\n * @returns A new IDistributedTraceContext instance that uses an internal temporary object\r\n */\r\nexport function createDistributedTraceContext(parentCtx) {\r\n    var trace = {};\r\n    return {\r\n        getName: function () {\r\n            return trace[_DYN_NAME /* @min:%2ename */];\r\n        },\r\n        setName: function (newValue) {\r\n            parentCtx && parentCtx.setName(newValue);\r\n            trace[_DYN_NAME /* @min:%2ename */] = newValue;\r\n        },\r\n        getTraceId: function () {\r\n            return trace[_DYN_TRACE_ID /* @min:%2etraceId */];\r\n        },\r\n        setTraceId: function (newValue) {\r\n            parentCtx && parentCtx.setTraceId(newValue);\r\n            if (isValidTraceId(newValue)) {\r\n                trace[_DYN_TRACE_ID /* @min:%2etraceId */] = newValue;\r\n            }\r\n        },\r\n        getSpanId: function () {\r\n            return trace[_DYN_SPAN_ID /* @min:%2espanId */];\r\n        },\r\n        setSpanId: function (newValue) {\r\n            parentCtx && parentCtx.setSpanId(newValue);\r\n            if (isValidSpanId(newValue)) {\r\n                trace[_DYN_SPAN_ID /* @min:%2espanId */] = newValue;\r\n            }\r\n        },\r\n        getTraceFlags: function () {\r\n            return trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */];\r\n        },\r\n        setTraceFlags: function (newTraceFlags) {\r\n            parentCtx && parentCtx.setTraceFlags(newTraceFlags);\r\n            trace[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] = newTraceFlags;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TelemetryHelpers.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { getGlobal, objAssign, objCreate, objDefineProp, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { ObjClass, ObjProto, strDefault, strShimFunction, strShimPrototype } from \"./Constants\";\r\n// Most of these functions have been directly shamelessly \"lifted\" from the https://github.com/@microsoft/tslib and\r\n// modified to be ES5 compatible and applying several minification and tree-shaking techniques so that Application Insights\r\n// can successfully use TypeScript \"importHelpers\" which imports tslib during compilation but it will use these at runtime\r\n// Which is also why all of the functions have not been included as Application Insights currently doesn't use or require\r\n// them.\r\nexport var SymbolObj = (getGlobal() || {})[\"Symbol\"];\r\nexport var ReflectObj = (getGlobal() || {})[\"Reflect\"];\r\nexport var __hasReflect = !!ReflectObj;\r\nvar strDecorate = \"decorate\";\r\nvar strMetadata = \"metadata\";\r\nvar strGetOwnPropertySymbols = \"getOwnPropertySymbols\";\r\nvar strIterator = \"iterator\";\r\nvar strHasOwnProperty = \"hasOwnProperty\";\r\nexport var __objAssignFnImpl = function (t) {\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) {\r\n            if (ObjProto[strHasOwnProperty].call(s, p)) {\r\n                t[p] = s[p];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nexport var __assignFn = objAssign || __objAssignFnImpl;\r\n// tslint:disable-next-line: only-arrow-functions\r\nvar extendStaticsFn = function (d, b) {\r\n    extendStaticsFn = ObjClass[\"setPrototypeOf\"] ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        ({ __proto__: [] } instanceof Array && function (d, b) {\r\n            d.__proto__ = b;\r\n        }) ||\r\n        // tslint:disable-next-line: only-arrow-functions\r\n        function (d, b) {\r\n            for (var p in b) {\r\n                if (b[strHasOwnProperty](p)) {\r\n                    d[p] = b[p];\r\n                }\r\n            }\r\n        };\r\n    return extendStaticsFn(d, b);\r\n};\r\nexport function __extendsFn(d, b) {\r\n    if (typeof b !== strShimFunction && b !== null) {\r\n        throwTypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    }\r\n    extendStaticsFn(d, b);\r\n    function __() {\r\n        this.constructor = d;\r\n    }\r\n    // tslint:disable-next-line: ban-comma-operator\r\n    d[strShimPrototype] = b === null ? objCreate(b) : (__[strShimPrototype] = b[strShimPrototype], new __());\r\n}\r\nexport function __restFn(s, e) {\r\n    var t = {};\r\n    for (var k in s) {\r\n        if (objHasOwnProperty(s, k) && e.indexOf(k) < 0) {\r\n            t[k] = s[k];\r\n        }\r\n    }\r\n    if (s != null && typeof ObjClass[strGetOwnPropertySymbols] === strShimFunction) {\r\n        for (var i = 0, p = ObjClass[strGetOwnPropertySymbols](s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && ObjProto[\"propertyIsEnumerable\"].call(s, p[i])) {\r\n                t[p[i]] = s[p[i]];\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n}\r\nexport function __decorateFn(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = ObjClass[\"getOwnPropertyDescriptor\"](target, key) : desc, d;\r\n    if (__hasReflect && typeof ReflectObj[strDecorate] === strShimFunction) {\r\n        r = ReflectObj[strDecorate](decorators, target, key, desc);\r\n    }\r\n    else {\r\n        for (var i = decorators.length - 1; i >= 0; i--) {\r\n            // eslint-disable-next-line no-cond-assign\r\n            if (d = decorators[i]) {\r\n                r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:ban-comma-operator\r\n    return c > 3 && r && objDefineProp(target, key, r), r;\r\n}\r\nexport function __paramFn(paramIndex, decorator) {\r\n    return function (target, key) {\r\n        decorator(target, key, paramIndex);\r\n    };\r\n}\r\nexport function __metadataFn(metadataKey, metadataValue) {\r\n    if (__hasReflect && ReflectObj[strMetadata] === strShimFunction) {\r\n        return ReflectObj[strMetadata](metadataKey, metadataValue);\r\n    }\r\n}\r\nexport function __exportStarFn(m, o) {\r\n    for (var p in m) {\r\n        if (p !== strDefault && !objHasOwnProperty(o, p)) {\r\n            __createBindingFn(o, m, p);\r\n        }\r\n    }\r\n}\r\nexport function __createBindingFn(o, m, k, k2) {\r\n    if (k2 === undefined) {\r\n        k2 = k;\r\n    }\r\n    if (!!objDefineProp) {\r\n        objDefineProp(o, k2, {\r\n            enumerable: true,\r\n            get: function () {\r\n                return m[k];\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        o[k2] = m[k];\r\n    }\r\n}\r\nexport function __valuesFn(o) {\r\n    var s = typeof SymbolObj === strShimFunction && SymbolObj[strIterator], m = s && o[s], i = 0;\r\n    if (m) {\r\n        return m.call(o);\r\n    }\r\n    if (o && typeof o.length === \"number\") {\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) {\r\n                    o = void 0;\r\n                }\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n    throwTypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\nexport function __readFn(o, n) {\r\n    var m = typeof SymbolObj === strShimFunction && o[SymbolObj[strIterator]];\r\n    if (!m) {\r\n        return o;\r\n    }\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\r\n            ar.push(r.value);\r\n        }\r\n    }\r\n    catch (error) {\r\n        e = {\r\n            error: error\r\n        };\r\n    }\r\n    finally {\r\n        try {\r\n            // tslint:disable-next-line:no-conditional-assignment\r\n            if (r && !r.done && (m = i[\"return\"])) {\r\n                m.call(i);\r\n            }\r\n        }\r\n        finally {\r\n            if (e) {\r\n                // eslint-disable-next-line no-unsafe-finally\r\n                throw e.error;\r\n            }\r\n        }\r\n    }\r\n    return ar;\r\n}\r\n/** @deprecated */\r\nexport function __spreadArraysFn() {\r\n    var theArgs = arguments;\r\n    // Calculate new total size\r\n    for (var s = 0, i = 0, il = theArgs.length; i < il; i++) {\r\n        s += theArgs[i].length;\r\n    }\r\n    // Create new full array\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++) {\r\n        for (var a = theArgs[i], j = 0, jl = a.length; j < jl; j++, k++) {\r\n            r[k] = a[j];\r\n        }\r\n    }\r\n    return r;\r\n}\r\nexport function __spreadArrayFn(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\r\n        to[j] = from[i];\r\n    }\r\n    return to;\r\n}\r\nexport function __makeTemplateObjectFn(cooked, raw) {\r\n    if (objDefineProp) {\r\n        objDefineProp(cooked, \"raw\", { value: raw });\r\n    }\r\n    else {\r\n        cooked.raw = raw;\r\n    }\r\n    return cooked;\r\n}\r\nexport function __importStarFn(mod) {\r\n    if (mod && mod.__esModule) {\r\n        return mod;\r\n    }\r\n    var result = {};\r\n    if (mod != null) {\r\n        for (var k in mod) {\r\n            if (k !== strDefault && Object.prototype.hasOwnProperty.call(mod, k)) {\r\n                __createBindingFn(result, mod, k);\r\n            }\r\n        }\r\n    }\r\n    // Set default module\r\n    if (!!objDefineProp) {\r\n        objDefineProp(result, strDefault, { enumerable: true, value: mod });\r\n    }\r\n    else {\r\n        result[strDefault] = mod;\r\n    }\r\n    return result;\r\n}\r\nexport function __importDefaultFn(mod) {\r\n    return (mod && mod.__esModule) ? mod : { strDefault: mod };\r\n}\r\n//# sourceMappingURL=TsLibShims.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nexport function createUnloadHandlerContainer() {\r\n    var handlers = [];\r\n    function _addHandler(handler) {\r\n        if (handler) {\r\n            handlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n        }\r\n    }\r\n    function _runHandlers(unloadCtx, unloadState) {\r\n        arrForEach(handlers, function (handler) {\r\n            try {\r\n                handler(unloadCtx, unloadState);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\r\n            }\r\n        });\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add: _addHandler,\r\n        run: _runHandlers\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHandlerContainer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, dumpObj, getNavigator, getWindow, isFunction, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_DATA, _DYN_HEADERS, _DYN_INITIALIZE, _DYN_LENGTH, _DYN_MESSAGE, _DYN_PROTOCOL, _DYN_REPLACE, _DYN_SEND_POST, _DYN_SET_REQUEST_HEADER, _DYN_STATUS, _DYN_TIMEOUT, _DYN_TO_LOWER_CASE, _DYN_URL_STRING, _DYN_VALUE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { DisabledPropertyName } from \"./Constants\";\r\nimport { _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getLocation, isBeaconsSupported, isFetchSupported, isXhrSupported, useXDomainRequest } from \"./EnvUtils\";\r\nimport { _getAllResponseHeaders, formatErrorMessageXdr, formatErrorMessageXhr, getResponseText, openXhr } from \"./HelperFuncs\";\r\nvar STR_EMPTY = \"\";\r\nvar STR_NO_RESPONSE_BODY = \"NoResponseBody\";\r\nvar _noResponseQs = \"&\" + STR_NO_RESPONSE_BODY + \"=true\";\r\nvar STR_POST_METHOD = \"POST\";\r\n/**\r\n * This Internal component\r\n * Manager SendPost functions\r\n * SendPostManger\r\n * @internal for internal use only\r\n */\r\nvar SenderPostManager = /** @class */ (function () {\r\n    function SenderPostManager() {\r\n        var _syncFetchPayload = 0; // Keep track of the outstanding sync fetch payload total (as sync fetch has limits)\r\n        var _enableSendPromise;\r\n        var _isInitialized;\r\n        var _diagLog;\r\n        var _isOneDs;\r\n        var _onCompleteFuncs;\r\n        var _disableCredentials;\r\n        var _fetchCredentials;\r\n        var _fallbackInst;\r\n        var _disableXhr;\r\n        var _disableBeacon;\r\n        var _disableBeaconSync;\r\n        var _disableFetchKeepAlive;\r\n        var _addNoResponse;\r\n        var _timeoutWrapper;\r\n        dynamicProto(SenderPostManager, this, function (_self, _base) {\r\n            var _sendCredentials = true; // for 1ds\r\n            _initDefaults();\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, diagLog) {\r\n                _diagLog = diagLog;\r\n                if (_isInitialized) {\r\n                    _throwInternal(_diagLog, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"Sender is already initialized\");\r\n                }\r\n                _self.SetConfig(config);\r\n                _isInitialized = true;\r\n            };\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_isInitialized, _isOneDs, _disableCredentials, _enableSendPromise];\r\n            };\r\n            // This componet might get its config from sender, offline sender, 1ds post\r\n            // so set this function to mock dynamic changes\r\n            _self.SetConfig = function (config) {\r\n                try {\r\n                    _onCompleteFuncs = config.senderOnCompleteCallBack || {};\r\n                    _disableCredentials = !!config.disableCredentials;\r\n                    _fetchCredentials = config.fetchCredentials;\r\n                    _isOneDs = !!config.isOneDs;\r\n                    _enableSendPromise = !!config.enableSendPromise;\r\n                    _disableXhr = !!config.disableXhr;\r\n                    _disableBeacon = !!config.disableBeacon;\r\n                    _disableBeaconSync = !!config.disableBeaconSync;\r\n                    _timeoutWrapper = config.timeWrapper;\r\n                    _addNoResponse = !!config.addNoResponse;\r\n                    _disableFetchKeepAlive = !!config.disableFetchKeepAlive;\r\n                    _fallbackInst = { sendPOST: _xhrSender };\r\n                    if (!_isOneDs) {\r\n                        _sendCredentials = false; // for appInsights, set it to false always\r\n                    }\r\n                    if (_disableCredentials) {\r\n                        var location_1 = getLocation();\r\n                        if (location_1 && location_1.protocol && location_1.protocol[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"file:\") {\r\n                            // Special case where a local html file fails with a CORS error on Chromium browsers\r\n                            _sendCredentials = false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return false;\r\n            };\r\n            _self.getSyncFetchPayload = function () {\r\n                return _syncFetchPayload;\r\n            };\r\n            _self.getSenderInst = function (transports, sync) {\r\n                if (transports && transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    return _getSenderInterface(transports, sync);\r\n                }\r\n                return null;\r\n            };\r\n            _self.getFallbackInst = function () {\r\n                return _fallbackInst;\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function (unloadCtx, unloadState) {\r\n                _initDefaults();\r\n            };\r\n            /**\r\n             * success handler\r\n             */\r\n            function _onSuccess(res, onComplete) {\r\n                _doOnComplete(onComplete, 200, {}, res);\r\n            }\r\n            /**\r\n             * error handler\r\n             */\r\n            function _onError(message, onComplete) {\r\n                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 26 /* _eInternalMessageId.OnError */, \"Failed to send telemetry.\", { message: message });\r\n                _doOnComplete(onComplete, 400, {});\r\n            }\r\n            function _onNoPayloadUrl(onComplete) {\r\n                _onError(\"No endpoint url is provided for the batch\", onComplete);\r\n            }\r\n            function _getSenderInterface(transports, syncSupport) {\r\n                var _a;\r\n                var transportType = 0 /* TransportType.NotSet */;\r\n                var sendPostFunc = null;\r\n                var lp = 0;\r\n                while (sendPostFunc == null && lp < transports[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    transportType = transports[lp];\r\n                    if (!_disableXhr && transportType === 1 /* TransportType.Xhr */) {\r\n                        if (useXDomainRequest()) {\r\n                            // IE 8 and 9\r\n                            sendPostFunc = _xdrSender;\r\n                        }\r\n                        else if (isXhrSupported()) {\r\n                            sendPostFunc = _xhrSender;\r\n                        }\r\n                    }\r\n                    else if (transportType === 2 /* TransportType.Fetch */ && isFetchSupported(syncSupport) && (!syncSupport || !_disableFetchKeepAlive)) {\r\n                        sendPostFunc = _doFetchSender;\r\n                    }\r\n                    else if (transportType === 3 /* TransportType.Beacon */ && isBeaconsSupported() && (syncSupport ? !_disableBeaconSync : !_disableBeacon)) {\r\n                        sendPostFunc = _beaconSender;\r\n                    }\r\n                    lp++;\r\n                }\r\n                if (sendPostFunc) {\r\n                    return _a = {\r\n                            _transport: transportType,\r\n                            _isSync: syncSupport\r\n                        },\r\n                        _a[_DYN_SEND_POST /* @min:sendPOST */] = sendPostFunc,\r\n                        _a;\r\n                }\r\n                return null;\r\n            }\r\n            function _doOnComplete(oncomplete, status, headers, response) {\r\n                try {\r\n                    oncomplete && oncomplete(status, headers, response);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n            }\r\n            function _doBeaconSend(payload, oncomplete) {\r\n                var nav = getNavigator();\r\n                var url = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!url) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    // return true here, because we don't want to retry it with fallback sender\r\n                    return true;\r\n                }\r\n                url = payload[_DYN_URL_STRING /* @min:%2eurlString */] + (_addNoResponse ? _noResponseQs : STR_EMPTY);\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n                // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n                var plainTextBatch = _isOneDs ? data : new Blob([data], { type: \"text/plain;charset=UTF-8\" });\r\n                // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                var queued = nav.sendBeacon(url, plainTextBatch);\r\n                return queued;\r\n            }\r\n            /**\r\n             * Send Beacon API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - not used\r\n             * Note: Beacon API does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _beaconSender(payload, oncomplete, sync) {\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                try {\r\n                    if (data) {\r\n                        // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n                        if (!_doBeaconSend(payload, oncomplete)) {\r\n                            var onRetry = _onCompleteFuncs && _onCompleteFuncs.beaconOnRetry;\r\n                            if (onRetry && isFunction(onRetry)) {\r\n                                onRetry(payload, oncomplete, _doBeaconSend);\r\n                            }\r\n                            else {\r\n                                _fallbackInst && _fallbackInst[_DYN_SEND_POST /* @min:%2esendPOST */](payload, oncomplete, true);\r\n                                _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + \"Failed to send telemetry with Beacon API, retried with normal sender.\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            // if can send\r\n                            _onSuccess(STR_EMPTY, oncomplete);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _isOneDs && _warnToConsole(_diagLog, \"Failed to send telemetry using sendBeacon API. Ex:\" + dumpObj(e));\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, STR_EMPTY);\r\n                }\r\n                return;\r\n            }\r\n            /**\r\n             * Send XMLHttpRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             */\r\n            function _xhrSender(payload, oncomplete, sync) {\r\n                //let  internalPayload = payload as IInternalPayloadData;\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (_isOneDs && sync && payload.disableXhrSync) {\r\n                    sync = false;\r\n                }\r\n                //const xhr = new XMLHttpRequest();\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                var xhr = openXhr(STR_POST_METHOD, endPointUrl, _sendCredentials, true, sync, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                if (!_isOneDs) {\r\n                    // application/json should NOT add to 1ds post by default\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](\"Content-type\", \"application/json\");\r\n                }\r\n                arrForEach(objKeys(headers), function (headerName) {\r\n                    xhr[_DYN_SET_REQUEST_HEADER /* @min:%2esetRequestHeader */](headerName, headers[headerName]);\r\n                });\r\n                xhr.onreadystatechange = function () {\r\n                    if (!_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                        if (xhr.readyState === 4) {\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }\r\n                };\r\n                xhr.onload = function () {\r\n                    if (_isOneDs) {\r\n                        _doOnReadyFunc(xhr);\r\n                    }\r\n                };\r\n                function _doOnReadyFunc(xhr) {\r\n                    var onReadyFunc = _onCompleteFuncs && _onCompleteFuncs.xhrOnComplete;\r\n                    var onReadyFuncExist = onReadyFunc && isFunction(onReadyFunc);\r\n                    if (onReadyFuncExist) {\r\n                        onReadyFunc(xhr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        var response = getResponseText(xhr);\r\n                        _doOnComplete(oncomplete, xhr[_DYN_STATUS /* @min:%2estatus */], _getAllResponseHeaders(xhr, _isOneDs), response);\r\n                    }\r\n                }\r\n                xhr.onerror = function (event) {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 400, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    rejectFunc && rejectFunc(event);\r\n                };\r\n                xhr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, _isOneDs ? xhr[_DYN_STATUS /* @min:%2estatus */] : 500, _getAllResponseHeaders(xhr, _isOneDs), _isOneDs ? STR_EMPTY : formatErrorMessageXhr(xhr));\r\n                    resolveFunc && resolveFunc(false);\r\n                };\r\n                xhr.send(payload[_DYN_DATA /* @min:%2edata */]);\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send fetch API request\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - For fetch this identifies whether we are \"unloading\" (false) or a normal request\r\n             */\r\n            function _doFetchSender(payload, oncomplete, sync) {\r\n                var _a;\r\n                var endPointUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                var batch = payload[_DYN_DATA /* @min:%2edata */];\r\n                var plainTextBatch = _isOneDs ? batch : new Blob([batch], { type: \"application/json\" });\r\n                var thePromise;\r\n                var resolveFunc;\r\n                var rejectFunc;\r\n                var requestHeaders = new Headers();\r\n                var batchLength = batch[_DYN_LENGTH /* @min:%2elength */];\r\n                var ignoreResponse = false;\r\n                var responseHandled = false;\r\n                var headers = payload[_DYN_HEADERS /* @min:%2eheaders */] || {};\r\n                //TODO: handle time out for 1ds\r\n                var init = (_a = {\r\n                        method: STR_POST_METHOD,\r\n                        body: plainTextBatch\r\n                    },\r\n                    _a[DisabledPropertyName] = true // Mark so we don't attempt to track this request\r\n                ,\r\n                    _a);\r\n                // Only add headers if there are headers to add, due to issue with some polyfills\r\n                if (payload.headers && objKeys(payload.headers)[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(objKeys(headers), function (headerName) {\r\n                        requestHeaders.append(headerName, headers[headerName]);\r\n                    });\r\n                    init[_DYN_HEADERS /* @min:%2eheaders */] = requestHeaders;\r\n                }\r\n                if (_fetchCredentials) { // if user passed in this value via post channel (1ds), then use it\r\n                    init.credentials = _fetchCredentials;\r\n                }\r\n                else if (_sendCredentials && _isOneDs) {\r\n                    // for 1ds, Don't send credentials when URL is file://\r\n                    init.credentials = \"include\";\r\n                }\r\n                if (sync) {\r\n                    init.keepalive = true;\r\n                    _syncFetchPayload += batchLength;\r\n                    if (_isOneDs) {\r\n                        if (payload[\"_sendReason\"] === 2 /* SendRequestReason.Unload */) {\r\n                            // As a sync request (during unload), it is unlikely that we will get a chance to process the response so\r\n                            // just like beacon send assume that the events have been accepted and processed\r\n                            ignoreResponse = true;\r\n                            if (_addNoResponse) {\r\n                                endPointUrl += _noResponseQs;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // for appinsights, set to true for all sync request\r\n                        ignoreResponse = true;\r\n                    }\r\n                }\r\n                var request = new Request(endPointUrl, init);\r\n                try {\r\n                    // Also try and tag the request (just in case the value in init is not copied over)\r\n                    request[DisabledPropertyName] = true;\r\n                }\r\n                catch (e) {\r\n                    // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n                    // cause the request to fail and we no telemetry would be sent\r\n                }\r\n                if (!sync && _enableSendPromise) {\r\n                    thePromise = createPromise(function (resolve, reject) {\r\n                        resolveFunc = resolve;\r\n                        rejectFunc = reject;\r\n                    });\r\n                }\r\n                if (!endPointUrl) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    resolveFunc && resolveFunc(false);\r\n                    return;\r\n                }\r\n                function _handleError(res) {\r\n                    // In case there is an error in the request. Set the status to 0 for 1ds and 400 for appInsights\r\n                    // so that the events can be retried later.\r\n                    _doOnComplete(oncomplete, _isOneDs ? 0 : 400, {}, _isOneDs ? STR_EMPTY : res);\r\n                }\r\n                function _onFetchComplete(response, payload, value) {\r\n                    var status = response[_DYN_STATUS /* @min:%2estatus */];\r\n                    var onCompleteFunc = _onCompleteFuncs.fetchOnComplete;\r\n                    if (onCompleteFunc && isFunction(onCompleteFunc)) {\r\n                        onCompleteFunc(response, oncomplete, value || STR_EMPTY, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, status, {}, value || STR_EMPTY);\r\n                    }\r\n                }\r\n                try {\r\n                    doAwaitResponse(fetch(_isOneDs ? endPointUrl : request, _isOneDs ? init : null), function (result) {\r\n                        if (sync) {\r\n                            _syncFetchPayload -= batchLength;\r\n                            batchLength = 0;\r\n                        }\r\n                        if (!responseHandled) {\r\n                            responseHandled = true;\r\n                            if (!result.rejected) {\r\n                                var response_1 = result[_DYN_VALUE /* @min:%2evalue */];\r\n                                try {\r\n                                    /**\r\n                                     * The Promise returned from fetch() won’t reject on HTTP error status even if the response is an HTTP 404 or 500.\r\n                                     * Instead, it will resolve normally (with ok status set to false), and it will only reject on network failure\r\n                                     * or if anything prevented the request from completing.\r\n                                     */\r\n                                    if (!_isOneDs && !response_1.ok) {\r\n                                        // this is for appInsights only\r\n                                        _handleError(response_1.statusText);\r\n                                        resolveFunc && resolveFunc(false);\r\n                                    }\r\n                                    else {\r\n                                        if (_isOneDs && !response_1.body) {\r\n                                            _onFetchComplete(response_1, null, STR_EMPTY);\r\n                                            resolveFunc && resolveFunc(true);\r\n                                        }\r\n                                        else {\r\n                                            doAwaitResponse(response_1.text(), function (resp) {\r\n                                                _onFetchComplete(response_1, payload, resp[_DYN_VALUE /* @min:%2evalue */]);\r\n                                                resolveFunc && resolveFunc(true);\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                }\r\n                                catch (e) {\r\n                                    _handleError(dumpObj(e));\r\n                                    rejectFunc && rejectFunc(e);\r\n                                }\r\n                            }\r\n                            else {\r\n                                _handleError(result.reason && result.reason[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                rejectFunc && rejectFunc(result.reason);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    if (!responseHandled) {\r\n                        _handleError(dumpObj(e));\r\n                        rejectFunc && rejectFunc(e);\r\n                    }\r\n                }\r\n                if (ignoreResponse && !responseHandled) {\r\n                    // Assume success during unload processing as we most likely won't get the response\r\n                    responseHandled = true;\r\n                    _doOnComplete(oncomplete, 200, {});\r\n                    resolveFunc && resolveFunc(true);\r\n                }\r\n                if (_isOneDs && !responseHandled && payload[_DYN_TIMEOUT /* @min:%2etimeout */] > 0) {\r\n                    // Simulate timeout\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        if (!responseHandled) {\r\n                            // Assume a 500 response (which will cause a retry)\r\n                            responseHandled = true;\r\n                            _doOnComplete(oncomplete, 500, {});\r\n                            resolveFunc && resolveFunc(true);\r\n                        }\r\n                    }, payload[_DYN_TIMEOUT /* @min:%2etimeout */]);\r\n                }\r\n                return thePromise;\r\n            }\r\n            /**\r\n             * Send XDomainRequest\r\n             * @param payload - {string} - The data payload to be sent.\r\n             * @param sync - {boolean} - Indicates if the request should be sent synchronously\r\n             *\r\n             * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n             * to maintain consistency with the xhrSender's contract\r\n             * Note: XDomainRequest does not support custom headers and we are not able to get\r\n             * appId from the backend for the correct correlation.\r\n             */\r\n            function _xdrSender(payload, oncomplete, sync) {\r\n                // It doesn't support custom headers, so no action is taken with current requestHeaders\r\n                var _window = getWindow();\r\n                var xdr = new XDomainRequest();\r\n                var data = payload[_DYN_DATA /* @min:%2edata */];\r\n                xdr.onload = function () {\r\n                    var response = getResponseText(xdr);\r\n                    var onloadFunc = _onCompleteFuncs && _onCompleteFuncs.xdrOnComplete;\r\n                    if (onloadFunc && isFunction(onloadFunc)) {\r\n                        onloadFunc(xdr, oncomplete, payload);\r\n                    }\r\n                    else {\r\n                        _doOnComplete(oncomplete, 200, {}, response);\r\n                    }\r\n                };\r\n                xdr.onerror = function () {\r\n                    _doOnComplete(oncomplete, 400, {}, _isOneDs ? STR_EMPTY : formatErrorMessageXdr(xdr));\r\n                };\r\n                xdr.ontimeout = function () {\r\n                    _doOnComplete(oncomplete, 500, {});\r\n                };\r\n                xdr.onprogress = function () { };\r\n                // XDomainRequest requires the same protocol as the hosting page.\r\n                // If the protocol doesn't match, we can't send the telemetry :(.\r\n                var hostingProtocol = _window && _window.location && _window.location[_DYN_PROTOCOL /* @min:%2eprotocol */] || \"\";\r\n                var endpoint = payload[_DYN_URL_STRING /* @min:%2eurlString */];\r\n                if (!endpoint) {\r\n                    _onNoPayloadUrl(oncomplete);\r\n                    return;\r\n                }\r\n                if (!_isOneDs && endpoint.lastIndexOf(hostingProtocol, 0) !== 0) {\r\n                    var msg = \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\";\r\n                    _throwInternal(_diagLog, 2 /* eLoggingSeverity.WARNING */, 40 /* _eInternalMessageId.TransmissionFailed */, \". \" + msg);\r\n                    _onError(msg, oncomplete);\r\n                    return;\r\n                }\r\n                var endpointUrl = _isOneDs ? endpoint : endpoint[_DYN_REPLACE /* @min:%2ereplace */](/^(https?:)/, \"\");\r\n                xdr.open(STR_POST_METHOD, endpointUrl);\r\n                if (payload[_DYN_TIMEOUT /* @min:%2etimeout */]) {\r\n                    xdr[_DYN_TIMEOUT /* @min:%2etimeout */] = payload[_DYN_TIMEOUT /* @min:%2etimeout */];\r\n                }\r\n                xdr.send(data);\r\n                if (_isOneDs && sync) {\r\n                    _timeoutWrapper && _timeoutWrapper.set(function () {\r\n                        xdr.send(data);\r\n                    }, 0);\r\n                }\r\n                else {\r\n                    xdr.send(data);\r\n                }\r\n            }\r\n            function _initDefaults() {\r\n                _syncFetchPayload = 0;\r\n                _isInitialized = false;\r\n                _enableSendPromise = false;\r\n                _diagLog = null;\r\n                _isOneDs = null;\r\n                _onCompleteFuncs = null;\r\n                _disableCredentials = null;\r\n                _fetchCredentials = null;\r\n                _fallbackInst = null;\r\n                _disableXhr = false;\r\n                _disableBeacon = false;\r\n                _disableBeaconSync = false;\r\n                _disableFetchKeepAlive = false;\r\n                _addNoResponse = false;\r\n                _timeoutWrapper = null;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for SenderPostManager.prototype.initialize.\r\n// Removed Stub for SenderPostManager.prototype.getSyncFetchPayload.\r\n// Removed Stub for SenderPostManager.prototype.SetConfig.\r\n// Removed Stub for SenderPostManager.prototype.getSenderInst.\r\n// Removed Stub for SenderPostManager.prototype.getFallbackInst.\r\n// Removed Stub for SenderPostManager.prototype._doTeardown.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    SenderPostManager.__ieDyn=1;\n\n    return SenderPostManager;\r\n}());\r\nexport { SenderPostManager };\r\n//# sourceMappingURL=SenderPostManager.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const TIMED_OUT_ERROR = 'Timed out';\n\n// These error messages are internal and should not be shown to the user in any way.\nexport const USER_CANCELLATION_ERROR = 'User Cancelled';\nexport const NETWORK_ERROR = 'network error';\n\n// This is the error message that we throw if the login was cancelled for any reason. Extensions\n// calling `getSession` can handle this error to know that the user cancelled the login.\nexport const CANCELLATION_ERROR = 'Cancelled';\n","/*\n * 1DS JS SDK Core, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_DEFAULT_ENDPOINT_URL = \"https://browser.events.data.microsoft.com/OneCollector/1.0/\";\r\nexport var STR_VERSION = \"version\";\r\nexport var STR_PROPERTIES = \"properties\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * 1DS JS SDK Core, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n* AppInsightsCore.ts\r\n* @author Abhilash Panwar (abpanwar) Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { AppInsightsCore as InternalCore, _throwInternal, createDynamicConfig, doPerf, dumpObj, throwError } from \"@microsoft/applicationinsights-core-js\";\r\nimport { objDeepFreeze } from \"@nevware21/ts-utils\";\r\nimport { STR_DEFAULT_ENDPOINT_URL, STR_EMPTY, STR_PROPERTIES, STR_VERSION } from \"./InternalConstants\";\r\nimport { FullVersionString, getTime, isLatency } from \"./Utils\";\r\nimport { _DYN_INDEX_OF, _DYN_INITIALIZE, _DYN_LOGGER, _DYN_POLL_INTERNAL_LOGS, _DYN_TIMINGS } from \"./__DynamicConstants\";\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultConfig = objDeepFreeze({\r\n    endpointUrl: STR_DEFAULT_ENDPOINT_URL,\r\n    propertyStorageOverride: { isVal: _chkPropOverride }\r\n});\r\nfunction _chkPropOverride(propertyStorageOverride) {\r\n    // Validate property storage override\r\n    if (propertyStorageOverride && (!propertyStorageOverride.getProperty || !propertyStorageOverride.setProperty)) {\r\n        throwError(\"Invalid property storage override passed.\");\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar AppInsightsCore = /** @class */ (function (_super) {\r\n    __extends(AppInsightsCore, _super);\r\n    function AppInsightsCore() {\r\n        var _this = _super.call(this) || this;\r\n        dynamicProto(AppInsightsCore, _this, function (_self, _base) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, extensions, logger, notificationManager) {\r\n                doPerf(_self, function () { return \"AppInsightsCore.initialize\"; }, function () {\r\n                    try {\r\n                        _base[_DYN_INITIALIZE /* @min:%2einitialize */](createDynamicConfig(config, defaultConfig, logger || _self[_DYN_LOGGER /* @min:%2elogger */], false).cfg, extensions, logger, notificationManager);\r\n                    }\r\n                    catch (e) {\r\n                        var logger_1 = _self[_DYN_LOGGER /* @min:%2elogger */];\r\n                        var message = dumpObj(e);\r\n                        if (message[_DYN_INDEX_OF /* @min:%2eindexOf */](\"channels\") !== -1) {\r\n                            // Add some additional context to the underlying reported error\r\n                            message += \"\\n - Channels must be provided through config.channels only!\";\r\n                        }\r\n                        _throwInternal(logger_1, 1 /* eLoggingSeverity.CRITICAL */, 514 /* _eExtendedInternalMessageId.FailedToInitializeSDK */, \"SDK Initialization Failed - no telemetry will be sent: \" + message);\r\n                    }\r\n                }, function () { return ({ config: config, extensions: extensions, logger: logger, notificationManager: notificationManager }); });\r\n            };\r\n            _self.track = function (item) {\r\n                doPerf(_self, function () { return \"AppInsightsCore.track\"; }, function () {\r\n                    var telemetryItem = item;\r\n                    if (telemetryItem) {\r\n                        telemetryItem[_DYN_TIMINGS /* @min:%2etimings */] = telemetryItem[_DYN_TIMINGS /* @min:%2etimings */] || {};\r\n                        telemetryItem[_DYN_TIMINGS /* @min:%2etimings */].trackStart = getTime();\r\n                        if (!isLatency(telemetryItem.latency)) {\r\n                            telemetryItem.latency = 1 /* EventLatencyValue.Normal */;\r\n                        }\r\n                        var itemExt = telemetryItem.ext = telemetryItem.ext || {};\r\n                        itemExt.sdk = itemExt.sdk || {};\r\n                        itemExt.sdk.ver = FullVersionString;\r\n                        var baseData = telemetryItem.baseData = telemetryItem.baseData || {};\r\n                        baseData[STR_PROPERTIES /* @min:%2eproperties */] = baseData[STR_PROPERTIES /* @min:%2eproperties */] || {};\r\n                        var itemProperties = baseData[STR_PROPERTIES /* @min:%2eproperties */];\r\n                        itemProperties[STR_VERSION] = itemProperties[STR_VERSION] || _self.pluginVersionString || STR_EMPTY;\r\n                    }\r\n                    _base.track(telemetryItem);\r\n                }, function () { return ({ item: item }); }, !(item.sync));\r\n            };\r\n            _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */] = function (eventName) {\r\n                return _base[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */](eventName || \"InternalLog\");\r\n            };\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for AppInsightsCore.prototype.initialize.\r\n// Removed Stub for AppInsightsCore.prototype.track.\r\n// Removed Stub for AppInsightsCore.prototype.pollInternalLogs.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    AppInsightsCore.__ieDyn=1;\n\n    return AppInsightsCore;\r\n}(InternalCore));\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*\n * 1DS JS SDK Core, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Enums.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n* File containing the enums as constants.\r\n*/\r\nimport { createEnumStyle } from \"@microsoft/applicationinsights-core-js\";\r\n/**\r\n * The ValueKind contains a set of values that specify value kind of the property.\r\n * Either PII (Personal Identifiable Information) or customer content.\r\n */\r\nexport var ValueKind = createEnumStyle({\r\n    NotSet: 0 /* eValueKind.NotSet */,\r\n    Pii_DistinguishedName: 1 /* eValueKind.Pii_DistinguishedName */,\r\n    Pii_GenericData: 2 /* eValueKind.Pii_GenericData */,\r\n    Pii_IPV4Address: 3 /* eValueKind.Pii_IPV4Address */,\r\n    Pii_IPv6Address: 4 /* eValueKind.Pii_IPv6Address */,\r\n    Pii_MailSubject: 5 /* eValueKind.Pii_MailSubject */,\r\n    Pii_PhoneNumber: 6 /* eValueKind.Pii_PhoneNumber */,\r\n    Pii_QueryString: 7 /* eValueKind.Pii_QueryString */,\r\n    Pii_SipAddress: 8 /* eValueKind.Pii_SipAddress */,\r\n    Pii_SmtpAddress: 9 /* eValueKind.Pii_SmtpAddress */,\r\n    Pii_Identity: 10 /* eValueKind.Pii_Identity */,\r\n    Pii_Uri: 11 /* eValueKind.Pii_Uri */,\r\n    Pii_Fqdn: 12 /* eValueKind.Pii_Fqdn */,\r\n    Pii_IPV4AddressLegacy: 13 /* eValueKind.Pii_IPV4AddressLegacy */,\r\n    Pii_IPv6ScrubLastHextets: 14 /* eValueKind.Pii_IPv6ScrubLastHextets */,\r\n    Pii_DropValue: 15 /* eValueKind.Pii_DropValue */,\r\n    CustomerContent_GenericContent: 32 /* eValueKind.CustomerContent_GenericContent */\r\n});\r\n/**\r\n * The EventLatency contains a set of values that specify the latency with which an event is sent.\r\n */\r\nexport var EventLatency = createEnumStyle({\r\n    /**\r\n     * Normal latency.\r\n     */\r\n    Normal: 1 /* EventLatencyValue.Normal */,\r\n    /**\r\n     * Cost deferred latency. At the moment this latency is treated as Normal latency.\r\n     */\r\n    CostDeferred: 2 /* EventLatencyValue.CostDeferred */,\r\n    /**\r\n     * Real time latency.\r\n     */\r\n    RealTime: 3 /* EventLatencyValue.RealTime */,\r\n    /**\r\n     * Bypass normal batching/timing and send as soon as possible, this will still send asynchronously.\r\n     * Added in v3.1.1\r\n     */\r\n    Immediate: 4 /* EventLatencyValue.Immediate */\r\n});\r\n/**\r\n * Enum for property types.\r\n */\r\nexport var EventPropertyType = createEnumStyle({\r\n    Unspecified: 0 /* eEventPropertyType.Unspecified */,\r\n    String: 1 /* eEventPropertyType.String */,\r\n    Int32: 2 /* eEventPropertyType.Int32 */,\r\n    UInt32: 3 /* eEventPropertyType.UInt32 */,\r\n    Int64: 4 /* eEventPropertyType.Int64 */,\r\n    UInt64: 5 /* eEventPropertyType.UInt64 */,\r\n    Double: 6 /* eEventPropertyType.Double */,\r\n    Bool: 7 /* eEventPropertyType.Bool */,\r\n    Guid: 8 /* eEventPropertyType.Guid */,\r\n    DateTime: 9 /* eEventPropertyType.DateTime */\r\n});\r\n/**\r\n * The EventPersistence contains a set of values that specify the event's persistence.\r\n */\r\nexport var EventPersistence = createEnumStyle({\r\n    /**\r\n     * Normal persistence.\r\n     */\r\n    Normal: 1 /* EventPersistenceValue.Normal */,\r\n    /**\r\n     * Critical persistence.\r\n     */\r\n    Critical: 2 /* EventPersistenceValue.Critical */\r\n});\r\nexport var TraceLevel = createEnumStyle({\r\n    NONE: 0 /* eTraceLevel.NONE */,\r\n    ERROR: 1 /* eTraceLevel.ERROR */,\r\n    WARNING: 2 /* eTraceLevel.WARNING */,\r\n    INFORMATION: 3 /* eTraceLevel.INFORMATION */\r\n});\r\n//# sourceMappingURL=Enums.js.map","/*\n * 1DS JS SDK Core, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { isNullOrUndefined, isString, objForEachKey } from \"@microsoft/applicationinsights-core-js\";\r\nimport { arrForEach, arrIncludes, arrIndexOf, getLength } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { getFieldValueType, isValueAssigned, isValueKind } from \"./Utils\";\r\nimport { _DYN_CAN_HANDLE, _DYN_HANDLE_FIELD, _DYN_KIND, _DYN_LENGTH, _DYN_RM_FIELD_SANITIZER, _DYN_RM_SANITIZER, _DYN_VALUE } from \"./__DynamicConstants\";\r\nvar ValueSanitizer = /** @class */ (function () {\r\n    function ValueSanitizer(fieldSanitizerProvider) {\r\n        var _self = this;\r\n        // To aid with performance this is a lookup map to check if the field value sanitizer supports this field\r\n        var _sanitizerMap = {};\r\n        var _sanitizers = [];\r\n        var _fieldSanitizers = [];\r\n        if (fieldSanitizerProvider) {\r\n            _fieldSanitizers.push(fieldSanitizerProvider);\r\n        }\r\n        function _getFieldSanitizer(path, name) {\r\n            var result;\r\n            var fieldLookup = _sanitizerMap[path];\r\n            if (fieldLookup) {\r\n                result = fieldLookup[name];\r\n            }\r\n            if (!result && result !== null) {\r\n                // Null is a valid result indicating that the value sanitizer does not support this field\r\n                if (isString(path) && isString(name)) {\r\n                    if (_fieldSanitizers[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        for (var lp = 0; lp < _fieldSanitizers[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                            if (_fieldSanitizers[lp][_DYN_HANDLE_FIELD /* @min:%2ehandleField */](path, name)) {\r\n                                result = {\r\n                                    canHandle: true,\r\n                                    fieldHandler: _fieldSanitizers[lp]\r\n                                };\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (_sanitizers[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                        // Special use-case where there is no sanitizer to pass on to, so just resolving the field\r\n                        // and returning the resulting value (same as sanitizeProperty())\r\n                        result = {\r\n                            canHandle: true\r\n                        };\r\n                    }\r\n                }\r\n                // We still don't have a handler so lets lookup the providers\r\n                if (!result && result !== null) {\r\n                    // Setting the result to null -- which means we and any contained sanitizers can't handle this field\r\n                    result = null;\r\n                    for (var lp = 0; lp < _sanitizers[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                        if (_sanitizers[lp][_DYN_HANDLE_FIELD /* @min:%2ehandleField */](path, name)) {\r\n                            result = {\r\n                                canHandle: true,\r\n                                handler: _sanitizers[lp],\r\n                                fieldHandler: null\r\n                            };\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (!fieldLookup) {\r\n                    fieldLookup = _sanitizerMap[path] = {};\r\n                }\r\n                fieldLookup[name] = result;\r\n            }\r\n            return result;\r\n        }\r\n        _self.clearCache = function () {\r\n            _sanitizerMap = {};\r\n        };\r\n        _self.addSanitizer = function (newSanitizer) {\r\n            if (newSanitizer) {\r\n                if (!arrIncludes(_sanitizers, newSanitizer)) {\r\n                    _sanitizers.push(newSanitizer);\r\n                }\r\n                // Invalidate any previously mapped fields\r\n                _sanitizerMap = {};\r\n            }\r\n        };\r\n        _self.addFieldSanitizer = function (fieldSanitizer) {\r\n            if (fieldSanitizer) {\r\n                if (!arrIncludes(_fieldSanitizers, fieldSanitizer)) {\r\n                    _fieldSanitizers.push(fieldSanitizer);\r\n                }\r\n                // Invalidate any previously mapped fields\r\n                _sanitizerMap = {};\r\n            }\r\n        };\r\n        _self[_DYN_RM_SANITIZER /* @min:%2ermSanitizer */] = function (theSanitizer) {\r\n            if (theSanitizer) {\r\n                var idx = arrIndexOf(_sanitizers, theSanitizer);\r\n                if (idx !== -1) {\r\n                    _sanitizers.splice(idx, 1);\r\n                    // Invalidate any previously mapped fields\r\n                    _sanitizerMap = {};\r\n                }\r\n                // Try and remove the sanitizer from any chained sanitizer as well\r\n                arrForEach(_sanitizers, function (sanitizer) {\r\n                    sanitizer && sanitizer[_DYN_RM_SANITIZER /* @min:%2ermSanitizer */] && sanitizer[_DYN_RM_SANITIZER /* @min:%2ermSanitizer */](theSanitizer);\r\n                });\r\n            }\r\n        };\r\n        _self[_DYN_RM_FIELD_SANITIZER /* @min:%2ermFieldSanitizer */] = function (theFieldSanitizer) {\r\n            if (theFieldSanitizer) {\r\n                var idx = arrIndexOf(_fieldSanitizers, theFieldSanitizer);\r\n                if (idx !== -1) {\r\n                    _fieldSanitizers.splice(idx, 1);\r\n                    // Invalidate any previously mapped fields\r\n                    _sanitizerMap = {};\r\n                }\r\n                // Try and remove the field sanitizer from any chained sanitizer as well\r\n                arrForEach(_sanitizers, function (sanitizer) {\r\n                    sanitizer && sanitizer[_DYN_RM_FIELD_SANITIZER /* @min:%2ermFieldSanitizer */] && sanitizer[_DYN_RM_FIELD_SANITIZER /* @min:%2ermFieldSanitizer */](theFieldSanitizer);\r\n                });\r\n            }\r\n        };\r\n        _self.isEmpty = function () {\r\n            return (getLength(_sanitizers) + getLength(_fieldSanitizers)) === 0;\r\n        };\r\n        _self[_DYN_HANDLE_FIELD /* @min:%2ehandleField */] = function (path, name) {\r\n            var mapValue = _getFieldSanitizer(path, name);\r\n            return mapValue ? mapValue[_DYN_CAN_HANDLE /* @min:%2ecanHandle */] : false;\r\n        };\r\n        _self[_DYN_VALUE /* @min:%2evalue */] = function (path, name, value, stringifyObjects) {\r\n            var mapValue = _getFieldSanitizer(path, name);\r\n            if (mapValue && mapValue[_DYN_CAN_HANDLE /* @min:%2ecanHandle */]) {\r\n                if (!mapValue || !mapValue[_DYN_CAN_HANDLE /* @min:%2ecanHandle */]) {\r\n                    return null;\r\n                }\r\n                if (mapValue.handler) {\r\n                    // This value sanitizer can't handle this field so pass it only the next one\r\n                    return mapValue.handler[_DYN_VALUE /* @min:%2evalue */](path, name, value, stringifyObjects);\r\n                }\r\n                // Check that property is valid\r\n                if (!isString(name) || isNullOrUndefined(value) || value === STR_EMPTY) {\r\n                    return null;\r\n                }\r\n                var property = null;\r\n                var fieldType = getFieldValueType(value);\r\n                if ((fieldType & 8192 /* FieldValueSanitizerType.EventProperty */) === 8192 /* FieldValueSanitizerType.EventProperty */) {\r\n                    var subType = fieldType & ~8192 /* FieldValueSanitizerType.EventProperty */;\r\n                    property = value;\r\n                    if (!isValueAssigned(property[_DYN_VALUE /* @min:%2evalue */]) ||\r\n                        (subType !== 1 /* FieldValueSanitizerType.String */ &&\r\n                            subType !== 2 /* FieldValueSanitizerType.Number */ &&\r\n                            subType !== 3 /* FieldValueSanitizerType.Boolean */ &&\r\n                            (subType & 4096 /* FieldValueSanitizerType.Array */) !== 4096 /* FieldValueSanitizerType.Array */)) {\r\n                        // Not a supported IEventProperty type to be able to sanitize\r\n                        return null;\r\n                    }\r\n                }\r\n                else if (fieldType === 1 /* FieldValueSanitizerType.String */ ||\r\n                    fieldType === 2 /* FieldValueSanitizerType.Number */ ||\r\n                    fieldType === 3 /* FieldValueSanitizerType.Boolean */ ||\r\n                    (fieldType & 4096 /* FieldValueSanitizerType.Array */) === 4096 /* FieldValueSanitizerType.Array */) {\r\n                    // If the property isn't IEventProperty (and is either string, number, boolean or array), convert it into one.\r\n                    property = _convertToProperty(path, name, value);\r\n                }\r\n                else if (fieldType === 4 /* FieldValueSanitizerType.Object */) {\r\n                    property = _convertToProperty(path, name, !!stringifyObjects ? JSON.stringify(value) : value);\r\n                }\r\n                if (property) {\r\n                    return _handleProperty(mapValue, path, name, fieldType, property, stringifyObjects);\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        _self.property = function (path, name, property, stringifyObjects) {\r\n            var mapValue = _getFieldSanitizer(path, name);\r\n            if (!mapValue || !mapValue[_DYN_CAN_HANDLE /* @min:%2ecanHandle */]) {\r\n                return null;\r\n            }\r\n            // Check that property is valid\r\n            if (!isString(name) || isNullOrUndefined(property) || !isValueAssigned(property[_DYN_VALUE /* @min:%2evalue */])) {\r\n                return null;\r\n            }\r\n            var fieldType = getFieldValueType(property[_DYN_VALUE /* @min:%2evalue */]);\r\n            if (fieldType === 0 /* FieldValueSanitizerType.NotSet */) {\r\n                // Not a supported field that we can sanitize or serialize\r\n                return null;\r\n            }\r\n            return _handleProperty(mapValue, path, name, fieldType, property, stringifyObjects);\r\n        };\r\n        function _handleProperty(mapValue, path, name, fieldType, property, stringifyObjects) {\r\n            if (mapValue.handler) {\r\n                // This value sanitizer can't handle this field so pass it only the next one\r\n                return mapValue.handler.property(path, name, property, stringifyObjects);\r\n            }\r\n            // If either pii or cc is set convert value to string (since only string pii/cc is allowed).\r\n            // If the value is a complex type like an array that can't be converted to string we will drop\r\n            // the property.\r\n            if (!isNullOrUndefined(property[_DYN_KIND /* @min:%2ekind */])) {\r\n                if ((fieldType & 4096 /* FieldValueSanitizerType.Array */) === 4096 /* FieldValueSanitizerType.Array */ || !isValueKind(property[_DYN_KIND /* @min:%2ekind */])) {\r\n                    return null;\r\n                }\r\n                // Convert the value to a string and assign back to the original value\r\n                property[_DYN_VALUE /* @min:%2evalue */] = property[_DYN_VALUE /* @min:%2evalue */].toString();\r\n            }\r\n            return _callFieldSanitizer(mapValue.fieldHandler, path, name, fieldType, property);\r\n        }\r\n        function _convertToProperty(path, name, value) {\r\n            if (isValueAssigned(value)) {\r\n                return { value: value };\r\n            }\r\n            return null;\r\n        }\r\n        function _callFieldSanitizer(fieldProvider, path, name, theType, property) {\r\n            if (property && fieldProvider) {\r\n                var sanitizer = fieldProvider.getSanitizer(path, name, theType, property[_DYN_KIND /* @min:%2ekind */], property.propertyType);\r\n                if (sanitizer) {\r\n                    // This is where we the field will call the handler to \"scrub\" the value. This the primary hook for the ClientHashing Plugin to\r\n                    // be able to apply the hashFunc() / Sha256 conversion of the properties value\r\n                    if (theType === 4 /* FieldValueSanitizerType.Object */) {\r\n                        // Special case of an embedded object (ext.metadata, data.properties)\r\n                        var newValue_1 = {};\r\n                        var propValue = property[_DYN_VALUE /* @min:%2evalue */];\r\n                        objForEachKey(propValue, function (propKey, theValue) {\r\n                            var newPath = path + \".\" + name;\r\n                            if (isValueAssigned(theValue)) {\r\n                                var newProp = _convertToProperty(newPath, propKey, theValue);\r\n                                newProp = _callFieldSanitizer(fieldProvider, newPath, propKey, getFieldValueType(theValue), newProp);\r\n                                if (newProp) {\r\n                                    newValue_1[propKey] = newProp[_DYN_VALUE /* @min:%2evalue */];\r\n                                }\r\n                            }\r\n                        });\r\n                        property[_DYN_VALUE /* @min:%2evalue */] = newValue_1;\r\n                    }\r\n                    else {\r\n                        var details = {\r\n                            path: path,\r\n                            name: name,\r\n                            type: theType,\r\n                            prop: property,\r\n                            sanitizer: _self\r\n                        };\r\n                        property = sanitizer.call(_self, details);\r\n                    }\r\n                }\r\n            }\r\n            return property;\r\n        }\r\n    }\r\n    ValueSanitizer.getFieldType = getFieldValueType;\r\n    return ValueSanitizer;\r\n}());\r\nexport { ValueSanitizer };\r\n//# sourceMappingURL=ValueSanitizer.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\"use strict\";\r\nexport var MinChannelPriorty = 100;\r\n//# sourceMappingURL=IChannelControls.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n//  @skip-file-minify\r\nimport { createEnumStyle } from \"../JavaScriptSDK.Enums/EnumHelperFuncs\";\r\nexport var LoggingSeverity = createEnumStyle({\r\n    DISABLED: 0 /* eLoggingSeverity.DISABLED */,\r\n    CRITICAL: 1 /* eLoggingSeverity.CRITICAL */,\r\n    WARNING: 2 /* eLoggingSeverity.WARNING */,\r\n    DEBUG: 3 /* eLoggingSeverity.DEBUG */\r\n});\r\n//# sourceMappingURL=LoggingEnums.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isArray, isDefined, isNullOrUndefined, isObject, isPlainObject, isUndefined, objForEachKey, objHasOwn } from \"@nevware21/ts-utils\";\r\nimport { _DYN_BLK_VAL, _DYN_LENGTH, _DYN_RD_ONLY } from \"../__DynamicConstants\";\r\nfunction _isConfigDefaults(value) {\r\n    return (value && isObject(value) && (value.isVal || value.fb || objHasOwn(value, \"v\") || objHasOwn(value, \"mrg\") || objHasOwn(value, \"ref\") || value.set));\r\n}\r\nfunction _getDefault(dynamicHandler, theConfig, cfgDefaults) {\r\n    var defValue;\r\n    var isDefaultValid = cfgDefaults.dfVal || isDefined;\r\n    // There is a fallback config key so try and grab that first\r\n    if (theConfig && cfgDefaults.fb) {\r\n        var fallbacks = cfgDefaults.fb;\r\n        if (!isArray(fallbacks)) {\r\n            fallbacks = [fallbacks];\r\n        }\r\n        for (var lp = 0; lp < fallbacks[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            var fallback = fallbacks[lp];\r\n            var fbValue = theConfig[fallback];\r\n            if (isDefaultValid(fbValue)) {\r\n                defValue = fbValue;\r\n            }\r\n            else if (dynamicHandler) {\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                fbValue = dynamicHandler.cfg[fallback];\r\n                if (isDefaultValid(fbValue)) {\r\n                    defValue = fbValue;\r\n                }\r\n                // Needed to ensure that the fallback value (and potentially) new field is also dynamic even if null/undefined\r\n                dynamicHandler.set(dynamicHandler.cfg, asString(fallback), fbValue);\r\n            }\r\n            if (isDefaultValid(defValue)) {\r\n                // We have a valid default so break out of the look\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    // If the value is still not defined and we have a default value then use that\r\n    if (!isDefaultValid(defValue) && isDefaultValid(cfgDefaults.v)) {\r\n        defValue = cfgDefaults.v;\r\n    }\r\n    return defValue;\r\n}\r\n/**\r\n * Recursively resolve the default value\r\n * @param dynamicHandler\r\n * @param theConfig\r\n * @param cfgDefaults\r\n * @returns\r\n */\r\nfunction _resolveDefaultValue(dynamicHandler, theConfig, cfgDefaults) {\r\n    var theValue = cfgDefaults;\r\n    if (cfgDefaults && _isConfigDefaults(cfgDefaults)) {\r\n        theValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    if (theValue) {\r\n        if (_isConfigDefaults(theValue)) {\r\n            theValue = _resolveDefaultValue(dynamicHandler, theConfig, theValue);\r\n        }\r\n        var newValue_1;\r\n        if (isArray(theValue)) {\r\n            newValue_1 = [];\r\n            newValue_1[_DYN_LENGTH /* @min:%2elength */] = theValue[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(theValue)) {\r\n            newValue_1 = {};\r\n        }\r\n        if (newValue_1) {\r\n            objForEachKey(theValue, function (key, value) {\r\n                if (value && _isConfigDefaults(value)) {\r\n                    value = _resolveDefaultValue(dynamicHandler, theConfig, value);\r\n                }\r\n                newValue_1[key] = value;\r\n            });\r\n            theValue = newValue_1;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Applies the default value on the config property and makes sure that it's dynamic\r\n * @param theConfig\r\n * @param name\r\n * @param defaultValue\r\n */\r\nexport function _applyDefaultValue(dynamicHandler, theConfig, name, defaultValue) {\r\n    // Resolve the initial config value from the provided value or use the defined default\r\n    var isValid;\r\n    var setFn;\r\n    var defValue;\r\n    var cfgDefaults = defaultValue;\r\n    var mergeDf;\r\n    var reference;\r\n    var readOnly;\r\n    var blkDynamicValue;\r\n    if (_isConfigDefaults(cfgDefaults)) {\r\n        // looks like a IConfigDefault\r\n        isValid = cfgDefaults.isVal;\r\n        setFn = cfgDefaults.set;\r\n        readOnly = cfgDefaults[_DYN_RD_ONLY /* @min:%2erdOnly */];\r\n        blkDynamicValue = cfgDefaults[_DYN_BLK_VAL /* @min:%2eblkVal */];\r\n        mergeDf = cfgDefaults.mrg;\r\n        reference = cfgDefaults.ref;\r\n        if (!reference && isUndefined(reference)) {\r\n            reference = !!mergeDf;\r\n        }\r\n        defValue = _getDefault(dynamicHandler, theConfig, cfgDefaults);\r\n    }\r\n    else {\r\n        defValue = defaultValue;\r\n    }\r\n    if (blkDynamicValue) {\r\n        // Mark the property so that any value assigned will be blocked from conversion, we need to do this\r\n        // before assigning or fetching the value to ensure it's not converted\r\n        dynamicHandler[_DYN_BLK_VAL /* @min:%2eblkVal */](theConfig, name);\r\n    }\r\n    // Set the value to the default value;\r\n    var theValue;\r\n    var usingDefault = true;\r\n    var cfgValue = theConfig[name];\r\n    // try and get and user provided values\r\n    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n        // Use the defined theConfig[name] value\r\n        theValue = cfgValue;\r\n        usingDefault = false;\r\n        // The values are different and we have a special default value check, which is used to\r\n        // override config values like empty strings to continue using the default\r\n        if (isValid && theValue !== defValue && !isValid(theValue)) {\r\n            theValue = defValue;\r\n            usingDefault = true;\r\n        }\r\n        if (setFn) {\r\n            theValue = setFn(theValue, defValue, theConfig);\r\n            usingDefault = theValue === defValue;\r\n        }\r\n    }\r\n    if (!usingDefault) {\r\n        if (isPlainObject(theValue) || isArray(defValue)) {\r\n            // we are using the user supplied value and it's an object\r\n            if (mergeDf && defValue && (isPlainObject(defValue) || isArray(defValue))) {\r\n                // Resolve/apply the defaults\r\n                objForEachKey(defValue, function (dfName, dfValue) {\r\n                    // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                    _applyDefaultValue(dynamicHandler, theValue, dfName, dfValue);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    else if (defValue) {\r\n        // Just resolve the default\r\n        theValue = _resolveDefaultValue(dynamicHandler, theConfig, defValue);\r\n    }\r\n    else {\r\n        theValue = defValue;\r\n    }\r\n    // if (theValue && usingDefault && (isPlainObject(theValue) || isArray(theValue))) {\r\n    //     theValue = _cfgDeepCopy(theValue);\r\n    // }\r\n    // Needed to ensure that the (potentially) new field is dynamic even if null/undefined\r\n    dynamicHandler.set(theConfig, name, theValue);\r\n    if (reference) {\r\n        dynamicHandler.ref(theConfig, name);\r\n    }\r\n    if (readOnly) {\r\n        dynamicHandler[_DYN_RD_ONLY /* @min:%2erdOnly */](theConfig, name);\r\n    }\r\n}\r\n//# sourceMappingURL=ConfigDefaults.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_ITEMS_RECEIVED, _DYN_LENGTH, _DYN_NAME } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getJSON } from \"./EnvUtils\";\r\n/**\r\n * Parses the response from the backend.\r\n * @param response - XMLHttpRequest or XDomainRequest response\r\n */\r\nexport function parseResponse(response, diagLog) {\r\n    try {\r\n        if (response && response !== \"\") {\r\n            var result = getJSON().parse(response);\r\n            if (result && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] && result[_DYN_ITEMS_RECEIVED /* @min:%2eitemsReceived */] >= result.itemsAccepted &&\r\n                result.itemsReceived - result.itemsAccepted === result.errors[_DYN_LENGTH /* @min:%2elength */]) {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        _throwInternal(diagLog, 1 /* eLoggingSeverity.CRITICAL */, 43 /* _eInternalMessageId.InvalidBackendResponse */, \"Cannot parse the response. \" + (e[_DYN_NAME /* @min:%2ename */] || dumpObj(e)), {\r\n            response: response\r\n        });\r\n    }\r\n    return null;\r\n}\r\n//# sourceMappingURL=ResponseHelpers.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport TelemetryReporter from '@vscode/extension-telemetry';\nimport { Keychain } from './common/keychain';\nimport { GitHubServer, IGitHubServer } from './githubServer';\nimport { PromiseAdapter, arrayEquals, promiseFromEvent } from './common/utils';\nimport { ExperimentationTelemetry } from './common/experimentationService';\nimport { Log } from './common/logger';\nimport { crypto } from './node/crypto';\nimport { TIMED_OUT_ERROR, USER_CANCELLATION_ERROR } from './common/errors';\nimport { GitHubSocialSignInProvider, isSocialSignInProvider } from './flows';\n\ninterface SessionData {\n\tid: string;\n\taccount?: {\n\t\tlabel?: string;\n\t\tdisplayName?: string;\n\t\t// Unfortunately, for some time the id was a number, so we need to support both.\n\t\t// This can be removed once we are confident that all users have migrated to the new id.\n\t\tid: string | number;\n\t};\n\tscopes: string[];\n\taccessToken: string;\n}\n\nexport enum AuthProviderType {\n\tgithub = 'github',\n\tgithubEnterprise = 'github-enterprise'\n}\n\ninterface GitHubAuthenticationProviderOptions extends vscode.AuthenticationProviderSessionOptions {\n\t/**\n\t * This is specific to GitHub and is used to determine which social sign-in provider to use.\n\t * If not provided, the default (GitHub) is used which shows all options.\n\t *\n\t * Example: If you specify Google, then the sign-in flow will skip the initial page that asks you\n\t * to choose how you want to sign in and will directly take you to the Google sign-in page.\n\t *\n\t * This allows us to show \"Continue with Google\" buttons in the product, rather than always\n\t * leaving it up to the user to choose the social sign-in provider on the sign-in page.\n\t */\n\treadonly provider?: GitHubSocialSignInProvider;\n\treadonly extraAuthorizeParameters?: Record<string, string>;\n}\n\nfunction isGitHubAuthenticationProviderOptions(object: any): object is GitHubAuthenticationProviderOptions {\n\tif (!object || typeof object !== 'object') {\n\t\tthrow new Error('Options are not an object');\n\t}\n\tif (object.provider !== undefined && !isSocialSignInProvider(object.provider)) {\n\t\tthrow new Error(`Provider is invalid: ${object.provider}`);\n\t}\n\tif (object.extraAuthorizeParameters !== undefined) {\n\t\tif (!object.extraAuthorizeParameters || typeof object.extraAuthorizeParameters !== 'object') {\n\t\t\tthrow new Error('Extra parameters must be a record of string keys and string values.');\n\t\t}\n\t\tfor (const [key, value] of Object.entries(object.extraAuthorizeParameters)) {\n\t\t\tif (typeof key !== 'string' || typeof value !== 'string') {\n\t\t\t\tthrow new Error('Extra parameters must be a record of string keys and string values.');\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nexport class UriEventHandler extends vscode.EventEmitter<vscode.Uri> implements vscode.UriHandler {\n\tprivate readonly _pendingNonces = new Map<string, string[]>();\n\tprivate readonly _codeExchangePromises = new Map<string, { promise: Promise<string>; cancel: vscode.EventEmitter<void> }>();\n\n\tpublic handleUri(uri: vscode.Uri) {\n\t\tthis.fire(uri);\n\t}\n\n\tpublic async waitForCode(logger: Log, scopes: string, nonce: string, token: vscode.CancellationToken) {\n\t\tconst existingNonces = this._pendingNonces.get(scopes) || [];\n\t\tthis._pendingNonces.set(scopes, [...existingNonces, nonce]);\n\n\t\tlet codeExchangePromise = this._codeExchangePromises.get(scopes);\n\t\tif (!codeExchangePromise) {\n\t\t\tcodeExchangePromise = promiseFromEvent(this.event, this.handleEvent(logger, scopes));\n\t\t\tthis._codeExchangePromises.set(scopes, codeExchangePromise);\n\t\t}\n\n\t\ttry {\n\t\t\treturn await Promise.race([\n\t\t\t\tcodeExchangePromise.promise,\n\t\t\t\tnew Promise<string>((_, reject) => setTimeout(() => reject(TIMED_OUT_ERROR), 300_000)), // 5min timeout\n\t\t\t\tpromiseFromEvent<void, string>(token.onCancellationRequested, (_, __, reject) => { reject(USER_CANCELLATION_ERROR); }).promise\n\t\t\t]);\n\t\t} finally {\n\t\t\tthis._pendingNonces.delete(scopes);\n\t\t\tcodeExchangePromise?.cancel.fire();\n\t\t\tthis._codeExchangePromises.delete(scopes);\n\t\t}\n\t}\n\n\tprivate handleEvent: (logger: Log, scopes: string) => PromiseAdapter<vscode.Uri, string> =\n\t\t(logger: Log, scopes) => (uri, resolve, reject) => {\n\t\t\tconst query = new URLSearchParams(uri.query);\n\t\t\tconst code = query.get('code');\n\t\t\tconst nonce = query.get('nonce');\n\t\t\tif (!code) {\n\t\t\t\treject(new Error('No code'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!nonce) {\n\t\t\t\treject(new Error('No nonce'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst acceptedNonces = this._pendingNonces.get(scopes) || [];\n\t\t\tif (!acceptedNonces.includes(nonce)) {\n\t\t\t\t// A common scenario of this happening is if you:\n\t\t\t\t// 1. Trigger a sign in with one set of scopes\n\t\t\t\t// 2. Before finishing 1, you trigger a sign in with a different set of scopes\n\t\t\t\t// In this scenario we should just return and wait for the next UriHandler event\n\t\t\t\t// to run as we are probably still waiting on the user to hit 'Continue'\n\t\t\t\tlogger.info('Nonce not found in accepted nonces. Skipping this execution...');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve(code);\n\t\t};\n}\n\nexport class GitHubAuthenticationProvider implements vscode.AuthenticationProvider, vscode.Disposable {\n\tprivate readonly _sessionChangeEmitter = new vscode.EventEmitter<vscode.AuthenticationProviderAuthenticationSessionsChangeEvent>();\n\tprivate readonly _logger: Log;\n\tprivate readonly _githubServer: IGitHubServer;\n\tprivate readonly _telemetryReporter: ExperimentationTelemetry;\n\tprivate readonly _keychain: Keychain;\n\tprivate readonly _accountsSeen = new Set<string>();\n\tprivate readonly _disposable: vscode.Disposable | undefined;\n\n\tprivate _sessionsPromise: Promise<vscode.AuthenticationSession[]>;\n\n\tconstructor(\n\t\tprivate readonly context: vscode.ExtensionContext,\n\t\turiHandler: UriEventHandler,\n\t\tghesUri?: vscode.Uri\n\t) {\n\t\tconst { aiKey } = context.extension.packageJSON as { name: string; version: string; aiKey: string };\n\t\tthis._telemetryReporter = new ExperimentationTelemetry(context, new TelemetryReporter(aiKey));\n\n\t\tconst type = ghesUri ? AuthProviderType.githubEnterprise : AuthProviderType.github;\n\n\t\tthis._logger = new Log(type);\n\n\t\tthis._keychain = new Keychain(\n\t\t\tthis.context,\n\t\t\ttype === AuthProviderType.github\n\t\t\t\t? `${type}.auth`\n\t\t\t\t: `${ghesUri?.authority}${ghesUri?.path}.ghes.auth`,\n\t\t\tthis._logger);\n\n\t\tthis._githubServer = new GitHubServer(\n\t\t\tthis._logger,\n\t\t\tthis._telemetryReporter,\n\t\t\turiHandler,\n\t\t\tcontext.extension.extensionKind,\n\t\t\tghesUri);\n\n\t\t// Contains the current state of the sessions we have available.\n\t\tthis._sessionsPromise = this.readSessions().then((sessions) => {\n\t\t\t// fire telemetry after a second to allow the workbench to focus on loading\n\t\t\tsetTimeout(() => sessions.forEach(s => this.afterSessionLoad(s)), 1000);\n\t\t\treturn sessions;\n\t\t});\n\n\t\tconst supportedAuthorizationServers = ghesUri\n\t\t\t? [vscode.Uri.joinPath(ghesUri, '/login/oauth')]\n\t\t\t: [vscode.Uri.parse('https://github.com/login/oauth')];\n\t\tthis._disposable = vscode.Disposable.from(\n\t\t\tthis._telemetryReporter,\n\t\t\tvscode.authentication.registerAuthenticationProvider(\n\t\t\t\ttype,\n\t\t\t\tthis._githubServer.friendlyName,\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\tsupportsMultipleAccounts: true,\n\t\t\t\t\tsupportedAuthorizationServers\n\t\t\t\t}\n\t\t\t),\n\t\t\tthis.context.secrets.onDidChange(() => this.checkForUpdates())\n\t\t);\n\t}\n\n\tdispose() {\n\t\tthis._disposable?.dispose();\n\t}\n\n\tget onDidChangeSessions() {\n\t\treturn this._sessionChangeEmitter.event;\n\t}\n\n\tasync getSessions(scopes: string[] | undefined, options?: vscode.AuthenticationProviderSessionOptions): Promise<vscode.AuthenticationSession[]> {\n\t\t// For GitHub scope list, order doesn't matter so we immediately sort the scopes\n\t\tconst sortedScopes = scopes?.sort() || [];\n\t\tthis._logger.info(`Getting sessions for ${sortedScopes.length ? sortedScopes.join(',') : 'all scopes'}...`);\n\t\tconst sessions = await this._sessionsPromise;\n\t\tconst accountFilteredSessions = options?.account\n\t\t\t? sessions.filter(session => session.account.label === options.account?.label)\n\t\t\t: sessions;\n\t\tconst finalSessions = sortedScopes.length\n\t\t\t? accountFilteredSessions.filter(session => arrayEquals([...session.scopes].sort(), sortedScopes))\n\t\t\t: accountFilteredSessions;\n\n\t\tthis._logger.info(`Got ${finalSessions.length} sessions for ${sortedScopes?.join(',') ?? 'all scopes'}...`);\n\t\treturn finalSessions;\n\t}\n\n\tprivate async afterSessionLoad(session: vscode.AuthenticationSession): Promise<void> {\n\t\t// We only want to fire a telemetry if we haven't seen this account yet in this session.\n\t\tif (!this._accountsSeen.has(session.account.id)) {\n\t\t\tthis._accountsSeen.add(session.account.id);\n\t\t\tthis._githubServer.sendAdditionalTelemetryInfo(session);\n\t\t}\n\t}\n\n\tprivate async checkForUpdates() {\n\t\tconst previousSessions = await this._sessionsPromise;\n\t\tthis._sessionsPromise = this.readSessions();\n\t\tconst storedSessions = await this._sessionsPromise;\n\n\t\tconst added: vscode.AuthenticationSession[] = [];\n\t\tconst removed: vscode.AuthenticationSession[] = [];\n\n\t\tstoredSessions.forEach(session => {\n\t\t\tconst matchesExisting = previousSessions.some(s => s.id === session.id);\n\t\t\t// Another window added a session to the keychain, add it to our state as well\n\t\t\tif (!matchesExisting) {\n\t\t\t\tthis._logger.info('Adding session found in keychain');\n\t\t\t\tadded.push(session);\n\t\t\t}\n\t\t});\n\n\t\tpreviousSessions.forEach(session => {\n\t\t\tconst matchesExisting = storedSessions.some(s => s.id === session.id);\n\t\t\t// Another window has logged out, remove from our state\n\t\t\tif (!matchesExisting) {\n\t\t\t\tthis._logger.info('Removing session no longer found in keychain');\n\t\t\t\tremoved.push(session);\n\t\t\t}\n\t\t});\n\n\t\tif (added.length || removed.length) {\n\t\t\tthis._sessionChangeEmitter.fire({ added, removed, changed: [] });\n\t\t}\n\t}\n\n\tprivate async readSessions(): Promise<vscode.AuthenticationSession[]> {\n\t\tlet sessionData: SessionData[];\n\t\ttry {\n\t\t\tthis._logger.info('Reading sessions from keychain...');\n\t\t\tconst storedSessions = await this._keychain.getToken();\n\t\t\tif (!storedSessions) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tthis._logger.info('Got stored sessions!');\n\n\t\t\ttry {\n\t\t\t\tsessionData = JSON.parse(storedSessions);\n\t\t\t} catch (e) {\n\t\t\t\tawait this._keychain.deleteToken();\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._logger.error(`Error reading token: ${e}`);\n\t\t\treturn [];\n\t\t}\n\n\t\t// Unfortunately, we were using a number secretly for the account id for some time... this is due to a bad `any`.\n\t\t// AuthenticationSession's account id is a string, so we need to detect when there is a number accountId and re-store\n\t\t// the sessions to migrate away from the bad number usage.\n\t\t// TODO@TylerLeonhardt: Remove this after we are confident that all users have migrated to the new id.\n\t\tlet seenNumberAccountId: boolean = false;\n\t\t// TODO: eventually remove this Set because we should only have one session per set of scopes.\n\t\tconst scopesSeen = new Set<string>();\n\t\tconst sessionPromises = sessionData.map(async (session: SessionData): Promise<vscode.AuthenticationSession | undefined> => {\n\t\t\t// For GitHub scope list, order doesn't matter so we immediately sort the scopes\n\t\t\tconst scopesStr = [...session.scopes].sort().join(' ');\n\t\t\tlet userInfo: { id: string; accountName: string } | undefined;\n\t\t\tif (!session.account) {\n\t\t\t\ttry {\n\t\t\t\t\tuserInfo = await this._githubServer.getUserInfo(session.accessToken);\n\t\t\t\t\tthis._logger.info(`Verified session with the following scopes: ${scopesStr}`);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Remove sessions that return unauthorized response\n\t\t\t\t\tif (e.message === 'Unauthorized') {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._logger.trace(`Read the following session from the keychain with the following scopes: ${scopesStr}`);\n\t\t\tscopesSeen.add(scopesStr);\n\n\t\t\tlet accountId: string;\n\t\t\tif (session.account?.id) {\n\t\t\t\tif (typeof session.account.id === 'number') {\n\t\t\t\t\tseenNumberAccountId = true;\n\t\t\t\t}\n\t\t\t\taccountId = `${session.account.id}`;\n\t\t\t} else {\n\t\t\t\taccountId = userInfo?.id ?? '<unknown>';\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tid: session.id,\n\t\t\t\taccount: {\n\t\t\t\t\tlabel: session.account\n\t\t\t\t\t\t? session.account.label ?? session.account.displayName ?? '<unknown>'\n\t\t\t\t\t\t: userInfo?.accountName ?? '<unknown>',\n\t\t\t\t\tid: accountId\n\t\t\t\t},\n\t\t\t\t// we set this to session.scopes to maintain the original order of the scopes requested\n\t\t\t\t// by the extension that called getSession()\n\t\t\t\tscopes: session.scopes,\n\t\t\t\taccessToken: session.accessToken\n\t\t\t};\n\t\t});\n\n\t\tconst verifiedSessions = (await Promise.allSettled(sessionPromises))\n\t\t\t.filter(p => p.status === 'fulfilled')\n\t\t\t.map(p => (p as PromiseFulfilledResult<vscode.AuthenticationSession | undefined>).value)\n\t\t\t.filter(<T>(p?: T): p is T => Boolean(p));\n\n\t\tthis._logger.info(`Got ${verifiedSessions.length} verified sessions.`);\n\t\tif (seenNumberAccountId || verifiedSessions.length !== sessionData.length) {\n\t\t\tawait this.storeSessions(verifiedSessions);\n\t\t}\n\n\t\treturn verifiedSessions;\n\t}\n\n\tprivate async storeSessions(sessions: vscode.AuthenticationSession[]): Promise<void> {\n\t\tthis._logger.info(`Storing ${sessions.length} sessions...`);\n\t\tthis._sessionsPromise = Promise.resolve(sessions);\n\t\tawait this._keychain.setToken(JSON.stringify(sessions));\n\t\tthis._logger.info(`Stored ${sessions.length} sessions!`);\n\t}\n\n\tpublic async createSession(scopes: string[], options?: GitHubAuthenticationProviderOptions): Promise<vscode.AuthenticationSession> {\n\t\ttry {\n\t\t\t// For GitHub scope list, order doesn't matter so we use a sorted scope to determine\n\t\t\t// if we've got a session already.\n\t\t\tconst sortedScopes = [...scopes].sort();\n\n\t\t\t/* __GDPR__\n\t\t\t\t\"login\" : {\n\t\t\t\t\t\"owner\": \"TylerLeonhardt\",\n\t\t\t\t\t\"comment\": \"Used to determine how much usage the GitHub Auth Provider gets.\",\n\t\t\t\t\t\"scopes\": { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\", \"comment\": \"Used to determine what scope combinations are being requested.\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis._telemetryReporter?.sendTelemetryEvent('login', {\n\t\t\t\tscopes: JSON.stringify(scopes),\n\t\t\t});\n\n\t\t\tif (options && !isGitHubAuthenticationProviderOptions(options)) {\n\t\t\t\tthrow new Error('Invalid options');\n\t\t\t}\n\t\t\tconst sessions = await this._sessionsPromise;\n\t\t\tconst loginWith = options?.account?.label;\n\t\t\tconst signInProvider = options?.provider;\n\t\t\tthis._logger.info(`Logging in with${signInProvider ? ` ${signInProvider}, ` : ''} '${loginWith ? loginWith : 'any'}' account...`);\n\t\t\tconst scopeString = sortedScopes.join(' ');\n\t\t\tconst token = await this._githubServer.login(scopeString, signInProvider, options?.extraAuthorizeParameters, loginWith);\n\t\t\tconst session = await this.tokenToSession(token, scopes);\n\t\t\tthis.afterSessionLoad(session);\n\n\t\t\tconst sessionIndex = sessions.findIndex(s => s.account.id === session.account.id && arrayEquals([...s.scopes].sort(), sortedScopes));\n\t\t\tconst removed = new Array<vscode.AuthenticationSession>();\n\t\t\tif (sessionIndex > -1) {\n\t\t\t\tremoved.push(...sessions.splice(sessionIndex, 1, session));\n\t\t\t} else {\n\t\t\t\tsessions.push(session);\n\t\t\t}\n\t\t\tawait this.storeSessions(sessions);\n\n\t\t\tthis._sessionChangeEmitter.fire({ added: [session], removed, changed: [] });\n\n\t\t\tthis._logger.info('Login success!');\n\n\t\t\treturn session;\n\t\t} catch (e) {\n\t\t\t// If login was cancelled, do not notify user.\n\t\t\tif (e === 'Cancelled' || e.message === 'Cancelled') {\n\t\t\t\t/* __GDPR__\n\t\t\t\t\t\"loginCancelled\" : { \"owner\": \"TylerLeonhardt\", \"comment\": \"Used to determine how often users cancel the login flow.\" }\n\t\t\t\t*/\n\t\t\t\tthis._telemetryReporter?.sendTelemetryEvent('loginCancelled');\n\t\t\t\tthrow e;\n\t\t\t}\n\n\t\t\t/* __GDPR__\n\t\t\t\t\"loginFailed\" : { \"owner\": \"TylerLeonhardt\", \"comment\": \"Used to determine how often users run into an error login flow.\" }\n\t\t\t*/\n\t\t\tthis._telemetryReporter?.sendTelemetryEvent('loginFailed');\n\n\t\t\tvscode.window.showErrorMessage(vscode.l10n.t('Sign in failed: {0}', `${e}`));\n\t\t\tthis._logger.error(e);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tprivate async tokenToSession(token: string, scopes: string[]): Promise<vscode.AuthenticationSession> {\n\t\tconst userInfo = await this._githubServer.getUserInfo(token);\n\t\treturn {\n\t\t\tid: crypto.getRandomValues(new Uint32Array(2)).reduce((prev, curr) => prev += curr.toString(16), ''),\n\t\t\taccessToken: token,\n\t\t\taccount: { label: userInfo.accountName, id: userInfo.id },\n\t\t\tscopes\n\t\t};\n\t}\n\n\tpublic async removeSession(id: string) {\n\t\ttry {\n\t\t\t/* __GDPR__\n\t\t\t\t\"logout\" : { \"owner\": \"TylerLeonhardt\", \"comment\": \"Used to determine how often users log out of an account.\" }\n\t\t\t*/\n\t\t\tthis._telemetryReporter?.sendTelemetryEvent('logout');\n\n\t\t\tthis._logger.info(`Logging out of ${id}`);\n\n\t\t\tconst sessions = await this._sessionsPromise;\n\t\t\tconst sessionIndex = sessions.findIndex(session => session.id === id);\n\t\t\tif (sessionIndex > -1) {\n\t\t\t\tconst session = sessions[sessionIndex];\n\t\t\t\tsessions.splice(sessionIndex, 1);\n\n\t\t\t\tawait this.storeSessions(sessions);\n\t\t\t\tawait this._githubServer.logout(session);\n\n\t\t\t\tthis._sessionChangeEmitter.fire({ added: [], removed: [session], changed: [] });\n\t\t\t} else {\n\t\t\t\tthis._logger.error('Session not found');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"logoutFailed\" : { \"owner\": \"TylerLeonhardt\", \"comment\": \"Used to determine how often logging out of an account fails.\" }\n\t\t\t*/\n\t\t\tthis._telemetryReporter?.sendTelemetryEvent('logoutFailed');\n\n\t\t\tvscode.window.showErrorMessage(vscode.l10n.t('Sign out failed: {0}', `${e}`));\n\t\t\tthis._logger.error(e);\n\t\t\tthrow e;\n\t\t}\n\t}\n}\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createAllPromise, createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrForEach, arrIndexOf, objDefine, safe, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_DATA, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SPLICE, _DYN_UNLOAD, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_OFFLINE_DROP, STR_OFFLINE_SENT, STR_OFFLINE_STORE, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar defaultValues = {\r\n    perfEvtsSendAll: false\r\n};\r\nfunction _runScheduledListeners(asyncNotifications) {\r\n    asyncNotifications.h = null;\r\n    var callbacks = asyncNotifications.cb;\r\n    asyncNotifications.cb = [];\r\n    arrForEach(callbacks, function (cb) {\r\n        // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n        safe(cb.fn, [cb.arg]);\r\n    });\r\n}\r\n// This function is used to combine the logic of running the listeners and handling the async notifications so that they don't\r\n// create multiple timers if there are multiple async listeners.\r\nfunction _runListeners(listeners, name, asyncNotifications, callback) {\r\n    arrForEach(listeners, function (listener) {\r\n        if (listener && listener[name]) {\r\n            if (asyncNotifications) {\r\n                // Schedule the callback to be called after the current call stack has cleared.\r\n                asyncNotifications.cb[_DYN_PUSH /* @min:%2epush */]({\r\n                    fn: callback,\r\n                    arg: listener\r\n                });\r\n                asyncNotifications.h = asyncNotifications.h || scheduleTimeout(_runScheduledListeners, 0, asyncNotifications);\r\n            }\r\n            else {\r\n                // Run the listener in a try-catch to ensure that a single listener failing doesn't prevent the others from running\r\n                safe(callback, [listener]);\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * Class to manage sending notifications to all the listeners.\r\n */\r\nvar NotificationManager = /** @class */ (function () {\r\n    function NotificationManager(config) {\r\n        this.listeners = [];\r\n        var perfEvtsSendAll;\r\n        var unloadHandler;\r\n        var _listeners = [];\r\n        var _asyncNotifications = {\r\n            h: null,\r\n            cb: []\r\n        };\r\n        var cfgHandler = createDynamicConfig(config, defaultValues);\r\n        unloadHandler = cfgHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n            perfEvtsSendAll = !!details.cfg.perfEvtsSendAll;\r\n        });\r\n        dynamicProto(NotificationManager, this, function (_self) {\r\n            objDefine(_self, \"listeners\", {\r\n                g: function () { return _listeners; }\r\n            });\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _listeners[_DYN_PUSH /* @min:%2epush */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - AWTNotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                var index = arrIndexOf(_listeners, listener);\r\n                while (index > -1) {\r\n                    _listeners[_DYN_SPLICE /* @min:%2esplice */](index, 1);\r\n                    index = arrIndexOf(_listeners, listener);\r\n                }\r\n            };\r\n            /**\r\n             * Notification for events sent.\r\n             * @param events - The array of events that have been sent.\r\n             */\r\n            _self[STR_EVENTS_SENT /* @min:%2eeventsSent */] = function (events) {\r\n                _runListeners(_listeners, STR_EVENTS_SENT, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_SENT /* @min:%2eeventsSent */](events);\r\n                });\r\n            };\r\n            /**\r\n             * Notification for events being discarded.\r\n             * @param events - The array of events that have been discarded by the SDK.\r\n             * @param reason - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n             * constant should be used to check the different values.\r\n             */\r\n            _self[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */] = function (events, reason) {\r\n                _runListeners(_listeners, STR_EVENTS_DISCARDED, _asyncNotifications, function (listener) {\r\n                    listener[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */](events, reason);\r\n                });\r\n            };\r\n            /**\r\n             * [Optional] A function called when the events have been requested to be sent to the sever.\r\n             * @param sendReason - The reason why the event batch is being sent.\r\n             * @param isAsync - A flag which identifies whether the requests are being sent in an async or sync manner.\r\n             */\r\n            _self[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */] = function (sendReason, isAsync) {\r\n                _runListeners(_listeners, STR_EVENTS_SEND_REQUEST, isAsync ? _asyncNotifications : null, function (listener) {\r\n                    listener[STR_EVENTS_SEND_REQUEST /* @min:%2eeventsSendRequest */](sendReason, isAsync);\r\n                });\r\n            };\r\n            _self[STR_PERF_EVENT /* @min:%2eperfEvent */] = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    // Send all events or only parent events\r\n                    if (perfEvtsSendAll || !perfEvent[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */]()) {\r\n                        _runListeners(_listeners, STR_PERF_EVENT, null, function (listener) {\r\n                            if (perfEvent[_DYN_IS_ASYNC /* @min:%2eisAsync */]) {\r\n                                scheduleTimeout(function () { return listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent); }, 0);\r\n                            }\r\n                            else {\r\n                                listener[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */] = function (events) {\r\n                if (events && events[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_STORE, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_STORE /* @min:%2eofflineEventsStored */](events);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */] = function (batch) {\r\n                if (batch && batch[_DYN_DATA /* @min:%2edata */]) {\r\n                    _runListeners(_listeners, STR_OFFLINE_SENT, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_SENT /* @min:%2eofflineBatchSent */](batch);\r\n                    });\r\n                }\r\n            };\r\n            _self[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */] = function (cnt, reason) {\r\n                if (cnt > 0) {\r\n                    var rn_1 = reason || 0; // default is unknown\r\n                    _runListeners(_listeners, STR_OFFLINE_DROP, _asyncNotifications, function (listener) {\r\n                        listener[STR_OFFLINE_DROP /* @min:%2eofflineBatchDrop */](cnt, rn_1);\r\n                    });\r\n                }\r\n            };\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                var _finishUnload = function () {\r\n                    unloadHandler && unloadHandler.rm();\r\n                    unloadHandler = null;\r\n                    _listeners = [];\r\n                    // Clear any async listener\r\n                    _asyncNotifications.h && _asyncNotifications.h[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                    _asyncNotifications.h = null;\r\n                    _asyncNotifications.cb = [];\r\n                };\r\n                var waiting;\r\n                _runListeners(_listeners, \"unload\", null, function (listener) {\r\n                    var asyncUnload = listener[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n                    if (asyncUnload) {\r\n                        if (!waiting) {\r\n                            waiting = [];\r\n                        }\r\n                        waiting[_DYN_PUSH /* @min:%2epush */](asyncUnload);\r\n                    }\r\n                });\r\n                if (waiting) {\r\n                    return createPromise(function (resolve) {\r\n                        return doAwaitResponse(createAllPromise(waiting), function () {\r\n                            _finishUnload();\r\n                            resolve();\r\n                        });\r\n                    });\r\n                }\r\n                else {\r\n                    _finishUnload();\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for NotificationManager.prototype.addNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.removeNotificationListener.\r\n// Removed Stub for NotificationManager.prototype.eventsSent.\r\n// Removed Stub for NotificationManager.prototype.eventsDiscarded.\r\n// Removed Stub for NotificationManager.prototype.eventsSendRequest.\r\n// Removed Stub for NotificationManager.prototype.perfEvent.\r\n// Removed Stub for NotificationManager.prototype.unload.\r\n// Removed Stub for NotificationManager.prototype.offlineEventsStored.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchSent.\r\n// Removed Stub for NotificationManager.prototype.offlineBatchDrop.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    NotificationManager.__ieDyn=1;\n\n    return NotificationManager;\r\n}());\r\nexport { NotificationManager };\r\n//# sourceMappingURL=NotificationManager.js.map","module.exports = require(\"vscode\");","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TargetPopulation = exports.getExperimentationServiceAsync = exports.getExperimentationService = void 0;\nvar VSCodeTasClient_1 = require(\"./vscode-tas-client/VSCodeTasClient\");\nObject.defineProperty(exports, \"getExperimentationService\", { enumerable: true, get: function () { return VSCodeTasClient_1.getExperimentationService; } });\nObject.defineProperty(exports, \"getExperimentationServiceAsync\", { enumerable: true, get: function () { return VSCodeTasClient_1.getExperimentationServiceAsync; } });\nvar VSCodeFilterProvider_1 = require(\"./vscode-tas-client/VSCodeFilterProvider\");\nObject.defineProperty(exports, \"TargetPopulation\", { enumerable: true, get: function () { return VSCodeFilterProvider_1.TargetPopulation; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExperimentationServiceBase = void 0;\nconst MemoryKeyValueStorage_1 = require(\"./Util/MemoryKeyValueStorage\");\n/**\n * Experimentation service to provide functionality of A/B experiments:\n * - reading flights;\n * - caching current set of flights;\n * - get answer on if flights are enabled.\n */\nclass ExperimentationServiceBase {\n    get features() {\n        return this._features;\n    }\n    set features(value) {\n        this._features = value;\n        /**\n         * If an implementation of telemetry exists, we set the shared property.\n         */\n        if (this.telemetry) {\n            this.telemetry.setSharedProperty(this.assignmentContextTelemetryPropertyName, this.features.assignmentContext);\n        }\n    }\n    constructor(telemetry, assignmentContextTelemetryPropertyName, telemetryEventName, storageKey, storage) {\n        this.telemetry = telemetry;\n        this.assignmentContextTelemetryPropertyName = assignmentContextTelemetryPropertyName;\n        this.telemetryEventName = telemetryEventName;\n        this.storageKey = storageKey;\n        this.storage = storage;\n        this.featuresConsumed = false;\n        this.cachedTelemetryEvents = [];\n        this._features = {\n            features: [],\n            assignmentContext: '',\n            configs: []\n        };\n        if (!this.storageKey) {\n            this.storageKey = 'ABExp.Features';\n        }\n        if (!this.storage) {\n            storage = new MemoryKeyValueStorage_1.MemoryKeyValueStorage();\n        }\n        this.loadCachePromise = this.loadCachedFeatureData();\n        this.initializePromise = this.loadCachePromise;\n        this.initialFetch = new Promise((resolve, reject) => {\n            this.resolveInitialFetchPromise = resolve;\n        });\n    }\n    /**\n     * Gets all the features from the provider sources (not cache).\n     * It returns these features and will also update the providers to have the latest features cached.\n     */\n    async getFeaturesAsync(overrideInMemoryFeatures = false) {\n        /**\n         * If there's already a fetching promise, there's no need to call it again.\n         * We return that as result.\n         */\n        if (this.fetchPromise != null) {\n            try {\n                await this.fetchPromise;\n            }\n            catch (_a) {\n                // Fetching features threw. Can happen if not connected to the internet, e.g\n            }\n            return this.features;\n        }\n        if (!this.featureProviders || this.featureProviders.length === 0) {\n            return Promise.resolve({\n                features: [],\n                assignmentContext: '',\n                configs: []\n            });\n        }\n        try {\n            /**\n             * Fetch all from providers.\n             */\n            this.fetchPromise = Promise.all(this.featureProviders.map(async (provider) => {\n                return await provider.getFeatures();\n            }));\n            const featureResults = await this.fetchPromise;\n            this.updateFeatures(featureResults, overrideInMemoryFeatures);\n        }\n        catch (_b) {\n            // Fetching features threw error. Can happen if not connected to the internet, e.g.\n        }\n        this.fetchPromise = undefined;\n        if (this.resolveInitialFetchPromise) {\n            this.resolveInitialFetchPromise();\n            this.resolveInitialFetchPromise = undefined;\n        }\n        /**\n         * At this point all features have been re-fetched and cache has been updated.\n         * We return the cached features.\n         */\n        return this.features;\n    }\n    /**\n     *\n     * @param featureResults The feature results obtained from all the feature providers.\n     */\n    updateFeatures(featureResults, overrideInMemoryFeatures = false) {\n        /**\n         * if features comes as a null value, that is taken as if there aren't any features active,\n         * so an empty array is defaulted.\n         */\n        let features = {\n            features: [],\n            assignmentContext: '',\n            configs: []\n        };\n        for (let result of featureResults) {\n            for (let feature of result.features) {\n                if (!features.features.includes(feature)) {\n                    features.features.push(feature);\n                }\n            }\n            for (let config of result.configs) {\n                const existingConfig = features.configs.find(c => c.Id === config.Id);\n                if (existingConfig) {\n                    existingConfig.Parameters = Object.assign(Object.assign({}, existingConfig.Parameters), config.Parameters);\n                }\n                else {\n                    features.configs.push(config);\n                }\n            }\n            features.assignmentContext += result.assignmentContext;\n        }\n        /**\n         * Set the obtained feature values to the global features variable. This stores them in memory.\n         */\n        if (overrideInMemoryFeatures || !this.featuresConsumed) {\n            this.features = features;\n        }\n        /**\n         * If we have storage, we cache the latest results into the storage.\n         */\n        if (this.storage) {\n            this.storage.setValue(this.storageKey, features);\n        }\n    }\n    async loadCachedFeatureData() {\n        let cachedFeatureData;\n        if (this.storage) {\n            cachedFeatureData = await this.storage.getValue(this.storageKey);\n            // When updating from an older version of tas-client, configs may be undefined \n            if (cachedFeatureData !== undefined && cachedFeatureData.configs === undefined) {\n                cachedFeatureData.configs = [];\n            }\n        }\n        if (this.features.features.length === 0) {\n            this.features = cachedFeatureData || { features: [], assignmentContext: '', configs: [] };\n        }\n    }\n    /**\n     * Returns a value indicating whether the given flight is enabled.\n     * It uses the in-memory cache.\n     * @param flight The flight to check.\n     */\n    isFlightEnabled(flight) {\n        this.featuresConsumed = true;\n        this.PostEventToTelemetry(flight);\n        return this.features.features.includes(flight);\n    }\n    /**\n     * Returns a value indicating whether the given flight is enabled.\n     * It uses the values currently on cache.\n     * @param flight The flight to check.\n     */\n    async isCachedFlightEnabled(flight) {\n        await this.loadCachePromise;\n        this.featuresConsumed = true;\n        this.PostEventToTelemetry(flight);\n        return this.features.features.includes(flight);\n    }\n    /**\n     * Returns a value indicating whether the given flight is enabled.\n     * It re-fetches values from the server.\n     * @param flight the flight to check.\n     */\n    async isFlightEnabledAsync(flight) {\n        const features = await this.getFeaturesAsync(true);\n        this.featuresConsumed = true;\n        this.PostEventToTelemetry(flight);\n        return features.features.includes(flight);\n    }\n    /**\n     * Returns the value of the treatment variable, or undefined if not found.\n     * It uses the values currently in memory, so the experimentation service\n     * must be initialized before calling.\n     * @param config name of the config to check.\n     * @param name name of the treatment variable.\n     */\n    getTreatmentVariable(configId, name) {\n        this.featuresConsumed = true;\n        this.PostEventToTelemetry(`${configId}.${name}`);\n        const config = this.features.configs.find(c => c.Id === configId);\n        return config === null || config === void 0 ? void 0 : config.Parameters[name];\n    }\n    /**\n     * Returns the value of the treatment variable, or undefined if not found.\n     * It re-fetches values from the server. If checkCache is set to true and the value exists\n     * in the cache, the Treatment Assignment Service is not called.\n     * @param config name of the config to check.\n     * @param name name of the treatment variable.\n     * @param checkCache check the cache for the variable before calling the TAS.\n     */\n    async getTreatmentVariableAsync(configId, name, checkCache) {\n        if (checkCache) {\n            const _featuresConsumed = this.featuresConsumed;\n            const cachedValue = this.getTreatmentVariable(configId, name);\n            if (cachedValue === undefined) {\n                this.featuresConsumed = _featuresConsumed;\n            }\n            else {\n                return cachedValue;\n            }\n        }\n        await this.getFeaturesAsync(true);\n        return this.getTreatmentVariable(configId, name);\n    }\n    PostEventToTelemetry(flight) {\n        /**\n         * If this event has already been posted, we omit from posting it again.\n         */\n        if (this.cachedTelemetryEvents.includes(flight)) {\n            return;\n        }\n        this.telemetry.postEvent(this.telemetryEventName, new Map([['ABExp.queriedFeature', flight]]));\n        /**\n         * We cache the flight so we don't post it again.\n         */\n        this.cachedTelemetryEvents.push(flight);\n    }\n    invokeInit() {\n        this.init();\n    }\n    addFeatureProvider(...providers) {\n        if (providers == null || this.featureProviders == null) {\n            return;\n        }\n        for (let provider of providers) {\n            this.featureProviders.push(provider);\n        }\n    }\n}\nexports.ExperimentationServiceBase = ExperimentationServiceBase;\n//# sourceMappingURL=ExperimentationServiceBase.js.map","/*\n * 1DS JS SDK Core, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 4\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 4\r\nexport var _DYN_INDEX_OF = \"indexOf\"; // Count: 4\r\nexport var _DYN_TIMINGS = \"timings\"; // Count: 4\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 4\r\nexport var _DYN_VALUE = \"value\"; // Count: 20\r\nexport var _DYN_KIND = \"kind\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 7\r\nexport var _DYN_PROCESS_TELEMETRY_ST0 = \"processTelemetryStart\"; // Count: 3\r\nexport var _DYN_HANDLE_FIELD = \"handleField\"; // Count: 3\r\nexport var _DYN_RM_SANITIZER = \"rmSanitizer\"; // Count: 3\r\nexport var _DYN_RM_FIELD_SANITIZER = \"rmFieldSanitizer\"; // Count: 3\r\nexport var _DYN_CAN_HANDLE = \"canHandle\"; // Count: 7\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { arrForEach, isArray, isString, strLeft, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_GET_ATTRIBUTE, _DYN_LENGTH, _DYN_PUSH, _DYN_SPAN_ID, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_TRACE_FLAGS, _DYN_TRACE_ID, _DYN_VERSION } from \"../__DynamicConstants\";\r\nimport { generateW3CId } from \"./CoreUtils\";\r\nimport { findMetaTag, findNamedServerTiming } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// using {0,16} for leading and trailing whitespace just to constrain the possible runtime of a random string\r\nvar TRACE_PARENT_REGEX = /^([\\da-f]{2})-([\\da-f]{32})-([\\da-f]{16})-([\\da-f]{2})(-[^\\s]{1,64})?$/i;\r\nvar DEFAULT_VERSION = \"00\";\r\nvar INVALID_VERSION = \"ff\";\r\nvar INVALID_TRACE_ID = \"00000000000000000000000000000000\";\r\nvar INVALID_SPAN_ID = \"0000000000000000\";\r\nvar SAMPLED_FLAG = 0x01;\r\nfunction _isValid(value, len, invalidValue) {\r\n    if (value && value[_DYN_LENGTH /* @min:%2elength */] === len && value !== invalidValue) {\r\n        return !!value.match(/^[\\da-f]*$/i);\r\n    }\r\n    return false;\r\n}\r\nfunction _formatValue(value, len, defValue) {\r\n    if (_isValid(value, len)) {\r\n        return value;\r\n    }\r\n    return defValue;\r\n}\r\nfunction _formatFlags(value) {\r\n    if (isNaN(value) || value < 0 || value > 255) {\r\n        value = 0x01;\r\n    }\r\n    var result = value.toString(16);\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < 2) {\r\n        result = \"0\" + result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Create a new ITraceParent instance using the provided values.\r\n * @param traceId - The traceId to use, when invalid a new random W3C id will be generated.\r\n * @param spanId - The parent/span id to use, a new random value will be generated if it is invalid.\r\n * @param flags - The traceFlags to use, defaults to zero (0) if not supplied or invalid\r\n * @param version - The version to used, defaults to version \"01\" if not supplied or invalid.\r\n * @returns\r\n */\r\nexport function createTraceParent(traceId, spanId, flags, version) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_VERSION /* @min:version */] = _isValid(version, 2, INVALID_VERSION) ? version : DEFAULT_VERSION,\r\n        _a[_DYN_TRACE_ID /* @min:traceId */] = isValidTraceId(traceId) ? traceId : generateW3CId(),\r\n        _a[_DYN_SPAN_ID /* @min:spanId */] = isValidSpanId(spanId) ? spanId : strLeft(generateW3CId(), 16),\r\n        _a.traceFlags = flags >= 0 && flags <= 0xFF ? flags : 1,\r\n        _a;\r\n}\r\n/**\r\n * Attempt to parse the provided string as a W3C TraceParent header value (https://www.w3.org/TR/trace-context/#traceparent-header)\r\n *\r\n * @param value - The value to be parsed\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function parseTraceParent(value, selectIdx) {\r\n    var _a;\r\n    if (!value) {\r\n        // Don't pass a null/undefined or empty string\r\n        return null;\r\n    }\r\n    if (isArray(value)) {\r\n        // The value may have been encoded on the page into an array so handle this automatically\r\n        value = value[0] || \"\";\r\n    }\r\n    if (!value || !isString(value) || value[_DYN_LENGTH /* @min:%2elength */] > 8192) {\r\n        // limit potential processing based on total length\r\n        return null;\r\n    }\r\n    if (value.indexOf(\",\") !== -1) {\r\n        var values = value[_DYN_SPLIT /* @min:%2esplit */](\",\");\r\n        value = values[selectIdx > 0 && values[_DYN_LENGTH /* @min:%2elength */] > selectIdx ? selectIdx : 0];\r\n    }\r\n    // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\r\n    var match = TRACE_PARENT_REGEX.exec(strTrim(value));\r\n    if (!match || // No match\r\n        match[1] === INVALID_VERSION || // version ff is forbidden\r\n        match[2] === INVALID_TRACE_ID || // All zeros is considered to be invalid\r\n        match[3] === INVALID_SPAN_ID) { // All zeros is considered to be invalid\r\n        return null;\r\n    }\r\n    return _a = {\r\n            version: (match[1] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            traceId: (match[2] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */](),\r\n            spanId: (match[3] || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]()\r\n        },\r\n        _a[_DYN_TRACE_FLAGS /* @min:traceFlags */] = parseInt(match[4], 16),\r\n        _a;\r\n}\r\n/**\r\n * Is the provided W3c Trace Id a valid string representation, it must be a 32-character string\r\n * of lowercase hexadecimal characters for example, 4bf92f3577b34da6a3ce929d0e0e4736.\r\n * If all characters as zero (00000000000000000000000000000000) it will be considered an invalid value.\r\n * @param value - The W3c trace Id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidTraceId(value) {\r\n    return _isValid(value, 32, INVALID_TRACE_ID);\r\n}\r\n/**\r\n * Is the provided W3c span id (aka. parent id) a valid string representation, it must be a 16-character\r\n * string of lowercase hexadecimal characters, for example, 00f067aa0ba902b7.\r\n * If all characters are zero (0000000000000000) this is considered an invalid value.\r\n * @param value - The W3c span id to be validated\r\n * @returns true if valid otherwise false\r\n */\r\nexport function isValidSpanId(value) {\r\n    return _isValid(value, 16, INVALID_SPAN_ID);\r\n}\r\n/**\r\n * Validates that the provided ITraceParent instance conforms to the currently supported specifications\r\n * @param value\r\n * @returns\r\n */\r\nexport function isValidTraceParent(value) {\r\n    if (!value ||\r\n        !_isValid(value[_DYN_VERSION /* @min:%2eversion */], 2, INVALID_VERSION) ||\r\n        !_isValid(value[_DYN_TRACE_ID /* @min:%2etraceId */], 32, INVALID_TRACE_ID) ||\r\n        !_isValid(value[_DYN_SPAN_ID /* @min:%2espanId */], 16, INVALID_SPAN_ID) ||\r\n        !_isValid(_formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]), 2)) {\r\n        // Each known field must contain a valid value\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Is the parsed traceParent indicating that the trace is currently sampled.\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function isSampledFlag(value) {\r\n    if (isValidTraceParent(value)) {\r\n        return (value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */] & SAMPLED_FLAG) === SAMPLED_FLAG;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Format the ITraceParent value as a string using the supported and know version formats.\r\n * So even if the passed traceParent is a later version the string value returned from this\r\n * function will convert it to only the known version formats.\r\n * This currently only supports version \"00\" and invalid \"ff\"\r\n * @param value - The parsed traceParent value\r\n * @returns\r\n */\r\nexport function formatTraceParent(value) {\r\n    if (value) {\r\n        // Special Note: This only supports formatting as version 00, future versions should encode any known supported version\r\n        // So parsing a future version will populate the correct version value but reformatting will reduce it to version 00.\r\n        var flags = _formatFlags(value[_DYN_TRACE_FLAGS /* @min:%2etraceFlags */]);\r\n        if (!_isValid(flags, 2)) {\r\n            flags = \"01\";\r\n        }\r\n        var version = value[_DYN_VERSION /* @min:%2eversion */] || DEFAULT_VERSION;\r\n        if (version !== \"00\" && version !== \"ff\") {\r\n            // Reduce version to \"00\"\r\n            version = DEFAULT_VERSION;\r\n        }\r\n        // Format as version 00\r\n        return \"\".concat(version.toLowerCase(), \"-\").concat(_formatValue(value.traceId, 32, INVALID_TRACE_ID).toLowerCase(), \"-\").concat(_formatValue(value.spanId, 16, INVALID_SPAN_ID).toLowerCase(), \"-\").concat(flags.toLowerCase());\r\n    }\r\n    return \"\";\r\n}\r\n/**\r\n * Helper function to fetch the passed traceparent from the page, looking for it as a meta-tag or a Server-Timing header.\r\n * @param selectIdx - If the found value is comma separated which is the preferred entry to select, defaults to the first\r\n * @returns\r\n */\r\nexport function findW3cTraceParent(selectIdx) {\r\n    var name = \"traceparent\";\r\n    var traceParent = parseTraceParent(findMetaTag(name), selectIdx);\r\n    if (!traceParent) {\r\n        traceParent = parseTraceParent(findNamedServerTiming(name), selectIdx);\r\n    }\r\n    return traceParent;\r\n}\r\n/**\r\n * Find all script tags in the provided document and return the information about them.\r\n * @param doc\r\n * @returns\r\n */\r\nexport function findAllScripts(doc) {\r\n    var scripts = doc.getElementsByTagName(\"script\");\r\n    var result = [];\r\n    arrForEach(scripts, function (script) {\r\n        var src = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"src\");\r\n        if (src) {\r\n            var crossOrigin = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"crossorigin\");\r\n            var async = script.hasAttribute(\"async\") === true;\r\n            var defer = script.hasAttribute(\"defer\") === true;\r\n            var referrerPolicy = script[_DYN_GET_ATTRIBUTE /* @min:%2egetAttribute */](\"referrerpolicy\");\r\n            var info = { url: src };\r\n            if (crossOrigin) {\r\n                info.crossOrigin = crossOrigin;\r\n            }\r\n            if (async) {\r\n                info.async = async;\r\n            }\r\n            if (defer) {\r\n                info.defer = defer;\r\n            }\r\n            if (referrerPolicy) {\r\n                info.referrerPolicy = referrerPolicy;\r\n            }\r\n            result[_DYN_PUSH /* @min:%2epush */](info);\r\n        }\r\n    });\r\n    return result;\r\n}\r\n//# sourceMappingURL=W3cTraceParent.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpClient = exports.FetchError = void 0;\nclass FetchError extends Error {\n    constructor(message, responseReceived, responseOk) {\n        super(message);\n        this.responseReceived = responseReceived;\n        this.responseOk = responseOk;\n    }\n}\nexports.FetchError = FetchError;\nclass HttpClient {\n    constructor(endpoint) {\n        this.endpoint = endpoint;\n    }\n    async get(config) {\n        const response = await fetch(this.endpoint, {\n            method: 'GET',\n            headers: config === null || config === void 0 ? void 0 : config.headers,\n        });\n        if (!response) {\n            throw new FetchError('No response received', false);\n        }\n        if (!response.ok) {\n            throw new FetchError('Response not ok', true, false);\n        }\n        const data = await response.json();\n        if (!data) {\n            throw new FetchError('No data received', false);\n        }\n        return { data };\n    }\n}\nexports.HttpClient = HttpClient;\n//# sourceMappingURL=HttpClient.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function startServer(_: any): any {\n\tthrow new Error('Not implemented');\n}\n\nexport function createServer(_: any): any {\n\tthrow new Error('Not implemented');\n}\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { arrForEach, dumpObj, isArray, isFunction, isNullOrUndefined, isUndefined, objForEachKey, objFreeze, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _applyDefaultValue } from \"../Config/ConfigDefaults\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PLUGIN, _DYN_IDENTIFIER, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SET_DF, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UNLOAD, _DYN_UPDATE } from \"../__DynamicConstants\";\r\nimport { _throwInternal, safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { proxyFunctions } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_DISABLED, STR_EMPTY, STR_EXTENSION_CONFIG, STR_PRIORITY, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { doPerf } from \"./PerfManager\";\r\nimport { _getPluginState } from \"./TelemetryHelpers\";\r\nvar strTelemetryPluginChain = \"TelemetryPluginChain\";\r\nvar strHasRunFlags = \"_hasRun\";\r\nvar strGetTelCtx = \"_getTelCtx\";\r\nvar _chainId = 0;\r\nfunction _getNextProxyStart(proxy, core, startAt) {\r\n    while (proxy) {\r\n        if (proxy[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]() === startAt) {\r\n            return proxy;\r\n        }\r\n        proxy = proxy[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n    }\r\n    // This wasn't found in the existing chain so create an isolated one with just this plugin\r\n    return createTelemetryProxyChain([startAt], core.config || {}, core);\r\n}\r\n/**\r\n * @ignore\r\n * @param telemetryChain\r\n * @param dynamicHandler\r\n * @param core\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n * @returns\r\n */\r\nfunction _createInternalContext(telemetryChain, dynamicHandler, core, startAt) {\r\n    // We have a special case where we want to start execution from this specific plugin\r\n    // or we simply reuse the existing telemetry plugin chain (normal execution case)\r\n    var _nextProxy = null; // By Default set as no next plugin\r\n    var _onComplete = [];\r\n    if (!dynamicHandler) {\r\n        dynamicHandler = createDynamicConfig({}, null, core[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    if (startAt !== null) {\r\n        // There is no next element (null) vs not defined (undefined) so use the full chain\r\n        _nextProxy = startAt ? _getNextProxyStart(telemetryChain, core, startAt) : telemetryChain;\r\n    }\r\n    var context = {\r\n        _next: _moveNext,\r\n        ctx: {\r\n            core: function () {\r\n                return core;\r\n            },\r\n            diagLog: function () {\r\n                return safeGetLogger(core, dynamicHandler.cfg);\r\n            },\r\n            getCfg: function () {\r\n                return dynamicHandler.cfg;\r\n            },\r\n            getExtCfg: _resolveExtCfg,\r\n            getConfig: _getConfig,\r\n            hasNext: function () {\r\n                return !!_nextProxy;\r\n            },\r\n            getNext: function () {\r\n                return _nextProxy;\r\n            },\r\n            setNext: function (nextPlugin) {\r\n                _nextProxy = nextPlugin;\r\n            },\r\n            iterate: _iterateChain,\r\n            onComplete: _addOnComplete\r\n        }\r\n    };\r\n    function _addOnComplete(onComplete, that) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        if (onComplete) {\r\n            _onComplete[_DYN_PUSH /* @min:%2epush */]({\r\n                func: onComplete,\r\n                self: !isUndefined(that) ? that : context.ctx,\r\n                args: args\r\n            });\r\n        }\r\n    }\r\n    function _moveNext() {\r\n        var nextProxy = _nextProxy;\r\n        // Automatically move to the next plugin\r\n        _nextProxy = nextProxy ? nextProxy[_DYN_GET_NEXT /* @min:%2egetNext */]() : null;\r\n        if (!nextProxy) {\r\n            var onComplete = _onComplete;\r\n            if (onComplete && onComplete[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                arrForEach(onComplete, function (completeDetails) {\r\n                    try {\r\n                        completeDetails.func.call(completeDetails.self, completeDetails.args);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(core[_DYN_LOGGER /* @min:%2elogger */], 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected Exception during onComplete - \" + dumpObj(e));\r\n                    }\r\n                });\r\n                _onComplete = [];\r\n            }\r\n        }\r\n        return nextProxy;\r\n    }\r\n    function _getExtCfg(identifier, createIfMissing) {\r\n        var idCfg = null;\r\n        var cfg = dynamicHandler.cfg;\r\n        if (cfg && identifier) {\r\n            var extCfg = cfg[STR_EXTENSION_CONFIG /* @min:%2eextensionConfig */];\r\n            if (!extCfg && createIfMissing) {\r\n                extCfg = {};\r\n            }\r\n            // Always set the value so that the property always exists\r\n            cfg[STR_EXTENSION_CONFIG] = extCfg; // Note: it is valid for the \"value\" to be undefined\r\n            // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n            extCfg = dynamicHandler.ref(cfg, STR_EXTENSION_CONFIG);\r\n            if (extCfg) {\r\n                idCfg = extCfg[identifier];\r\n                if (!idCfg && createIfMissing) {\r\n                    idCfg = {};\r\n                }\r\n                // Always set the value so that the property always exists\r\n                extCfg[identifier] = idCfg; // Note: it is valid for the \"value\" to be undefined\r\n                // Calling `ref()` has a side effect of causing the referenced property to become dynamic  (if not already)\r\n                idCfg = dynamicHandler.ref(extCfg, identifier);\r\n            }\r\n        }\r\n        return idCfg;\r\n    }\r\n    function _resolveExtCfg(identifier, defaultValues) {\r\n        var newConfig = _getExtCfg(identifier, true);\r\n        if (defaultValues) {\r\n            // Enumerate over the defaultValues and if not already populated attempt to\r\n            // find a value from the root config or use the default value\r\n            objForEachKey(defaultValues, function (field, defaultValue) {\r\n                // for each unspecified field, set the default value\r\n                if (isNullOrUndefined(newConfig[field])) {\r\n                    var cfgValue = dynamicHandler.cfg[field];\r\n                    if (cfgValue || !isNullOrUndefined(cfgValue)) {\r\n                        newConfig[field] = cfgValue;\r\n                    }\r\n                }\r\n                _applyDefaultValue(dynamicHandler, newConfig, field, defaultValue);\r\n            });\r\n        }\r\n        return dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](newConfig, defaultValues);\r\n    }\r\n    function _getConfig(identifier, field, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = false; }\r\n        var theValue;\r\n        var extConfig = _getExtCfg(identifier, false);\r\n        var rootConfig = dynamicHandler.cfg;\r\n        if (extConfig && (extConfig[field] || !isNullOrUndefined(extConfig[field]))) {\r\n            theValue = extConfig[field];\r\n        }\r\n        else if (rootConfig[field] || !isNullOrUndefined(rootConfig[field])) {\r\n            theValue = rootConfig[field];\r\n        }\r\n        return (theValue || !isNullOrUndefined(theValue)) ? theValue : defaultValue;\r\n    }\r\n    function _iterateChain(cb) {\r\n        // Keep processing until we reach the end of the chain\r\n        var nextPlugin;\r\n        while (!!(nextPlugin = context._next())) {\r\n            var plugin = nextPlugin[_DYN_GET_PLUGIN /* @min:%2egetPlugin */]();\r\n            if (plugin) {\r\n                // callback with the current on\r\n                cb(plugin);\r\n            }\r\n        }\r\n    }\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryContext(telemetryChain, cfg, core, startAt) {\r\n    var config = createDynamicConfig(cfg);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(env) {\r\n        var nextPlugin = internalContext._next();\r\n        if (nextPlugin) {\r\n            // Run the next plugin which will call \"processNext()\"\r\n            nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, context);\r\n        }\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), config.cfg, core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for handling the unloading of the chain\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUnloadContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(unloadState) {\r\n        var nextPlugin = internalContext._next();\r\n        nextPlugin && nextPlugin[_DYN_UNLOAD /* @min:%2eunload */](context, unloadState);\r\n        return !nextPlugin;\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUnloadContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates a new Telemetry Item context with the current config, core and plugin execution chain for updating the configuration\r\n * @param plugins - The plugin instances that will be executed\r\n * @param config - The current config\r\n * @param core - The current core instance\r\n * @param startAt - Identifies the next plugin to execute, if null there is no \"next\" plugin and if undefined it should assume the start of the chain\r\n */\r\nexport function createProcessTelemetryUpdateContext(telemetryChain, core, startAt) {\r\n    var config = createDynamicConfig(core.config);\r\n    var internalContext = _createInternalContext(telemetryChain, config, core, startAt);\r\n    var context = internalContext.ctx;\r\n    function _processNext(updateState) {\r\n        return context.iterate(function (plugin) {\r\n            if (isFunction(plugin[_DYN_UPDATE /* @min:%2eupdate */])) {\r\n                plugin[_DYN_UPDATE /* @min:%2eupdate */](context, updateState);\r\n            }\r\n        });\r\n    }\r\n    function _createNew(plugins, startAt) {\r\n        if (plugins === void 0) { plugins = null; }\r\n        if (isArray(plugins)) {\r\n            plugins = createTelemetryProxyChain(plugins, config.cfg, core, startAt);\r\n        }\r\n        return createProcessTelemetryUpdateContext(plugins || context[_DYN_GET_NEXT /* @min:%2egetNext */](), core, startAt);\r\n    }\r\n    context[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = _processNext;\r\n    context[_DYN_CREATE_NEW /* @min:%2ecreateNew */] = _createNew;\r\n    return context;\r\n}\r\n/**\r\n * Creates an execution chain from the array of plugins\r\n * @param plugins - The array of plugins that will be executed in this order\r\n * @param defItemCtx - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n */\r\nexport function createTelemetryProxyChain(plugins, config, core, startAt) {\r\n    var firstProxy = null;\r\n    var add = startAt ? false : true;\r\n    if (isArray(plugins) && plugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        // Create the proxies and wire up the next plugin chain\r\n        var lastProxy_1 = null;\r\n        arrForEach(plugins, function (thePlugin) {\r\n            if (!add && startAt === thePlugin) {\r\n                add = true;\r\n            }\r\n            if (add && thePlugin && isFunction(thePlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Only add plugins that are processors\r\n                var newProxy = createTelemetryPluginProxy(thePlugin, config, core);\r\n                if (!firstProxy) {\r\n                    firstProxy = newProxy;\r\n                }\r\n                if (lastProxy_1) {\r\n                    // Set this new proxy as the next for the previous one\r\n                    lastProxy_1._setNext(newProxy);\r\n                }\r\n                lastProxy_1 = newProxy;\r\n            }\r\n        });\r\n    }\r\n    if (startAt && !firstProxy) {\r\n        // Special case where the \"startAt\" was not in the original list of plugins\r\n        return createTelemetryProxyChain([startAt], config, core);\r\n    }\r\n    return firstProxy;\r\n}\r\n/**\r\n * Create the processing telemetry proxy instance, the proxy is used to abstract the current plugin to allow monitoring and\r\n * execution plugins while passing around the dynamic execution state (IProcessTelemetryContext), the proxy instance no longer\r\n * contains any execution state and can be reused between requests (this was not the case for 2.7.2 and earlier with the\r\n * TelemetryPluginChain class).\r\n * @param plugin - The plugin instance to proxy\r\n * @param config - The default execution context to use when no telemetry context is passed to processTelemetry(), this\r\n * should be for legacy plugins only. Currently, only used for passing the current core instance and to provide better error\r\n * reporting (hasRun) when errors occur.\r\n * @returns\r\n */\r\nexport function createTelemetryPluginProxy(plugin, config, core) {\r\n    var nextProxy = null;\r\n    var hasProcessTelemetry = isFunction(plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */]);\r\n    var hasSetNext = isFunction(plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */]);\r\n    var chainId;\r\n    if (plugin) {\r\n        chainId = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"-\" + plugin[STR_PRIORITY /* @min:%2epriority */] + \"-\" + _chainId++;\r\n    }\r\n    else {\r\n        chainId = \"Unknown-0-\" + _chainId++;\r\n    }\r\n    var proxyChain = {\r\n        getPlugin: function () {\r\n            return plugin;\r\n        },\r\n        getNext: function () {\r\n            return nextProxy;\r\n        },\r\n        processTelemetry: _processTelemetry,\r\n        unload: _unloadPlugin,\r\n        update: _updatePlugin,\r\n        _id: chainId,\r\n        _setNext: function (nextPlugin) {\r\n            nextProxy = nextPlugin;\r\n        }\r\n    };\r\n    function _getTelCtx() {\r\n        var itemCtx;\r\n        // Looks like a plugin didn't pass the (optional) context, so create a new one\r\n        if (plugin && isFunction(plugin[strGetTelCtx])) {\r\n            // This plugin extends from the BaseTelemetryPlugin so lets use it\r\n            itemCtx = plugin[strGetTelCtx]();\r\n        }\r\n        if (!itemCtx) {\r\n            // Create a temporary one\r\n            itemCtx = createProcessTelemetryContext(proxyChain, config, core);\r\n        }\r\n        return itemCtx;\r\n    }\r\n    function _processChain(itemCtx, processPluginFn, name, details, isAsync) {\r\n        var hasRun = false;\r\n        var identifier = plugin ? plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] : strTelemetryPluginChain;\r\n        var hasRunContext = itemCtx[strHasRunFlags];\r\n        if (!hasRunContext) {\r\n            // Assign and populate\r\n            hasRunContext = itemCtx[strHasRunFlags] = {};\r\n        }\r\n        // Ensure that we keep the context in sync\r\n        itemCtx.setNext(nextProxy);\r\n        if (plugin) {\r\n            doPerf(itemCtx[STR_CORE /* @min:%2ecore */](), function () { return identifier + \":\" + name; }, function () {\r\n                // Mark this component as having run\r\n                hasRunContext[chainId] = true;\r\n                try {\r\n                    // Set a flag on the next plugin so we know if it was attempted to be executed\r\n                    var nextId = nextProxy ? nextProxy._id : STR_EMPTY;\r\n                    if (nextId) {\r\n                        hasRunContext[nextId] = false;\r\n                    }\r\n                    hasRun = processPluginFn(itemCtx);\r\n                }\r\n                catch (error) {\r\n                    var hasNextRun = nextProxy ? hasRunContext[nextProxy._id] : true;\r\n                    if (hasNextRun) {\r\n                        // The next plugin after us has already run so set this one as complete\r\n                        hasRun = true;\r\n                    }\r\n                    if (!nextProxy || !hasNextRun) {\r\n                        // Either we have no next plugin or the current one did not attempt to call the next plugin\r\n                        // Which means the current one is the root of the failure so log/report this failure\r\n                        _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 73 /* _eInternalMessageId.PluginException */, \"Plugin [\" + identifier + \"] failed during \" + name + \" - \" + dumpObj(error) + \", run flags: \" + dumpObj(hasRunContext));\r\n                    }\r\n                }\r\n            }, details, isAsync);\r\n        }\r\n        return hasRun;\r\n    }\r\n    function _processTelemetry(env, itemCtx) {\r\n        itemCtx = itemCtx || _getTelCtx();\r\n        function _callProcessTelemetry(itemCtx) {\r\n            if (!plugin || !hasProcessTelemetry) {\r\n                return false;\r\n            }\r\n            var pluginState = _getPluginState(plugin);\r\n            if (pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] || pluginState[STR_DISABLED]) {\r\n                return false;\r\n            }\r\n            // Ensure that we keep the context in sync (for processNext()), just in case a plugin\r\n            // doesn't calls processTelemetry() instead of itemContext.processNext() or some\r\n            // other form of error occurred\r\n            if (hasSetNext) {\r\n                // Backward compatibility setting the next plugin on the instance\r\n                plugin[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */](nextProxy);\r\n            }\r\n            plugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, itemCtx);\r\n            // Process Telemetry is expected to call itemCtx.processNext() or nextPlugin.processTelemetry()\r\n            return true;\r\n        }\r\n        if (!_processChain(itemCtx, _callProcessTelemetry, \"processTelemetry\", function () { return ({ item: env }); }, !(env.sync))) {\r\n            // The underlying plugin is either not defined, not enabled or does not have a processTelemetry implementation\r\n            // so we still want the next plugin to be executed.\r\n            itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n        }\r\n    }\r\n    function _unloadPlugin(unloadCtx, unloadState) {\r\n        function _callTeardown() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only teardown the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === unloadCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    // Handle plugins that don't extend from the BaseTelemetryPlugin\r\n                    pluginState[STR_CORE /* @min:%2ecore */] = null;\r\n                    pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] = true;\r\n                    pluginState[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = false;\r\n                    if (plugin[_DYN_TEARDOWN /* @min:%2eteardown */] && plugin[_DYN_TEARDOWN /* @min:%2eteardown */](unloadCtx, unloadState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(unloadCtx, _callTeardown, \"unload\", function () { }, unloadState[_DYN_IS_ASYNC /* @min:%2eisAsync */])) {\r\n            // Only called if we hasRun was not true\r\n            unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n        }\r\n    }\r\n    function _updatePlugin(updateCtx, updateState) {\r\n        function _callUpdate() {\r\n            // Setting default of hasRun as false so the proxyProcessFn() is called as teardown() doesn't have to exist or call unloadNext().\r\n            var hasRun = false;\r\n            if (plugin) {\r\n                var pluginState = _getPluginState(plugin);\r\n                var pluginCore = plugin[STR_CORE] || pluginState[STR_CORE /* @min:%2ecore */];\r\n                // Only update the plugin if it was initialized by the current core (i.e. It's not a shared plugin)\r\n                if (plugin && (!pluginCore || pluginCore === updateCtx.core()) && !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */]) {\r\n                    if (plugin[_DYN_UPDATE /* @min:%2eupdate */] && plugin[_DYN_UPDATE /* @min:%2eupdate */](updateCtx, updateState) === true) {\r\n                        // plugin told us that it was going to (or has) call unloadCtx.processNext()\r\n                        hasRun = true;\r\n                    }\r\n                }\r\n            }\r\n            return hasRun;\r\n        }\r\n        if (!_processChain(updateCtx, _callUpdate, \"update\", function () { }, false)) {\r\n            // Only called if we hasRun was not true\r\n            updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n        }\r\n    }\r\n    return objFreeze(proxyChain);\r\n}\r\n/**\r\n * This class will be removed!\r\n * @deprecated use createProcessTelemetryContext() instead\r\n */\r\nvar ProcessTelemetryContext = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Telemetry Item context with the current config, core and plugin execution chain\r\n     * @param plugins - The plugin instances that will be executed\r\n     * @param config - The current config\r\n     * @param core - The current core instance\r\n     */\r\n    function ProcessTelemetryContext(pluginChain, config, core, startAt) {\r\n        var _self = this;\r\n        var context = createProcessTelemetryContext(pluginChain, config, core, startAt);\r\n        // Proxy all functions of the context to this object\r\n        proxyFunctions(_self, context, objKeys(context));\r\n    }\r\n    return ProcessTelemetryContext;\r\n}());\r\nexport { ProcessTelemetryContext };\r\n//# sourceMappingURL=ProcessTelemetryContext.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { asString, isBoolean, isFunction, isNullOrUndefined, isString } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\n/**\r\n * @internal\r\n * @ignore\r\n * @param str\r\n * @param defaultValue\r\n * @returns\r\n */\r\nfunction _stringToBoolOrDefault(theValue, defaultValue, theConfig) {\r\n    if (!theValue && isNullOrUndefined(theValue)) {\r\n        return defaultValue;\r\n    }\r\n    if (isBoolean(theValue)) {\r\n        return theValue;\r\n    }\r\n    return asString(theValue)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === \"true\";\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the field defined as an object\r\n * that should be merged\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfMerge(defaultValue) {\r\n    return {\r\n        mrg: true,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field set function\r\n * @param setter - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfSet(setter, defaultValue) {\r\n    return {\r\n        set: setter,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance with the provided field validator\r\n * @param validator - The IConfigCheckFn function to validate the user provided value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfValidate(validator, defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        isVal: validator,\r\n        v: defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate and convert the user\r\n * provided value to a boolean from a string or boolean value\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @param fallBackName - The fallback configuration name if the current value is not available\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBoolean(defaultValue, fallBackName) {\r\n    return {\r\n        fb: fallBackName,\r\n        set: _stringToBoolOrDefault,\r\n        v: !!defaultValue\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfFunc(defaultValue) {\r\n    return {\r\n        isVal: isFunction,\r\n        v: defaultValue || null\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance that will validate that the user\r\n * provided value is a function.\r\n * @param defaultValue - The default string value to apply it not provided or it's not valid, defaults to an empty string\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfString(defaultValue) {\r\n    return {\r\n        isVal: isString,\r\n        v: asString(defaultValue || STR_EMPTY)\r\n    };\r\n}\r\n/**\r\n * Helper which returns an IConfigDefaultCheck instance identifying that value associated with this property\r\n * should not have it's properties converted into a dynamic config properties.\r\n * @param defaultValue - The default value to apply it not provided or it's not valid\r\n * @returns a new IConfigDefaultCheck structure\r\n */\r\nexport function cfgDfBlockPropValue(defaultValue) {\r\n    var _a;\r\n    return _a = {},\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = true,\r\n        _a.v = defaultValue,\r\n        _a;\r\n}\r\n//# sourceMappingURL=ConfigDefaultHelpers.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getExperimentationServiceAsync = exports.getExperimentationService = void 0;\nconst VSCodeFilterProvider_1 = require(\"./VSCodeFilterProvider\");\nconst tas_client_1 = require(\"tas-client\");\nconst vscode = require(\"vscode\");\nconst MementoKeyValueStorage_1 = require(\"./MementoKeyValueStorage\");\nconst TelemetryDisabledExperimentationService_1 = require(\"./TelemetryDisabledExperimentationService\");\nconst endpoint = 'https://default.exp-tas.com/vscode/ab';\nconst telemetryEventName = 'query-expfeature';\nconst assignmentContextTelemetryPropertyName = 'abexp.assignmentcontext';\nconst storageKey = 'VSCode.ABExp.FeatureData';\nconst refetchInterval = 1000 * 60 * 30; // By default it's set up to 30 minutes.\n/**\n *\n * @param extensionName The name of the extension.\n * @param extensionVersion The version of the extension.\n * @param telemetry Telemetry implementation.\n * @param targetPopulation An enum containing the target population ('team', 'internal', 'insiders', 'public').\n * @param memento The memento state to be used for cache.\n * @param filterProviders The filter providers.\n */\nfunction getExperimentationService(extensionName, extensionVersion, targetPopulation, telemetry, memento, ...filterProviders) {\n    if (!memento) {\n        throw new Error('Memento storage was not provided.');\n    }\n    const config = vscode.workspace.getConfiguration('telemetry');\n    const telemetryEnabled = vscode.env.isTelemetryEnabled === undefined\n        ? config.get('enableTelemetry', true)\n        : vscode.env.isTelemetryEnabled;\n    if (!telemetryEnabled) {\n        return new TelemetryDisabledExperimentationService_1.default();\n    }\n    const extensionFilterProvider = new VSCodeFilterProvider_1.VSCodeFilterProvider(extensionName, extensionVersion, targetPopulation);\n    const providerList = [extensionFilterProvider, ...filterProviders];\n    const keyValueStorage = new MementoKeyValueStorage_1.MementoKeyValueStorage(memento);\n    return new tas_client_1.ExperimentationService({\n        filterProviders: providerList,\n        telemetry: telemetry,\n        storageKey: storageKey,\n        keyValueStorage: keyValueStorage,\n        featuresTelemetryPropertyName: '',\n        assignmentContextTelemetryPropertyName: assignmentContextTelemetryPropertyName,\n        telemetryEventName: telemetryEventName,\n        endpoint: endpoint,\n        refetchInterval: refetchInterval,\n    });\n}\nexports.getExperimentationService = getExperimentationService;\n/**\n * Returns the experimentation service after waiting on initialize.\n *\n * @param extensionName The name of the extension.\n * @param extensionVersion The version of the extension.\n * @param telemetry Telemetry implementation.\n * @param targetPopulation An enum containing the target population ('team', 'internal', 'insiders', 'public').\n * @param memento The memento state to be used for cache.\n * @param filterProviders The filter providers.\n */\nasync function getExperimentationServiceAsync(extensionName, extensionVersion, targetPopulation, telemetry, memento, ...filterProviders) {\n    const experimentationService = getExperimentationService(extensionName, extensionVersion, targetPopulation, telemetry, memento, ...filterProviders);\n    await experimentationService.initializePromise;\n    return experimentationService;\n}\nexports.getExperimentationServiceAsync = getExperimentationServiceAsync;\n//# sourceMappingURL=VSCodeTasClient.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport { __spreadArrayFn as __spreadArray } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { createPromise, createSyncAllSettledPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrAppend, arrForEach, arrIndexOf, createTimeout, deepExtend, hasDocument, isFunction, isNullOrUndefined, isPlainObject, isPromiseLike, objDeepFreeze, objDefine, objForEachKey, objFreeze, objHasOwn, scheduleTimeout, throwError } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { ActiveStatus } from \"../JavaScriptSDK.Enums/InitActiveStatusEnum\";\r\nimport { _DYN_ADD_NOTIFICATION_LIS1, _DYN_CANCEL, _DYN_CREATE_NEW, _DYN_ENABLED, _DYN_GET_NOTIFY_MGR, _DYN_GET_PLUGIN, _DYN_GET_PROCESS_TEL_CONT2, _DYN_IDENTIFIER, _DYN_INITIALIZE, _DYN_INSTRUMENTATION_KEY, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_I_KEY, _DYN_LENGTH, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_NAME, _DYN_NOTIFY, _DYN_ON_COMPLETE, _DYN_POLL_INTERNAL_LOGS, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_REMOVE_NOTIFICATION_0, _DYN_SET_DF, _DYN_SPLICE, _DYN_STOP_POLLING_INTERNA3, _DYN_TEARDOWN, _DYN_TIME, _DYN_UNLOAD, _DYN_VALUE, _DYN_VERSION, _DYN_WATCH, _DYN__INACTIVE } from \"../__DynamicConstants\";\r\nimport { doUnloadAll, runTargetUnload } from \"./AsyncUtils\";\r\nimport { ChannelControllerPriority } from \"./Constants\";\r\nimport { createCookieMgr } from \"./CookieMgr\";\r\nimport { createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { getDebugListener } from \"./DbgExtensionUtils\";\r\nimport { DiagnosticLogger, _InternalLogMessage, _throwInternal, _warnToConsole } from \"./DiagnosticLogger\";\r\nimport { getSetValue, isNotNullOrUndefined, proxyFunctionAs, proxyFunctions, toISOString } from \"./HelperFuncs\";\r\nimport { STR_CHANNELS, STR_CORE, STR_CREATE_PERF_MGR, STR_DISABLED, STR_EMPTY, STR_EVENTS_DISCARDED, STR_EXTENSIONS, STR_EXTENSION_CONFIG, STR_GET_PERF_MGR, STR_PRIORITY, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nimport { NotificationManager } from \"./NotificationManager\";\r\nimport { PerfManager, doPerf, getGblPerfMgr } from \"./PerfManager\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext, createTelemetryProxyChain } from \"./ProcessTelemetryContext\";\r\nimport { _getPluginState, createDistributedTraceContext, initializePlugins, sortPlugins } from \"./TelemetryHelpers\";\r\nimport { TelemetryInitializerPlugin } from \"./TelemetryInitializerPlugin\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strValidationError = \"Plugins must provide initialize method\";\r\nvar strNotificationManager = \"_notificationManager\";\r\nvar strSdkUnloadingError = \"SDK is still unloading...\";\r\nvar strSdkNotInitialized = \"SDK is not initialized\";\r\nvar maxInitQueueSize = 100;\r\nvar maxInitTimeout = 50000;\r\n// const strPluginUnloadFailed = \"Failed to unload plugin\";\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultConfig = objDeepFreeze((_a = {\r\n        cookieCfg: {}\r\n    },\r\n    _a[STR_EXTENSIONS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_CHANNELS] = { rdOnly: true, ref: true, v: [] },\r\n    _a[STR_EXTENSION_CONFIG] = { ref: true, v: {} },\r\n    _a[STR_CREATE_PERF_MGR] = UNDEFINED_VALUE,\r\n    _a.loggingLevelConsole = 0 /* eLoggingSeverity.DISABLED */,\r\n    _a.diagnosticLogInterval = UNDEFINED_VALUE,\r\n    _a));\r\n/**\r\n * Helper to create the default performance manager\r\n * @param core\r\n * @param notificationMgr\r\n */\r\nfunction _createPerfManager(core, notificationMgr) {\r\n    return new PerfManager(notificationMgr);\r\n}\r\nfunction _validateExtensions(logger, channelPriority, allExtensions) {\r\n    var _a;\r\n    // Concat all available extensions\r\n    var coreExtensions = [];\r\n    var channels = [];\r\n    // Check if any two extensions have the same priority, then warn to console\r\n    // And extract the local extensions from the\r\n    var extPriorities = {};\r\n    // Extension validation\r\n    arrForEach(allExtensions, function (ext) {\r\n        // Check for ext.initialize\r\n        if (isNullOrUndefined(ext) || isNullOrUndefined(ext[_DYN_INITIALIZE /* @min:%2einitialize */])) {\r\n            throwError(strValidationError);\r\n        }\r\n        var extPriority = ext[STR_PRIORITY /* @min:%2epriority */];\r\n        var identifier = ext[_DYN_IDENTIFIER /* @min:%2eidentifier */];\r\n        if (ext && extPriority) {\r\n            if (!isNullOrUndefined(extPriorities[extPriority])) {\r\n                _warnToConsole(logger, \"Two extensions have same priority #\" + extPriority + \" - \" + extPriorities[extPriority] + \", \" + identifier);\r\n            }\r\n            else {\r\n                // set a value\r\n                extPriorities[extPriority] = identifier;\r\n            }\r\n        }\r\n        // Split extensions to core and channels\r\n        if (!extPriority || extPriority < channelPriority) {\r\n            // Add to core extension that will be managed by AppInsightsCore\r\n            coreExtensions[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n        else {\r\n            channels[_DYN_PUSH /* @min:%2epush */](ext);\r\n        }\r\n    });\r\n    return _a = {},\r\n        _a[STR_CORE /* @min:core */] = coreExtensions,\r\n        _a[STR_CHANNELS /* @min:channels */] = channels,\r\n        _a;\r\n}\r\nfunction _isPluginPresent(thePlugin, plugins) {\r\n    var exists = false;\r\n    arrForEach(plugins, function (plugin) {\r\n        if (plugin === thePlugin) {\r\n            exists = true;\r\n            return -1;\r\n        }\r\n    });\r\n    return exists;\r\n}\r\nfunction _deepMergeConfig(details, target, newValues, merge) {\r\n    // Lets assign the new values to the existing config\r\n    if (newValues) {\r\n        objForEachKey(newValues, function (key, value) {\r\n            if (merge) {\r\n                if (isPlainObject(value) && isPlainObject(target[key])) {\r\n                    // The target is an object and it has a value\r\n                    _deepMergeConfig(details, target[key], value, merge);\r\n                }\r\n            }\r\n            if (merge && isPlainObject(value) && isPlainObject(target[key])) {\r\n                // The target is an object and it has a value\r\n                _deepMergeConfig(details, target[key], value, merge);\r\n            }\r\n            else {\r\n                // Just Assign (replace) and/or make the property dynamic\r\n                details.set(target, key, value);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction _findWatcher(listeners, newWatcher) {\r\n    var theListener = null;\r\n    var idx = -1;\r\n    arrForEach(listeners, function (listener, lp) {\r\n        if (listener.w === newWatcher) {\r\n            theListener = listener;\r\n            idx = lp;\r\n            return -1;\r\n        }\r\n    });\r\n    return { i: idx, l: theListener };\r\n}\r\nfunction _addDelayedCfgListener(listeners, newWatcher) {\r\n    var theListener = _findWatcher(listeners, newWatcher).l;\r\n    if (!theListener) {\r\n        theListener = {\r\n            w: newWatcher,\r\n            rm: function () {\r\n                var fnd = _findWatcher(listeners, newWatcher);\r\n                if (fnd.i !== -1) {\r\n                    listeners[_DYN_SPLICE /* @min:%2esplice */](fnd.i, 1);\r\n                }\r\n            }\r\n        };\r\n        listeners[_DYN_PUSH /* @min:%2epush */](theListener);\r\n    }\r\n    return theListener;\r\n}\r\nfunction _registerDelayedCfgListener(config, listeners, logger) {\r\n    arrForEach(listeners, function (listener) {\r\n        var unloadHdl = onConfigChange(config, listener.w, logger);\r\n        delete listener.w; // Clear the listener reference so it will get garbage collected.\r\n        // replace the remove function\r\n        listener.rm = function () {\r\n            unloadHdl.rm();\r\n        };\r\n    });\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _initDebugListener(configHandler, unloadContainer, notificationManager, debugListener) {\r\n    // Will get recalled if any referenced config values are changed\r\n    unloadContainer.add(configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n        var disableDbgExt = details.cfg.disableDbgExt;\r\n        if (disableDbgExt === true && debugListener) {\r\n            // Remove any previously loaded debug listener\r\n            notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](debugListener);\r\n            debugListener = null;\r\n        }\r\n        if (notificationManager && !debugListener && disableDbgExt !== true) {\r\n            debugListener = getDebugListener(details.cfg);\r\n            notificationManager[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](debugListener);\r\n        }\r\n    }));\r\n    return debugListener;\r\n}\r\n// Moved this outside of the closure to reduce the retained memory footprint\r\nfunction _createUnloadHook(unloadHook) {\r\n    return objDefine({\r\n        rm: function () {\r\n            unloadHook.rm();\r\n        }\r\n    }, \"toJSON\", { v: function () { return \"aicore::onCfgChange<\" + JSON.stringify(unloadHook) + \">\"; } });\r\n}\r\n/**\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar AppInsightsCore = /** @class */ (function () {\r\n    function AppInsightsCore() {\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _configHandler;\r\n        var _isInitialized;\r\n        var _logger;\r\n        var _eventQueue;\r\n        var _notificationManager;\r\n        var _perfManager;\r\n        var _cfgPerfManager;\r\n        var _cookieManager;\r\n        var _pluginChain;\r\n        var _configExtensions;\r\n        var _channelConfig;\r\n        var _channels;\r\n        var _isUnloading;\r\n        var _telemetryInitializerPlugin;\r\n        var _internalLogsEventName;\r\n        var _evtNamespace;\r\n        var _unloadHandlers;\r\n        var _hookContainer;\r\n        var _debugListener;\r\n        var _traceCtx;\r\n        var _instrumentationKey;\r\n        var _cfgListeners;\r\n        var _extensions;\r\n        var _pluginVersionStringArr;\r\n        var _pluginVersionString;\r\n        var _activeStatus; // to indicate if ikey or endpoint url promised is resolved or not\r\n        var _endpoint;\r\n        var _initInMemoMaxSize; // max event count limit during wait for init promises to be resolved\r\n        var _isStatusSet; // track if active status is set in case of init timeout and init promises setting the status twice\r\n        var _initTimer;\r\n        /**\r\n         * Internal log poller\r\n         */\r\n        var _internalLogPoller;\r\n        var _internalLogPollerListening;\r\n        var _forceStopInternalLogPoller;\r\n        dynamicProto(AppInsightsCore, this, function (_self) {\r\n            // Set the default values (also called during teardown)\r\n            _initDefaults();\r\n            // Special internal method to allow the unit tests and DebugPlugin to hook embedded objects\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_extensions, _eventQueue];\r\n            };\r\n            _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () { return _isInitialized; };\r\n            // since version 3.3.0\r\n            _self.activeStatus = function () { return _activeStatus; };\r\n            // since version 3.3.0\r\n            // internal\r\n            _self._setPendingStatus = function () {\r\n                _activeStatus = 3 /* eActiveStatus.PENDING */;\r\n            };\r\n            // Creating the self.initialize = ()\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, extensions, logger, notificationManager) {\r\n                if (_isUnloading) {\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                // Make sure core is only initialized once\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    throwError(\"Core cannot be initialized more than once\");\r\n                }\r\n                _configHandler = createDynamicConfig(config, defaultConfig, logger || _self[_DYN_LOGGER /* @min:%2elogger */], false);\r\n                // Re-assigning the local config property so we don't have any references to the passed value and it can be garbage collected\r\n                config = _configHandler.cfg;\r\n                // This will be \"re-run\" if the referenced config properties are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var rootCfg = details.cfg;\r\n                    var isPending = _activeStatus === 3 /* eActiveStatus.PENDING */;\r\n                    if (isPending) {\r\n                        // means waiting for previous promises to be resolved, won't apply new changes\r\n                        return;\r\n                    }\r\n                    _initInMemoMaxSize = rootCfg.initInMemoMaxSize || maxInitQueueSize;\r\n                    // app Insights core only handle ikey and endpointurl, aisku will handle cs\r\n                    var ikey = rootCfg[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */];\r\n                    var endpointUrl = rootCfg.endpointUrl; // do not need to validate endpoint url, if it is null, default one will be set by sender\r\n                    if (isNullOrUndefined(ikey)) {\r\n                        _instrumentationKey = null;\r\n                        // if new ikey is null, set status to be inactive, all new events will be saved in memory or dropped\r\n                        _activeStatus = ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */];\r\n                        var msg = \"Please provide instrumentation key\";\r\n                        if (!_isInitialized) {\r\n                            // only throw error during initialization\r\n                            throwError(msg);\r\n                        }\r\n                        else {\r\n                            _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 100 /* _eInternalMessageId.InvalidInstrumentationKey */, msg);\r\n                            _releaseQueues();\r\n                        }\r\n                        return;\r\n                    }\r\n                    var promises = [];\r\n                    if (isPromiseLike(ikey)) {\r\n                        promises[_DYN_PUSH /* @min:%2epush */](ikey);\r\n                        _instrumentationKey = null; // reset current local ikey variable (otherwise it will always be the previous ikeys if timeout is called before promise cb)\r\n                    }\r\n                    else {\r\n                        // string\r\n                        _instrumentationKey = ikey;\r\n                    }\r\n                    if (isPromiseLike(endpointUrl)) {\r\n                        promises[_DYN_PUSH /* @min:%2epush */](endpointUrl);\r\n                        _endpoint = null; // reset current local endpoint variable (otherwise it will always be the previous urls if timeout is called before promise cb)\r\n                    }\r\n                    else {\r\n                        // string or null\r\n                        _endpoint = endpointUrl;\r\n                    }\r\n                    // at least have one promise\r\n                    if (promises[_DYN_LENGTH /* @min:%2elength */]) {\r\n                        // reset to false for new dynamic changes\r\n                        _isStatusSet = false;\r\n                        _activeStatus = 3 /* eActiveStatus.PENDING */;\r\n                        var initTimeout = isNotNullOrUndefined(rootCfg.initTimeOut) ? rootCfg.initTimeOut : maxInitTimeout; // rootCfg.initTimeOut could be 0\r\n                        var allPromises = createSyncAllSettledPromise(promises);\r\n                        _initTimer = scheduleTimeout(function () {\r\n                            // set _isStatusSet to true\r\n                            // set active status\r\n                            // release queues\r\n                            _initTimer = null;\r\n                            if (!_isStatusSet) {\r\n                                _setStatus();\r\n                            }\r\n                        }, initTimeout);\r\n                        doAwaitResponse(allPromises, function (response) {\r\n                            try {\r\n                                if (_isStatusSet) {\r\n                                    // promises take too long to resolve, ignore them\r\n                                    // active status should be set by timeout already\r\n                                    return;\r\n                                }\r\n                                if (!response.rejected) {\r\n                                    var values = response[_DYN_VALUE /* @min:%2evalue */];\r\n                                    if (values && values[_DYN_LENGTH /* @min:%2elength */]) {\r\n                                        // ikey\r\n                                        var ikeyRes = values[0];\r\n                                        _instrumentationKey = ikeyRes && ikeyRes[_DYN_VALUE /* @min:%2evalue */];\r\n                                        // endpoint\r\n                                        if (values[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                                            var endpointRes = values[1];\r\n                                            _endpoint = endpointRes && endpointRes[_DYN_VALUE /* @min:%2evalue */];\r\n                                        }\r\n                                    }\r\n                                    if (_instrumentationKey) {\r\n                                        // if ikey is null, no need to trigger extra dynamic changes for extensions\r\n                                        config[_DYN_INSTRUMENTATION_KEY /* @min:%2einstrumentationKey */] = _instrumentationKey; // set config.instrumentationKey for extensions to consume\r\n                                        config.endpointUrl = _endpoint; // set config.endpointUrl for extensions to consume\r\n                                    }\r\n                                }\r\n                                // set _isStatusSet to true\r\n                                // set active status\r\n                                // release queues\r\n                                _setStatus();\r\n                            }\r\n                            catch (e) {\r\n                                if (!_isStatusSet) {\r\n                                    _setStatus();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        // means no promises\r\n                        _setStatus();\r\n                    }\r\n                    //_instrumentationKey = details.cfg.instrumentationKey;\r\n                    // Mark the extensionConfig and all first level keys as referenced\r\n                    // This is so that calls to getExtCfg() will always return the same object\r\n                    // Even when a user may \"re-assign\" the plugin properties (or it's unloaded/reloaded)\r\n                    var extCfg = details.ref(details.cfg, STR_EXTENSION_CONFIG);\r\n                    objForEachKey(extCfg, function (key) {\r\n                        details.ref(extCfg, key);\r\n                    });\r\n                }));\r\n                _notificationManager = notificationManager;\r\n                // Initialize the debug listener outside of the closure to reduce the retained memory footprint\r\n                _debugListener = _initDebugListener(_configHandler, _hookContainer, _notificationManager && _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */](), _debugListener);\r\n                _initPerfManager();\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = logger;\r\n                var cfgExtensions = config[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                // Extension validation\r\n                _configExtensions = [];\r\n                _configExtensions[_DYN_PUSH /* @min:%2epush */].apply(_configExtensions, __spreadArray(__spreadArray([], extensions, false), cfgExtensions, false));\r\n                _channelConfig = config[STR_CHANNELS /* @min:%2echannels */];\r\n                _initPluginChain(null);\r\n                if (!_channels || _channels[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    throwError(\"No \" + STR_CHANNELS + \" available\");\r\n                }\r\n                if (_channelConfig && _channelConfig[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                    var teeController = _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */](\"TeeChannelController\");\r\n                    if (!teeController || !teeController.plugin) {\r\n                        _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 28 /* _eInternalMessageId.SenderNotInitialized */, \"TeeChannel required\");\r\n                    }\r\n                }\r\n                _registerDelayedCfgListener(config, _cfgListeners, _logger);\r\n                _cfgListeners = null;\r\n                _isInitialized = true;\r\n                if (_activeStatus === ActiveStatus.ACTIVE) {\r\n                    _releaseQueues();\r\n                }\r\n            };\r\n            _self.getChannels = function () {\r\n                var controls = [];\r\n                if (_channels) {\r\n                    arrForEach(_channels, function (channel) {\r\n                        controls[_DYN_PUSH /* @min:%2epush */](channel);\r\n                    });\r\n                }\r\n                return objFreeze(controls);\r\n            };\r\n            _self.track = function (telemetryItem) {\r\n                doPerf(_self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */](), function () { return \"AppInsightsCore:track\"; }, function () {\r\n                    if (telemetryItem === null) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        // throw error\r\n                        throwError(\"Invalid telemetry item\");\r\n                    }\r\n                    // do basic validation before sending it through the pipeline\r\n                    if (!telemetryItem[_DYN_NAME /* @min:%2ename */] && isNullOrUndefined(telemetryItem[_DYN_NAME /* @min:%2ename */])) {\r\n                        _notifyInvalidEvent(telemetryItem);\r\n                        throwError(\"telemetry name required\");\r\n                    }\r\n                    // setup default iKey if not passed in\r\n                    telemetryItem[_DYN_I_KEY /* @min:%2eiKey */] = telemetryItem[_DYN_I_KEY /* @min:%2eiKey */] || _instrumentationKey;\r\n                    // add default timestamp if not passed in\r\n                    telemetryItem[_DYN_TIME /* @min:%2etime */] = telemetryItem[_DYN_TIME /* @min:%2etime */] || toISOString(new Date());\r\n                    // Common Schema 4.0\r\n                    telemetryItem.ver = telemetryItem.ver || \"4.0\";\r\n                    if (!_isUnloading && _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]() && _activeStatus === ActiveStatus.ACTIVE) {\r\n                        // Process the telemetry plugin chain\r\n                        _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](telemetryItem);\r\n                    }\r\n                    else if (_activeStatus !== ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */]) {\r\n                        // Queue events until all extensions are initialized\r\n                        if (_eventQueue[_DYN_LENGTH /* @min:%2elength */] <= _initInMemoMaxSize) {\r\n                            // set limit, if full, stop adding new events\r\n                            _eventQueue[_DYN_PUSH /* @min:%2epush */](telemetryItem);\r\n                        }\r\n                    }\r\n                }, function () { return ({ item: telemetryItem }); }, !(telemetryItem.sync));\r\n            };\r\n            _self[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */] = _createTelCtx;\r\n            _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */] = function () {\r\n                if (!_notificationManager) {\r\n                    _notificationManager = new NotificationManager(_configHandler.cfg);\r\n                    // For backward compatibility only\r\n                    _self[strNotificationManager] = _notificationManager;\r\n                }\r\n                return _notificationManager;\r\n            };\r\n            /**\r\n             * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n             * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n             * called.\r\n             * @param listener - An INotificationListener object.\r\n             */\r\n            _self[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */] = function (listener) {\r\n                _self.getNotifyMgr()[_DYN_ADD_NOTIFICATION_LIS1 /* @min:%2eaddNotificationListener */](listener);\r\n            };\r\n            /**\r\n             * Removes all instances of the listener.\r\n             * @param listener - INotificationListener to remove.\r\n             */\r\n            _self[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */] = function (listener) {\r\n                if (_notificationManager) {\r\n                    _notificationManager[_DYN_REMOVE_NOTIFICATION_0 /* @min:%2eremoveNotificationListener */](listener);\r\n                }\r\n            };\r\n            _self.getCookieMgr = function () {\r\n                if (!_cookieManager) {\r\n                    _cookieManager = createCookieMgr(_configHandler.cfg, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _cookieManager;\r\n            };\r\n            _self.setCookieMgr = function (cookieMgr) {\r\n                if (_cookieManager !== cookieMgr) {\r\n                    runTargetUnload(_cookieManager, false);\r\n                    _cookieManager = cookieMgr;\r\n                }\r\n            };\r\n            _self[STR_GET_PERF_MGR /* @min:%2egetPerfMgr */] = function () {\r\n                return _perfManager || _cfgPerfManager || getGblPerfMgr();\r\n            };\r\n            _self.setPerfMgr = function (perfMgr) {\r\n                _perfManager = perfMgr;\r\n            };\r\n            _self.eventCnt = function () {\r\n                return _eventQueue[_DYN_LENGTH /* @min:%2elength */];\r\n            };\r\n            _self.releaseQueue = function () {\r\n                if (_isInitialized && _eventQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var eventQueue = _eventQueue;\r\n                    _eventQueue = [];\r\n                    if (_activeStatus === 2 /* eActiveStatus.ACTIVE */) {\r\n                        arrForEach(eventQueue, function (event) {\r\n                            event[_DYN_I_KEY /* @min:%2eiKey */] = event[_DYN_I_KEY /* @min:%2eiKey */] || _instrumentationKey;\r\n                            _createTelCtx()[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](event);\r\n                        });\r\n                    }\r\n                    else {\r\n                        // new one for msg ikey\r\n                        _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 20 /* _eInternalMessageId.FailedToSendQueuedTelemetry */, \"core init status is not active\");\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */] = function (eventName) {\r\n                _internalLogsEventName = eventName || null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                return _startLogPoller(true);\r\n            };\r\n            function _setStatus() {\r\n                _isStatusSet = true;\r\n                if (isNullOrUndefined(_instrumentationKey)) {\r\n                    _activeStatus = ActiveStatus[_DYN__INACTIVE /* @min:%2eINACTIVE */];\r\n                    _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 112 /* _eInternalMessageId.InitPromiseException */, \"ikey can't be resolved from promises\");\r\n                }\r\n                else {\r\n                    _activeStatus = ActiveStatus.ACTIVE;\r\n                }\r\n                _releaseQueues();\r\n            }\r\n            function _releaseQueues() {\r\n                if (_isInitialized) {\r\n                    _self.releaseQueue();\r\n                    _self[_DYN_POLL_INTERNAL_LOGS /* @min:%2epollInternalLogs */]();\r\n                }\r\n            }\r\n            function _startLogPoller(alwaysStart) {\r\n                if ((!_internalLogPoller || !_internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */]) && !_forceStopInternalLogPoller) {\r\n                    var shouldStart = alwaysStart || (_logger && _logger.queue[_DYN_LENGTH /* @min:%2elength */] > 0);\r\n                    if (shouldStart) {\r\n                        if (!_internalLogPollerListening) {\r\n                            _internalLogPollerListening = true;\r\n                            // listen for any configuration changes so that changes to the\r\n                            // interval will cause the timer to be re-initialized\r\n                            _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                                var interval = details.cfg.diagnosticLogInterval;\r\n                                if (!interval || !(interval > 0)) {\r\n                                    interval = 10000;\r\n                                }\r\n                                var isRunning = false;\r\n                                if (_internalLogPoller) {\r\n                                    // It was already created so remember it's running and cancel\r\n                                    isRunning = _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */];\r\n                                    _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                                }\r\n                                // Create / reconfigure\r\n                                _internalLogPoller = createTimeout(_flushInternalLogs, interval);\r\n                                _internalLogPoller.unref();\r\n                                // Restart if previously running\r\n                                _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = isRunning;\r\n                            }));\r\n                        }\r\n                        _internalLogPoller[_DYN_ENABLED /* @min:%2eenabled */] = true;\r\n                    }\r\n                }\r\n                return _internalLogPoller;\r\n            }\r\n            _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */] = function () {\r\n                _forceStopInternalLogPoller = true;\r\n                _internalLogPoller && _internalLogPoller[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                _flushInternalLogs();\r\n            };\r\n            // Add addTelemetryInitializer\r\n            proxyFunctions(_self, function () { return _telemetryInitializerPlugin; }, [\"addTelemetryInitializer\"]);\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync, unloadComplete, cbTimeout) {\r\n                var _a;\r\n                if (isAsync === void 0) { isAsync = true; }\r\n                if (!_isInitialized) {\r\n                    // The SDK is not initialized\r\n                    throwError(strSdkNotInitialized);\r\n                }\r\n                // Check if the SDK still unloading so throw\r\n                if (_isUnloading) {\r\n                    // The SDK is already unloading\r\n                    throwError(strSdkUnloadingError);\r\n                }\r\n                var unloadState = (_a = {\r\n                        reason: 50 /* TelemetryUnloadReason.SdkUnload */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                    _a.flushComplete = false,\r\n                    _a);\r\n                var result;\r\n                if (isAsync && !unloadComplete) {\r\n                    result = createPromise(function (resolve) {\r\n                        // Set the callback to the promise resolve callback\r\n                        unloadComplete = resolve;\r\n                    });\r\n                }\r\n                var processUnloadCtx = createProcessTelemetryUnloadContext(_getPluginChain(), _self);\r\n                processUnloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                    _hookContainer.run(_self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                    // Run any \"unload\" functions for the _cookieManager, _notificationManager and _logger\r\n                    doUnloadAll([_cookieManager, _notificationManager, _logger], isAsync, function () {\r\n                        _initDefaults();\r\n                        unloadComplete && unloadComplete(unloadState);\r\n                    });\r\n                }, _self);\r\n                function _doUnload(flushComplete) {\r\n                    unloadState.flushComplete = flushComplete;\r\n                    _isUnloading = true;\r\n                    // Run all of the unload handlers first (before unloading the plugins)\r\n                    _unloadHandlers.run(processUnloadCtx, unloadState);\r\n                    // Stop polling the internal logs\r\n                    _self[_DYN_STOP_POLLING_INTERNA3 /* @min:%2estopPollingInternalLogs */]();\r\n                    // Start unloading the components, from this point onwards the SDK should be considered to be in an unstable state\r\n                    processUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                _flushInternalLogs();\r\n                if (!_flushChannels(isAsync, _doUnload, 6 /* SendRequestReason.SdkUnload */, cbTimeout)) {\r\n                    _doUnload(false);\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_GET_PLUGIN /* @min:%2egetPlugin */] = _getPlugin;\r\n            _self.addPlugin = function (plugin, replaceExisting, isAsync, addCb) {\r\n                if (!plugin) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(strValidationError);\r\n                    return;\r\n                }\r\n                var existingPlugin = _getPlugin(plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                if (existingPlugin && !replaceExisting) {\r\n                    addCb && addCb(false);\r\n                    _logOrThrowError(\"Plugin [\" + plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"] is already loaded!\");\r\n                    return;\r\n                }\r\n                var updateState = {\r\n                    reason: 16 /* TelemetryUpdateReason.PluginAdded */\r\n                };\r\n                function _addPlugin(removed) {\r\n                    _configExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                    updateState.added = [plugin];\r\n                    // Re-Initialize the plugin chain\r\n                    _initPluginChain(updateState);\r\n                    addCb && addCb(true);\r\n                }\r\n                if (existingPlugin) {\r\n                    var removedPlugins_1 = [existingPlugin.plugin];\r\n                    var unloadState = {\r\n                        reason: 2 /* TelemetryUnloadReason.PluginReplace */,\r\n                        isAsync: !!isAsync\r\n                    };\r\n                    _removePlugins(removedPlugins_1, unloadState, function (removed) {\r\n                        if (!removed) {\r\n                            // Previous plugin was successfully removed or was not installed\r\n                            addCb && addCb(false);\r\n                        }\r\n                        else {\r\n                            updateState.removed = removedPlugins_1;\r\n                            updateState.reason |= 32 /* TelemetryUpdateReason.PluginRemoved */;\r\n                            _addPlugin(true);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    _addPlugin(false);\r\n                }\r\n            };\r\n            _self.updateCfg = function (newConfig, mergeExisting) {\r\n                if (mergeExisting === void 0) { mergeExisting = true; }\r\n                var updateState;\r\n                if (_self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */]()) {\r\n                    updateState = {\r\n                        reason: 1 /* TelemetryUpdateReason.ConfigurationChanged */,\r\n                        cfg: _configHandler.cfg,\r\n                        oldCfg: deepExtend({}, _configHandler.cfg),\r\n                        newConfig: deepExtend({}, newConfig),\r\n                        merge: mergeExisting\r\n                    };\r\n                    newConfig = updateState.newConfig;\r\n                    var cfg = _configHandler.cfg;\r\n                    // replace the immutable (if initialized) values\r\n                    // We don't currently allow updating the extensions and channels via the update config\r\n                    // So overwriting any user provided values to reuse the existing values\r\n                    newConfig[STR_EXTENSIONS /* @min:%2eextensions */] = cfg[STR_EXTENSIONS /* @min:%2eextensions */];\r\n                    newConfig[STR_CHANNELS /* @min:%2echannels */] = cfg[STR_CHANNELS /* @min:%2echannels */];\r\n                }\r\n                // Explicitly blocking any previous config watchers so that they don't get called because\r\n                // of this bulk update (Probably not necessary)\r\n                _configHandler._block(function (details) {\r\n                    // Lets assign the new values to the existing config either overwriting or re-assigning\r\n                    var theConfig = details.cfg;\r\n                    _deepMergeConfig(details, theConfig, newConfig, mergeExisting);\r\n                    if (!mergeExisting) {\r\n                        // Remove (unassign) the values \"missing\" from the newConfig and also not in the default config\r\n                        objForEachKey(theConfig, function (key) {\r\n                            if (!objHasOwn(newConfig, key)) {\r\n                                // Set the value to undefined\r\n                                details.set(theConfig, key, UNDEFINED_VALUE);\r\n                            }\r\n                        });\r\n                    }\r\n                    // Apply defaults to the new config\r\n                    details[_DYN_SET_DF /* @min:%2esetDf */](theConfig, defaultConfig);\r\n                }, true);\r\n                // Now execute all of the listeners (synchronously) so they update their values immediately\r\n                _configHandler[_DYN_NOTIFY /* @min:%2enotify */]();\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            };\r\n            _self.evtNamespace = function () {\r\n                return _evtNamespace;\r\n            };\r\n            _self.flush = _flushChannels;\r\n            _self.getTraceCtx = function (createNew) {\r\n                if (!_traceCtx) {\r\n                    _traceCtx = createDistributedTraceContext();\r\n                }\r\n                return _traceCtx;\r\n            };\r\n            _self.setTraceCtx = function (traceCtx) {\r\n                _traceCtx = traceCtx || null;\r\n            };\r\n            _self.addUnloadHook = _addUnloadHook;\r\n            // Create the addUnloadCb\r\n            proxyFunctionAs(_self, \"addUnloadCb\", function () { return _unloadHandlers; }, \"add\");\r\n            _self.onCfgChange = function (handler) {\r\n                var unloadHook;\r\n                if (!_isInitialized) {\r\n                    unloadHook = _addDelayedCfgListener(_cfgListeners, handler);\r\n                }\r\n                else {\r\n                    unloadHook = onConfigChange(_configHandler.cfg, handler, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                }\r\n                return _createUnloadHook(unloadHook);\r\n            };\r\n            _self.getWParam = function () {\r\n                return (hasDocument() || !!_configHandler.cfg.enableWParam) ? 0 : -1;\r\n            };\r\n            function _setPluginVersions() {\r\n                var thePlugins = {};\r\n                _pluginVersionStringArr = [];\r\n                var _addPluginVersions = function (plugins) {\r\n                    if (plugins) {\r\n                        arrForEach(plugins, function (plugin) {\r\n                            if (plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] && plugin[_DYN_VERSION /* @min:%2eversion */] && !thePlugins[plugin.identifier]) {\r\n                                var ver = plugin[_DYN_IDENTIFIER /* @min:%2eidentifier */] + \"=\" + plugin[_DYN_VERSION /* @min:%2eversion */];\r\n                                _pluginVersionStringArr[_DYN_PUSH /* @min:%2epush */](ver);\r\n                                thePlugins[plugin.identifier] = plugin;\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                _addPluginVersions(_channels);\r\n                if (_channelConfig) {\r\n                    arrForEach(_channelConfig, function (channels) {\r\n                        _addPluginVersions(channels);\r\n                    });\r\n                }\r\n                _addPluginVersions(_configExtensions);\r\n            }\r\n            function _initDefaults() {\r\n                _isInitialized = false;\r\n                // Use a default logger so initialization errors are not dropped on the floor with full logging\r\n                _configHandler = createDynamicConfig({}, defaultConfig, _self[_DYN_LOGGER /* @min:%2elogger */]);\r\n                // Set the logging level to critical so that any critical initialization failures are displayed on the console\r\n                _configHandler.cfg[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */] = 1 /* eLoggingSeverity.CRITICAL */;\r\n                // Define _self.config\r\n                objDefine(_self, \"config\", {\r\n                    g: function () { return _configHandler.cfg; },\r\n                    s: function (newValue) {\r\n                        _self.updateCfg(newValue, false);\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionStringArr\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionStringArr) {\r\n                            _setPluginVersions();\r\n                        }\r\n                        return _pluginVersionStringArr;\r\n                    }\r\n                });\r\n                objDefine(_self, \"pluginVersionString\", {\r\n                    g: function () {\r\n                        if (!_pluginVersionString) {\r\n                            if (!_pluginVersionStringArr) {\r\n                                _setPluginVersions();\r\n                            }\r\n                            _pluginVersionString = _pluginVersionStringArr.join(\";\");\r\n                        }\r\n                        return _pluginVersionString || STR_EMPTY;\r\n                    }\r\n                });\r\n                objDefine(_self, \"logger\", {\r\n                    g: function () {\r\n                        if (!_logger) {\r\n                            _logger = new DiagnosticLogger(_configHandler.cfg);\r\n                            _configHandler[_DYN_LOGGER /* @min:%2elogger */] = _logger;\r\n                        }\r\n                        return _logger;\r\n                    },\r\n                    s: function (newLogger) {\r\n                        _configHandler[_DYN_LOGGER /* @min:%2elogger */] = newLogger;\r\n                        if (_logger !== newLogger) {\r\n                            runTargetUnload(_logger, false);\r\n                            _logger = newLogger;\r\n                        }\r\n                    }\r\n                });\r\n                _self[_DYN_LOGGER /* @min:%2elogger */] = new DiagnosticLogger(_configHandler.cfg);\r\n                _extensions = [];\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                _telemetryInitializerPlugin = new TelemetryInitializerPlugin();\r\n                _eventQueue = [];\r\n                runTargetUnload(_notificationManager, false);\r\n                _notificationManager = null;\r\n                _perfManager = null;\r\n                _cfgPerfManager = null;\r\n                runTargetUnload(_cookieManager, false);\r\n                _cookieManager = null;\r\n                _pluginChain = null;\r\n                _configExtensions = [];\r\n                _channelConfig = null;\r\n                _channels = null;\r\n                _isUnloading = false;\r\n                _internalLogsEventName = null;\r\n                _evtNamespace = createUniqueNamespace(\"AIBaseCore\", true);\r\n                _unloadHandlers = createUnloadHandlerContainer();\r\n                _traceCtx = null;\r\n                _instrumentationKey = null;\r\n                _hookContainer = createUnloadHookContainer();\r\n                _cfgListeners = [];\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                _forceStopInternalLogPoller = false;\r\n                _internalLogPoller = null;\r\n                _internalLogPollerListening = false;\r\n                _activeStatus = 0 /* eActiveStatus.NONE */; // default is None\r\n                _endpoint = null;\r\n                _initInMemoMaxSize = null;\r\n                _isStatusSet = false;\r\n                _initTimer = null;\r\n            }\r\n            function _createTelCtx() {\r\n                var theCtx = createProcessTelemetryContext(_getPluginChain(), _configHandler.cfg, _self);\r\n                theCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                return theCtx;\r\n            }\r\n            // Initialize or Re-initialize the plugins\r\n            function _initPluginChain(updateState) {\r\n                // Extension validation\r\n                var theExtensions = _validateExtensions(_self[_DYN_LOGGER /* @min:%2elogger */], ChannelControllerPriority, _configExtensions);\r\n                _pluginChain = null;\r\n                _pluginVersionString = null;\r\n                _pluginVersionStringArr = null;\r\n                // Get the primary channel queue and include as part of the normal extensions\r\n                _channels = (_channelConfig || [])[0] || [];\r\n                // Add any channels provided in the extensions and sort them\r\n                _channels = sortPlugins(arrAppend(_channels, theExtensions[STR_CHANNELS /* @min:%2echannels */]));\r\n                // Create an array of all extensions, including the _channels\r\n                var allExtensions = arrAppend(sortPlugins(theExtensions[STR_CORE /* @min:%2ecore */]), _channels);\r\n                // Required to allow plugins to call core.getPlugin() during their own initialization\r\n                _extensions = objFreeze(allExtensions);\r\n                // This has a side effect of adding the extensions passed during initialization\r\n                // into the config.extensions, so you can see all of the extensions loaded.\r\n                // This will also get updated by the addPlugin() and remove plugin code.\r\n                var cfgExtensions = _self.config[STR_EXTENSIONS /* @min:%2eextensions */] || [];\r\n                cfgExtensions.splice(0, cfgExtensions[_DYN_LENGTH /* @min:%2elength */]);\r\n                arrAppend(cfgExtensions, _extensions);\r\n                var rootCtx = _createTelCtx();\r\n                // Initializing the channels first\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    initializePlugins(rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels), allExtensions);\r\n                }\r\n                // Now initialize the normal extensions (explicitly not including the _channels as this can cause duplicate initialization)\r\n                initializePlugins(rootCtx, allExtensions);\r\n                if (updateState) {\r\n                    _doUpdate(updateState);\r\n                }\r\n            }\r\n            function _getPlugin(pluginIdentifier) {\r\n                var theExt = null;\r\n                var thePlugin = null;\r\n                var channelHosts = [];\r\n                arrForEach(_extensions, function (ext) {\r\n                    if (ext[_DYN_IDENTIFIER /* @min:%2eidentifier */] === pluginIdentifier && ext !== _telemetryInitializerPlugin) {\r\n                        thePlugin = ext;\r\n                        return -1;\r\n                    }\r\n                    if (ext.getChannel) {\r\n                        channelHosts[_DYN_PUSH /* @min:%2epush */](ext);\r\n                    }\r\n                });\r\n                if (!thePlugin && channelHosts[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(channelHosts, function (host) {\r\n                        thePlugin = host.getChannel(pluginIdentifier);\r\n                        if (!thePlugin) {\r\n                            return -1;\r\n                        }\r\n                    });\r\n                }\r\n                if (thePlugin) {\r\n                    theExt = {\r\n                        plugin: thePlugin,\r\n                        setEnabled: function (enabled) {\r\n                            _getPluginState(thePlugin)[STR_DISABLED] = !enabled;\r\n                        },\r\n                        isEnabled: function () {\r\n                            var pluginState = _getPluginState(thePlugin);\r\n                            return !pluginState[_DYN_TEARDOWN /* @min:%2eteardown */] && !pluginState[STR_DISABLED];\r\n                        },\r\n                        remove: function (isAsync, removeCb) {\r\n                            var _a;\r\n                            if (isAsync === void 0) { isAsync = true; }\r\n                            var pluginsToRemove = [thePlugin];\r\n                            var unloadState = (_a = {\r\n                                    reason: 1 /* TelemetryUnloadReason.PluginUnload */\r\n                                },\r\n                                _a[_DYN_IS_ASYNC /* @min:isAsync */] = isAsync,\r\n                                _a);\r\n                            _removePlugins(pluginsToRemove, unloadState, function (removed) {\r\n                                if (removed) {\r\n                                    // Re-Initialize the plugin chain\r\n                                    _initPluginChain({\r\n                                        reason: 32 /* TelemetryUpdateReason.PluginRemoved */,\r\n                                        removed: pluginsToRemove\r\n                                    });\r\n                                }\r\n                                removeCb && removeCb(removed);\r\n                            });\r\n                        }\r\n                    };\r\n                }\r\n                return theExt;\r\n            }\r\n            function _getPluginChain() {\r\n                if (!_pluginChain) {\r\n                    // copy the collection of extensions\r\n                    var extensions = (_extensions || []).slice();\r\n                    // During add / remove this may get called again, so don't read if already present\r\n                    if (arrIndexOf(extensions, _telemetryInitializerPlugin) === -1) {\r\n                        extensions[_DYN_PUSH /* @min:%2epush */](_telemetryInitializerPlugin);\r\n                    }\r\n                    _pluginChain = createTelemetryProxyChain(sortPlugins(extensions), _configHandler.cfg, _self);\r\n                }\r\n                return _pluginChain;\r\n            }\r\n            function _removePlugins(thePlugins, unloadState, removeComplete) {\r\n                if (thePlugins && thePlugins[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var unloadChain = createTelemetryProxyChain(thePlugins, _configHandler.cfg, _self);\r\n                    var unloadCtx = createProcessTelemetryUnloadContext(unloadChain, _self);\r\n                    unloadCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](function () {\r\n                        var removed = false;\r\n                        // Remove the listed config extensions\r\n                        var newConfigExtensions = [];\r\n                        arrForEach(_configExtensions, function (plugin, idx) {\r\n                            if (!_isPluginPresent(plugin, thePlugins)) {\r\n                                newConfigExtensions[_DYN_PUSH /* @min:%2epush */](plugin);\r\n                            }\r\n                            else {\r\n                                removed = true;\r\n                            }\r\n                        });\r\n                        _configExtensions = newConfigExtensions;\r\n                        _pluginVersionString = null;\r\n                        _pluginVersionStringArr = null;\r\n                        // Re-Create the channel config\r\n                        var newChannelConfig = [];\r\n                        if (_channelConfig) {\r\n                            arrForEach(_channelConfig, function (queue, idx) {\r\n                                var newQueue = [];\r\n                                arrForEach(queue, function (channel) {\r\n                                    if (!_isPluginPresent(channel, thePlugins)) {\r\n                                        newQueue[_DYN_PUSH /* @min:%2epush */](channel);\r\n                                    }\r\n                                    else {\r\n                                        removed = true;\r\n                                    }\r\n                                });\r\n                                newChannelConfig[_DYN_PUSH /* @min:%2epush */](newQueue);\r\n                            });\r\n                            _channelConfig = newChannelConfig;\r\n                        }\r\n                        removeComplete && removeComplete(removed);\r\n                        _startLogPoller();\r\n                    });\r\n                    unloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](unloadState);\r\n                }\r\n                else {\r\n                    removeComplete(false);\r\n                }\r\n            }\r\n            function _flushInternalLogs() {\r\n                if (_logger && _logger.queue) {\r\n                    var queue = _logger.queue.slice(0);\r\n                    _logger.queue[_DYN_LENGTH /* @min:%2elength */] = 0;\r\n                    arrForEach(queue, function (logMessage) {\r\n                        var _a;\r\n                        var item = (_a = {},\r\n                            _a[_DYN_NAME /* @min:name */] = _internalLogsEventName ? _internalLogsEventName : \"InternalMessageId: \" + logMessage[_DYN_MESSAGE_ID /* @min:%2emessageId */],\r\n                            _a[_DYN_I_KEY /* @min:iKey */] = _instrumentationKey,\r\n                            _a[_DYN_TIME /* @min:time */] = toISOString(new Date()),\r\n                            _a.baseType = _InternalLogMessage.dataType,\r\n                            _a.baseData = { message: logMessage[_DYN_MESSAGE /* @min:%2emessage */] },\r\n                            _a);\r\n                        _self.track(item);\r\n                    });\r\n                }\r\n            }\r\n            function _flushChannels(isAsync, callBack, sendReason, cbTimeout) {\r\n                // Setting waiting to one so that we don't call the callBack until we finish iterating\r\n                var waiting = 1;\r\n                var doneIterating = false;\r\n                var cbTimer = null;\r\n                cbTimeout = cbTimeout || 5000;\r\n                function doCallback() {\r\n                    waiting--;\r\n                    if (doneIterating && waiting === 0) {\r\n                        cbTimer && cbTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n                        cbTimer = null;\r\n                        callBack && callBack(doneIterating);\r\n                        callBack = null;\r\n                    }\r\n                }\r\n                if (_channels && _channels[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var flushCtx = _createTelCtx()[_DYN_CREATE_NEW /* @min:%2ecreateNew */](_channels);\r\n                    flushCtx.iterate(function (plugin) {\r\n                        if (plugin.flush) {\r\n                            waiting++;\r\n                            var handled_1 = false;\r\n                            // Not all channels will call this callback for every scenario\r\n                            if (!plugin.flush(isAsync, function () {\r\n                                handled_1 = true;\r\n                                doCallback();\r\n                            }, sendReason)) {\r\n                                if (!handled_1) {\r\n                                    // If any channel doesn't return true and it didn't call the callback, then we should assume that the callback\r\n                                    // will never be called, so use a timeout to allow the channel(s) some time to \"finish\" before triggering any\r\n                                    // followup function (such as unloading)\r\n                                    if (isAsync && cbTimer == null) {\r\n                                        cbTimer = scheduleTimeout(function () {\r\n                                            cbTimer = null;\r\n                                            doCallback();\r\n                                        }, cbTimeout);\r\n                                    }\r\n                                    else {\r\n                                        doCallback();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                doneIterating = true;\r\n                doCallback();\r\n                return true;\r\n            }\r\n            function _initPerfManager() {\r\n                // Save the previous config based performance manager creator to avoid creating new perf manager instances if unchanged\r\n                var prevCfgPerfMgr;\r\n                // Will get recalled if any referenced config values are changed\r\n                _addUnloadHook(_configHandler[_DYN_WATCH /* @min:%2ewatch */](function (details) {\r\n                    var enablePerfMgr = details.cfg.enablePerfMgr;\r\n                    if (enablePerfMgr) {\r\n                        var createPerfMgr = details.cfg[STR_CREATE_PERF_MGR /* @min:%2ecreatePerfMgr */];\r\n                        // for preCfgPerfMgr = createPerfMgr = null\r\n                        // initial createPerfMgr function should be _createPerfManager\r\n                        if ((prevCfgPerfMgr !== createPerfMgr) || !prevCfgPerfMgr) {\r\n                            if (!createPerfMgr) {\r\n                                createPerfMgr = _createPerfManager;\r\n                            }\r\n                            // Set the performance manager creation function if not defined\r\n                            getSetValue(details.cfg, STR_CREATE_PERF_MGR, createPerfMgr);\r\n                            prevCfgPerfMgr = createPerfMgr;\r\n                            // Remove any existing config based performance manager\r\n                            _cfgPerfManager = null;\r\n                        }\r\n                        // Only create the performance manager if it's not already created or manually set\r\n                        if (!_perfManager && !_cfgPerfManager && isFunction(createPerfMgr)) {\r\n                            // Create a new config based performance manager\r\n                            _cfgPerfManager = createPerfMgr(_self, _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]());\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Remove any existing config based performance manager\r\n                        _cfgPerfManager = null;\r\n                        // Clear the previous cached value so it can be GC'd\r\n                        prevCfgPerfMgr = null;\r\n                    }\r\n                }));\r\n            }\r\n            function _doUpdate(updateState) {\r\n                var updateCtx = createProcessTelemetryUpdateContext(_getPluginChain(), _self);\r\n                updateCtx[_DYN_ON_COMPLETE /* @min:%2eonComplete */](_startLogPoller);\r\n                if (!_self._updateHook || _self._updateHook(updateCtx, updateState) !== true) {\r\n                    updateCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](updateState);\r\n                }\r\n            }\r\n            function _logOrThrowError(message) {\r\n                var logger = _self[_DYN_LOGGER /* @min:%2elogger */];\r\n                if (logger) {\r\n                    // there should always be a logger\r\n                    _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, message);\r\n                    _startLogPoller();\r\n                }\r\n                else {\r\n                    throwError(message);\r\n                }\r\n            }\r\n            function _notifyInvalidEvent(telemetryItem) {\r\n                var manager = _self[_DYN_GET_NOTIFY_MGR /* @min:%2egetNotifyMgr */]();\r\n                if (manager) {\r\n                    manager[STR_EVENTS_DISCARDED /* @min:%2eeventsDiscarded */]([telemetryItem], 2 /* eEventsDiscardedReason.InvalidEvent */);\r\n                }\r\n            }\r\n            function _addUnloadHook(hooks) {\r\n                _hookContainer.add(hooks);\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for AppInsightsCore.prototype.initialize.\r\n// Removed Stub for AppInsightsCore.prototype.getChannels.\r\n// Removed Stub for AppInsightsCore.prototype.track.\r\n// Removed Stub for AppInsightsCore.prototype.getProcessTelContext.\r\n// Removed Stub for AppInsightsCore.prototype.getNotifyMgr.\r\n// Removed Stub for AppInsightsCore.prototype.addNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.removeNotificationListener.\r\n// Removed Stub for AppInsightsCore.prototype.getCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setCookieMgr.\r\n// Removed Stub for AppInsightsCore.prototype.getPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.setPerfMgr.\r\n// Removed Stub for AppInsightsCore.prototype.eventCnt.\r\n// Removed Stub for AppInsightsCore.prototype.pollInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.stopPollingInternalLogs.\r\n// Removed Stub for AppInsightsCore.prototype.addTelemetryInitializer.\r\n// Removed Stub for AppInsightsCore.prototype.unload.\r\n// Removed Stub for AppInsightsCore.prototype.getPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.addPlugin.\r\n// Removed Stub for AppInsightsCore.prototype.updateCfg.\r\n// Removed Stub for AppInsightsCore.prototype.evtNamespace.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadCb.\r\n// Removed Stub for AppInsightsCore.prototype.flush.\r\n// Removed Stub for AppInsightsCore.prototype.getTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.setTraceCtx.\r\n// Removed Stub for AppInsightsCore.prototype.addUnloadHook.\r\n// Removed Stub for AppInsightsCore.prototype.onCfgChange.\r\n// Removed Stub for AppInsightsCore.prototype.activeStatus.\r\n// Removed Stub for AppInsightsCore.prototype._setPendingStatus.\r\n// Removed Stub for AppInsightsCore.prototype.releaseQueue.\r\n// Removed Stub for AppInsightsCore.prototype._updateHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    AppInsightsCore.__ieDyn=1;\n\n    return AppInsightsCore;\r\n}());\r\nexport { AppInsightsCore };\r\n//# sourceMappingURL=AppInsightsCore.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n// \r\n// \r\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_DIAG_LOG, _DYN_LENGTH, _DYN_PROCESS_NEXT, _DYN_SPLICE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { BaseTelemetryPlugin } from \"./BaseTelemetryPlugin\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getExceptionName } from \"./HelperFuncs\";\r\nimport { STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nfunction _addInitializer(_initializers, id, telemetryInitializer) {\r\n    var theInitializer = {\r\n        id: id,\r\n        fn: telemetryInitializer\r\n    };\r\n    arrAppend(_initializers, theInitializer);\r\n    var handler = {\r\n        remove: function () {\r\n            arrForEach(_initializers, function (initializer, idx) {\r\n                if (initializer.id === theInitializer.id) {\r\n                    _initializers[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                    return -1;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    return handler;\r\n}\r\nfunction _runInitializers(_initializers, item, logger) {\r\n    var doNotSendItem = false;\r\n    var telemetryInitializersCount = _initializers[_DYN_LENGTH /* @min:%2elength */];\r\n    for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n        var telemetryInitializer = _initializers[i];\r\n        if (telemetryInitializer) {\r\n            try {\r\n                if (telemetryInitializer.fn[_DYN_APPLY /* @min:%2eapply */](null, [item]) === false) {\r\n                    doNotSendItem = true;\r\n                    break;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // log error but dont stop executing rest of the telemetry initializers\r\n                // doNotSendItem = true;\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Telemetry initializer failed: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n            }\r\n        }\r\n    }\r\n    return !doNotSendItem;\r\n}\r\nvar TelemetryInitializerPlugin = /** @class */ (function (_super) {\r\n    __extends(TelemetryInitializerPlugin, _super);\r\n    function TelemetryInitializerPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"TelemetryInitializerPlugin\";\r\n        _this.priority = 199;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _id;\r\n        var _initializers;\r\n        _initDefaults();\r\n        dynamicProto(TelemetryInitializerPlugin, _this, function (_self, _base) {\r\n            _self.addTelemetryInitializer = function (telemetryInitializer) {\r\n                return _addInitializer(_initializers, _id++, telemetryInitializer);\r\n            };\r\n            _self[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */] = function (item, itemCtx) {\r\n                if (_runInitializers(_initializers, item, itemCtx ? itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]() : _self[_DYN_DIAG_LOG /* @min:%2ediagLog */]())) {\r\n                    _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item, itemCtx);\r\n                }\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function () {\r\n                _initDefaults();\r\n            };\r\n        });\r\n        function _initDefaults() {\r\n            _id = 0;\r\n            _initializers = [];\r\n        }\r\n        return _this;\r\n    }\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.addTelemetryInitializer.\r\n// Removed Stub for TelemetryInitializerPlugin.prototype.processTelemetry.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    TelemetryInitializerPlugin.__ieDyn=1;\n\n    return TelemetryInitializerPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { TelemetryInitializerPlugin };\r\n//# sourceMappingURL=TelemetryInitializerPlugin.js.map","/*\n * Application Insights JavaScript SDK - Common, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n// Licensed under the\r\nexport { correlationIdSetPrefix, correlationIdGetPrefix, correlationIdCanIncludeCorrelationHeader, correlationIdGetCorrelationContext, correlationIdGetCorrelationContextValue, dateTimeUtilsNow, dateTimeUtilsDuration, isInternalApplicationInsightsEndpoint, createDistributedTraceContextFromTrace } from \"./Util\";\r\nexport { ThrottleMgr } from \"./ThrottleMgr\";\r\nexport { parseConnectionString, ConnectionStringParser } from \"./ConnectionStringParser\";\r\nexport { RequestHeaders } from \"./RequestResponseHeaders\";\r\nexport { DisabledPropertyName, ProcessLegacy, SampleRate, HttpMethod, DEFAULT_BREEZE_ENDPOINT, DEFAULT_BREEZE_PATH, strNotSpecified } from \"./Constants\";\r\nexport { Envelope } from \"./Telemetry/Common/Envelope\";\r\nexport { Event } from \"./Telemetry/Event\";\r\nexport { Exception } from \"./Telemetry/Exception\";\r\nexport { Metric } from \"./Telemetry/Metric\";\r\nexport { PageView } from \"./Telemetry/PageView\";\r\nexport { RemoteDependencyData } from \"./Telemetry/RemoteDependencyData\";\r\nexport { Trace } from \"./Telemetry/Trace\";\r\nexport { PageViewPerformance } from \"./Telemetry/PageViewPerformance\";\r\nexport { Data } from \"./Telemetry/Common/Data\";\r\nexport { SeverityLevel } from \"./Interfaces/Contracts/SeverityLevel\";\r\nexport { ConfigurationManager } from \"./Interfaces/IConfig\";\r\nexport { ContextTagKeys } from \"./Interfaces/Contracts/ContextTagKeys\";\r\nexport { dataSanitizeKeyAndAddUniqueness, dataSanitizeKey, dataSanitizeString, dataSanitizeUrl, dataSanitizeMessage, dataSanitizeException, dataSanitizeProperties, dataSanitizeMeasurements, dataSanitizeId, dataSanitizeInput, dsPadNumber } from \"./Telemetry/Common/DataSanitizer\";\r\nexport { TelemetryItemCreator, createTelemetryItem } from \"./TelemetryItemCreator\";\r\nexport { CtxTagKeys, Extensions } from \"./Interfaces/PartAExtensions\";\r\nexport { DistributedTracingModes, EventPersistence } from \"./Enums\";\r\nexport { stringToBoolOrDefault, msToTimeSpan, getExtensionByName, isCrossOriginError } from \"./HelperFuncs\";\r\nexport { isBeaconsSupported as isBeaconApiSupported, createTraceParent, parseTraceParent, isValidTraceId, isValidSpanId, isValidTraceParent, isSampledFlag, formatTraceParent, findW3cTraceParent, findAllScripts } from \"@microsoft/applicationinsights-core-js\";\r\nexport { createDomEvent } from \"./DomHelperFuncs\";\r\nexport { utlDisableStorage, utlEnableStorage, utlCanUseLocalStorage, utlGetLocalStorage, utlSetLocalStorage, utlRemoveStorage, utlCanUseSessionStorage, utlGetSessionStorageKeys, utlGetSessionStorage, utlSetSessionStorage, utlRemoveSessionStorage, utlSetStoragePrefix } from \"./StorageHelperFuncs\";\r\nexport { urlParseUrl, urlGetAbsoluteUrl, urlGetPathName, urlGetCompleteUrl, urlParseHost, urlParseFullHost } from \"./UrlHelperFuncs\";\r\nexport { createOfflineListener } from \"./Offline\";\r\nexport var PropertiesPluginIdentifier = \"AppInsightsPropertiesPlugin\";\r\nexport var BreezeChannelIdentifier = \"AppInsightsChannelPlugin\";\r\nexport var AnalyticsPluginIdentifier = \"ApplicationInsightsAnalytics\";\r\n//# sourceMappingURL=applicationinsights-common.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExperimentationService = void 0;\nvar ExperimentationService_1 = require(\"./tas-client/ExperimentationService\");\nObject.defineProperty(exports, \"ExperimentationService\", { enumerable: true, get: function () { return ExperimentationService_1.ExperimentationService; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PollingService = void 0;\nclass PollingService {\n    constructor(fetchInterval) {\n        this.fetchInterval = fetchInterval;\n    }\n    StopPolling() {\n        clearInterval(this.intervalHandle);\n        this.intervalHandle = undefined;\n    }\n    OnPollTick(callback) {\n        this.onTick = callback;\n    }\n    StartPolling(pollImmediately = false) {\n        if (this.intervalHandle) {\n            this.StopPolling();\n        }\n        // If there's no callback, there's no point to start polling.\n        if (this.onTick == null) {\n            return;\n        }\n        if (pollImmediately) {\n            this.onTick().then(() => { return; }).catch(() => { return; });\n        }\n        /**\n         * Set the interval to start running.\n         */\n        this.intervalHandle = setInterval(async () => {\n            await this.onTick();\n        }, this.fetchInterval);\n        if (this.intervalHandle.unref) { // unref is only available in Node, not the web\n            this.intervalHandle.unref(); // unref is used to avoid keeping node.js alive only because of these timeouts.\n        }\n    }\n}\nexports.PollingService = PollingService;\n//# sourceMappingURL=PollingService.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const crypto = globalThis.crypto;\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnumStyle } from \"../JavaScriptSDK.Enums/EnumHelperFuncs\";\r\n/**\r\n * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n */\r\nexport var EventsDiscardedReason = createEnumStyle({\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0 /* eEventsDiscardedReason.Unknown */,\r\n    /**\r\n     * Status set to non-retryable.\r\n     */\r\n    NonRetryableStatus: 1 /* eEventsDiscardedReason.NonRetryableStatus */,\r\n    /**\r\n     * The event is invalid.\r\n     */\r\n    InvalidEvent: 2 /* eEventsDiscardedReason.InvalidEvent */,\r\n    /**\r\n     * The size of the event is too large.\r\n     */\r\n    SizeLimitExceeded: 3 /* eEventsDiscardedReason.SizeLimitExceeded */,\r\n    /**\r\n     * The server is not accepting events from this instrumentation key.\r\n     */\r\n    KillSwitch: 4 /* eEventsDiscardedReason.KillSwitch */,\r\n    /**\r\n     * The event queue is full.\r\n     */\r\n    QueueFull: 5 /* eEventsDiscardedReason.QueueFull */\r\n});\r\n/**\r\n *  The eBatchDiscardedReason enumeration contains a set of values that specify the reason for discarding offline batches.\r\n */\r\nexport var BatchDiscardedReason = createEnumStyle({\r\n    /**\r\n     * Unknown.\r\n     */\r\n    Unknown: 0 /* eBatchDiscardedReason.Unknown */,\r\n    /**\r\n      * Status set to non-retryable after sending\r\n      */\r\n    NonRetryableStatus: 1 /* eBatchDiscardedReason.NonRetryableStatus */,\r\n    /**\r\n     * Batches with lower number of critical events are dropped to free up storage space\r\n     */\r\n    CleanStorage: 2 /* eBatchDiscardedReason.CleanStorage */,\r\n    /**\r\n     * The batches in storage exceed max allowed time\r\n     */\r\n    MaxInStorageTimeExceeded: 3 /* eBatchDiscardedReason.MaxInStorageTimeExceeded */\r\n});\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { ObjAssign, ObjClass } from \"@microsoft/applicationinsights-shims\";\r\nimport { arrForEach, asString as asString21, isArray, isBoolean, isError, isFunction, isNullOrUndefined, isNumber, isObject, isPlainObject, isString, isUndefined, objDeepFreeze, objDefine, objForEachKey, objHasOwn, strIndexOf, strTrim } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_GET_ALL_RESPONSE_HEA5, _DYN_GET_RESPONSE_HEADER, _DYN_LENGTH, _DYN_NAME, _DYN_REPLACE, _DYN_SPLIT, _DYN_STATUS, _DYN_TO_LOWER_CASE } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// RESTRICT and AVOID circular dependencies you should not import other contained modules or export the contents of this file directly\r\n// Added to help with minification\r\nvar strGetPrototypeOf = \"getPrototypeOf\";\r\nvar rCamelCase = /-([a-z])/g;\r\nvar rNormalizeInvalid = /([^\\w\\d_$])/g;\r\nvar rLeadingNumeric = /^(\\d+[\\w\\d_$])/;\r\nexport var _getObjProto = Object[strGetPrototypeOf];\r\nexport function isNotUndefined(value) {\r\n    return !isUndefined(value);\r\n}\r\nexport function isNotNullOrUndefined(value) {\r\n    return !isNullOrUndefined(value);\r\n}\r\n/**\r\n * Validates that the string name conforms to the JS IdentifierName specification and if not\r\n * normalizes the name so that it would. This method does not identify or change any keywords\r\n * meaning that if you pass in a known keyword the same value will be returned.\r\n * This is a simplified version\r\n * @param name - The name to validate\r\n */\r\nexport function normalizeJsName(name) {\r\n    var value = name;\r\n    if (value && isString(value)) {\r\n        // CamelCase everything after the \"-\" and remove the dash\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rCamelCase, function (_all, letter) {\r\n            return letter.toUpperCase();\r\n        });\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rNormalizeInvalid, \"_\");\r\n        value = value[_DYN_REPLACE /* @min:%2ereplace */](rLeadingNumeric, function (_all, match) {\r\n            return \"_\" + match;\r\n        });\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A simple wrapper (for minification support) to check if the value contains the search string.\r\n * @param value - The string value to check for the existence of the search value\r\n * @param search - The value search within the value\r\n */\r\nexport function strContains(value, search) {\r\n    if (value && search) {\r\n        return strIndexOf(value, search) !== -1;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Convert a date to I.S.O. format in IE8\r\n */\r\nexport function toISOString(date) {\r\n    return date && date.toISOString() || \"\";\r\n}\r\nexport var deepFreeze = objDeepFreeze;\r\n/**\r\n * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n */\r\nexport function getExceptionName(object) {\r\n    if (isError(object)) {\r\n        return object[_DYN_NAME /* @min:%2ename */];\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Sets the provided value on the target instance using the field name when the provided chk function returns true, the chk\r\n * function will only be called if the new value is no equal to the original value.\r\n * @param target - The target object\r\n * @param field - The key of the target\r\n * @param value - The value to set\r\n * @param valChk - [Optional] Callback to check the value that if supplied will be called check if the new value can be set\r\n * @param srcChk - [Optional] Callback to check to original value that if supplied will be called if the new value should be set (if allowed)\r\n * @returns The existing or new value, depending what was set\r\n */\r\nexport function setValue(target, field, value, valChk, srcChk) {\r\n    var theValue = value;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (theValue !== value && (!srcChk || srcChk(theValue)) && (!valChk || valChk(value))) {\r\n            theValue = value;\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    return theValue;\r\n}\r\n/**\r\n * Returns the current value from the target object if not null or undefined otherwise sets the new value and returns it\r\n * @param target - The target object to return or set the default value\r\n * @param field - The key for the field to set on the target\r\n * @param defValue - [Optional] The value to set if not already present, when not provided a empty object will be added\r\n */\r\nexport function getSetValue(target, field, defValue) {\r\n    var theValue;\r\n    if (target) {\r\n        theValue = target[field];\r\n        if (!theValue && isNullOrUndefined(theValue)) {\r\n            // Supports having the default as null\r\n            theValue = !isUndefined(defValue) ? defValue : {};\r\n            target[field] = theValue;\r\n        }\r\n    }\r\n    else {\r\n        // Expanded for performance so we only check defValue if required\r\n        theValue = !isUndefined(defValue) ? defValue : {};\r\n    }\r\n    return theValue;\r\n}\r\nfunction _createProxyFunction(source, funcName) {\r\n    var srcFunc = null;\r\n    var src = null;\r\n    if (isFunction(source)) {\r\n        srcFunc = source;\r\n    }\r\n    else {\r\n        src = source;\r\n    }\r\n    return function () {\r\n        // Capture the original arguments passed to the method\r\n        var originalArguments = arguments;\r\n        if (srcFunc) {\r\n            src = srcFunc();\r\n        }\r\n        if (src) {\r\n            return src[funcName][_DYN_APPLY /* @min:%2eapply */](src, originalArguments);\r\n        }\r\n    };\r\n}\r\n/**\r\n * Effectively assigns all enumerable properties (not just own properties) and functions (including inherited prototype) from\r\n * the source object to the target, it attempts to use proxy getters / setters (if possible) and proxy functions to avoid potential\r\n * implementation issues by assigning prototype functions as instance ones\r\n *\r\n * This method is the primary method used to \"update\" the snippet proxy with the ultimate implementations.\r\n *\r\n * Special ES3 Notes:\r\n * Updates (setting) of direct property values on the target or indirectly on the source object WILL NOT WORK PROPERLY, updates to the\r\n * properties of \"referenced\" object will work (target.context.newValue = 10 => will be reflected in the source.context as it's the\r\n * same object). ES3 Failures: assigning target.myProp = 3 -> Won't change source.myProp = 3, likewise the reverse would also fail.\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param chkSet - An optional callback to determine whether a specific property/function should be proxied\r\n */\r\nexport function proxyAssign(target, source, chkSet) {\r\n    if (target && source && isObject(target) && isObject(source)) {\r\n        var _loop_1 = function (field) {\r\n            if (isString(field)) {\r\n                var value = source[field];\r\n                if (isFunction(value)) {\r\n                    if (!chkSet || chkSet(field, true, source, target)) {\r\n                        // Create a proxy function rather than just copying the (possible) prototype to the new object as an instance function\r\n                        target[field] = _createProxyFunction(source, field);\r\n                    }\r\n                }\r\n                else if (!chkSet || chkSet(field, false, source, target)) {\r\n                    if (objHasOwn(target, field)) {\r\n                        // Remove any previous instance property\r\n                        delete target[field];\r\n                    }\r\n                    objDefine(target, field, {\r\n                        g: function () {\r\n                            return source[field];\r\n                        },\r\n                        s: function (theValue) {\r\n                            source[field] = theValue;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // effectively apply/proxy full source to the target instance\r\n        for (var field in source) {\r\n            _loop_1(field);\r\n        }\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Creates a proxy function on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param name - The function name that will be added on the target\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param theFunc - The function name on the source that will be proxied on the target\r\n * @param overwriteTarget - If `false` this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctionAs(target, name, source, theFunc, overwriteTarget) {\r\n    if (target && name && source) {\r\n        if (overwriteTarget !== false || isUndefined(target[name])) {\r\n            target[name] = _createProxyFunction(source, theFunc);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Creates proxy functions on the target which internally will call the source version with all arguments passed to the target method.\r\n *\r\n * @param target - The target object to be assigned with the source properties and functions\r\n * @param source - The source object which will be assigned / called by setting / calling the targets proxies\r\n * @param functionsToProxy - An array of function names that will be proxied on the target\r\n * @param overwriteTarget - If false this will not replace any pre-existing name otherwise (the default) it will overwrite any existing name\r\n */\r\nexport function proxyFunctions(target, source, functionsToProxy, overwriteTarget) {\r\n    if (target && source && isObject(target) && isArray(functionsToProxy)) {\r\n        arrForEach(functionsToProxy, function (theFuncName) {\r\n            if (isString(theFuncName)) {\r\n                proxyFunctionAs(target, theFuncName, source, theFuncName, overwriteTarget);\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n/**\r\n * Simpler helper to create a dynamic class that implements the interface and populates the values with the defaults.\r\n * Only instance properties (hasOwnProperty) values are copied from the defaults to the new instance\r\n * @param defaults - Simple helper\r\n */\r\nexport function createClassFromInterface(defaults) {\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            var _this = this;\r\n            if (defaults) {\r\n                objForEachKey(defaults, function (field, value) {\r\n                    _this[field] = value;\r\n                });\r\n            }\r\n        }\r\n        return class_1;\r\n    }());\r\n}\r\n/**\r\n * A helper function to assist with JIT performance for objects that have properties added / removed dynamically\r\n * this is primarily for chromium based browsers and has limited effects on Firefox and none of IE. Only call this\r\n * function after you have finished \"updating\" the object, calling this within loops reduces or defeats the benefits.\r\n * This helps when iterating using for..in, objKeys() and objForEach()\r\n * @param theObject - The object to be optimized if possible\r\n */\r\nexport function optimizeObject(theObject) {\r\n    // V8 Optimization to cause the JIT compiler to create a new optimized object for looking up the own properties\r\n    // primarily for object with <= 19 properties for >= 20 the effect is reduced or non-existent\r\n    if (theObject && ObjAssign) {\r\n        theObject = ObjClass(ObjAssign({}, theObject));\r\n    }\r\n    return theObject;\r\n}\r\nexport function objExtend(obj1, obj2, obj3, obj4, obj5, obj6) {\r\n    // Variables\r\n    var theArgs = arguments;\r\n    var extended = theArgs[0] || {};\r\n    var argLen = theArgs[_DYN_LENGTH /* @min:%2elength */];\r\n    var deep = false;\r\n    var idx = 1;\r\n    // Check for \"Deep\" flag\r\n    if (argLen > 0 && isBoolean(extended)) {\r\n        deep = extended;\r\n        extended = theArgs[idx] || {};\r\n        idx++;\r\n    }\r\n    // Handle case when target is a string or something (possible in deep copy)\r\n    if (!isObject(extended)) {\r\n        extended = {};\r\n    }\r\n    // Loop through each remaining object and conduct a merge\r\n    for (; idx < argLen; idx++) {\r\n        var arg = theArgs[idx];\r\n        var isArgArray = isArray(arg);\r\n        var isArgObj = isObject(arg);\r\n        for (var prop in arg) {\r\n            var propOk = (isArgArray && (prop in arg)) || (isArgObj && objHasOwn(arg, prop));\r\n            if (!propOk) {\r\n                continue;\r\n            }\r\n            var newValue = arg[prop];\r\n            var isNewArray = void 0;\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && newValue && ((isNewArray = isArray(newValue)) || isPlainObject(newValue))) {\r\n                // Grab the current value of the extended object\r\n                var clone = extended[prop];\r\n                if (isNewArray) {\r\n                    if (!isArray(clone)) {\r\n                        // We can't \"merge\" an array with a non-array so overwrite the original\r\n                        clone = [];\r\n                    }\r\n                }\r\n                else if (!isPlainObject(clone)) {\r\n                    // We can't \"merge\" an object with a non-object\r\n                    clone = {};\r\n                }\r\n                // Never move the original objects always clone them\r\n                newValue = objExtend(deep, clone, newValue);\r\n            }\r\n            // Assign the new (or previous) value (unless undefined)\r\n            if (newValue !== undefined) {\r\n                extended[prop] = newValue;\r\n            }\r\n        }\r\n    }\r\n    return extended;\r\n}\r\nexport var asString = asString21;\r\nexport function isFeatureEnabled(feature, cfg) {\r\n    var rlt = false;\r\n    var ft = cfg && cfg.featureOptIn && cfg.featureOptIn[feature];\r\n    if (feature && ft) {\r\n        var mode = ft.mode;\r\n        // NOTE: None will be considered as true\r\n        rlt = (mode == 3 /* FeatureOptInMode.enable */) || (mode == 1 /* FeatureOptInMode.none */);\r\n    }\r\n    return rlt;\r\n}\r\nexport function getResponseText(xhr) {\r\n    try {\r\n        return xhr.responseText;\r\n    }\r\n    catch (e) {\r\n        // Best effort, as XHR may throw while XDR wont so just ignore\r\n    }\r\n    return null;\r\n}\r\nexport function formatErrorMessageXdr(xdr, message) {\r\n    if (xdr) {\r\n        return \"XDomainRequest,Response:\" + getResponseText(xdr) || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function formatErrorMessageXhr(xhr, message) {\r\n    if (xhr) {\r\n        return \"XMLHttpRequest,Status:\" + xhr[_DYN_STATUS /* @min:%2estatus */] + \",Response:\" + getResponseText(xhr) || xhr.response || \"\";\r\n    }\r\n    return message;\r\n}\r\nexport function prependTransports(theTransports, newTransports) {\r\n    if (newTransports) {\r\n        if (isNumber(newTransports)) {\r\n            theTransports = [newTransports].concat(theTransports);\r\n        }\r\n        else if (isArray(newTransports)) {\r\n            theTransports = newTransports.concat(theTransports);\r\n        }\r\n    }\r\n    return theTransports;\r\n}\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n* Converts the XHR getAllResponseHeaders to a map containing the header key and value.\r\n* @internal\r\n*/\r\n// tslint:disable-next-line: align\r\nexport function convertAllHeadersToMap(headersString) {\r\n    var headers = {};\r\n    if (isString(headersString)) {\r\n        var headersArray = strTrim(headersString)[_DYN_SPLIT /* @min:%2esplit */](/[\\r\\n]+/);\r\n        arrForEach(headersArray, function (headerEntry) {\r\n            if (headerEntry) {\r\n                var idx = headerEntry.indexOf(\": \");\r\n                if (idx !== -1) {\r\n                    // The new spec has the headers returning all as lowercase -- but not all browsers do this yet\r\n                    var header = strTrim(headerEntry.substring(0, idx))[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n                    var value = strTrim(headerEntry.substring(idx + 1));\r\n                    headers[header] = value;\r\n                }\r\n                else {\r\n                    headers[strTrim(headerEntry)] = 1;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n/**\r\n* append the XHR headers.\r\n* @internal\r\n*/\r\nexport function _appendHeader(theHeaders, xhr, name) {\r\n    if (!theHeaders[name] && xhr && xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */]) {\r\n        var value = xhr[_DYN_GET_RESPONSE_HEADER /* @min:%2egetResponseHeader */](name);\r\n        if (value) {\r\n            theHeaders[name] = strTrim(value);\r\n        }\r\n    }\r\n    return theHeaders;\r\n}\r\nvar STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nvar STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nvar STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\n/**\r\n* get the XHR getAllResponseHeaders.\r\n* @internal\r\n*/\r\nexport function _getAllResponseHeaders(xhr, isOneDs) {\r\n    var theHeaders = {};\r\n    if (!xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]) {\r\n        // Firefox 2-63 doesn't have getAllResponseHeaders function but it does have getResponseHeader\r\n        // Only call these if getAllResponseHeaders doesn't exist, otherwise we can get invalid response errors\r\n        // as collector is not currently returning the correct header to allow JS to access these headers\r\n        if (!!isOneDs) {\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_TIME_DELTA_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_HEADER);\r\n            theHeaders = _appendHeader(theHeaders, xhr, STR_KILL_DURATION_SECONDS_HEADER);\r\n        }\r\n    }\r\n    else {\r\n        theHeaders = convertAllHeadersToMap(xhr[_DYN_GET_ALL_RESPONSE_HEA5 /* @min:%2egetAllResponseHeaders */]());\r\n    }\r\n    return theHeaders;\r\n}\r\n//# sourceMappingURL=HelperFuncs.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as path from 'path';\nimport { ProgressLocation, Uri, commands, env, l10n, window } from 'vscode';\nimport { Log } from './common/logger';\nimport { Config } from './config';\nimport { UriEventHandler } from './github';\nimport { fetching } from './node/fetch';\nimport { crypto } from './node/crypto';\nimport { LoopbackAuthServer } from './node/authServer';\nimport { promiseFromEvent } from './common/utils';\nimport { isHostedGitHubEnterprise } from './common/env';\nimport { NETWORK_ERROR, TIMED_OUT_ERROR, USER_CANCELLATION_ERROR } from './common/errors';\n\ninterface IGitHubDeviceCodeResponse {\n\tdevice_code: string;\n\tuser_code: string;\n\tverification_uri: string;\n\tinterval: number;\n}\n\ninterface IFlowOptions {\n\t// GitHub.com\n\treadonly supportsGitHubDotCom: boolean;\n\t// A GitHub Enterprise Server that is hosted by an organization\n\treadonly supportsGitHubEnterpriseServer: boolean;\n\t// A GitHub Enterprise Server that is hosted by GitHub for an organization\n\treadonly supportsHostedGitHubEnterprise: boolean;\n\n\t// Runtimes - there are constraints on which runtimes support which flows\n\treadonly supportsWebWorkerExtensionHost: boolean;\n\treadonly supportsRemoteExtensionHost: boolean;\n\n\t// Clients - see `isSupportedClient` in `common/env.ts` for what constitutes a supported client\n\treadonly supportsSupportedClients: boolean;\n\treadonly supportsUnsupportedClients: boolean;\n\n\t// Configurations - some flows require a client secret\n\treadonly supportsNoClientSecret: boolean;\n}\n\nexport const enum GitHubTarget {\n\tDotCom,\n\tEnterprise,\n\tHostedEnterprise\n}\n\nexport const enum ExtensionHost {\n\tWebWorker,\n\tRemote,\n\tLocal\n}\n\nexport interface IFlowQuery {\n\ttarget: GitHubTarget;\n\textensionHost: ExtensionHost;\n\tisSupportedClient: boolean;\n}\n\ninterface IFlowTriggerOptions {\n\t/**\n\t * The scopes to request for the OAuth flow.\n\t */\n\tscopes: string;\n\t/**\n\t * The base URI for the flow. This is used to determine which GitHub instance to authenticate against.\n\t */\n\tbaseUri: Uri;\n\t/**\n\t * The specific auth provider to use for the flow.\n\t */\n\tsignInProvider?: GitHubSocialSignInProvider;\n\t/**\n\t * Extra parameters to include in the OAuth flow.\n\t */\n\textraAuthorizeParameters?: Record<string, string>;\n\t/**\n\t * The Uri that the OAuth flow will redirect to. (i.e. vscode.dev/redirect)\n\t */\n\tredirectUri: Uri;\n\t/**\n\t * The Uri to redirect to after redirecting to the redirect Uri. (i.e. vscode://....)\n\t */\n\tcallbackUri: Uri;\n\t/**\n\t * The enterprise URI for the flow, if applicable.\n\t */\n\tenterpriseUri?: Uri;\n\t/**\n\t * The existing login which will be used to pre-fill the login prompt.\n\t */\n\texistingLogin?: string;\n\t/**\n\t * The nonce for this particular flow. This is used to prevent replay attacks.\n\t */\n\tnonce: string;\n\t/**\n\t * The instance of the Uri Handler for this extension\n\t */\n\turiHandler: UriEventHandler;\n\t/**\n\t * The logger to use for this flow.\n\t */\n\tlogger: Log;\n}\n\ninterface IFlow {\n\tlabel: string;\n\toptions: IFlowOptions;\n\ttrigger(options: IFlowTriggerOptions): Promise<string>;\n}\n\n/**\n * Generates a cryptographically secure random string for PKCE code verifier.\n * @param length The length of the string to generate\n * @returns A random hex string\n */\nfunction generateRandomString(length: number): string {\n\tconst array = new Uint8Array(length);\n\tcrypto.getRandomValues(array);\n\treturn Array.from(array)\n\t\t.map(b => b.toString(16).padStart(2, '0'))\n\t\t.join('')\n\t\t.substring(0, length);\n}\n\n/**\n * Generates a PKCE code challenge from a code verifier using SHA-256.\n * @param codeVerifier The code verifier string\n * @returns A base64url-encoded SHA-256 hash of the code verifier\n */\nasync function generateCodeChallenge(codeVerifier: string): Promise<string> {\n\tconst encoder = new TextEncoder();\n\tconst data = encoder.encode(codeVerifier);\n\tconst digest = await crypto.subtle.digest('SHA-256', data);\n\n\t// Base64url encode the digest\n\tconst base64String = btoa(String.fromCharCode(...new Uint8Array(digest)));\n\treturn base64String\n\t\t.replace(/\\+/g, '-')\n\t\t.replace(/\\//g, '_')\n\t\t.replace(/=+$/, '');\n}\n\nasync function exchangeCodeForToken(\n\tlogger: Log,\n\tendpointUri: Uri,\n\tredirectUri: Uri,\n\tcode: string,\n\tcodeVerifier: string,\n\tenterpriseUri?: Uri\n): Promise<string> {\n\tlogger.info('Exchanging code for token...');\n\n\tconst clientSecret = Config.gitHubClientSecret;\n\tif (!clientSecret) {\n\t\tthrow new Error('No client secret configured for GitHub authentication.');\n\t}\n\n\tconst body = new URLSearchParams([\n\t\t['code', code],\n\t\t['client_id', Config.gitHubClientId],\n\t\t['redirect_uri', redirectUri.toString(true)],\n\t\t['client_secret', clientSecret],\n\t\t['code_verifier', codeVerifier]\n\t]);\n\tif (enterpriseUri) {\n\t\tbody.append('github_enterprise', enterpriseUri.toString(true));\n\t}\n\tconst result = await fetching(endpointUri.toString(true), {\n\t\tlogger,\n\t\tretryFallbacks: true,\n\t\texpectJSON: true,\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\tAccept: 'application/json',\n\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t},\n\t\tbody: body.toString()\n\t});\n\n\tif (result.ok) {\n\t\tconst json = await result.json();\n\t\tlogger.info('Token exchange success!');\n\t\treturn json.access_token;\n\t} else {\n\t\tconst text = await result.text();\n\t\tconst error = new Error(text);\n\t\terror.name = 'GitHubTokenExchangeError';\n\t\tthrow error;\n\t}\n}\n\nclass UrlHandlerFlow implements IFlow {\n\tlabel = l10n.t('url handler');\n\toptions: IFlowOptions = {\n\t\tsupportsGitHubDotCom: true,\n\t\t// Supporting GHES would be challenging because different versions\n\t\t// used a different client ID. We could try to detect the version\n\t\t// and use the right one, but that's a lot of work when we have\n\t\t// other flows that work well.\n\t\tsupportsGitHubEnterpriseServer: false,\n\t\tsupportsHostedGitHubEnterprise: true,\n\t\tsupportsRemoteExtensionHost: true,\n\t\tsupportsWebWorkerExtensionHost: true,\n\t\t// exchanging a code for a token requires a client secret\n\t\tsupportsNoClientSecret: false,\n\t\tsupportsSupportedClients: true,\n\t\tsupportsUnsupportedClients: false\n\t};\n\n\tasync trigger({\n\t\tscopes,\n\t\tbaseUri,\n\t\tredirectUri,\n\t\tcallbackUri,\n\t\tenterpriseUri,\n\t\tnonce,\n\t\tsignInProvider,\n\t\textraAuthorizeParameters,\n\t\turiHandler,\n\t\texistingLogin,\n\t\tlogger,\n\t}: IFlowTriggerOptions): Promise<string> {\n\t\tlogger.info(`Trying without local server... (${scopes})`);\n\t\treturn await window.withProgress<string>({\n\t\t\tlocation: ProgressLocation.Notification,\n\t\t\ttitle: l10n.t({\n\t\t\t\tmessage: 'Signing in to {0}...',\n\t\t\t\targs: [baseUri.authority],\n\t\t\t\tcomment: ['The {0} will be a url, e.g. github.com']\n\t\t\t}),\n\t\t\tcancellable: true\n\t\t}, async (_, token) => {\n\t\t\t// Generate PKCE parameters\n\t\t\tconst codeVerifier = generateRandomString(64);\n\t\t\tconst codeChallenge = await generateCodeChallenge(codeVerifier);\n\n\t\t\tconst promise = uriHandler.waitForCode(logger, scopes, nonce, token);\n\n\t\t\tconst searchParams = new URLSearchParams([\n\t\t\t\t['client_id', Config.gitHubClientId],\n\t\t\t\t['redirect_uri', redirectUri.toString(true)],\n\t\t\t\t['scope', scopes],\n\t\t\t\t['state', encodeURIComponent(callbackUri.toString(true))],\n\t\t\t\t['code_challenge', codeChallenge],\n\t\t\t\t['code_challenge_method', 'S256']\n\t\t\t]);\n\t\t\tif (existingLogin) {\n\t\t\t\tsearchParams.append('login', existingLogin);\n\t\t\t} else {\n\t\t\t\tsearchParams.append('prompt', 'select_account');\n\t\t\t}\n\t\t\tif (signInProvider) {\n\t\t\t\tsearchParams.append('provider', signInProvider);\n\t\t\t}\n\t\t\tif (extraAuthorizeParameters) {\n\t\t\t\tfor (const [key, value] of Object.entries(extraAuthorizeParameters)) {\n\t\t\t\t\tsearchParams.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// The extra toString, parse is apparently needed for env.openExternal\n\t\t\t// to open the correct URL.\n\t\t\tconst uri = Uri.parse(baseUri.with({\n\t\t\t\tpath: '/login/oauth/authorize',\n\t\t\t\tquery: searchParams.toString()\n\t\t\t}).toString(true));\n\t\t\tawait env.openExternal(uri);\n\n\t\t\tconst code = await promise;\n\n\t\t\tconst proxyEndpoints: { [providerId: string]: string } | undefined = await commands.executeCommand('workbench.getCodeExchangeProxyEndpoints');\n\t\t\tconst endpointUrl = proxyEndpoints?.github\n\t\t\t\t? Uri.parse(`${proxyEndpoints.github}login/oauth/access_token`)\n\t\t\t\t: baseUri.with({ path: '/login/oauth/access_token' });\n\n\t\t\tconst accessToken = await exchangeCodeForToken(logger, endpointUrl, redirectUri, code, codeVerifier, enterpriseUri);\n\t\t\treturn accessToken;\n\t\t});\n\t}\n}\n\nclass LocalServerFlow implements IFlow {\n\tlabel = l10n.t('local server');\n\toptions: IFlowOptions = {\n\t\tsupportsGitHubDotCom: true,\n\t\t// Supporting GHES would be challenging because different versions\n\t\t// used a different client ID. We could try to detect the version\n\t\t// and use the right one, but that's a lot of work when we have\n\t\t// other flows that work well.\n\t\tsupportsGitHubEnterpriseServer: false,\n\t\tsupportsHostedGitHubEnterprise: true,\n\t\t// Opening a port on the remote side can't be open in the browser on\n\t\t// the client side so this flow won't work in remote extension hosts\n\t\tsupportsRemoteExtensionHost: false,\n\t\t// Web worker can't open a port to listen for the redirect\n\t\tsupportsWebWorkerExtensionHost: false,\n\t\t// exchanging a code for a token requires a client secret\n\t\tsupportsNoClientSecret: false,\n\t\tsupportsSupportedClients: true,\n\t\tsupportsUnsupportedClients: true\n\t};\n\tasync trigger({\n\t\tscopes,\n\t\tbaseUri,\n\t\tredirectUri,\n\t\tcallbackUri,\n\t\tenterpriseUri,\n\t\tsignInProvider,\n\t\textraAuthorizeParameters,\n\t\texistingLogin,\n\t\tlogger\n\t}: IFlowTriggerOptions): Promise<string> {\n\t\tlogger.info(`Trying with local server... (${scopes})`);\n\t\treturn await window.withProgress<string>({\n\t\t\tlocation: ProgressLocation.Notification,\n\t\t\ttitle: l10n.t({\n\t\t\t\tmessage: 'Signing in to {0}...',\n\t\t\t\targs: [baseUri.authority],\n\t\t\t\tcomment: ['The {0} will be a url, e.g. github.com']\n\t\t\t}),\n\t\t\tcancellable: true\n\t\t}, async (_, token) => {\n\t\t\t// Generate PKCE parameters\n\t\t\tconst codeVerifier = generateRandomString(64);\n\t\t\tconst codeChallenge = await generateCodeChallenge(codeVerifier);\n\n\t\t\tconst searchParams = new URLSearchParams([\n\t\t\t\t['client_id', Config.gitHubClientId],\n\t\t\t\t['redirect_uri', redirectUri.toString(true)],\n\t\t\t\t['scope', scopes],\n\t\t\t\t['code_challenge', codeChallenge],\n\t\t\t\t['code_challenge_method', 'S256']\n\t\t\t]);\n\t\t\tif (existingLogin) {\n\t\t\t\tsearchParams.append('login', existingLogin);\n\t\t\t} else {\n\t\t\t\tsearchParams.append('prompt', 'select_account');\n\t\t\t}\n\t\t\tif (signInProvider) {\n\t\t\t\tsearchParams.append('provider', signInProvider);\n\t\t\t}\n\t\t\tif (extraAuthorizeParameters) {\n\t\t\t\tfor (const [key, value] of Object.entries(extraAuthorizeParameters)) {\n\t\t\t\t\tsearchParams.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst loginUrl = baseUri.with({\n\t\t\t\tpath: '/login/oauth/authorize',\n\t\t\t\tquery: searchParams.toString()\n\t\t\t});\n\t\t\tconst server = new LoopbackAuthServer(path.join(__dirname, '../media'), loginUrl.toString(true), callbackUri.toString(true));\n\t\t\tconst port = await server.start();\n\n\t\t\tlet codeToExchange;\n\t\t\ttry {\n\t\t\t\tenv.openExternal(Uri.parse(`http://127.0.0.1:${port}/signin?nonce=${encodeURIComponent(server.nonce)}`));\n\t\t\t\tconst { code } = await Promise.race([\n\t\t\t\t\tserver.waitForOAuthResponse(),\n\t\t\t\t\tnew Promise<any>((_, reject) => setTimeout(() => reject(TIMED_OUT_ERROR), 300_000)), // 5min timeout\n\t\t\t\t\tpromiseFromEvent<any, any>(token.onCancellationRequested, (_, __, reject) => { reject(USER_CANCELLATION_ERROR); }).promise\n\t\t\t\t]);\n\t\t\t\tcodeToExchange = code;\n\t\t\t} finally {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tvoid server.stop();\n\t\t\t\t}, 5000);\n\t\t\t}\n\n\t\t\tconst accessToken = await exchangeCodeForToken(\n\t\t\t\tlogger,\n\t\t\t\tbaseUri.with({ path: '/login/oauth/access_token' }),\n\t\t\t\tredirectUri,\n\t\t\t\tcodeToExchange,\n\t\t\t\tcodeVerifier,\n\t\t\t\tenterpriseUri);\n\t\t\treturn accessToken;\n\t\t});\n\t}\n}\n\nclass DeviceCodeFlow implements IFlow {\n\tlabel = l10n.t('device code');\n\toptions: IFlowOptions = {\n\t\tsupportsGitHubDotCom: true,\n\t\tsupportsGitHubEnterpriseServer: true,\n\t\tsupportsHostedGitHubEnterprise: true,\n\t\tsupportsRemoteExtensionHost: true,\n\t\t// CORS prevents this from working in web workers\n\t\tsupportsWebWorkerExtensionHost: false,\n\t\tsupportsNoClientSecret: true,\n\t\tsupportsSupportedClients: true,\n\t\tsupportsUnsupportedClients: true\n\t};\n\tasync trigger({ scopes, baseUri, signInProvider, extraAuthorizeParameters, logger }: IFlowTriggerOptions) {\n\t\tlogger.info(`Trying device code flow... (${scopes})`);\n\n\t\t// Get initial device code\n\t\tconst uri = baseUri.with({\n\t\t\tpath: '/login/device/code',\n\t\t\tquery: `client_id=${Config.gitHubClientId}&scope=${scopes}`\n\t\t});\n\t\tconst result = await fetching(uri.toString(true), {\n\t\t\tlogger,\n\t\t\tretryFallbacks: true,\n\t\t\texpectJSON: true,\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json'\n\t\t\t}\n\t\t});\n\t\tif (!result.ok) {\n\t\t\tthrow new Error(`Failed to get one-time code: ${await result.text()}`);\n\t\t}\n\n\t\tconst json = await result.json() as IGitHubDeviceCodeResponse;\n\n\t\tconst button = l10n.t('Copy & Continue to {0}', signInProvider ? GitHubSocialSignInProviderLabels[signInProvider] : l10n.t('GitHub'));\n\t\tconst modalResult = await window.showInformationMessage(\n\t\t\tl10n.t({ message: 'Your Code: {0}', args: [json.user_code], comment: ['The {0} will be a code, e.g. 123-456'] }),\n\t\t\t{\n\t\t\t\tmodal: true,\n\t\t\t\tdetail: l10n.t('To finish authenticating, navigate to GitHub and paste in the above one-time code.')\n\t\t\t}, button);\n\n\t\tif (modalResult !== button) {\n\t\t\tthrow new Error(USER_CANCELLATION_ERROR);\n\t\t}\n\n\t\tawait env.clipboard.writeText(json.user_code);\n\n\t\tlet open = Uri.parse(json.verification_uri);\n\t\tconst query = new URLSearchParams(open.query);\n\t\tif (signInProvider) {\n\t\t\tquery.set('provider', signInProvider);\n\t\t}\n\t\tif (extraAuthorizeParameters) {\n\t\t\tfor (const [key, value] of Object.entries(extraAuthorizeParameters)) {\n\t\t\t\tquery.set(key, value);\n\t\t\t}\n\t\t}\n\t\tif (signInProvider || extraAuthorizeParameters) {\n\t\t\topen = open.with({ query: query.toString() });\n\t\t}\n\t\tconst uriToOpen = await env.asExternalUri(open);\n\t\tawait env.openExternal(uriToOpen);\n\n\t\treturn await this.waitForDeviceCodeAccessToken(logger, baseUri, json);\n\t}\n\n\tprivate async waitForDeviceCodeAccessToken(\n\t\tlogger: Log,\n\t\tbaseUri: Uri,\n\t\tjson: IGitHubDeviceCodeResponse,\n\t): Promise<string> {\n\t\treturn await window.withProgress<string>({\n\t\t\tlocation: ProgressLocation.Notification,\n\t\t\tcancellable: true,\n\t\t\ttitle: l10n.t({\n\t\t\t\tmessage: 'Open [{0}]({0}) in a new tab and paste your one-time code: {1}',\n\t\t\t\targs: [json.verification_uri, json.user_code],\n\t\t\t\tcomment: [\n\t\t\t\t\t'The [{0}]({0}) will be a url and the {1} will be a code, e.g. 123-456',\n\t\t\t\t\t'{Locked=\"[{0}]({0})\"}'\n\t\t\t\t]\n\t\t\t})\n\t\t}, async (_, token) => {\n\t\t\tconst refreshTokenUri = baseUri.with({\n\t\t\t\tpath: '/login/oauth/access_token',\n\t\t\t\tquery: `client_id=${Config.gitHubClientId}&device_code=${json.device_code}&grant_type=urn:ietf:params:oauth:grant-type:device_code`\n\t\t\t});\n\n\t\t\t// Try for 2 minutes\n\t\t\tconst attempts = 120 / json.interval;\n\t\t\tfor (let i = 0; i < attempts; i++) {\n\t\t\t\tawait new Promise(resolve => setTimeout(resolve, json.interval * 1000));\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tthrow new Error(USER_CANCELLATION_ERROR);\n\t\t\t\t}\n\t\t\t\tlet accessTokenResult;\n\t\t\t\ttry {\n\t\t\t\t\taccessTokenResult = await fetching(refreshTokenUri.toString(true), {\n\t\t\t\t\t\tlogger,\n\t\t\t\t\t\tretryFallbacks: true,\n\t\t\t\t\t\texpectJSON: true,\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\tAccept: 'application/json'\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} catch {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (!accessTokenResult.ok) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst accessTokenJson = await accessTokenResult.json();\n\n\t\t\t\tif (accessTokenJson.error === 'authorization_pending') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (accessTokenJson.error) {\n\t\t\t\t\tthrow new Error(accessTokenJson.error_description);\n\t\t\t\t}\n\n\t\t\t\treturn accessTokenJson.access_token;\n\t\t\t}\n\n\t\t\tthrow new Error(TIMED_OUT_ERROR);\n\t\t});\n\t}\n}\n\nclass PatFlow implements IFlow {\n\tlabel = l10n.t('personal access token');\n\toptions: IFlowOptions = {\n\t\tsupportsGitHubDotCom: true,\n\t\tsupportsGitHubEnterpriseServer: true,\n\t\tsupportsHostedGitHubEnterprise: true,\n\t\tsupportsRemoteExtensionHost: true,\n\t\tsupportsWebWorkerExtensionHost: true,\n\t\tsupportsNoClientSecret: true,\n\t\t// PATs can't be used with Settings Sync so we don't enable this flow\n\t\t// for supported clients\n\t\tsupportsSupportedClients: false,\n\t\tsupportsUnsupportedClients: true\n\t};\n\n\tasync trigger({ scopes, baseUri, logger, enterpriseUri }: IFlowTriggerOptions) {\n\t\tlogger.info(`Trying to retrieve PAT... (${scopes})`);\n\n\t\tconst button = l10n.t('Continue to GitHub');\n\t\tconst modalResult = await window.showInformationMessage(\n\t\t\tl10n.t('Continue to GitHub to create a Personal Access Token (PAT)'),\n\t\t\t{\n\t\t\t\tmodal: true,\n\t\t\t\tdetail: l10n.t('To finish authenticating, navigate to GitHub to create a PAT then paste the PAT into the input box.')\n\t\t\t}, button);\n\n\t\tif (modalResult !== button) {\n\t\t\tthrow new Error(USER_CANCELLATION_ERROR);\n\t\t}\n\n\t\tconst description = `${env.appName} (${scopes})`;\n\t\tconst uriToOpen = await env.asExternalUri(baseUri.with({ path: '/settings/tokens/new', query: `description=${description}&scopes=${scopes.split(' ').join(',')}` }));\n\t\tawait env.openExternal(uriToOpen);\n\t\tconst token = await window.showInputBox({ placeHolder: `ghp_1a2b3c4...`, prompt: `GitHub Personal Access Token - ${scopes}`, ignoreFocusOut: true });\n\t\tif (!token) { throw new Error(USER_CANCELLATION_ERROR); }\n\n\t\tconst appUri = !enterpriseUri || isHostedGitHubEnterprise(enterpriseUri)\n\t\t\t? Uri.parse(`${baseUri.scheme}://api.${baseUri.authority}`)\n\t\t\t: Uri.parse(`${baseUri.scheme}://${baseUri.authority}/api/v3`);\n\n\t\tconst tokenScopes = await this.getScopes(token, appUri, logger); // Example: ['repo', 'user']\n\t\tconst scopesList = scopes.split(' '); // Example: 'read:user repo user:email'\n\t\tif (!scopesList.every(scope => {\n\t\t\tconst included = tokenScopes.includes(scope);\n\t\t\tif (included || !scope.includes(':')) {\n\t\t\t\treturn included;\n\t\t\t}\n\n\t\t\treturn scope.split(':').some(splitScopes => {\n\t\t\t\treturn tokenScopes.includes(splitScopes);\n\t\t\t});\n\t\t})) {\n\t\t\tthrow new Error(`The provided token does not match the requested scopes: ${scopes}`);\n\t\t}\n\n\t\treturn token;\n\t}\n\n\tprivate async getScopes(token: string, serverUri: Uri, logger: Log): Promise<string[]> {\n\t\ttry {\n\t\t\tlogger.info('Getting token scopes...');\n\t\t\tconst result = await fetching(serverUri.toString(), {\n\t\t\t\tlogger,\n\t\t\t\tretryFallbacks: true,\n\t\t\t\texpectJSON: false,\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `token ${token}`,\n\t\t\t\t\t'User-Agent': `${env.appName} (${env.appHost})`\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (result.ok) {\n\t\t\t\tconst scopes = result.headers.get('X-OAuth-Scopes');\n\t\t\t\treturn scopes ? scopes.split(',').map(scope => scope.trim()) : [];\n\t\t\t} else {\n\t\t\t\tlogger.error(`Getting scopes failed: ${result.statusText}`);\n\t\t\t\tthrow new Error(result.statusText);\n\t\t\t}\n\t\t} catch (ex) {\n\t\t\tlogger.error(ex.message);\n\t\t\tthrow new Error(NETWORK_ERROR);\n\t\t}\n\t}\n}\n\nconst allFlows: IFlow[] = [\n\tnew LocalServerFlow(),\n\tnew UrlHandlerFlow(),\n\tnew DeviceCodeFlow(),\n\tnew PatFlow()\n];\n\nexport function getFlows(query: IFlowQuery) {\n\treturn allFlows.filter(flow => {\n\t\tlet useFlow: boolean = true;\n\t\tswitch (query.target) {\n\t\t\tcase GitHubTarget.DotCom:\n\t\t\t\tuseFlow &&= flow.options.supportsGitHubDotCom;\n\t\t\t\tbreak;\n\t\t\tcase GitHubTarget.Enterprise:\n\t\t\t\tuseFlow &&= flow.options.supportsGitHubEnterpriseServer;\n\t\t\t\tbreak;\n\t\t\tcase GitHubTarget.HostedEnterprise:\n\t\t\t\tuseFlow &&= flow.options.supportsHostedGitHubEnterprise;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tswitch (query.extensionHost) {\n\t\t\tcase ExtensionHost.Remote:\n\t\t\t\tuseFlow &&= flow.options.supportsRemoteExtensionHost;\n\t\t\t\tbreak;\n\t\t\tcase ExtensionHost.WebWorker:\n\t\t\t\tuseFlow &&= flow.options.supportsWebWorkerExtensionHost;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (!Config.gitHubClientSecret) {\n\t\t\tuseFlow &&= flow.options.supportsNoClientSecret;\n\t\t}\n\n\t\tif (query.isSupportedClient) {\n\t\t\t// TODO: revisit how we support PAT in GHES but not DotCom... but this works for now since\n\t\t\t// there isn't another flow that has supportsSupportedClients = false\n\t\t\tuseFlow &&= (flow.options.supportsSupportedClients || query.target !== GitHubTarget.DotCom);\n\t\t} else {\n\t\t\tuseFlow &&= flow.options.supportsUnsupportedClients;\n\t\t}\n\t\treturn useFlow;\n\t});\n}\n\n/**\n * Social authentication providers for GitHub\n */\nexport const enum GitHubSocialSignInProvider {\n\tGoogle = 'google',\n\tApple = 'apple',\n}\n\nconst GitHubSocialSignInProviderLabels = {\n\t[GitHubSocialSignInProvider.Google]: l10n.t('Google'),\n\t[GitHubSocialSignInProvider.Apple]: l10n.t('Apple'),\n};\n\nexport function isSocialSignInProvider(provider: unknown): provider is GitHubSocialSignInProvider {\n\treturn provider === GitHubSocialSignInProvider.Google || provider === GitHubSocialSignInProvider.Apple;\n}\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { dumpObj, isFunction, isUndefined } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_DIAG_LOG, _DYN_LOGGER, _DYN_LOGGING_LEVEL_CONSOL4, _DYN_LOG_INTERNAL_MESSAGE, _DYN_MESSAGE, _DYN_MESSAGE_ID, _DYN_PUSH, _DYN_REPLACE, _DYN_THROW_INTERNAL, _DYN_UNLOAD, _DYN_WARN_TO_CONSOLE } from \"../__DynamicConstants\";\r\nimport { getDebugExt } from \"./DbgExtensionUtils\";\r\nimport { getConsole, getJSON, hasJSON } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar STR_WARN_TO_CONSOLE = \"warnToConsole\";\r\n/**\r\n * For user non actionable traces use AI Internal prefix.\r\n */\r\nvar AiNonUserActionablePrefix = \"AI (Internal): \";\r\n/**\r\n * Prefix of the traces in portal.\r\n */\r\nvar AiUserActionablePrefix = \"AI: \";\r\n/**\r\n *  Session storage key for the prefix for the key indicating message type already logged\r\n */\r\nvar AIInternalMessagePrefix = \"AITR_\";\r\nvar defaultValues = {\r\n    loggingLevelConsole: 0,\r\n    loggingLevelTelemetry: 1,\r\n    maxMessageLimit: 25,\r\n    enableDebug: false\r\n};\r\nvar _logFuncs = (_a = {},\r\n    _a[0 /* eLoggingSeverity.DISABLED */] = null,\r\n    _a[1 /* eLoggingSeverity.CRITICAL */] = \"errorToConsole\",\r\n    _a[2 /* eLoggingSeverity.WARNING */] = STR_WARN_TO_CONSOLE,\r\n    _a[3 /* eLoggingSeverity.DEBUG */] = \"debugToConsole\",\r\n    _a);\r\nfunction _sanitizeDiagnosticText(text) {\r\n    if (text) {\r\n        return \"\\\"\" + text[_DYN_REPLACE /* @min:%2ereplace */](/\\\"/g, STR_EMPTY) + \"\\\"\";\r\n    }\r\n    return STR_EMPTY;\r\n}\r\nfunction _logToConsole(func, message) {\r\n    var theConsole = getConsole();\r\n    if (!!theConsole) {\r\n        var logFunc = \"log\";\r\n        if (theConsole[func]) {\r\n            logFunc = func;\r\n        }\r\n        if (isFunction(theConsole[logFunc])) {\r\n            theConsole[logFunc](message);\r\n        }\r\n    }\r\n}\r\nvar _InternalLogMessage = /** @class */ (function () {\r\n    function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n        if (isUserAct === void 0) { isUserAct = false; }\r\n        var _self = this;\r\n        _self[_DYN_MESSAGE_ID /* @min:%2emessageId */] = msgId;\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] =\r\n            (isUserAct ? AiUserActionablePrefix : AiNonUserActionablePrefix) +\r\n                msgId;\r\n        var strProps = STR_EMPTY;\r\n        if (hasJSON()) {\r\n            strProps = getJSON().stringify(properties);\r\n        }\r\n        var diagnosticText = (msg ? \" message:\" + _sanitizeDiagnosticText(msg) : STR_EMPTY) +\r\n            (properties ? \" props:\" + _sanitizeDiagnosticText(strProps) : STR_EMPTY);\r\n        _self[_DYN_MESSAGE /* @min:%2emessage */] += diagnosticText;\r\n    }\r\n    _InternalLogMessage.dataType = \"MessageData\";\r\n    return _InternalLogMessage;\r\n}());\r\nexport { _InternalLogMessage };\r\nexport function safeGetLogger(core, config) {\r\n    return (core || {})[_DYN_LOGGER /* @min:%2elogger */] || new DiagnosticLogger(config);\r\n}\r\nvar DiagnosticLogger = /** @class */ (function () {\r\n    function DiagnosticLogger(config) {\r\n        this.identifier = \"DiagnosticLogger\";\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        this.queue = [];\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        var _messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        var _messageLogged = {};\r\n        var _loggingLevelConsole;\r\n        var _loggingLevelTelemetry;\r\n        var _maxInternalMessageLimit;\r\n        var _enableDebug;\r\n        var _unloadHandler;\r\n        dynamicProto(DiagnosticLogger, this, function (_self) {\r\n            _unloadHandler = _setDefaultsFromConfig(config || {});\r\n            _self.consoleLoggingLevel = function () { return _loggingLevelConsole; };\r\n            /**\r\n             * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n             * @param severity - {LoggingSeverity} - The severity of the log message\r\n             * @param message - {_InternalLogMessage} - The log message.\r\n             */\r\n            _self[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */] = function (severity, msgId, msg, properties, isUserAct) {\r\n                if (isUserAct === void 0) { isUserAct = false; }\r\n                var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n                if (_enableDebug) {\r\n                    throw dumpObj(message);\r\n                }\r\n                else {\r\n                    // Get the logging function and fallback to warnToConsole of for some reason errorToConsole doesn't exist\r\n                    var logFunc = _logFuncs[severity] || STR_WARN_TO_CONSOLE;\r\n                    if (!isUndefined(message[_DYN_MESSAGE /* @min:%2emessage */])) {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                            if (!_messageLogged[messageKey] && _loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                                _messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Only log traces if the console Logging Level is >= the throwInternal severity level\r\n                            if (_loggingLevelConsole >= severity) {\r\n                                _self[logFunc](message[_DYN_MESSAGE /* @min:%2emessage */]);\r\n                            }\r\n                        }\r\n                        _logInternalMessage(severity, message);\r\n                    }\r\n                    else {\r\n                        _debugExtMsg(\"throw\" + (severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"Critical\" : \"Warning\"), message);\r\n                    }\r\n                }\r\n            };\r\n            _self.debugToConsole = function (message) {\r\n                _logToConsole(\"debug\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */] = function (message) {\r\n                _logToConsole(\"warn\", message);\r\n                _debugExtMsg(\"warning\", message);\r\n            };\r\n            _self.errorToConsole = function (message) {\r\n                _logToConsole(\"error\", message);\r\n                _debugExtMsg(\"error\", message);\r\n            };\r\n            _self.resetInternalMessageCount = function () {\r\n                _messageCount = 0;\r\n                _messageLogged = {};\r\n            };\r\n            _self[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */] = _logInternalMessage;\r\n            _self[_DYN_UNLOAD /* @min:%2eunload */] = function (isAsync) {\r\n                _unloadHandler && _unloadHandler.rm();\r\n                _unloadHandler = null;\r\n            };\r\n            function _logInternalMessage(severity, message) {\r\n                if (_areInternalMessagesThrottled()) {\r\n                    return;\r\n                }\r\n                // check if this message type was already logged for this session and if so, don't log it again\r\n                var logMessage = true;\r\n                var messageKey = AIInternalMessagePrefix + message[_DYN_MESSAGE_ID /* @min:%2emessageId */];\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (_messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    _messageLogged[messageKey] = true;\r\n                }\r\n                if (logMessage) {\r\n                    // Push the event in the internal queue\r\n                    if (severity <= _loggingLevelTelemetry) {\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](message);\r\n                        _messageCount++;\r\n                        _debugExtMsg((severity === 1 /* eLoggingSeverity.CRITICAL */ ? \"error\" : \"warn\"), message);\r\n                    }\r\n                    // When throttle limit reached, send a special event\r\n                    if (_messageCount === _maxInternalMessageLimit) {\r\n                        var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                        var throttleMessage = new _InternalLogMessage(23 /* _eInternalMessageId.MessageLimitPerPVExceeded */, throttleLimitMessage, false);\r\n                        _self.queue[_DYN_PUSH /* @min:%2epush */](throttleMessage);\r\n                        if (severity === 1 /* eLoggingSeverity.CRITICAL */) {\r\n                            _self.errorToConsole(throttleLimitMessage);\r\n                        }\r\n                        else {\r\n                            _self[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](throttleLimitMessage);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _setDefaultsFromConfig(config) {\r\n                // make sure the config is dynamic\r\n                return onConfigChange(createDynamicConfig(config, defaultValues, _self).cfg, function (details) {\r\n                    var config = details.cfg;\r\n                    _loggingLevelConsole = config[_DYN_LOGGING_LEVEL_CONSOL4 /* @min:%2eloggingLevelConsole */];\r\n                    _loggingLevelTelemetry = config.loggingLevelTelemetry;\r\n                    _maxInternalMessageLimit = config.maxMessageLimit;\r\n                    _enableDebug = config.enableDebug;\r\n                });\r\n            }\r\n            function _areInternalMessagesThrottled() {\r\n                return _messageCount >= _maxInternalMessageLimit;\r\n            }\r\n            function _debugExtMsg(name, data) {\r\n                var dbgExt = getDebugExt(config || {});\r\n                if (dbgExt && dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */]) {\r\n                    dbgExt[_DYN_DIAG_LOG /* @min:%2ediagLog */](name, data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for DiagnosticLogger.prototype.consoleLoggingLevel.\r\n// Removed Stub for DiagnosticLogger.prototype.throwInternal.\r\n// Removed Stub for DiagnosticLogger.prototype.debugToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.warnToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.errorToConsole.\r\n// Removed Stub for DiagnosticLogger.prototype.resetInternalMessageCount.\r\n// Removed Stub for DiagnosticLogger.prototype.logInternalMessage.\r\n// Removed Stub for DiagnosticLogger.prototype.unload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    DiagnosticLogger.__ieDyn=1;\n\n    return DiagnosticLogger;\r\n}());\r\nexport { DiagnosticLogger };\r\nfunction _getLogger(logger) {\r\n    return (logger || new DiagnosticLogger());\r\n}\r\n/**\r\n * This is a helper method which will call throwInternal on the passed logger, will throw exceptions in\r\n * debug mode or attempt to log the error as a console warning. This helper is provided mostly to better\r\n * support minification as logger.throwInternal() will not compress the publish \"throwInternal\" used throughout\r\n * the code.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _throwInternal(logger, severity, msgId, msg, properties, isUserAct) {\r\n    if (isUserAct === void 0) { isUserAct = false; }\r\n    _getLogger(logger)[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](severity, msgId, msg, properties, isUserAct);\r\n}\r\n/**\r\n * This is a helper method which will call warnToConsole on the passed logger with the provided message.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param message - {_InternalLogMessage} - The log message.\r\n */\r\nexport function _warnToConsole(logger, message) {\r\n    _getLogger(logger)[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n}\r\n/**\r\n * Logs a message to the internal queue.\r\n * @param logger - The Diagnostic Logger instance to use.\r\n * @param severity - {LoggingSeverity} - The severity of the log message\r\n * @param message - {_InternalLogMessage} - The message to log.\r\n */\r\nexport function _logInternalMessage(logger, severity, message) {\r\n    _getLogger(logger)[_DYN_LOG_INTERNAL_MESSAGE /* @min:%2elogInternalMessage */](severity, message);\r\n}\r\n//# sourceMappingURL=DiagnosticLogger.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createPromise, doAwaitResponse } from \"@nevware21/ts-async\";\r\nimport { arrSlice, getLength } from \"@nevware21/ts-utils\";\r\nimport { _DYN_UNLOAD } from \"../__DynamicConstants\";\r\n/**\r\n * Run the unload function of the target object if it exists\r\n * @param target - The target object that contains the unload function\r\n * @param isAsync - The caller identifies whether it is expecting the operation to complete synchronously or asynchronously. Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @returns The result of the target function\r\n */\r\nexport function runTargetUnload(target, isAsync) {\r\n    if (target && target[_DYN_UNLOAD /* @min:%2eunload */]) {\r\n        return target[_DYN_UNLOAD /* @min:%2eunload */](isAsync);\r\n    }\r\n}\r\n/**\r\n * Call the unload function on all targets handling any returned [IPromise](https://nevware21.github.io/ts-async/typedoc/interfaces/IPromise.html)\r\n * / Promise before calling the next targets unload\r\n * @param targets - An array of the targets to unload\r\n * @param isAsync - The caller identifies whether it is expecting the operations to complete synchronously or asynchronously.  Even\r\n * if the caller is not waiting the operation may still be performed asynchronously depending on the component and the reverse is\r\n * also true.\r\n * @param done - Optional callback function to call once all of the unload functions have been called.\r\n */\r\nexport function doUnloadAll(targets, isAsync, done) {\r\n    var result;\r\n    if (!done) {\r\n        result = createPromise(function (resolved) {\r\n            done = resolved;\r\n        });\r\n    }\r\n    if (targets && getLength(targets) > 0) {\r\n        doAwaitResponse(runTargetUnload(targets[0], isAsync), function () {\r\n            doUnloadAll(arrSlice(targets, 1), isAsync, done);\r\n        });\r\n    }\r\n    else {\r\n        done();\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=AsyncUtils.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilteredFeatureProvider = void 0;\nconst BaseFeatureProvider_1 = require(\"./BaseFeatureProvider\");\n/**\n * Feature provider implementation that handles filters.\n */\nclass FilteredFeatureProvider extends BaseFeatureProvider_1.BaseFeatureProvider {\n    constructor(telemetry, filterProviders) {\n        super(telemetry);\n        this.telemetry = telemetry;\n        this.filterProviders = filterProviders;\n        this.cachedTelemetryEvents = [];\n    }\n    getFilters() {\n        // We get the filters that will be sent as headers.\n        let filters = new Map();\n        for (let filter of this.filterProviders) {\n            let filterHeaders = filter.getFilters();\n            for (let key of filterHeaders.keys()) {\n                // Headers can be overridden by custom filters.\n                // That's why a check isn't done to see if the header already exists, the value is just set.\n                let filterValue = filterHeaders.get(key);\n                filters.set(key, filterValue);\n            }\n        }\n        return filters;\n    }\n    PostEventToTelemetry(headers) {\n        /**\n         * If these headers have already been posted, we skip from posting them again..\n         */\n        if (this.cachedTelemetryEvents.includes(headers)) {\n            return;\n        }\n        const jsonHeaders = JSON.stringify(headers);\n        this.telemetry.postEvent('report-headers', new Map([['ABExp.headers', jsonHeaders]]));\n        /**\n         * We cache the flight so we don't post it again.\n         */\n        this.cachedTelemetryEvents.push(headers);\n    }\n}\nexports.FilteredFeatureProvider = FilteredFeatureProvider;\n//# sourceMappingURL=FilteredFeatureProvider.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { objDefine } from \"@nevware21/ts-utils\";\r\nimport { _DYN_NODE_TYPE } from \"../__DynamicConstants\";\r\nimport { normalizeJsName } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { newId } from \"./RandomHelper\";\r\nvar version = '3.3.4';\r\nvar instanceName = \".\" + newId(6);\r\nvar _dataUid = 0;\r\n// Accepts only:\r\n//  - Node\r\n//    - Node.ELEMENT_NODE\r\n//    - Node.DOCUMENT_NODE\r\n//  - Object\r\n//    - Any\r\nfunction _canAcceptData(target) {\r\n    return target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 1 || target[_DYN_NODE_TYPE /* @min:%2enodeType */] === 9 || !(+target[_DYN_NODE_TYPE /* @min:%2enodeType */]);\r\n}\r\nfunction _getCache(data, target) {\r\n    var theCache = target[data.id];\r\n    if (!theCache) {\r\n        theCache = {};\r\n        try {\r\n            if (_canAcceptData(target)) {\r\n                objDefine(target, data.id, {\r\n                    e: false,\r\n                    v: theCache\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Not all environments allow extending all objects, so just ignore the cache in those cases\r\n        }\r\n    }\r\n    return theCache;\r\n}\r\nexport function createUniqueNamespace(name, includeVersion) {\r\n    if (includeVersion === void 0) { includeVersion = false; }\r\n    return normalizeJsName(name + (_dataUid++) + (includeVersion ? \".\" + version : STR_EMPTY) + instanceName);\r\n}\r\nexport function createElmNodeData(name) {\r\n    var data = {\r\n        id: createUniqueNamespace(\"_aiData-\" + (name || STR_EMPTY) + \".\" + version),\r\n        accept: function (target) {\r\n            return _canAcceptData(target);\r\n        },\r\n        get: function (target, name, defValue, addDefault) {\r\n            var theCache = target[data.id];\r\n            if (!theCache) {\r\n                if (addDefault) {\r\n                    // Side effect is adds the cache\r\n                    theCache = _getCache(data, target);\r\n                    theCache[normalizeJsName(name)] = defValue;\r\n                }\r\n                return defValue;\r\n            }\r\n            return theCache[normalizeJsName(name)];\r\n        },\r\n        kill: function (target, name) {\r\n            if (target && target[name]) {\r\n                try {\r\n                    delete target[name];\r\n                }\r\n                catch (e) {\r\n                    // Just cleaning up, so if this fails -- ignore\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return data;\r\n}\r\n//# sourceMappingURL=DataCacheHelper.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { createEnum, createTypeMap } from \"@nevware21/ts-utils\";\r\n/**\r\n * Create an enum style object which has both the key => value and value => key mappings\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createEnumStyle = createEnum;\r\n/**\r\n * Create a 2 index map that maps an enum's key and value to the defined map value, X[\"key\"] => mapValue and X[0] => mapValue.\r\n * Generic values\r\n * - E = the const enum type (typeof eRequestHeaders);\r\n * - V = Identifies the valid values for the keys, this should include both the enum numeric and string key of the type. The\r\n * resulting \"Value\" of each entry identifies the valid values withing the assignments.\r\n * @param values - The values to populate on the new object\r\n * @returns\r\n */\r\nexport var createValueMap = createTypeMap;\r\n//# sourceMappingURL=EnumHelperFuncs.js.map","/*\n * 1DS JS SDK Core, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nvar _a;\r\n/**\r\n* Utils.ts\r\n* @author  Abhilash Panwar (abpanwar) Hector Hernandez (hectorh)\r\n* @copyright Microsoft 2018\r\n* File containing utility functions.\r\n*/\r\nimport { arrForEach, getGlobalInst, getNavigator, hasDocument, hasWindow, isArray, isBoolean, isNullOrUndefined, isNumber, isObject, isReactNative, isString, isUndefined, newGuid, objForEachKey, perfNow } from \"@microsoft/applicationinsights-core-js\";\r\nimport { ObjProto, strShimObject } from \"@microsoft/applicationinsights-shims\";\r\nimport { strIndexOf, strLeft } from \"@nevware21/ts-utils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { _DYN_INDEX_OF, _DYN_KIND, _DYN_LENGTH, _DYN_PROCESS_TELEMETRY_ST0, _DYN_TIMINGS, _DYN_VALUE } from \"./__DynamicConstants\";\r\nexport var Version = '4.3.4';\r\nexport var FullVersionString = \"1DS-Web-JS-\" + Version;\r\nvar ObjHasOwnProperty = ObjProto.hasOwnProperty;\r\n// Defining here so we don't need to take (import) the ApplicationInsights Common module\r\nvar strDisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nvar strWithCredentials = \"withCredentials\";\r\nvar strTimeout = \"timeout\";\r\n// If value is array just get the type for the first element\r\nvar _fieldTypeEventPropMap = (_a = {},\r\n    _a[0 /* FieldValueSanitizerType.NotSet */] = 0 /* eEventPropertyType.Unspecified */,\r\n    _a[2 /* FieldValueSanitizerType.Number */] = 6 /* eEventPropertyType.Double */,\r\n    _a[1 /* FieldValueSanitizerType.String */] = 1 /* eEventPropertyType.String */,\r\n    _a[3 /* FieldValueSanitizerType.Boolean */] = 7 /* eEventPropertyType.Bool */,\r\n    _a[4096 /* FieldValueSanitizerType.Array */ | 2 /* FieldValueSanitizerType.Number */] = 6 /* eEventPropertyType.Double */,\r\n    _a[4096 /* FieldValueSanitizerType.Array */ | 1 /* FieldValueSanitizerType.String */] = 1 /* eEventPropertyType.String */,\r\n    _a[4096 /* FieldValueSanitizerType.Array */ | 3 /* FieldValueSanitizerType.Boolean */] = 7 /* eEventPropertyType.Bool */,\r\n    _a);\r\n/**\r\n * @ignore\r\n */\r\n// let _uaDisallowsSameSiteNone = null;\r\nvar uInt8ArraySupported = null;\r\n// var _areCookiesAvailable: boolean | undefined;\r\n/**\r\n * Checks if document object is available\r\n */\r\nexport var isDocumentObjectAvailable = hasDocument();\r\n/**\r\n * Checks if window object is available\r\n */\r\nexport var isWindowObjectAvailable = hasWindow();\r\n/**\r\n * Checks if value is assigned to the given param.\r\n * @param value - The token from which the tenant id is to be extracted.\r\n * @returns True/false denoting if value is assigned to the param.\r\n */\r\nexport function isValueAssigned(value) {\r\n    /// <summary> takes a value and checks for undefined, null and empty string </summary>\r\n    /// <param type=\"any\"> value to be tested </param>\r\n    /// <returns> true if value is null undefined or emptyString </returns>\r\n    return !(value === STR_EMPTY || isNullOrUndefined(value));\r\n}\r\n/**\r\n * Gets the tenant id from the tenant token.\r\n * @param apiKey - The token from which the tenant id is to be extracted.\r\n * @returns The tenant id.\r\n */\r\nexport function getTenantId(apiKey) {\r\n    if (apiKey) {\r\n        var indexTenantId = strIndexOf(apiKey, \"-\");\r\n        if (indexTenantId > -1) {\r\n            return strLeft(apiKey, indexTenantId);\r\n        }\r\n    }\r\n    return STR_EMPTY;\r\n}\r\n/**\r\n * Checks if Uint8Array are available in the current environment. Safari and Firefox along with\r\n * ReactNative are known to not support Uint8Array properly.\r\n * @returns True if available, false otherwise.\r\n */\r\nexport function isUint8ArrayAvailable() {\r\n    if (uInt8ArraySupported === null) {\r\n        uInt8ArraySupported = !isUndefined(Uint8Array) && !isSafariOrFirefox() && !isReactNative();\r\n    }\r\n    return uInt8ArraySupported;\r\n}\r\n/**\r\n * Checks if the value is a valid EventLatency.\r\n * @param value - The value that needs to be checked.\r\n * @returns True if the value is in AWTEventLatency, false otherwise.\r\n */\r\nexport function isLatency(value) {\r\n    if (value && isNumber(value) && value >= 1 /* EventLatencyValue.Normal */ && value <= 4 /* EventLatencyValue.Immediate */) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Sanitizes the Property. It checks the that the property name and value are valid. It also\r\n * checks/populates the correct type and pii of the property value.\r\n * @param name - property name                          - The property name.\r\n * @param property - The property value or an IEventProperty containing value,\r\n * type ,pii and customer content.\r\n * @returns IEventProperty containing valid name, value, pii and type or null if invalid.\r\n */\r\nexport function sanitizeProperty(name, property, stringifyObjects) {\r\n    // Check that property is valid\r\n    if ((!property && !isValueAssigned(property)) || typeof name !== \"string\") {\r\n        return null;\r\n    }\r\n    // Perf optimization -- only need to get the type once not multiple times\r\n    var propType = typeof property;\r\n    // If the property isn't IEventProperty (and is either string, number, boolean or array), convert it into one.\r\n    if (propType === \"string\" || propType === \"number\" || propType === \"boolean\" || isArray(property)) {\r\n        property = { value: property };\r\n    }\r\n    else if (propType === \"object\" && !ObjHasOwnProperty.call(property, \"value\")) {\r\n        property = { value: stringifyObjects ? JSON.stringify(property) : property };\r\n    }\r\n    else if (isNullOrUndefined(property[_DYN_VALUE /* @min:%2evalue */])\r\n        || property[_DYN_VALUE /* @min:%2evalue */] === STR_EMPTY || (!isString(property[_DYN_VALUE /* @min:%2evalue */])\r\n        && !isNumber(property[_DYN_VALUE /* @min:%2evalue */]) && !isBoolean(property[_DYN_VALUE /* @min:%2evalue */])\r\n        && !isArray(property[_DYN_VALUE /* @min:%2evalue */]))) {\r\n        // Since property is IEventProperty, we need to validate its value\r\n        return null;\r\n    }\r\n    // We need to check that if the property value is an array, it is valid\r\n    if (isArray(property[_DYN_VALUE /* @min:%2evalue */]) &&\r\n        !isArrayValid(property[_DYN_VALUE /* @min:%2evalue */])) {\r\n        return null;\r\n    }\r\n    // If either pii or cc is set convert value to string (since only string pii/cc is allowed).\r\n    // If the value is a complex type like an array that can't be converted to string we will drop\r\n    // the property.\r\n    if (!isNullOrUndefined(property[_DYN_KIND /* @min:%2ekind */])) {\r\n        if (isArray(property[_DYN_VALUE /* @min:%2evalue */]) || !isValueKind(property[_DYN_KIND /* @min:%2ekind */])) {\r\n            return null;\r\n        }\r\n        property[_DYN_VALUE /* @min:%2evalue */] = property[_DYN_VALUE /* @min:%2evalue */].toString();\r\n    }\r\n    return property;\r\n}\r\nexport function getCommonSchemaMetaData(value, kind, type) {\r\n    var encodedTypeValue = -1;\r\n    if (!isUndefined(value)) {\r\n        if (kind > 0) {\r\n            if (kind === 32 /* eValueKind.CustomerContent_GenericContent */) {\r\n                // encode customer content. Value can only be string. bit 13-16 are for cc\r\n                encodedTypeValue = (1 << 13);\r\n            }\r\n            else if (kind <= 13) {\r\n                // encode PII. Value can only be string. bits 5-12 are for Pii\r\n                encodedTypeValue = (kind << 5);\r\n            }\r\n        }\r\n        // isDataType checks that the \"type\" is a number so we don't need to check for undefined\r\n        if (isDataType(type)) {\r\n            // Data Type is provided and valid, so use that\r\n            if (encodedTypeValue === -1) {\r\n                // Don't return -1\r\n                encodedTypeValue = 0;\r\n            }\r\n            encodedTypeValue |= type;\r\n        }\r\n        else {\r\n            var propType = _fieldTypeEventPropMap[getFieldValueType(value)] || -1;\r\n            if (encodedTypeValue !== -1 && propType !== -1) {\r\n                // pii exists so we must return correct type\r\n                encodedTypeValue |= propType;\r\n            }\r\n            else if (propType === 6 /* eEventPropertyType.Double */) {\r\n                encodedTypeValue = propType;\r\n            }\r\n        }\r\n    }\r\n    return encodedTypeValue;\r\n}\r\n/**\r\n * Helper to get and decode the cookie value using decodeURIComponent, this is for historical\r\n * backward compatibility where the document.cookie value was decoded before parsing.\r\n * @param cookieMgr - The cookie manager to use\r\n * @param name - The name of the cookie to get\r\n * @param decode - A flag to indicate whether the cookie value should be decoded\r\n * @returns The decoded cookie value (if available) otherwise an empty string.\r\n */\r\nexport function getCookieValue(cookieMgr, name, decode) {\r\n    if (decode === void 0) { decode = true; }\r\n    var cookieValue;\r\n    if (cookieMgr) {\r\n        cookieValue = cookieMgr.get(name);\r\n        if (decode && cookieValue && decodeURIComponent) {\r\n            cookieValue = decodeURIComponent(cookieValue);\r\n        }\r\n    }\r\n    return cookieValue || STR_EMPTY;\r\n}\r\n/**\r\n * Create a new guid.\r\n * @param style - The style of guid to generated, defaults to Digits\r\n * Digits (Default) : 32 digits separated by hyphens: 00000000-0000-0000-0000-000000000000\r\n * Braces - 32 digits separated by hyphens, enclosed in braces: {00000000-0000-0000-0000-000000000000}\r\n * Parentheses - 32 digits separated by hyphens, enclosed in parentheses: (00000000-0000-0000-0000-000000000000)\r\n * Numeric - 32 digits: 00000000000000000000000000000000\r\n * @returns The formatted guid.\r\n */\r\nexport function createGuid(style) {\r\n    if (style === void 0) { style = \"D\" /* GuidStyle.Digits */; }\r\n    var theGuid = newGuid();\r\n    if (style === \"B\" /* GuidStyle.Braces */) {\r\n        theGuid = \"{\" + theGuid + \"}\";\r\n    }\r\n    else if (style === \"P\" /* GuidStyle.Parentheses */) {\r\n        theGuid = \"(\" + theGuid + \")\";\r\n    }\r\n    else if (style === \"N\" /* GuidStyle.Numeric */) {\r\n        theGuid = theGuid.replace(/-/g, STR_EMPTY);\r\n    }\r\n    return theGuid;\r\n}\r\n/**\r\n * Pass in the objects to merge as arguments.\r\n * @param obj1 - object to merge.  Set this argument to 'true' for a deep extend.\r\n * @param obj2 - object to merge.\r\n * @param obj3 - object to merge.\r\n * @param obj4 - object to merge.\r\n * @param obj5 - object to merge.\r\n * @returns The extended object.\r\n */\r\nexport function extend(obj, obj2, obj3, obj4, obj5) {\r\n    // Variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    var length = arguments[_DYN_LENGTH /* @min:%2elength */];\r\n    var theArgs = arguments;\r\n    // Check if a deep merge\r\n    if (isBoolean(theArgs[0])) {\r\n        deep = theArgs[0];\r\n        i++;\r\n    }\r\n    // Loop through each object and conduct a merge\r\n    for (; i < length; i++) {\r\n        var obj = theArgs[i];\r\n        objForEachKey(obj, function (prop, value) {\r\n            // If deep merge and property is an object, merge properties\r\n            if (deep && value && isObject(value)) {\r\n                if (isArray(value)) {\r\n                    extended[prop] = extended[prop] || [];\r\n                    arrForEach(value, function (arrayValue, arrayIndex) {\r\n                        if (arrayValue && isObject(arrayValue)) {\r\n                            extended[prop][arrayIndex] = extend(true, extended[prop][arrayIndex], arrayValue);\r\n                        }\r\n                        else {\r\n                            extended[prop][arrayIndex] = arrayValue;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    extended[prop] = extend(true, extended[prop], value);\r\n                }\r\n            }\r\n            else {\r\n                extended[prop] = value;\r\n            }\r\n        });\r\n    }\r\n    return extended;\r\n}\r\nexport var getTime = perfNow;\r\nexport function isValueKind(value) {\r\n    // Always assume that it's a number (no type checking) for performance as this is used during the JSON serialization\r\n    if (value === 0 /* eValueKind.NotSet */ || ((value > 0 /* eValueKind.NotSet */ && value <= 13 /* eValueKind.Pii_IPV4AddressLegacy */) || value === 32 /* eValueKind.CustomerContent_GenericContent */)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isDataType(value) {\r\n    // Remark: 0 returns false, but it doesn't affect encoding anyways\r\n    // Always assume that it's a number (no type checking) for performance as this is used during the JSON serialization\r\n    if (value >= 0 && value <= 9) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isSafariOrFirefox() {\r\n    var nav = getNavigator();\r\n    // If non-browser navigator will be undefined\r\n    if (!isUndefined(nav) && nav.userAgent) {\r\n        var ua = nav.userAgent.toLowerCase();\r\n        if ((ua[_DYN_INDEX_OF /* @min:%2eindexOf */](\"safari\") >= 0 || ua[_DYN_INDEX_OF /* @min:%2eindexOf */](\"firefox\") >= 0) && ua[_DYN_INDEX_OF /* @min:%2eindexOf */](\"chrome\") < 0) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function isArrayValid(value) {\r\n    return value[_DYN_LENGTH /* @min:%2elength */] > 0;\r\n}\r\nexport function setProcessTelemetryTimings(event, identifier) {\r\n    var evt = event;\r\n    evt[_DYN_TIMINGS /* @min:%2etimings */] = evt[_DYN_TIMINGS /* @min:%2etimings */] || {};\r\n    evt[_DYN_TIMINGS /* @min:%2etimings */][_DYN_PROCESS_TELEMETRY_ST0 /* @min:%2eprocessTelemetryStart */] = evt[_DYN_TIMINGS /* @min:%2etimings */][_DYN_PROCESS_TELEMETRY_ST0 /* @min:%2eprocessTelemetryStart */] || {};\r\n    evt[_DYN_TIMINGS /* @min:%2etimings */][_DYN_PROCESS_TELEMETRY_ST0 /* @min:%2eprocessTelemetryStart */][identifier] = getTime();\r\n}\r\n/**\r\n * Returns a bitwise value for the FieldValueSanitizerType enum representing the decoded type of the passed value\r\n * @param value The value to determine the type\r\n */\r\nexport function getFieldValueType(value) {\r\n    var theType = 0 /* FieldValueSanitizerType.NotSet */;\r\n    if (value !== null && value !== undefined) {\r\n        var objType = typeof value;\r\n        if (objType === \"string\") {\r\n            theType = 1 /* FieldValueSanitizerType.String */;\r\n        }\r\n        else if (objType === \"number\") {\r\n            theType = 2 /* FieldValueSanitizerType.Number */;\r\n        }\r\n        else if (objType === \"boolean\") {\r\n            theType = 3 /* FieldValueSanitizerType.Boolean */;\r\n        }\r\n        else if (objType === strShimObject) {\r\n            theType = 4 /* FieldValueSanitizerType.Object */;\r\n            if (isArray(value)) {\r\n                theType = 4096 /* FieldValueSanitizerType.Array */;\r\n                if (value[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    // Empty arrays are not supported and are considered to be the same as null\r\n                    theType |= getFieldValueType(value[0]);\r\n                }\r\n            }\r\n            else if (ObjHasOwnProperty.call(value, \"value\")) {\r\n                // Looks like an IEventProperty\r\n                theType = 8192 /* FieldValueSanitizerType.EventProperty */ | getFieldValueType(value[_DYN_VALUE /* @min:%2evalue */]);\r\n            }\r\n        }\r\n    }\r\n    return theType;\r\n}\r\n/**\r\n * Helper to identify whether we are running in a chromium based browser environment\r\n */\r\nexport function isChromium() {\r\n    return !!getGlobalInst(\"chrome\");\r\n}\r\n/**\r\n * Create and open an XMLHttpRequest object\r\n * @param method - The request method\r\n * @param urlString - The url\r\n * @param withCredentials - Option flag indicating that credentials should be sent\r\n * @param disabled - Optional flag indicating that the XHR object should be marked as disabled and not tracked (default is false)\r\n * @param isSync - Optional flag indicating if the instance should be a synchronous request (defaults to false)\r\n * @param timeout - Optional value identifying the timeout value that should be assigned to the XHR request\r\n * @returns A new opened XHR request\r\n */\r\nexport function openXhr(method, urlString, withCredentials, disabled, isSync, timeout) {\r\n    if (disabled === void 0) { disabled = false; }\r\n    if (isSync === void 0) { isSync = false; }\r\n    function _wrapSetXhrProp(xhr, prop, value) {\r\n        try {\r\n            xhr[prop] = value;\r\n        }\r\n        catch (e) {\r\n            // - Wrapping as depending on the environment setting the property may fail (non-terminally)\r\n        }\r\n    }\r\n    var xhr = new XMLHttpRequest();\r\n    if (disabled) {\r\n        // Tag the instance so it's not tracked (trackDependency)\r\n        // If the environment has locked down the XMLHttpRequest (preventExtensions and/or freeze), this would\r\n        // cause the request to fail and we no telemetry would be sent\r\n        _wrapSetXhrProp(xhr, strDisabledPropertyName, disabled);\r\n    }\r\n    if (withCredentials) {\r\n        // Some libraries require that the withCredentials flag is set \"before\" open and\r\n        // - Wrapping as IE 10 has started throwing when setting before open\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    xhr.open(method, urlString, !isSync);\r\n    if (withCredentials) {\r\n        // withCredentials should be set AFTER open (https://xhr.spec.whatwg.org/#the-withcredentials-attribute)\r\n        // And older firefox instances from 11+ will throw for sync events (current versions don't) which happens during unload processing\r\n        _wrapSetXhrProp(xhr, strWithCredentials, withCredentials);\r\n    }\r\n    // Only set the timeout for asynchronous requests as\r\n    // \"Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception.\"\"\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\r\n    if (!isSync && timeout) {\r\n        _wrapSetXhrProp(xhr, strTimeout, timeout);\r\n    }\r\n    return xhr;\r\n}\r\n/**\r\n * Check to see if the value is > 0\r\n * @param value - The value to check\r\n * @returns true if > 0 otherwise false\r\n */\r\nexport function isGreaterThanZero(value) {\r\n    return value > 0;\r\n}\r\n//# sourceMappingURL=Utils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { createEnumStyle } from \"./EnumHelperFuncs\";\r\nexport var ActiveStatus = createEnumStyle({\r\n    NONE: 0 /* eActiveStatus.NONE */,\r\n    PENDING: 3 /* eActiveStatus.PENDING */,\r\n    INACTIVE: 1 /* eActiveStatus.INACTIVE */,\r\n    ACTIVE: 2 /* eActiveStatus.ACTIVE */\r\n});\r\n//# sourceMappingURL=InitActiveStatusEnum.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { AuthProviderType } from '../github';\n\nexport class Log {\n\tprivate output: vscode.LogOutputChannel;\n\n\tconstructor(private readonly type: AuthProviderType) {\n\t\tconst friendlyName = this.type === AuthProviderType.github ? 'GitHub' : 'GitHub Enterprise';\n\t\tthis.output = vscode.window.createOutputChannel(`${friendlyName} Authentication`, { log: true });\n\t}\n\n\tpublic trace(message: string): void {\n\t\tthis.output.trace(message);\n\t}\n\n\tpublic debug(message: string): void {\n\t\tthis.output.debug(message);\n\t}\n\n\tpublic info(message: string): void {\n\t\tthis.output.info(message);\n\t}\n\n\tpublic error(message: string): void {\n\t\tthis.output.error(message);\n\t}\n\n\tpublic warn(message: string): void {\n\t\tthis.output.warn(message);\n\t}\n}\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nvar _a, _b;\r\nimport { arrForEach, arrIndexOf, dumpObj, getDocument, getLazy, getNavigator, isArray, isFunction, isNullOrUndefined, isString, isTruthy, isUndefined, objForEachKey, strEndsWith, strIndexOf, strLeft, strSubstring, strTrim, utcNow } from \"@nevware21/ts-utils\";\r\nimport { cfgDfMerge } from \"../Config/ConfigDefaultHelpers\";\r\nimport { createDynamicConfig, onConfigChange } from \"../Config/DynamicConfig\";\r\nimport { _DYN_ENABLED, _DYN_LENGTH, _DYN_LOGGER, _DYN_PROTOCOL, _DYN_SET_DF, _DYN_SPLIT, _DYN_UNLOAD, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { getLocation, isIE } from \"./EnvUtils\";\r\nimport { getExceptionName, isNotNullOrUndefined, setValue, strContains } from \"./HelperFuncs\";\r\nimport { STR_DOMAIN, STR_EMPTY, STR_PATH, UNDEFINED_VALUE } from \"./InternalConstants\";\r\nvar strToGMTString = \"toGMTString\";\r\nvar strToUTCString = \"toUTCString\";\r\nvar strCookie = \"cookie\";\r\nvar strExpires = \"expires\";\r\nvar strIsCookieUseDisabled = \"isCookieUseDisabled\";\r\nvar strDisableCookiesUsage = \"disableCookiesUsage\";\r\nvar strConfigCookieMgr = \"_ckMgr\";\r\nvar _supportsCookies = null;\r\nvar _allowUaSameSite = null;\r\nvar _parsedCookieValue = null;\r\nvar _doc;\r\nvar _cookieCache = {};\r\nvar _globalCookieConfig = {};\r\n// // `isCookieUseDisabled` is deprecated, so explicitly casting as a key of IConfiguration to avoid typing error\r\n// // when both isCookieUseDisabled and disableCookiesUsage are used disableCookiesUsage will take precedent, which is\r\n// // why its listed first\r\n/**\r\n * Set the supported dynamic config values as undefined (or an empty object) so that\r\n * any listeners will be informed of any changes.\r\n * Explicitly NOT including the deprecated `isCookieUseDisabled` as we don't want to support\r\n * the v1 deprecated field as dynamic for updates\r\n */\r\nvar rootDefaultConfig = (_a = {\r\n        cookieCfg: cfgDfMerge((_b = {},\r\n            _b[STR_DOMAIN] = { fb: \"cookieDomain\", dfVal: isNotNullOrUndefined },\r\n            _b.path = { fb: \"cookiePath\", dfVal: isNotNullOrUndefined },\r\n            _b.enabled = UNDEFINED_VALUE,\r\n            _b.ignoreCookies = UNDEFINED_VALUE,\r\n            _b.blockedCookies = UNDEFINED_VALUE,\r\n            _b)),\r\n        cookieDomain: UNDEFINED_VALUE,\r\n        cookiePath: UNDEFINED_VALUE\r\n    },\r\n    _a[strDisableCookiesUsage] = UNDEFINED_VALUE,\r\n    _a);\r\nfunction _getDoc() {\r\n    !_doc && (_doc = getLazy(function () { return getDocument(); }));\r\n}\r\n/**\r\n * @ignore\r\n * DO NOT USE or export from the module, this is exposed as public to support backward compatibility of previous static utility methods only.\r\n * If you want to manager cookies either use the ICookieMgr available from the core instance via getCookieMgr() or create\r\n * your own instance of the CookieMgr and use that.\r\n * Using this directly for enabling / disabling cookie handling will not only affect your usage but EVERY user of cookies.\r\n * Example, if you are using a shared component that is also using Application Insights you will affect their cookie handling.\r\n * @param logger - The DiagnosticLogger to use for reporting errors.\r\n */\r\nfunction _gblCookieMgr(config, logger) {\r\n    // Stash the global instance against the BaseCookieMgr class\r\n    var inst = createCookieMgr[strConfigCookieMgr] || _globalCookieConfig[strConfigCookieMgr];\r\n    if (!inst) {\r\n        // Note: not using the getSetValue() helper as that would require always creating a temporary cookieMgr\r\n        // that ultimately is never used\r\n        inst = createCookieMgr[strConfigCookieMgr] = createCookieMgr(config, logger);\r\n        _globalCookieConfig[strConfigCookieMgr] = inst;\r\n    }\r\n    return inst;\r\n}\r\nfunction _isMgrEnabled(cookieMgr) {\r\n    if (cookieMgr) {\r\n        return cookieMgr.isEnabled();\r\n    }\r\n    return true;\r\n}\r\nfunction _isIgnoredCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.ignoreCookies)) {\r\n        return arrIndexOf(cookieMgrCfg.ignoreCookies, name) !== -1;\r\n    }\r\n    return false;\r\n}\r\nfunction _isBlockedCookie(cookieMgrCfg, name) {\r\n    if (name && cookieMgrCfg && isArray(cookieMgrCfg.blockedCookies)) {\r\n        if (arrIndexOf(cookieMgrCfg.blockedCookies, name) !== -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return _isIgnoredCookie(cookieMgrCfg, name);\r\n}\r\nfunction _isCfgEnabled(rootConfig, cookieMgrConfig) {\r\n    var isCfgEnabled = cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */];\r\n    if (isNullOrUndefined(isCfgEnabled)) {\r\n        // Set the enabled from the provided setting or the legacy root values\r\n        var cookieEnabled = void 0;\r\n        // This field is deprecated and dynamic updates will not be fully supported\r\n        if (!isUndefined(rootConfig[strIsCookieUseDisabled])) {\r\n            cookieEnabled = !rootConfig[strIsCookieUseDisabled];\r\n        }\r\n        // If this value is defined it takes precedent over the above\r\n        if (!isUndefined(rootConfig[strDisableCookiesUsage])) {\r\n            cookieEnabled = !rootConfig[strDisableCookiesUsage];\r\n        }\r\n        // Not setting the cookieMgrConfig.enabled as that will update (set) the global dynamic config\r\n        // So future \"updates\" then may not be as expected\r\n        isCfgEnabled = cookieEnabled;\r\n    }\r\n    return isCfgEnabled;\r\n}\r\n/**\r\n * Helper to return the ICookieMgr from the core (if not null/undefined) or a default implementation\r\n * associated with the configuration or a legacy default.\r\n * @param core\r\n * @param config\r\n * @returns\r\n */\r\nexport function safeGetCookieMgr(core, config) {\r\n    var cookieMgr;\r\n    if (core) {\r\n        // Always returns an instance\r\n        cookieMgr = core.getCookieMgr();\r\n    }\r\n    else if (config) {\r\n        var cookieCfg = config.cookieCfg;\r\n        if (cookieCfg && cookieCfg[strConfigCookieMgr]) {\r\n            cookieMgr = cookieCfg[strConfigCookieMgr];\r\n        }\r\n        else {\r\n            cookieMgr = createCookieMgr(config);\r\n        }\r\n    }\r\n    if (!cookieMgr) {\r\n        // Get or initialize the default global (legacy) cookie manager if we couldn't find one\r\n        cookieMgr = _gblCookieMgr(config, (core || {})[_DYN_LOGGER /* @min:%2elogger */]);\r\n    }\r\n    return cookieMgr;\r\n}\r\nexport function createCookieMgr(rootConfig, logger) {\r\n    var _a;\r\n    var cookieMgrConfig;\r\n    var _path;\r\n    var _domain;\r\n    var unloadHandler;\r\n    // Explicitly checking against false, so that setting to undefined will === true\r\n    var _enabled;\r\n    var _getCookieFn;\r\n    var _setCookieFn;\r\n    var _delCookieFn;\r\n    // Make sure the root config is dynamic as it may be the global config\r\n    rootConfig = createDynamicConfig(rootConfig || _globalCookieConfig, null, logger).cfg;\r\n    // Will get recalled if the referenced configuration is changed\r\n    unloadHandler = onConfigChange(rootConfig, function (details) {\r\n        // Make sure the root config has all of the the defaults to the root config to ensure they are dynamic\r\n        details[_DYN_SET_DF /* @min:%2esetDf */](details.cfg, rootDefaultConfig);\r\n        // Create and apply the defaults to the cookieCfg element\r\n        cookieMgrConfig = details.ref(details.cfg, \"cookieCfg\"); // details.setDf(details.cfg.cookieCfg, defaultConfig);\r\n        _path = cookieMgrConfig[STR_PATH /* @min:%2epath */] || \"/\";\r\n        _domain = cookieMgrConfig[STR_DOMAIN /* @min:%2edomain */];\r\n        // Explicitly checking against false, so that setting to undefined will === true\r\n        _enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false;\r\n        _getCookieFn = cookieMgrConfig.getCookie || _getCookieValue;\r\n        _setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n        _delCookieFn = cookieMgrConfig.delCookie || _setCookieValue;\r\n    }, logger);\r\n    var cookieMgr = (_a = {\r\n            isEnabled: function () {\r\n                var enabled = _isCfgEnabled(rootConfig, cookieMgrConfig) !== false && _enabled && areCookiesSupported(logger);\r\n                // Using an indirect lookup for any global cookie manager to support tree shaking for SDK's\r\n                // that don't use the \"applicationinsights-core\" version of the default cookie function\r\n                var gblManager = _globalCookieConfig[strConfigCookieMgr];\r\n                if (enabled && gblManager && cookieMgr !== gblManager) {\r\n                    // Make sure the GlobalCookie Manager instance (if not this instance) is also enabled.\r\n                    // As the global (deprecated) functions may have been called (for backward compatibility)\r\n                    enabled = _isMgrEnabled(gblManager);\r\n                }\r\n                return enabled;\r\n            },\r\n            setEnabled: function (value) {\r\n                // Explicitly checking against false, so that setting to undefined will === true\r\n                _enabled = value !== false;\r\n                cookieMgrConfig[_DYN_ENABLED /* @min:%2eenabled */] = value;\r\n            },\r\n            set: function (name, value, maxAgeSec, domain, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr) && !_isBlockedCookie(cookieMgrConfig, name)) {\r\n                    var values = {};\r\n                    var theValue = strTrim(value || STR_EMPTY);\r\n                    var idx = strIndexOf(theValue, \";\");\r\n                    if (idx !== -1) {\r\n                        theValue = strTrim(strLeft(value, idx));\r\n                        values = _extractParts(strSubstring(value, idx + 1));\r\n                    }\r\n                    // Only update domain if not already present (isUndefined) and the value is truthy (not null, undefined or empty string)\r\n                    setValue(values, STR_DOMAIN, domain || _domain, isTruthy, isUndefined);\r\n                    if (!isNullOrUndefined(maxAgeSec)) {\r\n                        var _isIE = isIE();\r\n                        if (isUndefined(values[strExpires])) {\r\n                            var nowMs = utcNow();\r\n                            // Only add expires if not already present\r\n                            var expireMs = nowMs + (maxAgeSec * 1000);\r\n                            // Sanity check, if zero or -ve then ignore\r\n                            if (expireMs > 0) {\r\n                                var expiry = new Date();\r\n                                expiry.setTime(expireMs);\r\n                                setValue(values, strExpires, _formatDate(expiry, !_isIE ? strToUTCString : strToGMTString) || _formatDate(expiry, _isIE ? strToGMTString : strToUTCString) || STR_EMPTY, isTruthy);\r\n                            }\r\n                        }\r\n                        if (!_isIE) {\r\n                            // Only replace if not already present\r\n                            setValue(values, \"max-age\", STR_EMPTY + maxAgeSec, null, isUndefined);\r\n                        }\r\n                    }\r\n                    var location_1 = getLocation();\r\n                    if (location_1 && location_1[_DYN_PROTOCOL /* @min:%2eprotocol */] === \"https:\") {\r\n                        setValue(values, \"secure\", null, null, isUndefined);\r\n                        // Only set same site if not also secure\r\n                        if (_allowUaSameSite === null) {\r\n                            _allowUaSameSite = !uaDisallowsSameSiteNone((getNavigator() || {})[_DYN_USER_AGENT /* @min:%2euserAgent */]);\r\n                        }\r\n                        if (_allowUaSameSite) {\r\n                            setValue(values, \"SameSite\", \"None\", null, isUndefined);\r\n                        }\r\n                    }\r\n                    setValue(values, STR_PATH, path || _path, null, isUndefined);\r\n                    //let setCookieFn = cookieMgrConfig.setCookie || _setCookieValue;\r\n                    _setCookieFn(name, _formatCookieValue(theValue, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            },\r\n            get: function (name) {\r\n                var value = STR_EMPTY;\r\n                if (_isMgrEnabled(cookieMgr) && !_isIgnoredCookie(cookieMgrConfig, name)) {\r\n                    value = _getCookieFn(name);\r\n                }\r\n                return value;\r\n            },\r\n            del: function (name, path) {\r\n                var result = false;\r\n                if (_isMgrEnabled(cookieMgr)) {\r\n                    // Only remove the cookie if the manager and cookie support has not been disabled\r\n                    result = cookieMgr.purge(name, path);\r\n                }\r\n                return result;\r\n            },\r\n            purge: function (name, path) {\r\n                var _a;\r\n                var result = false;\r\n                if (areCookiesSupported(logger)) {\r\n                    // Setting the expiration date in the past immediately removes the cookie\r\n                    var values = (_a = {},\r\n                        _a[STR_PATH] = path ? path : \"/\",\r\n                        _a[strExpires] = \"Thu, 01 Jan 1970 00:00:01 GMT\",\r\n                        _a);\r\n                    if (!isIE()) {\r\n                        // Set max age to expire now\r\n                        values[\"max-age\"] = \"0\";\r\n                    }\r\n                    // let delCookie = cookieMgrConfig.delCookie || _setCookieValue;\r\n                    _delCookieFn(name, _formatCookieValue(STR_EMPTY, values));\r\n                    result = true;\r\n                }\r\n                return result;\r\n            }\r\n        },\r\n        _a[_DYN_UNLOAD /* @min:unload */] = function (isAsync) {\r\n            unloadHandler && unloadHandler.rm();\r\n            unloadHandler = null;\r\n        },\r\n        _a);\r\n    // Associated this cookie manager with the config\r\n    cookieMgr[strConfigCookieMgr] = cookieMgr;\r\n    return cookieMgr;\r\n}\r\n/*\r\n* Helper method to tell if document.cookie object is supported by the runtime\r\n*/\r\nexport function areCookiesSupported(logger) {\r\n    if (_supportsCookies === null) {\r\n        _supportsCookies = false;\r\n        !_doc && _getDoc();\r\n        try {\r\n            var doc = _doc.v || {};\r\n            _supportsCookies = doc[strCookie] !== undefined;\r\n        }\r\n        catch (e) {\r\n            _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 68 /* _eInternalMessageId.CannotAccessCookie */, \"Cannot access document.cookie - \" + getExceptionName(e), { exception: dumpObj(e) });\r\n        }\r\n    }\r\n    return _supportsCookies;\r\n}\r\nfunction _extractParts(theValue) {\r\n    var values = {};\r\n    if (theValue && theValue[_DYN_LENGTH /* @min:%2elength */]) {\r\n        var parts = strTrim(theValue)[_DYN_SPLIT /* @min:%2esplit */](\";\");\r\n        arrForEach(parts, function (thePart) {\r\n            thePart = strTrim(thePart || STR_EMPTY);\r\n            if (thePart) {\r\n                var idx = strIndexOf(thePart, \"=\");\r\n                if (idx === -1) {\r\n                    values[thePart] = null;\r\n                }\r\n                else {\r\n                    values[strTrim(strLeft(thePart, idx))] = strTrim(strSubstring(thePart, idx + 1));\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return values;\r\n}\r\nfunction _formatDate(theDate, func) {\r\n    if (isFunction(theDate[func])) {\r\n        return theDate[func]();\r\n    }\r\n    return null;\r\n}\r\nfunction _formatCookieValue(value, values) {\r\n    var cookieValue = value || STR_EMPTY;\r\n    objForEachKey(values, function (name, theValue) {\r\n        cookieValue += \"; \" + name + (!isNullOrUndefined(theValue) ? \"=\" + theValue : STR_EMPTY);\r\n    });\r\n    return cookieValue;\r\n}\r\nfunction _getCookieValue(name) {\r\n    var cookieValue = STR_EMPTY;\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        var theCookie = _doc.v[strCookie] || STR_EMPTY;\r\n        if (_parsedCookieValue !== theCookie) {\r\n            _cookieCache = _extractParts(theCookie);\r\n            _parsedCookieValue = theCookie;\r\n        }\r\n        cookieValue = strTrim(_cookieCache[name] || STR_EMPTY);\r\n    }\r\n    return cookieValue;\r\n}\r\nfunction _setCookieValue(name, cookieValue) {\r\n    !_doc && _getDoc();\r\n    if (_doc.v) {\r\n        _doc.v[strCookie] = name + \"=\" + cookieValue;\r\n    }\r\n}\r\nexport function uaDisallowsSameSiteNone(userAgent) {\r\n    if (!isString(userAgent)) {\r\n        return false;\r\n    }\r\n    // Cover all iOS based browsers here. This includes:\r\n    // - Safari on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - WkWebview on iOS 12 for iPhone, iPod Touch, iPad\r\n    // - Chrome on iOS 12 for iPhone, iPod Touch, iPad\r\n    // All of which are broken by SameSite=None, because they use the iOS networking stack\r\n    if (strContains(userAgent, \"CPU iPhone OS 12\") || strContains(userAgent, \"iPad; CPU OS 12\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X based browsers that use the Mac OS networking stack. This includes:\r\n    // - Safari on Mac OS X\r\n    // This does not include:\r\n    // - Internal browser on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strContains(userAgent, \"Version/\") && strContains(userAgent, \"Safari\")) {\r\n        return true;\r\n    }\r\n    // Cover Mac OS X internal browsers that use the Mac OS networking stack. This includes:\r\n    // - Internal browser on Mac OS X\r\n    // This does not include:\r\n    // - Safari on Mac OS X\r\n    // - Chrome on Mac OS X\r\n    // - Chromium on Mac OS X\r\n    // Because they do not use the Mac OS networking stack.\r\n    if (strContains(userAgent, \"Macintosh; Intel Mac OS X 10_14\") && strEndsWith(userAgent, \"AppleWebKit/605.1.15 (KHTML, like Gecko)\")) {\r\n        return true;\r\n    }\r\n    // Cover Chrome 50-69, because some versions are broken by SameSite=None, and none in this range require it.\r\n    // Note: this covers some pre-Chromium Edge versions, but pre-Chromim Edge does not require SameSite=None, so this is fine.\r\n    // Note: this regex applies to Windows, Mac OS X, and Linux, deliberately.\r\n    if (strContains(userAgent, \"Chrome/5\") || strContains(userAgent, \"Chrome/6\")) {\r\n        return true;\r\n    }\r\n    // Unreal Engine runs Chromium 59, but does not advertise as Chrome until 4.23. Treat versions of Unreal\r\n    // that don't specify their Chrome version as lacking support for SameSite=None.\r\n    if (strContains(userAgent, \"UnrealEngine\") && !strContains(userAgent, \"Chrome\")) {\r\n        return true;\r\n    }\r\n    // UCBrowser < 12.13.2 ignores Set-Cookie headers with SameSite=None\r\n    // NB: this rule isn't complete - you need regex to make a complete rule.\r\n    // See: https://www.chromium.org/updates/same-site/incompatible-clients\r\n    if (strContains(userAgent, \"UCBrowser/12\") || strContains(userAgent, \"UCBrowser/11\")) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=CookieMgr.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TasApiFeatureProvider = exports.TASAPI_FETCHERROR_EVENTNAME = void 0;\nconst FilteredFeatureProvider_1 = require(\"./FilteredFeatureProvider\");\nexports.TASAPI_FETCHERROR_EVENTNAME = 'call-tas-error';\nconst ERROR_TYPE = 'ErrorType';\n/**\n * Feature provider implementation that calls the TAS web service to get the most recent active features.\n */\nclass TasApiFeatureProvider extends FilteredFeatureProvider_1.FilteredFeatureProvider {\n    constructor(httpClient, telemetry, filterProviders) {\n        super(telemetry, filterProviders);\n        this.httpClient = httpClient;\n        this.telemetry = telemetry;\n        this.filterProviders = filterProviders;\n    }\n    /**\n     * Method that handles fetching of latest data (in this case, flights) from the provider.\n     */\n    async fetch() {\n        // We get the filters that will be sent as headers.\n        let filters = this.getFilters();\n        let headers = {};\n        // Filters are handled using Map<string,any> therefore we need to\n        // convert these filters into something fetch can take as headers.\n        for (let key of filters.keys()) {\n            const filterValue = filters.get(key);\n            headers[key] = filterValue;\n        }\n        //webservice call\n        let response;\n        try {\n            response = await this.httpClient.get({ headers: headers });\n        }\n        catch (error) {\n            const fetchError = error;\n            const properties = new Map();\n            if (fetchError.responseReceived && !fetchError.responseOk) {\n                // The request was made and the server responded with a status code\n                // that falls out of the range of 2xx\n                properties.set(ERROR_TYPE, 'ServerError');\n            }\n            else if (fetchError.responseReceived === false) {\n                // The request was made but no response was received\n                properties.set(ERROR_TYPE, 'NoResponse');\n            }\n            else {\n                // Something happened in setting up the request that triggered an Error\n                properties.set(ERROR_TYPE, 'GenericError');\n            }\n            this.telemetry.postEvent(exports.TASAPI_FETCHERROR_EVENTNAME, properties);\n        }\n        // In case the response fetching failed, throw\n        // exception so that the caller exits.\n        if (!response) {\n            throw Error(exports.TASAPI_FETCHERROR_EVENTNAME);\n        }\n        // If we have at least one filter, we post it to telemetry event.\n        if (filters.keys.length > 0) {\n            this.PostEventToTelemetry(headers);\n        }\n        // Read the response data from the server.\n        const responseData = response.data;\n        let configs = responseData.Configs;\n        let features = [];\n        for (let c of configs) {\n            if (!c.Parameters) {\n                continue;\n            }\n            for (let key of Object.keys(c.Parameters)) {\n                const featureName = key + (c.Parameters[key] ? '' : 'cf');\n                if (!features.includes(featureName)) {\n                    features.push(featureName);\n                }\n            }\n        }\n        return {\n            features,\n            assignmentContext: responseData.AssignmentContext,\n            configs,\n        };\n    }\n}\nexports.TasApiFeatureProvider = TasApiFeatureProvider;\n//# sourceMappingURL=TasApiFeatureProvider.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { GitHubAuthenticationProvider, UriEventHandler } from './github';\n\nconst settingNotSent = '\"github-enterprise.uri\" not set';\nconst settingInvalid = '\"github-enterprise.uri\" invalid';\n\nclass NullAuthProvider implements vscode.AuthenticationProvider {\n\tprivate _onDidChangeSessions = new vscode.EventEmitter<vscode.AuthenticationProviderAuthenticationSessionsChangeEvent>();\n\tonDidChangeSessions = this._onDidChangeSessions.event;\n\n\tprivate readonly _disposable: vscode.Disposable;\n\n\tconstructor(private readonly _errorMessage: string) {\n\t\tthis._disposable = vscode.authentication.registerAuthenticationProvider('github-enterprise', 'GitHub Enterprise', this);\n\t}\n\n\tcreateSession(): Thenable<vscode.AuthenticationSession> {\n\t\tthrow new Error(this._errorMessage);\n\t}\n\n\tgetSessions(): Thenable<vscode.AuthenticationSession[]> {\n\t\treturn Promise.resolve([]);\n\t}\n\tremoveSession(): Thenable<void> {\n\t\tthrow new Error(this._errorMessage);\n\t}\n\n\tdispose() {\n\t\tthis._onDidChangeSessions.dispose();\n\t\tthis._disposable.dispose();\n\t}\n}\n\nfunction initGHES(context: vscode.ExtensionContext, uriHandler: UriEventHandler): vscode.Disposable {\n\tconst settingValue = vscode.workspace.getConfiguration().get<string>('github-enterprise.uri');\n\tif (!settingValue) {\n\t\tconst provider = new NullAuthProvider(settingNotSent);\n\t\tcontext.subscriptions.push(provider);\n\t\treturn provider;\n\t}\n\n\t// validate user value\n\tlet uri: vscode.Uri;\n\ttry {\n\t\turi = vscode.Uri.parse(settingValue, true);\n\t} catch (e) {\n\t\tvscode.window.showErrorMessage(vscode.l10n.t('GitHub Enterprise Server URI is not a valid URI: {0}', e.message ?? e));\n\t\tconst provider = new NullAuthProvider(settingInvalid);\n\t\tcontext.subscriptions.push(provider);\n\t\treturn provider;\n\t}\n\n\tconst githubEnterpriseAuthProvider = new GitHubAuthenticationProvider(context, uriHandler, uri);\n\tcontext.subscriptions.push(githubEnterpriseAuthProvider);\n\treturn githubEnterpriseAuthProvider;\n}\n\nexport function activate(context: vscode.ExtensionContext) {\n\tconst uriHandler = new UriEventHandler();\n\tcontext.subscriptions.push(uriHandler);\n\tcontext.subscriptions.push(vscode.window.registerUriHandler(uriHandler));\n\n\tcontext.subscriptions.push(new GitHubAuthenticationProvider(context, uriHandler));\n\n\tlet before = vscode.workspace.getConfiguration().get<string>('github-enterprise.uri');\n\tlet githubEnterpriseAuthProvider = initGHES(context, uriHandler);\n\tcontext.subscriptions.push(vscode.workspace.onDidChangeConfiguration(e => {\n\t\tif (e.affectsConfiguration('github-enterprise.uri')) {\n\t\t\tconst after = vscode.workspace.getConfiguration().get<string>('github-enterprise.uri');\n\t\t\tif (before !== after) {\n\t\t\t\tgithubEnterpriseAuthProvider?.dispose();\n\t\t\t\tbefore = after;\n\t\t\t\tgithubEnterpriseAuthProvider = initGHES(context, uriHandler);\n\t\t\t}\n\t\t}\n\t}));\n\n\t// Listener to prompt for reload when the fetch implementation setting changes\n\tconst beforeFetchSetting = vscode.workspace.getConfiguration().get<boolean>('github-authentication.useElectronFetch', true);\n\tcontext.subscriptions.push(vscode.workspace.onDidChangeConfiguration(async e => {\n\t\tif (e.affectsConfiguration('github-authentication.useElectronFetch')) {\n\t\t\tconst afterFetchSetting = vscode.workspace.getConfiguration().get<boolean>('github-authentication.useElectronFetch', true);\n\t\t\tif (beforeFetchSetting !== afterFetchSetting) {\n\t\t\t\tconst selection = await vscode.window.showInformationMessage(\n\t\t\t\t\tvscode.l10n.t('GitHub Authentication - Reload required'),\n\t\t\t\t\t{\n\t\t\t\t\t\tmodal: true,\n\t\t\t\t\t\tdetail: vscode.l10n.t('A reload is required for the fetch setting change to take effect.')\n\t\t\t\t\t},\n\t\t\t\t\tvscode.l10n.t('Reload Window')\n\t\t\t\t);\n\t\t\t\tif (selection) {\n\t\t\t\t\tawait vscode.commands.executeCommand('workbench.action.reloadWindow');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nexport var strShimFunction = \"function\";\r\nexport var strShimObject = \"object\";\r\nexport var strShimUndefined = \"undefined\";\r\nexport var strShimPrototype = \"prototype\";\r\nexport var strDefault = \"default\";\r\nexport var ObjClass = Object;\r\nexport var ObjProto = ObjClass[strShimPrototype];\r\n//# sourceMappingURL=Constants.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExperimentationServiceAutoPolling = void 0;\nconst ExperimentationServiceBase_1 = require(\"./ExperimentationServiceBase\");\nconst PollingService_1 = require(\"./Util/PollingService\");\n/**\n * Implementation of Feature provider that provides a polling feature, where the source can be re-fetched every x time given.\n */\nclass ExperimentationServiceAutoPolling extends ExperimentationServiceBase_1.ExperimentationServiceBase {\n    constructor(telemetry, filterProviders, refreshRateMs, assignmentContextTelemetryPropertyName, telemetryEventName, storageKey, storage) {\n        super(telemetry, assignmentContextTelemetryPropertyName, telemetryEventName, storageKey, storage);\n        this.telemetry = telemetry;\n        this.filterProviders = filterProviders;\n        this.refreshRateMs = refreshRateMs;\n        this.assignmentContextTelemetryPropertyName = assignmentContextTelemetryPropertyName;\n        this.telemetryEventName = telemetryEventName;\n        this.storageKey = storageKey;\n        this.storage = storage;\n        // Excluding 0 since it allows to turn off the auto polling.\n        if (refreshRateMs < 1000 && refreshRateMs !== 0) {\n            throw new Error('The minimum refresh rate for polling is 1000 ms (1 second). If you wish to deactivate this auto-polling use value of 0.');\n        }\n        if (refreshRateMs > 0) {\n            this.pollingService = new PollingService_1.PollingService(refreshRateMs);\n            this.pollingService.OnPollTick(async () => {\n                await super.getFeaturesAsync();\n            });\n        }\n    }\n    init() {\n        if (this.pollingService) {\n            this.pollingService.StartPolling(true);\n        }\n        else {\n            super.getFeaturesAsync();\n        }\n    }\n    /**\n     * Wrapper that will reset the polling intervals whenever the feature data is fetched manually.\n     */\n    async getFeaturesAsync(overrideInMemoryFeatures = false) {\n        if (!this.pollingService) {\n            return await super.getFeaturesAsync(overrideInMemoryFeatures);\n        }\n        else {\n            this.pollingService.StopPolling();\n            let result = await super.getFeaturesAsync(overrideInMemoryFeatures);\n            this.pollingService.StartPolling();\n            return result;\n        }\n    }\n}\nexports.ExperimentationServiceAutoPolling = ExperimentationServiceAutoPolling;\n//# sourceMappingURL=ExperimentationServiceAutoPolling.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const fetching = fetch;\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, getDocument, getWindow, isArray, objForEachKey, objKeys } from \"@nevware21/ts-utils\";\r\nimport { _DYN_HANDLER, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_REPLACE, _DYN_SPLICE, _DYN_SPLIT, _DYN_TYPE } from \"../__DynamicConstants\";\r\nimport { createElmNodeData, createUniqueNamespace } from \"./DataCacheHelper\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n// Added to help with minfication\r\nvar strOnPrefix = \"on\";\r\nvar strAttachEvent = \"attachEvent\";\r\nvar strAddEventHelper = \"addEventListener\";\r\nvar strDetachEvent = \"detachEvent\";\r\nvar strRemoveEventListener = \"removeEventListener\";\r\nvar strEvents = \"events\";\r\nvar strVisibilityChangeEvt = \"visibilitychange\";\r\nvar strPageHide = \"pagehide\";\r\nvar strPageShow = \"pageshow\";\r\nvar strUnload = \"unload\";\r\nvar strBeforeUnload = \"beforeunload\";\r\nvar strPageHideNamespace = createUniqueNamespace(\"aiEvtPageHide\");\r\nvar strPageShowNamespace = createUniqueNamespace(\"aiEvtPageShow\");\r\nvar rRemoveEmptyNs = /\\.[\\.]+/g;\r\nvar rRemoveTrailingEmptyNs = /[\\.]+$/;\r\nvar _guid = 1;\r\nvar elmNodeData = createElmNodeData(\"events\");\r\nvar eventNamespace = /^([^.]*)(?:\\.(.+)|)/;\r\nfunction _normalizeNamespace(name) {\r\n    if (name && name[_DYN_REPLACE /* @min:%2ereplace */]) {\r\n        return name[_DYN_REPLACE /* @min:%2ereplace */](/^[\\s\\.]+|(?=[\\s\\.])[\\.\\s]+$/g, STR_EMPTY);\r\n    }\r\n    return name;\r\n}\r\nfunction _getEvtNamespace(eventName, evtNamespace) {\r\n    var _a;\r\n    if (evtNamespace) {\r\n        var theNamespace_1 = STR_EMPTY;\r\n        if (isArray(evtNamespace)) {\r\n            theNamespace_1 = STR_EMPTY;\r\n            arrForEach(evtNamespace, function (name) {\r\n                name = _normalizeNamespace(name);\r\n                if (name) {\r\n                    if (name[0] !== \".\") {\r\n                        name = \".\" + name;\r\n                    }\r\n                    theNamespace_1 += name;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            theNamespace_1 = _normalizeNamespace(evtNamespace);\r\n        }\r\n        if (theNamespace_1) {\r\n            if (theNamespace_1[0] !== \".\") {\r\n                theNamespace_1 = \".\" + theNamespace_1;\r\n            }\r\n            // We may only have the namespace and not an eventName\r\n            eventName = (eventName || STR_EMPTY) + theNamespace_1;\r\n        }\r\n    }\r\n    var parsedEvent = (eventNamespace.exec(eventName || STR_EMPTY) || []);\r\n    return _a = {},\r\n        _a[_DYN_TYPE /* @min:type */] = parsedEvent[1],\r\n        _a.ns = ((parsedEvent[2] || STR_EMPTY).replace(rRemoveEmptyNs, \".\").replace(rRemoveTrailingEmptyNs, STR_EMPTY)[_DYN_SPLIT /* @min:%2esplit */](\".\").sort()).join(\".\"),\r\n        _a;\r\n}\r\n/**\r\n * Get all of the registered events on the target object, this is primarily used for testing cleanup but may also be used by\r\n * applications to remove their own events\r\n * @param target - The EventTarget that has registered events\r\n * @param eventName - [Optional] The name of the event to return the registered handlers and full name (with namespaces)\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n */\r\nexport function __getRegisteredEvents(target, eventName, evtNamespace) {\r\n    var theEvents = [];\r\n    var eventCache = elmNodeData.get(target, strEvents, {}, false);\r\n    var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n    objForEachKey(eventCache, function (evtType, registeredEvents) {\r\n        arrForEach(registeredEvents, function (value) {\r\n            var _a;\r\n            if (!evtName[_DYN_TYPE /* @min:%2etype */] || evtName[_DYN_TYPE /* @min:%2etype */] === value.evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n                if (!evtName.ns || evtName.ns === evtName.ns) {\r\n                    theEvents[_DYN_PUSH /* @min:%2epush */]((_a = {},\r\n                        _a[_DYN_NAME /* @min:name */] = value.evtName[_DYN_TYPE /* @min:%2etype */] + (value.evtName.ns ? \".\" + value.evtName.ns : STR_EMPTY),\r\n                        _a.handler = value[_DYN_HANDLER /* @min:%2ehandler */],\r\n                        _a));\r\n                }\r\n            }\r\n        });\r\n    });\r\n    return theEvents;\r\n}\r\n// Exported for internal unit testing only\r\nfunction _getRegisteredEvents(target, evtName, addDefault) {\r\n    if (addDefault === void 0) { addDefault = true; }\r\n    var aiEvts = elmNodeData.get(target, strEvents, {}, addDefault);\r\n    var registeredEvents = aiEvts[evtName];\r\n    if (!registeredEvents) {\r\n        registeredEvents = aiEvts[evtName] = [];\r\n    }\r\n    return registeredEvents;\r\n}\r\nfunction _doDetach(obj, evtName, handlerRef, useCapture) {\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        if (obj[strRemoveEventListener]) {\r\n            obj[strRemoveEventListener](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n        }\r\n        else if (obj[strDetachEvent]) {\r\n            obj[strDetachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n        }\r\n    }\r\n}\r\nfunction _doAttach(obj, evtName, handlerRef, useCapture) {\r\n    var result = false;\r\n    if (obj && evtName && evtName[_DYN_TYPE /* @min:%2etype */] && handlerRef) {\r\n        if (obj[strAddEventHelper]) {\r\n            // all browsers except IE before version 9\r\n            obj[strAddEventHelper](evtName[_DYN_TYPE /* @min:%2etype */], handlerRef, useCapture);\r\n            result = true;\r\n        }\r\n        else if (obj[strAttachEvent]) {\r\n            // IE before version 9\r\n            obj[strAttachEvent](strOnPrefix + evtName[_DYN_TYPE /* @min:%2etype */], handlerRef);\r\n            result = true;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction _doUnregister(target, events, evtName, unRegFn) {\r\n    var idx = events[_DYN_LENGTH /* @min:%2elength */];\r\n    while (idx--) {\r\n        var theEvent = events[idx];\r\n        if (theEvent) {\r\n            if (!evtName.ns || evtName.ns === theEvent.evtName.ns) {\r\n                if (!unRegFn || unRegFn(theEvent)) {\r\n                    _doDetach(target, theEvent.evtName, theEvent[_DYN_HANDLER /* @min:%2ehandler */], theEvent.capture);\r\n                    // Remove the registered event\r\n                    events[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction _unregisterEvents(target, evtName, unRegFn) {\r\n    if (evtName[_DYN_TYPE /* @min:%2etype */]) {\r\n        _doUnregister(target, _getRegisteredEvents(target, evtName[_DYN_TYPE /* @min:%2etype */]), evtName, unRegFn);\r\n    }\r\n    else {\r\n        var eventCache = elmNodeData.get(target, strEvents, {});\r\n        objForEachKey(eventCache, function (evtType, events) {\r\n            _doUnregister(target, events, evtName, unRegFn);\r\n        });\r\n        // Cleanup\r\n        if (objKeys(eventCache)[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n            elmNodeData.kill(target, strEvents);\r\n        }\r\n    }\r\n}\r\nexport function mergeEvtNamespace(theNamespace, namespaces) {\r\n    var newNamespaces;\r\n    if (namespaces) {\r\n        if (isArray(namespaces)) {\r\n            newNamespaces = [theNamespace].concat(namespaces);\r\n        }\r\n        else {\r\n            newNamespaces = [theNamespace, namespaces];\r\n        }\r\n        // resort the namespaces so they are always in order\r\n        newNamespaces = (_getEvtNamespace(\"xx\", newNamespaces).ns)[_DYN_SPLIT /* @min:%2esplit */](\".\");\r\n    }\r\n    else {\r\n        newNamespaces = theNamespace;\r\n    }\r\n    return newNamespaces;\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventName - String that specifies any of the standard DHTML Events without \"on\" prefix, if may also include an optional (dot \".\" prefixed)\r\n * namespaces \"click\" \"click.mynamespace\" in addition to specific namespaces.\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function eventOn(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    var _a;\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    var result = false;\r\n    if (target) {\r\n        try {\r\n            var evtName = _getEvtNamespace(eventName, evtNamespace);\r\n            result = _doAttach(target, evtName, handlerRef, useCapture);\r\n            if (result && elmNodeData.accept(target)) {\r\n                var registeredEvent = (_a = {\r\n                        guid: _guid++,\r\n                        evtName: evtName\r\n                    },\r\n                    _a[_DYN_HANDLER /* @min:handler */] = handlerRef,\r\n                    _a.capture = useCapture,\r\n                    _a);\r\n                _getRegisteredEvents(target, evtName.type)[_DYN_PUSH /* @min:%2epush */](registeredEvent);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Additional namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace,\r\n * if the eventName also includes a namespace the namespace(s) are merged into a single namespace\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function eventOff(target, eventName, handlerRef, evtNamespace, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    if (target) {\r\n        try {\r\n            var evtName_1 = _getEvtNamespace(eventName, evtNamespace);\r\n            var found_1 = false;\r\n            _unregisterEvents(target, evtName_1, function (regEvent) {\r\n                if ((evtName_1.ns && !handlerRef) || regEvent[_DYN_HANDLER /* @min:%2ehandler */] === handlerRef) {\r\n                    found_1 = true;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            if (!found_1) {\r\n                // fallback to try and remove as requested\r\n                _doDetach(target, evtName_1, handlerRef, useCapture);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Just Ignore any error so that we don't break any execution path\r\n        }\r\n    }\r\n}\r\n/**\r\n * Binds the specified function to an event, so that the function gets called whenever the event fires on the object\r\n * @param obj - Object to add the event too.\r\n * @param eventNameWithoutOn - String that specifies any of the standard DHTML Events without \"on\" prefix and optional (dot \".\" prefixed) namespaces \"click\" \"click.mynamespace\".\r\n * @param handlerRef - Pointer that specifies the function to call when event fires\r\n * @param useCapture - [Optional] Defaults to false\r\n * @returns True if the function was bound successfully to the event, otherwise false\r\n */\r\nexport function attachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    return eventOn(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Removes an event handler for the specified event\r\n * @param Object - to remove the event from\r\n * @param eventNameWithoutOn - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param handlerRef - {any} - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param useCapture - [Optional] Defaults to false\r\n */\r\nexport function detachEvent(obj, eventNameWithoutOn, handlerRef, useCapture) {\r\n    if (useCapture === void 0) { useCapture = false; }\r\n    eventOff(obj, eventNameWithoutOn, handlerRef, null, useCapture);\r\n}\r\n/**\r\n * Trys to add an event handler for the specified event to the window, body and document\r\n * @param eventName - {string} - The name of the event\r\n * @param callback - {any} - The callback function that needs to be executed for the given event\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @return {boolean} - true if the handler was successfully added\r\n */\r\nexport function addEventHandler(eventName, callback, evtNamespace) {\r\n    var result = false;\r\n    var w = getWindow();\r\n    if (w) {\r\n        result = eventOn(w, eventName, callback, evtNamespace);\r\n        result = eventOn(w[\"body\"], eventName, callback, evtNamespace) || result;\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        result = eventOn(doc, eventName, callback, evtNamespace) || result;\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Trys to remove event handler(s) for the specified event/namespace to the window, body and document\r\n * @param eventName - {string} - The name of the event, with optional namespaces or just the namespaces,\r\n * such as \"click\", \"click.mynamespace\" or \".mynamespace\"\r\n * @param callback - {any} - - The callback function that needs to be removed from the given event, when using a\r\n * namespace (with or without a qualifying event) this may be null to remove all previously attached event handlers\r\n * otherwise this will only remove events with this specific handler.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventHandler(eventName, callback, evtNamespace) {\r\n    var w = getWindow();\r\n    if (w) {\r\n        eventOff(w, eventName, callback, evtNamespace);\r\n        eventOff(w[\"body\"], eventName, callback, evtNamespace);\r\n    }\r\n    var doc = getDocument();\r\n    if (doc) {\r\n        eventOff(doc, eventName, callback, evtNamespace);\r\n    }\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nfunction _addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && events[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                if (!excludeEvents || arrIndexOf(excludeEvents, name) === -1) {\r\n                    added = addEventHandler(name, listener, evtNamespace) || added;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Bind the listener to the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addEventListeners(events, listener, excludeEvents, evtNamespace) {\r\n    var added = false;\r\n    if (listener && events && isArray(events)) {\r\n        added = _addEventListeners(events, listener, excludeEvents, evtNamespace);\r\n        if (!added && excludeEvents && excludeEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            // Failed to add any listeners and we excluded some, so just attempt to add the excluded events\r\n            added = _addEventListeners(events, listener, null, evtNamespace);\r\n        }\r\n    }\r\n    return added;\r\n}\r\n/**\r\n * Remove the listener from the array of events\r\n * @param events - An string array of event names to bind the listener to\r\n * @param listener - The event callback to call when the event is triggered\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n */\r\nexport function removeEventListeners(events, listener, evtNamespace) {\r\n    if (events && isArray(events)) {\r\n        arrForEach(events, function (name) {\r\n            if (name) {\r\n                removeEventHandler(name, listener, evtNamespace);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Listen to the 'beforeunload', 'unload' and 'pagehide' events which indicates a page unload is occurring,\r\n * this does NOT listen to the 'visibilitychange' event as while it does indicate that the page is being hidden\r\n * it does not *necessarily* mean that the page is being completely unloaded, it can mean that the user is\r\n * just navigating to a different Tab and may come back (without unloading the page). As such you may also\r\n * need to listen to the 'addPageHideEventListener' and 'addPageShowEventListener' events.\r\n * @param listener - The event callback to call when a page unload event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked, unless no other events can be.\r\n * @param evtNamespace - [Optional] Namespace(s) to append to the event listeners so they can be uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageUnloadEventListener(listener, excludeEvents, evtNamespace) {\r\n    // Hook the unload event for the document, window and body to ensure that the client events are flushed to the server\r\n    // As just hooking the window does not always fire (on chrome) for page navigation's.\r\n    return addEventListeners([strBeforeUnload, strUnload, strPageHide], listener, excludeEvents, evtNamespace);\r\n}\r\n/**\r\n * Remove any matching 'beforeunload', 'unload' and 'pagehide' events that may have been added via addEventListener,\r\n * addEventListeners, addPageUnloadEventListener or addPageHideEventListener.\r\n * @param listener - The specific event callback to to be removed\r\n * @param evtNamespace - [Optional] Namespace(s) uniquely identified and removed based on this namespace.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function removePageUnloadEventListener(listener, evtNamespace) {\r\n    removeEventListeners([strBeforeUnload, strUnload, strPageHide], listener, evtNamespace);\r\n}\r\n/**\r\n * Listen to the pagehide and visibility changing to 'hidden' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page hide event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional] A Namespace to append to the event listeners so they can be uniquely identified and removed\r\n * based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageHideEventListener\" can remove these events.\r\n * Suggestion: pass as true if you are also calling addPageUnloadEventListener as that also hooks pagehide\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageHideEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"hidden\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    var pageUnloadAdded = _addEventListeners([strPageHide], listener, excludeEvents, newNamespaces);\r\n    if (!excludeEvents || arrIndexOf(excludeEvents, strVisibilityChangeEvt) === -1) {\r\n        pageUnloadAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageUnloadAdded;\r\n    }\r\n    if (!pageUnloadAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageUnloadAdded = addPageHideEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageUnloadAdded;\r\n}\r\n/**\r\n * Removes the pageHide event listeners added by addPageHideEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageHideEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageHideEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pagehide\"\r\n    var newNamespaces = mergeEvtNamespace(strPageHideNamespace, evtNamespace);\r\n    removeEventListeners([strPageHide], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n/**\r\n * Listen to the pageshow and visibility changing to 'visible' events, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when if you plan to call\r\n * removePageShowEventListener as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The event callback to call when a page is show event is triggered\r\n * @param excludeEvents - [Optional] An array of events that should not be hooked (if possible), unless no other events can be.\r\n * @param evtNamespace - [Optional/Recommended] A Namespace to append to the event listeners so they can be uniquely\r\n * identified and removed based on this namespace. This call also adds an additional unique \"pageshow\" namespace to the events\r\n * so that only the matching \"removePageShowEventListener\" can remove these events.\r\n * @returns true - when at least one of the events was registered otherwise false\r\n */\r\nexport function addPageShowEventListener(listener, excludeEvents, evtNamespace) {\r\n    function _handlePageVisibility(evt) {\r\n        var doc = getDocument();\r\n        if (listener && doc && doc.visibilityState === \"visible\") {\r\n            listener(evt);\r\n        }\r\n    }\r\n    // add the unique page show namespace to any provided namespace so we can only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    var pageShowAdded = _addEventListeners([strPageShow], listener, excludeEvents, newNamespaces);\r\n    pageShowAdded = _addEventListeners([strVisibilityChangeEvt], _handlePageVisibility, excludeEvents, newNamespaces) || pageShowAdded;\r\n    if (!pageShowAdded && excludeEvents) {\r\n        // Failed to add any listeners and we where requested to exclude some, so just call again without excluding anything\r\n        pageShowAdded = addPageShowEventListener(listener, null, evtNamespace);\r\n    }\r\n    return pageShowAdded;\r\n}\r\n/**\r\n * Removes the pageShow event listeners added by addPageShowEventListener, because the 'visibilitychange' uses\r\n * an internal proxy to detect the visibility state you SHOULD use a unique namespace when calling addPageShowEventListener\r\n * as the remove ignores the listener argument for the 'visibilitychange' event.\r\n * @param listener - The specific listener to remove for the 'pageshow' event only (ignored for 'visibilitychange')\r\n * @param evtNamespace - The unique namespace used when calling addPageShowEventListener\r\n */\r\nexport function removePageShowEventListener(listener, evtNamespace) {\r\n    // add the unique page show namespace to any provided namespace so we only remove the ones added by \"pageshow\"\r\n    var newNamespaces = mergeEvtNamespace(strPageShowNamespace, evtNamespace);\r\n    removeEventListeners([strPageShow], listener, newNamespaces);\r\n    removeEventListeners([strVisibilityChangeEvt], null, newNamespaces);\r\n}\r\n//# sourceMappingURL=EventHelpers.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 11\r\nexport var _DYN_BLK_VAL = \"blkVal\"; // Count: 5\r\nexport var _DYN_LENGTH = \"length\"; // Count: 55\r\nexport var _DYN_RD_ONLY = \"rdOnly\"; // Count: 4\r\nexport var _DYN_NOTIFY = \"notify\"; // Count: 4\r\nexport var _DYN_WARN_TO_CONSOLE = \"warnToConsole\"; // Count: 4\r\nexport var _DYN_THROW_INTERNAL = \"throwInternal\"; // Count: 5\r\nexport var _DYN_SET_DF = \"setDf\"; // Count: 6\r\nexport var _DYN_WATCH = \"watch\"; // Count: 8\r\nexport var _DYN_LOGGER = \"logger\"; // Count: 21\r\nexport var _DYN_APPLY = \"apply\"; // Count: 7\r\nexport var _DYN_PUSH = \"push\"; // Count: 35\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 8\r\nexport var _DYN_HDLR = \"hdlr\"; // Count: 6\r\nexport var _DYN_CANCEL = \"cancel\"; // Count: 6\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 8\r\nexport var _DYN_REMOVE_NOTIFICATION_0 = \"removeNotificationListener\"; // Count: 4\r\nexport var _DYN_ADD_NOTIFICATION_LIS1 = \"addNotificationListener\"; // Count: 4\r\nexport var _DYN_IS_INITIALIZED = \"isInitialized\"; // Count: 10\r\nexport var _DYN_INSTRUMENTATION_KEY = \"instrumentationKey\"; // Count: 2\r\nexport var _DYN__INACTIVE = \"INACTIVE\"; // Count: 3\r\nexport var _DYN_VALUE = \"value\"; // Count: 5\r\nexport var _DYN_GET_NOTIFY_MGR = \"getNotifyMgr\"; // Count: 5\r\nexport var _DYN_GET_PLUGIN = \"getPlugin\"; // Count: 6\r\nexport var _DYN_NAME = \"name\"; // Count: 12\r\nexport var _DYN_I_KEY = \"iKey\"; // Count: 5\r\nexport var _DYN_TIME = \"time\"; // Count: 6\r\nexport var _DYN_PROCESS_NEXT = \"processNext\"; // Count: 15\r\nexport var _DYN_GET_PROCESS_TEL_CONT2 = \"getProcessTelContext\"; // Count: 2\r\nexport var _DYN_POLL_INTERNAL_LOGS = \"pollInternalLogs\"; // Count: 2\r\nexport var _DYN_ENABLED = \"enabled\"; // Count: 6\r\nexport var _DYN_STOP_POLLING_INTERNA3 = \"stopPollingInternalLogs\"; // Count: 2\r\nexport var _DYN_UNLOAD = \"unload\"; // Count: 9\r\nexport var _DYN_ON_COMPLETE = \"onComplete\"; // Count: 5\r\nexport var _DYN_VERSION = \"version\"; // Count: 6\r\nexport var _DYN_LOGGING_LEVEL_CONSOL4 = \"loggingLevelConsole\"; // Count: 2\r\nexport var _DYN_CREATE_NEW = \"createNew\"; // Count: 7\r\nexport var _DYN_TEARDOWN = \"teardown\"; // Count: 9\r\nexport var _DYN_MESSAGE_ID = \"messageId\"; // Count: 4\r\nexport var _DYN_MESSAGE = \"message\"; // Count: 7\r\nexport var _DYN_IS_ASYNC = \"isAsync\"; // Count: 6\r\nexport var _DYN_DIAG_LOG = \"diagLog\"; // Count: 10\r\nexport var _DYN__DO_TEARDOWN = \"_doTeardown\"; // Count: 5\r\nexport var _DYN_UPDATE = \"update\"; // Count: 6\r\nexport var _DYN_GET_NEXT = \"getNext\"; // Count: 12\r\nexport var _DYN_SET_NEXT_PLUGIN = \"setNextPlugin\"; // Count: 5\r\nexport var _DYN_PROTOCOL = \"protocol\"; // Count: 3\r\nexport var _DYN_USER_AGENT = \"userAgent\"; // Count: 5\r\nexport var _DYN_SPLIT = \"split\"; // Count: 7\r\nexport var _DYN_NODE_TYPE = \"nodeType\"; // Count: 3\r\nexport var _DYN_REPLACE = \"replace\"; // Count: 9\r\nexport var _DYN_LOG_INTERNAL_MESSAGE = \"logInternalMessage\"; // Count: 2\r\nexport var _DYN_TYPE = \"type\"; // Count: 14\r\nexport var _DYN_HANDLER = \"handler\"; // Count: 5\r\nexport var _DYN_STATUS = \"status\"; // Count: 5\r\nexport var _DYN_GET_RESPONSE_HEADER = \"getResponseHeader\"; // Count: 2\r\nexport var _DYN_GET_ALL_RESPONSE_HEA5 = \"getAllResponseHeaders\"; // Count: 2\r\nexport var _DYN_IS_CHILD_EVT = \"isChildEvt\"; // Count: 3\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_GET_CTX = \"getCtx\"; // Count: 6\r\nexport var _DYN_SET_CTX = \"setCtx\"; // Count: 10\r\nexport var _DYN_COMPLETE = \"complete\"; // Count: 3\r\nexport var _DYN_ITEMS_RECEIVED = \"itemsReceived\"; // Count: 3\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_SEND_POST = \"sendPOST\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 5\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 6\r\nexport var _DYN_SET_REQUEST_HEADER = \"setRequestHeader\"; // Count: 2\r\nexport var _DYN_TRACE_ID = \"traceId\"; // Count: 5\r\nexport var _DYN_SPAN_ID = \"spanId\"; // Count: 5\r\nexport var _DYN_TRACE_FLAGS = \"traceFlags\"; // Count: 6\r\nexport var _DYN_GET_ATTRIBUTE = \"getAttribute\"; // Count: 3\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport TelemetryReporter from '@vscode/extension-telemetry';\nimport { getExperimentationService, IExperimentationService, IExperimentationTelemetry, TargetPopulation } from 'vscode-tas-client';\n\nexport class ExperimentationTelemetry implements IExperimentationTelemetry {\n\tprivate sharedProperties: Record<string, string> = {};\n\tprivate experimentationServicePromise: Promise<IExperimentationService> | undefined;\n\n\tconstructor(private readonly context: vscode.ExtensionContext, private baseReporter: TelemetryReporter) { }\n\n\tprivate async createExperimentationService(): Promise<IExperimentationService> {\n\t\tlet targetPopulation: TargetPopulation;\n\t\tswitch (vscode.env.uriScheme) {\n\t\t\tcase 'vscode':\n\t\t\t\ttargetPopulation = TargetPopulation.Public;\n\t\t\t\tbreak;\n\t\t\tcase 'vscode-insiders':\n\t\t\t\ttargetPopulation = TargetPopulation.Insiders;\n\t\t\t\tbreak;\n\t\t\tcase 'vscode-exploration':\n\t\t\t\ttargetPopulation = TargetPopulation.Internal;\n\t\t\t\tbreak;\n\t\t\tcase 'code-oss':\n\t\t\t\ttargetPopulation = TargetPopulation.Team;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttargetPopulation = TargetPopulation.Public;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst id = this.context.extension.id;\n\t\tconst version = this.context.extension.packageJSON.version;\n\t\tconst experimentationService = getExperimentationService(id, version, targetPopulation, this, this.context.globalState);\n\t\tawait experimentationService.initialFetch;\n\t\treturn experimentationService;\n\t}\n\n\t/**\n\t * @returns A promise that you shouldn't need to await because this is just telemetry.\n\t */\n\tasync sendTelemetryEvent(eventName: string, properties?: Record<string, string>, measurements?: Record<string, number>) {\n\t\tif (!this.experimentationServicePromise) {\n\t\t\tthis.experimentationServicePromise = this.createExperimentationService();\n\t\t}\n\t\tawait this.experimentationServicePromise;\n\n\t\tthis.baseReporter.sendTelemetryEvent(\n\t\t\teventName,\n\t\t\t{\n\t\t\t\t...this.sharedProperties,\n\t\t\t\t...properties,\n\t\t\t},\n\t\t\tmeasurements,\n\t\t);\n\t}\n\n\t/**\n\t * @returns A promise that you shouldn't need to await because this is just telemetry.\n\t */\n\tasync sendTelemetryErrorEvent(\n\t\teventName: string,\n\t\tproperties?: Record<string, string>,\n\t\t_measurements?: Record<string, number>\n\t) {\n\t\tif (!this.experimentationServicePromise) {\n\t\t\tthis.experimentationServicePromise = this.createExperimentationService();\n\t\t}\n\t\tawait this.experimentationServicePromise;\n\n\t\tthis.baseReporter.sendTelemetryErrorEvent(eventName, {\n\t\t\t...this.sharedProperties,\n\t\t\t...properties,\n\t\t});\n\t}\n\n\tsetSharedProperty(name: string, value: string): void {\n\t\tthis.sharedProperties[name] = value;\n\t}\n\n\tpostEvent(eventName: string, props: Map<string, string>): void {\n\t\tconst event: Record<string, string> = {};\n\t\tfor (const [key, value] of props) {\n\t\t\tevent[key] = value;\n\t\t}\n\t\tthis.sendTelemetryEvent(eventName, event);\n\t}\n\n\tdispose(): Promise<any> {\n\t\treturn this.baseReporter.dispose();\n\t}\n}\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n// ###################################################################################################################################################\r\n// Note: DON'T Export these const from the package as we are still targeting IE/ES5 this will export a mutable variables that someone could change ###\r\n// ###################################################################################################################################################\r\nexport var UNDEFINED_VALUE = undefined;\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_CHANNELS = \"channels\";\r\nexport var STR_CORE = \"core\";\r\nexport var STR_CREATE_PERF_MGR = \"createPerfMgr\";\r\nexport var STR_DISABLED = \"disabled\";\r\nexport var STR_EXTENSION_CONFIG = \"extensionConfig\";\r\nexport var STR_EXTENSIONS = \"extensions\";\r\nexport var STR_PROCESS_TELEMETRY = \"processTelemetry\";\r\nexport var STR_PRIORITY = \"priority\";\r\nexport var STR_EVENTS_SENT = \"eventsSent\";\r\nexport var STR_EVENTS_DISCARDED = \"eventsDiscarded\";\r\nexport var STR_EVENTS_SEND_REQUEST = \"eventsSendRequest\";\r\nexport var STR_PERF_EVENT = \"perfEvent\";\r\nexport var STR_OFFLINE_STORE = \"offlineEventsStored\";\r\nexport var STR_OFFLINE_SENT = \"offlineBatchSent\";\r\nexport var STR_OFFLINE_DROP = \"offlineBatchDrop\";\r\nexport var STR_GET_PERF_MGR = \"getPerfMgr\";\r\nexport var STR_DOMAIN = \"domain\";\r\nexport var STR_PATH = \"path\";\r\nexport var STR_NOT_DYNAMIC_ERROR = \"Not dynamic - \";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { getCrypto, getMsCrypto, isIE } from \"./EnvUtils\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nvar UInt32Mask = 0x100000000;\r\nvar MaxUInt32 = 0xffffffff;\r\nvar SEED1 = 123456789;\r\nvar SEED2 = 987654321;\r\n// MWC based Random generator (for IE)\r\nvar _mwcSeeded = false;\r\nvar _mwcW = SEED1;\r\nvar _mwcZ = SEED2;\r\n// Takes any integer\r\nfunction _mwcSeed(seedValue) {\r\n    if (seedValue < 0) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        seedValue >>>= 0;\r\n    }\r\n    _mwcW = (SEED1 + seedValue) & MaxUInt32;\r\n    _mwcZ = (SEED2 - seedValue) & MaxUInt32;\r\n    _mwcSeeded = true;\r\n}\r\nfunction _autoSeedMwc() {\r\n    // Simple initialization using default Math.random() - So we inherit any entropy from the browser\r\n    // and bitwise XOR with the current milliseconds\r\n    try {\r\n        var now = utcNow() & 0x7fffffff;\r\n        _mwcSeed(((Math.random() * UInt32Mask) ^ now) + now);\r\n    }\r\n    catch (e) {\r\n        // Don't crash if something goes wrong\r\n    }\r\n}\r\n/**\r\n * Generate a random value between 0 and maxValue, max value should be limited to a 32-bit maximum.\r\n * So maxValue(16) will produce a number from 0..16 (range of 17)\r\n * @param maxValue\r\n */\r\nexport function randomValue(maxValue) {\r\n    if (maxValue > 0) {\r\n        return Math.floor((random32() / MaxUInt32) * (maxValue + 1)) >>> 0;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * generate a random 32-bit number (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), defaults un-unsigned.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function random32(signed) {\r\n    var value = 0;\r\n    var c = getCrypto() || getMsCrypto();\r\n    if (c && c.getRandomValues) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = c.getRandomValues(new Uint32Array(1))[0] & MaxUInt32;\r\n    }\r\n    if (value === 0 && isIE()) {\r\n        // For IE 6, 7, 8 (especially on XP) Math.random is not very random\r\n        if (!_mwcSeeded) {\r\n            // Set the seed for the Mwc algorithm\r\n            _autoSeedMwc();\r\n        }\r\n        // Don't use Math.random for IE\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = mwcRandom32() & MaxUInt32;\r\n    }\r\n    if (value === 0) {\r\n        // Make sure the number is converted into the specified range (-0x80000000..0x7FFFFFFF)\r\n        value = Math.floor((UInt32Mask * Math.random()) | 0);\r\n    }\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Seed the MWC random number generator with the specified seed or a random value\r\n * @param value - optional the number to used as the seed, if undefined, null or zero a random value will be chosen\r\n */\r\nexport function mwcRandomSeed(value) {\r\n    if (!value) {\r\n        _autoSeedMwc();\r\n    }\r\n    else {\r\n        _mwcSeed(value);\r\n    }\r\n}\r\n/**\r\n * Generate a random 32-bit number between (0x000000..0xFFFFFFFF) or (-0x80000000..0x7FFFFFFF), using MWC (Multiply with carry)\r\n * instead of Math.random() defaults to un-signed.\r\n * Used as a replacement random generator for IE to avoid issues with older IE instances.\r\n * @param signed - True to return a signed 32-bit number (-0x80000000..0x7FFFFFFF) otherwise an unsigned one (0x000000..0xFFFFFFFF)\r\n */\r\nexport function mwcRandom32(signed) {\r\n    _mwcZ = (36969 * (_mwcZ & 0xFFFF) + (_mwcZ >> 16)) & MaxUInt32;\r\n    _mwcW = (18000 * (_mwcW & 0xFFFF) + (_mwcW >> 16)) & MaxUInt32;\r\n    var value = (((_mwcZ << 16) + (_mwcW & 0xFFFF)) >>> 0) & MaxUInt32 | 0;\r\n    if (!signed) {\r\n        // Make sure we end up with a positive number and not -ve one.\r\n        value >>>= 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Generate random base64 id string.\r\n * The default length is 22 which is 132-bits so almost the same as a GUID but as base64 (the previous default was 5)\r\n * @param maxLength - Optional value to specify the length of the id to be generated, defaults to 22\r\n */\r\nexport function newId(maxLength) {\r\n    if (maxLength === void 0) { maxLength = 22; }\r\n    var base64chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    // Start with an initial random number, consuming the value in reverse byte order\r\n    var number = random32() >>> 0; // Make sure it's a +ve number\r\n    var chars = 0;\r\n    var result = STR_EMPTY;\r\n    while (result[_DYN_LENGTH /* @min:%2elength */] < maxLength) {\r\n        chars++;\r\n        result += base64chars.charAt(number & 0x3F);\r\n        number >>>= 6; // Zero fill with right shift\r\n        if (chars === 5) {\r\n            // 5 base64 characters === 30 bits so we don't have enough bits for another base64 char\r\n            // So add on another 30 bits and make sure it's +ve\r\n            number = (((random32() << 2) & 0xFFFFFFFF) | (number & 0x03)) >>> 0;\r\n            chars = 0; // We need to reset the number every 5 chars (30 bits)\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=RandomHelper.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseFeatureProvider = void 0;\n/**\n * Abstract class for Feature Provider Implementation.\n */\nclass BaseFeatureProvider {\n    /**\n     * @param telemetry The telemetry implementation.\n     */\n    constructor(telemetry) {\n        this.telemetry = telemetry;\n        this.isFetching = false;\n    }\n    /**\n     * Method that wraps the fetch method in order to re-use the fetch promise if needed.\n     * @param headers The headers to be used on the fetch method.\n     */\n    async getFeatures() {\n        if (this.isFetching && this.fetchPromise) {\n            return this.fetchPromise;\n        }\n        this.fetchPromise = this.fetch();\n        let features = await this.fetchPromise;\n        this.isFetching = false;\n        this.fetchPromise = undefined;\n        return features;\n    }\n}\nexports.BaseFeatureProvider = BaseFeatureProvider;\n//# sourceMappingURL=BaseFeatureProvider.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { EventEmitter, Event, Disposable } from 'vscode';\n\nexport function filterEvent<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\treturn (listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables);\n}\n\nexport function onceEvent<T>(event: Event<T>): Event<T> {\n\treturn (listener, thisArgs = null, disposables?) => {\n\t\tconst result = event(e => {\n\t\t\tresult.dispose();\n\t\t\treturn listener.call(thisArgs, e);\n\t\t}, null, disposables);\n\n\t\treturn result;\n\t};\n}\n\n\nexport interface PromiseAdapter<T, U> {\n\t(\n\t\tvalue: T,\n\t\tresolve:\n\t\t\t(value: U | PromiseLike<U>) => void,\n\t\treject:\n\t\t\t(reason: any) => void\n\t): any;\n}\n\nconst passthrough = (value: any, resolve: (value?: any) => void) => resolve(value);\n\n/**\n * Return a promise that resolves with the next emitted event, or with some future\n * event as decided by an adapter.\n *\n * If specified, the adapter is a function that will be called with\n * `(event, resolve, reject)`. It will be called once per event until it resolves or\n * rejects.\n *\n * The default adapter is the passthrough function `(value, resolve) => resolve(value)`.\n *\n * @param event the event\n * @param adapter controls resolution of the returned promise\n * @returns a promise that resolves or rejects as specified by the adapter\n */\nexport function promiseFromEvent<T, U>(\n\tevent: Event<T>,\n\tadapter: PromiseAdapter<T, U> = passthrough): { promise: Promise<U>; cancel: EventEmitter<void> } {\n\tlet subscription: Disposable;\n\tconst cancel = new EventEmitter<void>();\n\treturn {\n\t\tpromise: new Promise<U>((resolve, reject) => {\n\t\t\tcancel.event(_ => reject('Cancelled'));\n\t\t\tsubscription = event((value: T) => {\n\t\t\t\ttry {\n\t\t\t\t\tPromise.resolve(adapter(value, resolve, reject))\n\t\t\t\t\t\t.catch(reject);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t}).then(\n\t\t\t(result: U) => {\n\t\t\t\tsubscription.dispose();\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\terror => {\n\t\t\t\tsubscription.dispose();\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t),\n\t\tcancel\n\t};\n}\n\nexport function arrayEquals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\nexport class StopWatch {\n\n\tprivate _startTime: number = Date.now();\n\tprivate _stopTime: number = -1;\n\n\tpublic stop(): void {\n\t\tthis._stopTime = Date.now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn Date.now() - this._startTime;\n\t}\n}\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExperimentationService = void 0;\nconst TasApiFeatureProvider_1 = require(\"./FeatureProvider/TasApiFeatureProvider\");\nconst HttpClient_1 = require(\"./Util/HttpClient\");\nconst ExperimentationServiceAutoPolling_1 = require(\"./ExperimentationServiceAutoPolling\");\n/**\n * Experimentation service to provide functionality of A/B experiments:\n * - reading flights;\n * - caching current set of flights;\n * - get answer on if flights are enabled.\n */\nclass ExperimentationService extends ExperimentationServiceAutoPolling_1.ExperimentationServiceAutoPolling {\n    constructor(options) {\n        super(options.telemetry, options.filterProviders || [], // Defaulted to empty array.\n        options.refetchInterval != null\n            ? options.refetchInterval\n            : // If no fetch interval is provided, refetch functionality is turned off.\n                0, options.assignmentContextTelemetryPropertyName, options.telemetryEventName, options.storageKey, options.keyValueStorage);\n        this.options = options;\n        this.invokeInit();\n    }\n    init() {\n        // set feature providers to be an empty array.\n        this.featureProviders = [];\n        // Add WebApi feature provider.\n        this.addFeatureProvider(new TasApiFeatureProvider_1.TasApiFeatureProvider(new HttpClient_1.HttpClient(this.options.endpoint), this.telemetry, this.filterProviders));\n        // This will start polling the TAS.\n        super.init();\n    }\n}\nexports.ExperimentationService = ExperimentationService;\nExperimentationService.REFRESH_RATE_IN_MINUTES = 30;\n//# sourceMappingURL=ExperimentationService.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { getGlobal, strShimObject, strShimPrototype, strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { getDocument, getInst, getNavigator, getPerformance, hasNavigator, isFunction, isString, isUndefined, strIndexOf } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH, _DYN_NAME, _DYN_SPLIT, _DYN_TO_LOWER_CASE, _DYN_USER_AGENT } from \"../__DynamicConstants\";\r\nimport { strContains } from \"./HelperFuncs\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\n/**\r\n * This file exists to hold environment utilities that are required to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only use defined methods (functions) in this class so that users of these\r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\nvar strDocumentMode = \"documentMode\";\r\nvar strLocation = \"location\";\r\nvar strConsole = \"console\";\r\nvar strJSON = \"JSON\";\r\nvar strCrypto = \"crypto\";\r\nvar strMsCrypto = \"msCrypto\";\r\nvar strReactNative = \"ReactNative\";\r\nvar strMsie = \"msie\";\r\nvar strTrident = \"trident/\";\r\nvar strXMLHttpRequest = \"XMLHttpRequest\";\r\nvar _isTrident = null;\r\nvar _navUserAgentCheck = null;\r\nvar _enableMocks = false;\r\nvar _useXDomainRequest = null;\r\nvar _beaconsSupported = null;\r\nfunction _hasProperty(theClass, property) {\r\n    var supported = false;\r\n    if (theClass) {\r\n        try {\r\n            supported = property in theClass;\r\n            if (!supported) {\r\n                var proto = theClass[strShimPrototype];\r\n                if (proto) {\r\n                    supported = property in proto;\r\n                }\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Do Nothing\r\n        }\r\n        if (!supported) {\r\n            try {\r\n                var tmp = new theClass();\r\n                supported = !isUndefined(tmp[property]);\r\n            }\r\n            catch (e) {\r\n                // Do Nothing\r\n            }\r\n        }\r\n    }\r\n    return supported;\r\n}\r\n/**\r\n * Enable the lookup of test mock objects if requested\r\n * @param enabled\r\n */\r\nexport function setEnableEnvMocks(enabled) {\r\n    _enableMocks = enabled;\r\n}\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(checkForMock) {\r\n    if (checkForMock && _enableMocks) {\r\n        var mockLocation = getInst(\"__mockLocation\");\r\n        if (mockLocation) {\r\n            return mockLocation;\r\n        }\r\n    }\r\n    if (typeof location === strShimObject && location) {\r\n        return location;\r\n    }\r\n    return getInst(strLocation);\r\n}\r\n/**\r\n * Returns the global console object\r\n */\r\nexport function getConsole() {\r\n    if (typeof console !== strShimUndefined) {\r\n        return console;\r\n    }\r\n    return getInst(strConsole);\r\n}\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a\r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history\r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\"\r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON() {\r\n    return Boolean((typeof JSON === strShimObject && JSON) || getInst(strJSON) !== null);\r\n}\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON() {\r\n    if (hasJSON()) {\r\n        return JSON || getInst(strJSON);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto() {\r\n    return getInst(strCrypto);\r\n}\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getMsCrypto() {\r\n    return getInst(strMsCrypto);\r\n}\r\n/**\r\n * Returns whether the environment is reporting that we are running in a React Native Environment\r\n */\r\nexport function isReactNative() {\r\n    // If running in React Native, navigator.product will be populated\r\n    var nav = getNavigator();\r\n    if (nav && nav.product) {\r\n        return nav.product === strReactNative;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Identifies whether the current environment appears to be IE\r\n */\r\nexport function isIE() {\r\n    var nav = getNavigator();\r\n    if (nav && (nav[_DYN_USER_AGENT /* @min:%2euserAgent */] !== _navUserAgentCheck || _isTrident === null)) {\r\n        // Added to support test mocking of the user agent\r\n        _navUserAgentCheck = nav[_DYN_USER_AGENT /* @min:%2euserAgent */];\r\n        var userAgent = (_navUserAgentCheck || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n        _isTrident = (strContains(userAgent, strMsie) || strContains(userAgent, strTrident));\r\n    }\r\n    return _isTrident;\r\n}\r\n/**\r\n * Gets IE version returning the document emulation mode if we are running on IE, or null otherwise\r\n */\r\nexport function getIEVersion(userAgentStr) {\r\n    if (userAgentStr === void 0) { userAgentStr = null; }\r\n    if (!userAgentStr) {\r\n        var navigator_1 = getNavigator() || {};\r\n        userAgentStr = navigator_1 ? (navigator_1.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    // Also check for documentMode in case X-UA-Compatible meta tag was included in HTML.\r\n    if (strContains(ua, strMsie)) {\r\n        var doc = getDocument() || {};\r\n        return Math.max(parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strMsie)[1]), (doc[strDocumentMode] || 0));\r\n    }\r\n    else if (strContains(ua, strTrident)) {\r\n        var tridentVer = parseInt(ua[_DYN_SPLIT /* @min:%2esplit */](strTrident)[1]);\r\n        if (tridentVer) {\r\n            return tridentVer + 4;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function isSafari(userAgentStr) {\r\n    if (!userAgentStr || !isString(userAgentStr)) {\r\n        var navigator_2 = getNavigator() || {};\r\n        userAgentStr = navigator_2 ? (navigator_2.userAgent || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() : STR_EMPTY;\r\n    }\r\n    var ua = (userAgentStr || STR_EMPTY)[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n    return (strIndexOf(ua, \"safari\") >= 0);\r\n}\r\n/**\r\n * Checks if HTML5 Beacons are supported in the current environment.\r\n * @param useCached - [Optional] used for testing to bypass the cached lookup, when `true` this will\r\n * cause the cached global to be reset.\r\n * @returns True if supported, false otherwise.\r\n */\r\nexport function isBeaconsSupported(useCached) {\r\n    if (_beaconsSupported === null || useCached === false) {\r\n        _beaconsSupported = hasNavigator() && Boolean(getNavigator().sendBeacon);\r\n    }\r\n    return _beaconsSupported;\r\n}\r\n/**\r\n * Checks if the Fetch API is supported in the current environment.\r\n * @param withKeepAlive - [Optional] If True, check if fetch is available and it supports the keepalive feature, otherwise only check if fetch is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isFetchSupported(withKeepAlive) {\r\n    var isSupported = false;\r\n    try {\r\n        isSupported = !!getInst(\"fetch\");\r\n        var request = getInst(\"Request\");\r\n        if (isSupported && withKeepAlive && request) {\r\n            isSupported = _hasProperty(request, \"keepalive\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nexport function useXDomainRequest() {\r\n    if (_useXDomainRequest === null) {\r\n        _useXDomainRequest = (typeof XDomainRequest !== strShimUndefined);\r\n        if (_useXDomainRequest && isXhrSupported()) {\r\n            _useXDomainRequest = _useXDomainRequest && !_hasProperty(getInst(strXMLHttpRequest), \"withCredentials\");\r\n        }\r\n    }\r\n    return _useXDomainRequest;\r\n}\r\n/**\r\n * Checks if XMLHttpRequest is supported\r\n * @returns True if supported, otherwise false\r\n */\r\nexport function isXhrSupported() {\r\n    var isSupported = false;\r\n    try {\r\n        var xmlHttpRequest = getInst(strXMLHttpRequest);\r\n        isSupported = !!xmlHttpRequest;\r\n    }\r\n    catch (e) {\r\n        // Just Swallow any failure during availability checks\r\n    }\r\n    return isSupported;\r\n}\r\nfunction _getNamedValue(values, name) {\r\n    if (values) {\r\n        for (var i = 0; i < values[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n            var value = values[i];\r\n            if (value[_DYN_NAME /* @min:%2ename */]) {\r\n                if (value[_DYN_NAME /* @min:%2ename */] === name) {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Helper function to fetch the named meta-tag from the page.\r\n * @param name\r\n */\r\nexport function findMetaTag(name) {\r\n    var doc = getDocument();\r\n    if (doc && name) {\r\n        // Look for a meta-tag\r\n        return _getNamedValue(doc.querySelectorAll(\"meta\"), name).content;\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Helper function to fetch the named server timing value from the page response (first navigation event).\r\n * @param name\r\n */\r\nexport function findNamedServerTiming(name) {\r\n    var value;\r\n    var perf = getPerformance();\r\n    if (perf) {\r\n        // Try looking for a server-timing header\r\n        var navPerf = perf.getEntriesByType(\"navigation\") || [];\r\n        value = _getNamedValue((navPerf[_DYN_LENGTH /* @min:%2elength */] > 0 ? navPerf[0] : {}).serverTiming, name).description;\r\n    }\r\n    return value;\r\n}\r\n// TODO: should reuse this method for analytics plugin\r\nexport function dispatchEvent(target, evnt) {\r\n    if (target && target.dispatchEvent && evnt) {\r\n        target.dispatchEvent(evnt);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function createCustomDomEvent(eventName, details) {\r\n    var event = null;\r\n    var detail = { detail: details || null };\r\n    if (isFunction(CustomEvent)) { // Use CustomEvent constructor when available\r\n        event = new CustomEvent(eventName, detail);\r\n    }\r\n    else { // CustomEvent has no constructor in IE\r\n        var doc = getDocument();\r\n        if (doc && doc.createEvent) {\r\n            event = doc.createEvent(\"CustomEvent\");\r\n            event.initCustomEvent(eventName, true, true, detail);\r\n        }\r\n    }\r\n    return event;\r\n}\r\nexport function sendCustomEvent(evtName, cfg, customDetails) {\r\n    var global = getGlobal();\r\n    if (global && global.CustomEvent) {\r\n        try {\r\n            var details = { cfg: cfg || null, customDetails: customDetails || null };\r\n            return dispatchEvent(global, createCustomDomEvent(evtName, details));\r\n        }\r\n        catch (e) {\r\n            // eslint-disable-next-line no-empty\r\n        }\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=EnvUtils.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nexport var ChannelControllerPriority = 500;\r\nexport var DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\n// export const SampleRate = \"sampleRate\";\r\n// export const ProcessLegacy = \"ProcessLegacy\";\r\n// export const HttpMethod = \"http.method\";\r\n// export const DEFAULT_BREEZE_ENDPOINT = \"https://dc.services.visualstudio.com\";\r\n// export const DEFAULT_BREEZE_PATH = \"/v2/track\";\r\n// export const strNotSpecified = \"not_specified\";\r\n// export const strIkey = \"iKey\";\r\n//# sourceMappingURL=Constants.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { getInst } from \"@nevware21/ts-utils\";\r\nimport { _DYN_APPLY, _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_EVENTS_SENT, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar listenerFuncs = [STR_EVENTS_SENT, STR_EVENTS_DISCARDED, STR_EVENTS_SEND_REQUEST, STR_PERF_EVENT];\r\nvar _aiNamespace = null;\r\nvar _debugListener;\r\nfunction _listenerProxyFunc(name, config) {\r\n    return function () {\r\n        var args = arguments;\r\n        var dbgExt = getDebugExt(config);\r\n        if (dbgExt) {\r\n            var listener = dbgExt.listener;\r\n            if (listener && listener[name]) {\r\n                listener[name][_DYN_APPLY /* @min:%2eapply */](listener, args);\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction _getExtensionNamespace() {\r\n    // Cache the lookup of the global namespace object\r\n    var target = getInst(\"Microsoft\");\r\n    if (target) {\r\n        _aiNamespace = target[\"ApplicationInsights\"];\r\n    }\r\n    return _aiNamespace;\r\n}\r\nexport function getDebugExt(config) {\r\n    var ns = _aiNamespace;\r\n    if (!ns && config.disableDbgExt !== true) {\r\n        ns = _aiNamespace || _getExtensionNamespace();\r\n    }\r\n    return ns ? ns[\"ChromeDbgExt\"] : null;\r\n}\r\nexport function getDebugListener(config) {\r\n    if (!_debugListener) {\r\n        _debugListener = {};\r\n        for (var lp = 0; lp < listenerFuncs[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n            _debugListener[listenerFuncs[lp]] = _listenerProxyFunc(listenerFuncs[lp], config);\r\n        }\r\n    }\r\n    return _debugListener;\r\n}\r\n//# sourceMappingURL=DbgExtensionUtils.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { ExperimentationTelemetry } from './common/experimentationService';\nimport { AuthProviderType, UriEventHandler } from './github';\nimport { Log } from './common/logger';\nimport { isSupportedClient, isSupportedTarget } from './common/env';\nimport { crypto } from './node/crypto';\nimport { fetching } from './node/fetch';\nimport { ExtensionHost, GitHubSocialSignInProvider, GitHubTarget, getFlows } from './flows';\nimport { CANCELLATION_ERROR, NETWORK_ERROR, USER_CANCELLATION_ERROR } from './common/errors';\nimport { Config } from './config';\nimport { base64Encode } from './node/buffer';\n\nconst REDIRECT_URL_STABLE = 'https://vscode.dev/redirect';\nconst REDIRECT_URL_INSIDERS = 'https://insiders.vscode.dev/redirect';\n\nexport interface IGitHubServer {\n\tlogin(scopes: string, signInProvider?: GitHubSocialSignInProvider, extraAuthorizeParameters?: Record<string, string>, existingLogin?: string): Promise<string>;\n\tlogout(session: vscode.AuthenticationSession): Promise<void>;\n\tgetUserInfo(token: string): Promise<{ id: string; accountName: string }>;\n\tsendAdditionalTelemetryInfo(session: vscode.AuthenticationSession): Promise<void>;\n\tfriendlyName: string;\n}\n\n\nexport class GitHubServer implements IGitHubServer {\n\treadonly friendlyName: string;\n\n\tprivate readonly _type: AuthProviderType;\n\n\tprivate _redirectEndpoint: string | undefined;\n\n\tconstructor(\n\t\tprivate readonly _logger: Log,\n\t\tprivate readonly _telemetryReporter: ExperimentationTelemetry,\n\t\tprivate readonly _uriHandler: UriEventHandler,\n\t\tprivate readonly _extensionKind: vscode.ExtensionKind,\n\t\tprivate readonly _ghesUri?: vscode.Uri\n\t) {\n\t\tthis._type = _ghesUri ? AuthProviderType.githubEnterprise : AuthProviderType.github;\n\t\tthis.friendlyName = this._type === AuthProviderType.github ? 'GitHub' : _ghesUri?.authority!;\n\t}\n\n\tget baseUri() {\n\t\tif (this._type === AuthProviderType.github) {\n\t\t\treturn vscode.Uri.parse('https://github.com/');\n\t\t}\n\t\treturn this._ghesUri!;\n\t}\n\n\tprivate async getRedirectEndpoint(): Promise<string> {\n\t\tif (this._redirectEndpoint) {\n\t\t\treturn this._redirectEndpoint;\n\t\t}\n\t\tif (this._type === AuthProviderType.github) {\n\t\t\tconst proxyEndpoints = await vscode.commands.executeCommand<{ [providerId: string]: string } | undefined>('workbench.getCodeExchangeProxyEndpoints');\n\t\t\t// If we are running in insiders vscode.dev, then ensure we use the redirect route on that.\n\t\t\tthis._redirectEndpoint = REDIRECT_URL_STABLE;\n\t\t\tif (proxyEndpoints?.github && new URL(proxyEndpoints.github).hostname === 'insiders.vscode.dev') {\n\t\t\t\tthis._redirectEndpoint = REDIRECT_URL_INSIDERS;\n\t\t\t}\n\t\t} else {\n\t\t\t// GHE only supports a single redirect endpoint, so we can't use\n\t\t\t// insiders.vscode.dev/redirect when we're running in Insiders, unfortunately.\n\t\t\t// Additionally, we make the assumption that this function will only be used\n\t\t\t// in flows that target supported GHE targets, not on-prem GHES. Because of this\n\t\t\t// assumption, we can assume that the GHE version used is at least 3.8 which is\n\t\t\t// the version that changed the redirect endpoint to this URI from the old\n\t\t\t// GitHub maintained server.\n\t\t\tthis._redirectEndpoint = 'https://vscode.dev/redirect';\n\t\t}\n\t\treturn this._redirectEndpoint;\n\t}\n\n\t// TODO@joaomoreno TODO@TylerLeonhardt\n\tprivate _isNoCorsEnvironment: boolean | undefined;\n\tprivate async isNoCorsEnvironment(): Promise<boolean> {\n\t\tif (this._isNoCorsEnvironment !== undefined) {\n\t\t\treturn this._isNoCorsEnvironment;\n\t\t}\n\t\tconst uri = await vscode.env.asExternalUri(vscode.Uri.parse(`${vscode.env.uriScheme}://vscode.github-authentication/dummy`));\n\t\tthis._isNoCorsEnvironment = (uri.scheme === 'https' && /^((insiders\\.)?vscode|github)\\./.test(uri.authority)) || (uri.scheme === 'http' && /^localhost/.test(uri.authority));\n\t\treturn this._isNoCorsEnvironment;\n\t}\n\n\tpublic async login(scopes: string, signInProvider?: GitHubSocialSignInProvider, extraAuthorizeParameters?: Record<string, string>, existingLogin?: string): Promise<string> {\n\t\tthis._logger.info(`Logging in for the following scopes: ${scopes}`);\n\n\t\t// Used for showing a friendlier message to the user when the explicitly cancel a flow.\n\t\tlet userCancelled: boolean | undefined;\n\t\tconst yes = vscode.l10n.t('Yes');\n\t\tconst no = vscode.l10n.t('No');\n\t\tconst promptToContinue = async (mode: string) => {\n\t\t\tif (userCancelled === undefined) {\n\t\t\t\t// We haven't had a failure yet so wait to prompt\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst message = userCancelled\n\t\t\t\t? vscode.l10n.t('Having trouble logging in? Would you like to try a different way? ({0})', mode)\n\t\t\t\t: vscode.l10n.t('You have not yet finished authorizing this extension to use GitHub. Would you like to try a different way? ({0})', mode);\n\t\t\tconst result = await vscode.window.showWarningMessage(message, yes, no);\n\t\t\tif (result !== yes) {\n\t\t\t\tthrow new Error(CANCELLATION_ERROR);\n\t\t\t}\n\t\t};\n\n\t\tconst nonce: string = crypto.getRandomValues(new Uint32Array(2)).reduce((prev, curr) => prev += curr.toString(16), '');\n\t\tconst callbackUri = await vscode.env.asExternalUri(vscode.Uri.parse(`${vscode.env.uriScheme}://vscode.github-authentication/did-authenticate?nonce=${encodeURIComponent(nonce)}`));\n\n\t\tconst supportedClient = isSupportedClient(callbackUri);\n\t\tconst supportedTarget = isSupportedTarget(this._type, this._ghesUri);\n\n\t\tconst isNodeEnvironment = typeof process !== 'undefined' && typeof process?.versions?.node === 'string';\n\t\tconst flows = getFlows({\n\t\t\ttarget: this._type === AuthProviderType.github\n\t\t\t\t? GitHubTarget.DotCom\n\t\t\t\t: supportedTarget ? GitHubTarget.HostedEnterprise : GitHubTarget.Enterprise,\n\t\t\textensionHost: isNodeEnvironment\n\t\t\t\t? this._extensionKind === vscode.ExtensionKind.UI ? ExtensionHost.Local : ExtensionHost.Remote\n\t\t\t\t: ExtensionHost.WebWorker,\n\t\t\tisSupportedClient: supportedClient\n\t\t});\n\n\n\t\tfor (const flow of flows) {\n\t\t\ttry {\n\t\t\t\tif (flow !== flows[0]) {\n\t\t\t\t\tawait promptToContinue(flow.label);\n\t\t\t\t}\n\t\t\t\treturn await flow.trigger({\n\t\t\t\t\tscopes,\n\t\t\t\t\tcallbackUri,\n\t\t\t\t\tnonce,\n\t\t\t\t\tsignInProvider,\n\t\t\t\t\textraAuthorizeParameters,\n\t\t\t\t\tbaseUri: this.baseUri,\n\t\t\t\t\tlogger: this._logger,\n\t\t\t\t\turiHandler: this._uriHandler,\n\t\t\t\t\tenterpriseUri: this._ghesUri,\n\t\t\t\t\tredirectUri: vscode.Uri.parse(await this.getRedirectEndpoint()),\n\t\t\t\t\texistingLogin\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tuserCancelled = this.processLoginError(e);\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(userCancelled ? CANCELLATION_ERROR : 'No auth flow succeeded.');\n\t}\n\n\tpublic async logout(session: vscode.AuthenticationSession): Promise<void> {\n\t\tthis._logger.trace(`Deleting session (${session.id}) from server...`);\n\n\t\tif (!Config.gitHubClientSecret) {\n\t\t\tthis._logger.warn('No client secret configured for GitHub authentication. The token has been deleted with best effort on this system, but we are unable to delete the token on server without the client secret.');\n\t\t\treturn;\n\t\t}\n\n\t\t// Only attempt to delete OAuth tokens. They are always prefixed with `gho_`.\n\t\t// https://docs.github.com/en/rest/apps/oauth-applications#about-oauth-apps-and-oauth-authorizations-of-github-apps\n\t\tif (!session.accessToken.startsWith('gho_')) {\n\t\t\tthis._logger.warn('The token being deleted is not an OAuth token. It has been deleted locally, but we cannot delete it on server.');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isSupportedTarget(this._type, this._ghesUri)) {\n\t\t\tthis._logger.trace('GitHub.com and GitHub hosted GitHub Enterprise are the only options that support deleting tokens on the server. Skipping.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst authHeader = 'Basic ' + base64Encode(`${Config.gitHubClientId}:${Config.gitHubClientSecret}`);\n\t\tconst uri = this.getServerUri(`/applications/${Config.gitHubClientId}/token`);\n\n\t\ttry {\n\t\t\t// Defined here: https://docs.github.com/en/rest/apps/oauth-applications?apiVersion=2022-11-28#delete-an-app-token\n\t\t\tconst result = await fetching(uri.toString(true), {\n\t\t\t\tlogger: this._logger,\n\t\t\t\tretryFallbacks: true,\n\t\t\t\texpectJSON: false,\n\t\t\t\tmethod: 'DELETE',\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/vnd.github+json',\n\t\t\t\t\tAuthorization: authHeader,\n\t\t\t\t\t'X-GitHub-Api-Version': '2022-11-28',\n\t\t\t\t\t'User-Agent': `${vscode.env.appName} (${vscode.env.appHost})`\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ access_token: session.accessToken }),\n\t\t\t});\n\n\t\t\tif (result.status === 204) {\n\t\t\t\tthis._logger.trace(`Successfully deleted token from session (${session.id}) from server.`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst body = await result.text();\n\t\t\t\tthrow new Error(body);\n\t\t\t} catch (e) {\n\t\t\t\tthrow new Error(`${result.status} ${result.statusText}`);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis._logger.warn('Failed to delete token from server.' + (e.message ?? e));\n\t\t}\n\t}\n\n\tprivate getServerUri(path: string = '') {\n\t\tconst apiUri = this.baseUri;\n\t\t// github.com and Hosted GitHub Enterprise instances\n\t\tif (isSupportedTarget(this._type, this._ghesUri)) {\n\t\t\treturn vscode.Uri.parse(`${apiUri.scheme}://api.${apiUri.authority}`).with({ path });\n\t\t}\n\t\t// GitHub Enterprise Server (aka on-prem)\n\t\treturn vscode.Uri.parse(`${apiUri.scheme}://${apiUri.authority}/api/v3${path}`);\n\t}\n\n\tpublic async getUserInfo(token: string): Promise<{ id: string; accountName: string }> {\n\t\tlet result;\n\t\ttry {\n\t\t\tthis._logger.info('Getting user info...');\n\t\t\tresult = await fetching(this.getServerUri('/user').toString(), {\n\t\t\t\tlogger: this._logger,\n\t\t\t\tretryFallbacks: true,\n\t\t\t\texpectJSON: true,\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `token ${token}`,\n\t\t\t\t\t'User-Agent': `${vscode.env.appName} (${vscode.env.appHost})`\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (ex) {\n\t\t\tthis._logger.error(ex.message);\n\t\t\tthrow new Error(NETWORK_ERROR);\n\t\t}\n\n\t\tif (result.ok) {\n\t\t\ttry {\n\t\t\t\tconst json = await result.json() as { id: number; login: string };\n\t\t\t\tthis._logger.info('Got account info!');\n\t\t\t\treturn { id: `${json.id}`, accountName: json.login };\n\t\t\t} catch (e) {\n\t\t\t\tthis._logger.error(`Unexpected error parsing response from GitHub: ${e.message ?? e}`);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} else {\n\t\t\t// either display the response message or the http status text\n\t\t\tlet errorMessage = result.statusText;\n\t\t\ttry {\n\t\t\t\tconst json = await result.json();\n\t\t\t\tif (json.message) {\n\t\t\t\t\terrorMessage = json.message;\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\t// noop\n\t\t\t}\n\t\t\tthis._logger.error(`Getting account info failed: ${errorMessage}`);\n\t\t\tthrow new Error(errorMessage);\n\t\t}\n\t}\n\n\tpublic async sendAdditionalTelemetryInfo(session: vscode.AuthenticationSession): Promise<void> {\n\t\tif (!vscode.env.isTelemetryEnabled) {\n\t\t\treturn;\n\t\t}\n\t\tconst nocors = await this.isNoCorsEnvironment();\n\n\t\tif (nocors) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._type === AuthProviderType.github) {\n\t\t\treturn await this.checkUserDetails(session);\n\t\t}\n\n\t\t// GHES\n\t\tawait this.checkEnterpriseVersion(session.accessToken);\n\t}\n\n\tprivate async checkUserDetails(session: vscode.AuthenticationSession): Promise<void> {\n\t\tlet edu: string | undefined;\n\n\t\ttry {\n\t\t\tconst result = await fetching('https://education.github.com/api/user', {\n\t\t\t\tlogger: this._logger,\n\t\t\t\tretryFallbacks: true,\n\t\t\t\texpectJSON: true,\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `token ${session.accessToken}`,\n\t\t\t\t\t'faculty-check-preview': 'true',\n\t\t\t\t\t'User-Agent': `${vscode.env.appName} (${vscode.env.appHost})`\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (result.ok) {\n\t\t\t\tconst json: { student: boolean; faculty: boolean } = await result.json();\n\t\t\t\tedu = json.student\n\t\t\t\t\t? 'student'\n\t\t\t\t\t: json.faculty\n\t\t\t\t\t\t? 'faculty'\n\t\t\t\t\t\t: 'none';\n\t\t\t} else {\n\t\t\t\tedu = 'unknown';\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tedu = 'unknown';\n\t\t}\n\n\t\t/* __GDPR__\n\t\t\t\"session\" : {\n\t\t\t\t\"owner\": \"TylerLeonhardt\",\n\t\t\t\t\"isEdu\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\"isManaged\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\tthis._telemetryReporter.sendTelemetryEvent('session', {\n\t\t\tisEdu: edu,\n\t\t\t// Apparently, this is how you tell if a user is an EMU...\n\t\t\tisManaged: session.account.label.includes('_') ? 'true' : 'false'\n\t\t});\n\t}\n\n\tprivate async checkEnterpriseVersion(token: string): Promise<void> {\n\t\ttry {\n\t\t\tlet version: string;\n\t\t\tif (!isSupportedTarget(this._type, this._ghesUri)) {\n\t\t\t\tconst result = await fetching(this.getServerUri('/meta').toString(), {\n\t\t\t\t\tlogger: this._logger,\n\t\t\t\t\tretryFallbacks: true,\n\t\t\t\t\texpectJSON: true,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `token ${token}`,\n\t\t\t\t\t\t'User-Agent': `${vscode.env.appName} (${vscode.env.appHost})`\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (!result.ok) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst json: { verifiable_password_authentication: boolean; installed_version: string } = await result.json();\n\t\t\t\tversion = json.installed_version;\n\t\t\t} else {\n\t\t\t\tversion = 'hosted';\n\t\t\t}\n\n\t\t\t/* __GDPR__\n\t\t\t\t\"ghe-session\" : {\n\t\t\t\t\t\"owner\": \"TylerLeonhardt\",\n\t\t\t\t\t\"version\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis._telemetryReporter.sendTelemetryEvent('ghe-session', {\n\t\t\t\tversion\n\t\t\t});\n\t\t} catch {\n\t\t\t// No-op\n\t\t}\n\t}\n\n\tprivate processLoginError(error: Error): boolean {\n\t\tif (error.message === CANCELLATION_ERROR) {\n\t\t\tthrow error;\n\t\t}\n\t\tthis._logger.error(error.message ?? error);\n\t\treturn error.message === USER_CANCELLATION_ERROR;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Uri } from 'vscode';\nimport { AuthProviderType } from '../github';\n\nconst VALID_DESKTOP_CALLBACK_SCHEMES = [\n\t'vscode',\n\t'vscode-insiders',\n\t// On Windows, some browsers don't seem to redirect back to OSS properly.\n\t// As a result, you get stuck in the auth flow. We exclude this from the\n\t// list until we can figure out a way to fix this behavior in browsers.\n\t// 'code-oss',\n\t'vscode-wsl',\n\t'vscode-exploration'\n];\n\nexport function isSupportedClient(uri: Uri): boolean {\n\treturn (\n\t\tVALID_DESKTOP_CALLBACK_SCHEMES.includes(uri.scheme) ||\n\t\t// vscode.dev & insiders.vscode.dev\n\t\t/(?:^|\\.)vscode\\.dev$/.test(uri.authority) ||\n\t\t// github.dev & codespaces\n\t\t/(?:^|\\.)github\\.dev$/.test(uri.authority)\n\t);\n}\n\nexport function isSupportedTarget(type: AuthProviderType, gheUri?: Uri): boolean {\n\treturn (\n\t\ttype === AuthProviderType.github ||\n\t\tisHostedGitHubEnterprise(gheUri!)\n\t);\n}\n\nexport function isHostedGitHubEnterprise(uri: Uri): boolean {\n\treturn /\\.ghe\\.com$/.test(uri.authority);\n}\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MementoKeyValueStorage = void 0;\nclass MementoKeyValueStorage {\n    constructor(mementoGlobalStorage) {\n        this.mementoGlobalStorage = mementoGlobalStorage;\n    }\n    async getValue(key, defaultValue) {\n        const value = await this.mementoGlobalStorage.get(key);\n        return value || defaultValue;\n    }\n    setValue(key, value) {\n        this.mementoGlobalStorage.update(key, value);\n    }\n}\nexports.MementoKeyValueStorage = MementoKeyValueStorage;\n//# sourceMappingURL=MementoKeyValueStorage.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isArray, isFunction, objDefine, utcNow } from \"@nevware21/ts-utils\";\r\nimport { _DYN_COMPLETE, _DYN_GET_CTX, _DYN_IS_ASYNC, _DYN_IS_CHILD_EVT, _DYN_LENGTH, _DYN_NAME, _DYN_PUSH, _DYN_SET_CTX, _DYN_TIME } from \"../__DynamicConstants\";\r\nimport { STR_GET_PERF_MGR, STR_PERF_EVENT } from \"./InternalConstants\";\r\nvar strExecutionContextKey = \"ctx\";\r\nvar strParentContextKey = \"ParentContextKey\";\r\nvar strChildrenContextKey = \"ChildrenContextKey\";\r\nvar _defaultPerfManager = null;\r\nvar PerfEvent = /** @class */ (function () {\r\n    function PerfEvent(name, payloadDetails, isAsync) {\r\n        var _self = this;\r\n        _self.start = utcNow();\r\n        _self[_DYN_NAME /* @min:%2ename */] = name;\r\n        _self[_DYN_IS_ASYNC /* @min:%2eisAsync */] = isAsync;\r\n        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return false; };\r\n        if (isFunction(payloadDetails)) {\r\n            // Create an accessor to minimize the potential performance impact of executing the payloadDetails callback\r\n            var theDetails_1;\r\n            objDefine(_self, \"payload\", {\r\n                g: function () {\r\n                    // Delay the execution of the payloadDetails until needed\r\n                    if (!theDetails_1 && isFunction(payloadDetails)) {\r\n                        theDetails_1 = payloadDetails();\r\n                        // clear it out now so the referenced objects can be garbage collected\r\n                        payloadDetails = null;\r\n                    }\r\n                    return theDetails_1;\r\n                }\r\n            });\r\n        }\r\n        _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n            if (key) {\r\n                // The parent and child links are located directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey] || key === PerfEvent[strChildrenContextKey]) {\r\n                    return _self[key];\r\n                }\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            }\r\n            return null;\r\n        };\r\n        _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n            if (key) {\r\n                // Put the parent and child links directly on the object (for better viewing in the DebugPlugin)\r\n                if (key === PerfEvent[strParentContextKey]) {\r\n                    // Simple assumption, if we are setting a parent then we must be a child\r\n                    if (!_self[key]) {\r\n                        _self[_DYN_IS_CHILD_EVT /* @min:%2eisChildEvt */] = function () { return true; };\r\n                    }\r\n                    _self[key] = value;\r\n                }\r\n                else if (key === PerfEvent[strChildrenContextKey]) {\r\n                    _self[key] = value;\r\n                }\r\n                else {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            }\r\n        };\r\n        _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () {\r\n            var childTime = 0;\r\n            var childEvts = _self[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n            if (isArray(childEvts)) {\r\n                for (var lp = 0; lp < childEvts[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var childEvt = childEvts[lp];\r\n                    if (childEvt) {\r\n                        childTime += childEvt[_DYN_TIME /* @min:%2etime */];\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN_TIME /* @min:%2etime */] = utcNow() - _self.start;\r\n            _self.exTime = _self[_DYN_TIME /* @min:%2etime */] - childTime;\r\n            _self[_DYN_COMPLETE /* @min:%2ecomplete */] = function () { };\r\n        };\r\n    }\r\n    PerfEvent.ParentContextKey = \"parent\";\r\n    PerfEvent.ChildrenContextKey = \"childEvts\";\r\n    return PerfEvent;\r\n}());\r\nexport { PerfEvent };\r\nvar PerfManager = /** @class */ (function () {\r\n    function PerfManager(manager) {\r\n        /**\r\n         * General bucket used for execution context set and retrieved via setCtx() and getCtx.\r\n         * Defined as private so it can be visualized via the DebugPlugin\r\n         */\r\n        this.ctx = {};\r\n        dynamicProto(PerfManager, this, function (_self) {\r\n            _self.create = function (src, payloadDetails, isAsync) {\r\n                // TODO (@MSNev): at some point we will want to add additional configuration to \"select\" which events to instrument\r\n                // for now this is just a simple do everything.\r\n                return new PerfEvent(src, payloadDetails, isAsync);\r\n            };\r\n            _self.fire = function (perfEvent) {\r\n                if (perfEvent) {\r\n                    perfEvent[_DYN_COMPLETE /* @min:%2ecomplete */]();\r\n                    if (manager && isFunction(manager[STR_PERF_EVENT /* @min:%2eperfEvent */])) {\r\n                        manager[STR_PERF_EVENT /* @min:%2eperfEvent */](perfEvent);\r\n                    }\r\n                }\r\n            };\r\n            _self[_DYN_SET_CTX /* @min:%2esetCtx */] = function (key, value) {\r\n                if (key) {\r\n                    var ctx = _self[strExecutionContextKey] = _self[strExecutionContextKey] || {};\r\n                    ctx[key] = value;\r\n                }\r\n            };\r\n            _self[_DYN_GET_CTX /* @min:%2egetCtx */] = function (key) {\r\n                return (_self[strExecutionContextKey] || {})[key];\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for PerfManager.prototype.create.\r\n// Removed Stub for PerfManager.prototype.fire.\r\n// Removed Stub for PerfManager.prototype.setCtx.\r\n// Removed Stub for PerfManager.prototype.getCtx.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PerfManager.__ieDyn=1;\n\n    return PerfManager;\r\n}());\r\nexport { PerfManager };\r\nvar doPerfActiveKey = \"CoreUtils.doPerf\";\r\n/**\r\n * Helper function to wrap a function with a perf event\r\n * @param mgrSource - The Performance Manager or a Performance provider source (may be null)\r\n * @param getSource - The callback to create the source name for the event (if perf monitoring is enabled)\r\n * @param func - The function to call and measure\r\n * @param details - A function to return the payload details\r\n * @param isAsync - Is the event / function being call asynchronously or synchronously\r\n */\r\nexport function doPerf(mgrSource, getSource, func, details, isAsync) {\r\n    if (mgrSource) {\r\n        var perfMgr = mgrSource;\r\n        if (perfMgr[STR_GET_PERF_MGR]) {\r\n            // Looks like a perf manager provider object\r\n            perfMgr = perfMgr[STR_GET_PERF_MGR]();\r\n        }\r\n        if (perfMgr) {\r\n            var perfEvt = void 0;\r\n            var currentActive = perfMgr[_DYN_GET_CTX /* @min:%2egetCtx */](doPerfActiveKey);\r\n            try {\r\n                perfEvt = perfMgr.create(getSource(), details, isAsync);\r\n                if (perfEvt) {\r\n                    if (currentActive && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                        perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strParentContextKey], currentActive);\r\n                        if (currentActive[_DYN_GET_CTX /* @min:%2egetCtx */] && currentActive[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                            var children = currentActive[_DYN_GET_CTX /* @min:%2egetCtx */](PerfEvent[strChildrenContextKey]);\r\n                            if (!children) {\r\n                                children = [];\r\n                                currentActive[_DYN_SET_CTX /* @min:%2esetCtx */](PerfEvent[strChildrenContextKey], children);\r\n                            }\r\n                            children[_DYN_PUSH /* @min:%2epush */](perfEvt);\r\n                        }\r\n                    }\r\n                    // Set this event as the active event now\r\n                    perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, perfEvt);\r\n                    return func(perfEvt);\r\n                }\r\n            }\r\n            catch (ex) {\r\n                if (perfEvt && perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */]) {\r\n                    perfEvt[_DYN_SET_CTX /* @min:%2esetCtx */](\"exception\", ex);\r\n                }\r\n            }\r\n            finally {\r\n                // fire the perf event\r\n                if (perfEvt) {\r\n                    perfMgr.fire(perfEvt);\r\n                }\r\n                // Reset the active event to the previous value\r\n                perfMgr[_DYN_SET_CTX /* @min:%2esetCtx */](doPerfActiveKey, currentActive);\r\n            }\r\n        }\r\n    }\r\n    return func();\r\n}\r\n/**\r\n * Set the global performance manager to use when there is no core instance or it has not been initialized yet.\r\n * @param perfManager - The IPerfManager instance to use when no performance manager is supplied.\r\n */\r\nexport function setGblPerfMgr(perfManager) {\r\n    _defaultPerfManager = perfManager;\r\n}\r\n/**\r\n * Get the current global performance manager that will be used with no performance manager is supplied.\r\n * @returns - The current default manager\r\n */\r\nexport function getGblPerfMgr() {\r\n    return _defaultPerfManager;\r\n}\r\n//# sourceMappingURL=PerfManager.js.map","/*!\n * NevWare21 Solutions LLC - ts-async, 0.5.4\n * https://github.com/nevware21/ts-async\n * Copyright (c) NevWare21 Solutions LLC and contributors. All rights reserved.\n * Licensed under the MIT license.\n */\nimport { isPromiseLike, objDefineProperties, getDocument, createCachedValue, safe, getInst, dumpObj, arrSlice, objDefineProp, hasSymbol, getKnownSymbol, isFunction, throwTypeError, iterForOf, scheduleTimeout, isNode, getWindow, getGlobal, objDefine, objToString, isUndefined, isArray, arrForEach, isIterable, createCustomError, isNumber, scheduleIdleCallback, utcNow, getLength, isIterator, fnCall, arrIndexOf } from '@nevware21/ts-utils';\n\nvar STR_PROMISE = \"Promise\";\nvar DONE = \"done\";\nvar VALUE = \"value\";\nvar RETURN = \"return\";\nvar REJECTED = \"rejected\";\n\nfunction doAwaitResponse(value, cb) {\n    return doAwait(value, function (value) {\n        return cb ? cb({\n            status: \"fulfilled\",\n            rejected: false,\n            value: value\n        }) : value;\n    }, function (reason) {\n        return cb ? cb({\n            status: REJECTED,\n            rejected: true,\n            reason: reason\n        }) : reason;\n    });\n}\nfunction doAwait(value, resolveFn, rejectFn, finallyFn) {\n    var result = value;\n    try {\n        if (isPromiseLike(value)) {\n            if (resolveFn || rejectFn) {\n                result = value.then(resolveFn, rejectFn);\n            }\n        }\n        else {\n            try {\n                if (resolveFn) {\n                    result = resolveFn(value);\n                }\n            }\n            catch (err) {\n                if (rejectFn) {\n                    result = rejectFn(err);\n                }\n                else {\n                    throw err;\n                }\n            }\n        }\n    }\n    finally {\n        if (finallyFn) {\n            doFinally(result, finallyFn);\n        }\n    }\n    return result;\n}\nfunction doFinally(value, finallyFn) {\n    var result = value;\n    if (finallyFn) {\n        if (isPromiseLike(value)) {\n            if (value.finally) {\n                result = value.finally(finallyFn);\n            }\n            else {\n                result = value.then(function (value) {\n                    finallyFn();\n                    return value;\n                }, function (reason) {\n                    finallyFn();\n                    throw reason;\n                });\n            }\n        }\n        else {\n            finallyFn();\n        }\n    }\n    return result;\n}\n\n/*#__NO_SIDE_EFFECTS__*/\nfunction _pureAssign(func1, func2) {\n    return func1 || func2;\n}\n\nvar _debugState;\nvar _debugResult;\nvar _debugHandled;\nvar _promiseDebugEnabled = false;\nfunction _addDebugState$1(thePromise, stateFn, resultFn, handledFn) {\n    _debugState = _debugState || { toString: function () { return \"[[PromiseState]]\"; } };\n    _debugResult = _debugResult || { toString: function () { return \"[[PromiseResult]]\"; } };\n    _debugHandled = _debugHandled || { toString: function () { return \"[[PromiseIsHandled]]\"; } };\n    var props = {};\n    props[_debugState] = { get: stateFn };\n    props[_debugResult] = { get: resultFn };\n    props[_debugHandled] = { get: handledFn };\n    objDefineProperties(thePromise, props);\n}\nfunction setPromiseDebugState(enabled, logger) {\n    _promiseDebugEnabled = enabled;\n}\n\nvar STRING_STATES =  [\n    \"pending\", \"resolving\", \"resolved\", REJECTED\n];\n\nvar DISPATCH_EVENT = \"dispatchEvent\";\nvar _hasInitEvent;\nfunction _hasInitEventFn(doc) {\n    var evt;\n    if (doc && doc.createEvent) {\n        evt = doc.createEvent(\"Event\");\n    }\n    return (!!evt && evt.initEvent);\n}\nfunction emitEvent(target, evtName, populateEvent, useNewEvent) {\n    var doc = getDocument();\n    !_hasInitEvent && (_hasInitEvent = createCachedValue(!!safe(_hasInitEventFn, [doc]).v));\n    var theEvt = _hasInitEvent.v ? doc.createEvent(\"Event\") : (useNewEvent ? new Event(evtName) : {});\n    populateEvent && populateEvent(theEvt);\n    if (_hasInitEvent.v) {\n        theEvt.initEvent(evtName, false, true);\n    }\n    if (theEvt && target[DISPATCH_EVENT]) {\n        target[DISPATCH_EVENT](theEvt);\n    }\n    else {\n        var handler = target[\"on\" + evtName];\n        if (handler) {\n            handler(theEvt);\n        }\n        else {\n            var theConsole = getInst(\"console\");\n            theConsole && (theConsole[\"error\"] || theConsole[\"log\"])(evtName, dumpObj(theEvt));\n        }\n    }\n}\n\nvar NODE_UNHANDLED_REJECTION = \"unhandledRejection\";\nvar UNHANDLED_REJECTION = NODE_UNHANDLED_REJECTION.toLowerCase();\nvar _currentPromiseId = [];\nvar _uniquePromiseId = 0;\nvar _unhandledRejectionTimeout = 10;\nvar _aggregationError;\nvar _hasPromiseRejectionEvent;\nfunction dumpFnObj(value) {\n    if (isFunction(value)) {\n        return value.toString();\n    }\n    return dumpObj(value);\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAggregationError(values) {\n    !_aggregationError && (_aggregationError = createCachedValue(safe(getInst, [\"AggregationError\"]).v || createCustomError(\"AggregationError\", function (self, args) {\n        self.errors = args[0];\n    })));\n    return new _aggregationError.v(values);\n}\nfunction _createPromise(newPromise, processor, executor) {\n    var additionalArgs = arrSlice(arguments, 3);\n    var _state = 0 ;\n    var _hasResolved = false;\n    var _settledValue;\n    var _queue = [];\n    var _id = _uniquePromiseId++;\n    var _parentId = _currentPromiseId.length > 0 ? _currentPromiseId[_currentPromiseId.length - 1] : undefined;\n    var _handled = false;\n    var _unHandledRejectionHandler = null;\n    var _thePromise;\n    function _then(onResolved, onRejected) {\n        try {\n            _currentPromiseId.push(_id);\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            var thenPromise = newPromise(function (resolve, reject) {\n                _queue.push(function () {\n                    try {\n                        var handler = _state === 2  ? onResolved : onRejected;\n                        var value = isUndefined(handler) ? _settledValue : (isFunction(handler) ? handler(_settledValue) : handler);\n                        if (isPromiseLike(value)) {\n                            value.then(resolve, reject);\n                        }\n                        else if (handler) {\n                            resolve(value);\n                        }\n                        else if (_state === 3 ) {\n                            reject(value);\n                        }\n                        else {\n                            resolve(value);\n                        }\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                });\n                if (_hasResolved) {\n                    _processQueue();\n                }\n            }, additionalArgs);\n            return thenPromise;\n        }\n        finally {\n            _currentPromiseId.pop();\n        }\n    }\n    function _catch(onRejected) {\n        return _then(undefined, onRejected);\n    }\n    function _finally(onFinally) {\n        var thenFinally = onFinally;\n        var catchFinally = onFinally;\n        if (isFunction(onFinally)) {\n            thenFinally = function (value) {\n                onFinally && onFinally();\n                return value;\n            };\n            catchFinally = function (reason) {\n                onFinally && onFinally();\n                throw reason;\n            };\n        }\n        return _then(thenFinally, catchFinally);\n    }\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    function _processQueue() {\n        if (_queue.length > 0) {\n            var pending = _queue.slice();\n            _queue = [];\n            _handled = true;\n            _unHandledRejectionHandler && _unHandledRejectionHandler.cancel();\n            _unHandledRejectionHandler = null;\n            processor(pending);\n        }\n    }\n    function _createSettleIfFn(newState, allowState) {\n        return function (theValue) {\n            if (_state === allowState) {\n                if (newState === 2  && isPromiseLike(theValue)) {\n                    _state = 1 ;\n                    theValue.then(_createSettleIfFn(2 , 1 ), _createSettleIfFn(3 , 1 ));\n                    return;\n                }\n                _state = newState;\n                _hasResolved = true;\n                _settledValue = theValue;\n                _processQueue();\n                if (!_handled && newState === 3  && !_unHandledRejectionHandler) {\n                    _unHandledRejectionHandler = scheduleTimeout(_notifyUnhandledRejection, _unhandledRejectionTimeout);\n                }\n            }\n        };\n    }\n    function _notifyUnhandledRejection() {\n        if (!_handled) {\n            _handled = true;\n            if (isNode()) {\n                process.emit(NODE_UNHANDLED_REJECTION, _settledValue, _thePromise);\n            }\n            else {\n                var gbl = getWindow() || getGlobal();\n                !_hasPromiseRejectionEvent && (_hasPromiseRejectionEvent = createCachedValue(safe((getInst), [STR_PROMISE + \"RejectionEvent\"]).v));\n                emitEvent(gbl, UNHANDLED_REJECTION, function (theEvt) {\n                    objDefine(theEvt, \"promise\", { g: function () { return _thePromise; } });\n                    theEvt.reason = _settledValue;\n                    return theEvt;\n                }, !!_hasPromiseRejectionEvent.v);\n            }\n        }\n    }\n    _thePromise = {\n        then: _then,\n        \"catch\": _catch,\n        finally: _finally\n    };\n    objDefineProp(_thePromise, \"state\", {\n        get: _strState\n    });\n    if (_promiseDebugEnabled) {\n        _addDebugState$1(_thePromise, _strState, function () { return objToString(_settledValue); }, function () { return _handled; });\n    }\n    if (hasSymbol()) {\n        _thePromise[getKnownSymbol(11 )] = \"IPromise\";\n    }\n    function _toString() {\n        return \"IPromise\" + (_promiseDebugEnabled ? \"[\" + _id + (!isUndefined(_parentId) ? (\":\" + _parentId) : \"\") + \"]\" : \"\") + \" \" + _strState() + (_hasResolved ? (\" - \" + dumpFnObj(_settledValue)) : \"\") + (\"\");\n    }\n    _thePromise.toString = _toString;\n    (function _initialize() {\n        if (!isFunction(executor)) {\n            throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpFnObj(executor));\n        }\n        var _rejectFn = _createSettleIfFn(3 , 0 );\n        try {\n            executor.call(_thePromise, _createSettleIfFn(2 , 0 ), _rejectFn);\n        }\n        catch (e) {\n            _rejectFn(e);\n        }\n    })();\n    return _thePromise;\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllPromise(newPromise) {\n    return function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            try {\n                var values_1 = [];\n                var pending_1 = 1;\n                iterForOf(input, function (item, idx) {\n                    if (item) {\n                        pending_1++;\n                        doAwait(item, function (value) {\n                            values_1[idx] = value;\n                            if (--pending_1 === 0) {\n                                resolve(values_1);\n                            }\n                        }, reject);\n                    }\n                });\n                pending_1--;\n                if (pending_1 === 0) {\n                    resolve(values_1);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createResolvedPromise(newPromise) {\n    return function (value) {\n        var additionalArgs = arrSlice(arguments, 1);\n        if (isPromiseLike(value)) {\n            return value;\n        }\n        return newPromise(function (resolve) {\n            resolve(value);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRejectedPromise(newPromise) {\n    return function (reason) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (_resolve, reject) {\n            reject(reason);\n        }, additionalArgs);\n    };\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAllSettledPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var values = [];\n            var pending = 1;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (value.rejected) {\n                        values[idx] = {\n                            status: REJECTED,\n                            reason: value.reason\n                        };\n                    }\n                    else {\n                        values[idx] = {\n                            status: \"fulfilled\",\n                            value: value.value\n                        };\n                    }\n                    if (--pending === 0) {\n                        resolve(values);\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0) {\n                    resolve(values);\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createRacePromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var isDone = false;\n            function processItem(item) {\n                doAwaitResponse(item, function (value) {\n                    if (!isDone) {\n                        isDone = true;\n                        if (value.rejected) {\n                            reject(value.reason);\n                        }\n                        else {\n                            resolve(value.value);\n                        }\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createAnyPromise(newPromise) {\n    return createCachedValue(function (input) {\n        var additionalArgs = arrSlice(arguments, 1);\n        return newPromise(function (resolve, reject) {\n            var theErros = [];\n            var pending = 1;\n            var isDone = false;\n            function processItem(item, idx) {\n                pending++;\n                doAwaitResponse(item, function (value) {\n                    if (!value.rejected) {\n                        isDone = true;\n                        resolve(value.value);\n                        return;\n                    }\n                    else {\n                        theErros[idx] = value.reason;\n                    }\n                    if (--pending === 0 && !isDone) {\n                        reject(_createAggregationError(theErros));\n                    }\n                });\n            }\n            try {\n                if (isArray(input)) {\n                    arrForEach(input, processItem);\n                }\n                else if (isIterable(input)) {\n                    iterForOf(input, processItem);\n                }\n                else {\n                    throwTypeError(\"Input is not an iterable\");\n                }\n                pending--;\n                if (pending === 0 && !isDone) {\n                    reject(_createAggregationError(theErros));\n                }\n            }\n            catch (e) {\n                reject(e);\n            }\n        }, additionalArgs);\n    });\n}\n\nfunction syncItemProcessor(pending) {\n    arrForEach(pending, function (fn) {\n        try {\n            fn();\n        }\n        catch (e) {\n        }\n    });\n}\nfunction timeoutItemProcessor(timeout) {\n    var callbackTimeout = isNumber(timeout) ? timeout : 0;\n    return function (pending) {\n        scheduleTimeout(function () {\n            syncItemProcessor(pending);\n        }, callbackTimeout);\n    };\n}\nfunction idleItemProcessor(timeout) {\n    var options;\n    if (timeout >= 0) {\n        options = {\n            timeout: +timeout\n        };\n    }\n    return function (pending) {\n        scheduleIdleCallback(function (deadline) {\n            syncItemProcessor(pending);\n        }, options);\n    };\n}\n\nvar _allAsyncSettledCreator;\nvar _raceAsyncCreator;\nvar _anyAsyncCreator;\nfunction createAsyncPromise(executor, timeout) {\n    return _createPromise(createAsyncPromise, timeoutItemProcessor(timeout), executor, timeout);\n}\nvar createAsyncAllPromise = /*#__PURE__*/ _createAllPromise(createAsyncPromise);\nvar createAsyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createAsyncPromise);\nvar createAsyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createAsyncPromise);\nfunction createAsyncAllSettledPromise(input, timeout) {\n    !_allAsyncSettledCreator && (_allAsyncSettledCreator = _createAllSettledPromise(createAsyncPromise));\n    return _allAsyncSettledCreator.v(input, timeout);\n}\nfunction createAsyncRacePromise(values, timeout) {\n    !_raceAsyncCreator && (_raceAsyncCreator = _createRacePromise(createAsyncPromise));\n    return _raceAsyncCreator.v(values, timeout);\n}\nfunction createAsyncAnyPromise(values, timeout) {\n    !_anyAsyncCreator && (_anyAsyncCreator = _createAnyPromise(createAsyncPromise));\n    return _anyAsyncCreator.v(values, timeout);\n}\n\nvar _promiseCls;\nvar _allCreator;\nvar _allNativeSettledCreator;\nvar _raceNativeCreator;\nvar _anyNativeCreator;\n/*#__NO_SIDE_EFFECTS__*/\nfunction _createNativePromiseHelper(name, func) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    if (_promiseCls.v && _promiseCls.v[name]) {\n        return createCachedValue(function (input, timeout) {\n            return createNativePromise(function (resolve, reject) {\n                _promiseCls.v[name](input).then(resolve, reject);\n            });\n        });\n    }\n    return func();\n}\nfunction createNativePromise(executor, timeout) {\n    !_promiseCls && (_promiseCls = createCachedValue((safe(getInst, [STR_PROMISE]).v) || null));\n    var PrmCls = _promiseCls.v;\n    if (!PrmCls) {\n        return createAsyncPromise(executor);\n    }\n    if (!isFunction(executor)) {\n        throwTypeError(STR_PROMISE + \": executor is not a function - \" + dumpObj(executor));\n    }\n    var _state = 0 ;\n    function _strState() {\n        return STRING_STATES[_state];\n    }\n    var thePromise = new PrmCls(function (resolve, reject) {\n        function _resolve(value) {\n            _state = 2 ;\n            resolve(value);\n        }\n        function _reject(reason) {\n            _state = 3 ;\n            reject(reason);\n        }\n        executor(_resolve, _reject);\n    });\n    objDefineProp(thePromise, \"state\", {\n        get: _strState\n    });\n    return thePromise;\n}\nfunction createNativeAllPromise(input, timeout) {\n    !_allCreator && (_allCreator = _createNativePromiseHelper(\"all\", function () { return createCachedValue(_createAllPromise(createNativePromise)); }));\n    return _allCreator.v(input, timeout);\n}\nvar createNativeResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createNativePromise);\nvar createNativeRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createNativePromise);\nfunction createNativeAllSettledPromise(input, timeout) {\n    !_allNativeSettledCreator && (_allNativeSettledCreator = _createNativePromiseHelper(\"allSettled\", function () { return _createAllSettledPromise(createNativePromise); }));\n    return _allNativeSettledCreator.v(input, timeout);\n}\nfunction createNativeRacePromise(values, timeout) {\n    !_raceNativeCreator && (_raceNativeCreator = _createNativePromiseHelper(\"race\", function () { return _createRacePromise(createNativePromise); }));\n    return _raceNativeCreator.v(values, timeout);\n}\nfunction createNativeAnyPromise(values, timeout) {\n    !_anyNativeCreator && (_anyNativeCreator = _createNativePromiseHelper(\"any\", function () { return _createAnyPromise(createNativePromise); }));\n    return _anyNativeCreator.v(values, timeout);\n}\n\nvar _allSyncSettledCreator;\nvar _raceSyncCreator;\nvar _anySyncCreator;\nfunction createSyncPromise(executor) {\n    return _createPromise(createSyncPromise, syncItemProcessor, executor);\n}\nvar createSyncAllPromise = /*#__PURE__*/ _createAllPromise(createSyncPromise);\nvar createSyncResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createSyncPromise);\nvar createSyncRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createSyncPromise);\nfunction createSyncAllSettledPromise(input, timeout) {\n    !_allSyncSettledCreator && (_allSyncSettledCreator = _createAllSettledPromise(createSyncPromise));\n    return _allSyncSettledCreator.v(input, timeout);\n}\nfunction createSyncRacePromise(values, timeout) {\n    !_raceSyncCreator && (_raceSyncCreator = _createRacePromise(createSyncPromise));\n    return _raceSyncCreator.v(values, timeout);\n}\nfunction createSyncAnyPromise(values, timeout) {\n    !_anySyncCreator && (_anySyncCreator = _createAnyPromise(createSyncPromise));\n    return _anySyncCreator.v(values, timeout);\n}\n\nvar _defaultIdleTimeout;\nvar _allIdleSettledCreator;\nvar _raceIdleCreator;\nvar _anyIdleCreator;\nfunction setDefaultIdlePromiseTimeout(idleDeadline) {\n    _defaultIdleTimeout = idleDeadline;\n}\nvar setDefaultIdleTimeout = ( /*#__PURE__*/_pureAssign(setDefaultIdlePromiseTimeout));\nfunction createIdlePromise(executor, timeout) {\n    var theTimeout = isUndefined(timeout) ? _defaultIdleTimeout : timeout;\n    return _createPromise(createIdlePromise, idleItemProcessor(theTimeout), executor, theTimeout);\n}\nvar createIdleAllPromise = /*#__PURE__*/ _createAllPromise(createIdlePromise);\nvar createIdleResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createIdlePromise);\nvar createIdleRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createIdlePromise);\nfunction createIdleAllSettledPromise(input, timeout) {\n    !_allIdleSettledCreator && (_allIdleSettledCreator = _createAllSettledPromise(createIdlePromise));\n    return _allIdleSettledCreator.v(input, timeout);\n}\nfunction createIdleRacePromise(values, timeout) {\n    !_raceIdleCreator && (_raceIdleCreator = _createRacePromise(createIdlePromise));\n    return _raceIdleCreator.v(values, timeout);\n}\nfunction createIdleAnyPromise(values, timeout) {\n    !_anyIdleCreator && (_anyIdleCreator = _createAnyPromise(createIdlePromise));\n    return _anyIdleCreator.v(values, timeout);\n}\n\nvar _promiseCreator;\nvar _allSettledCreator;\nvar _raceCreator;\nvar _anyCreator;\nfunction setCreatePromiseImpl(creator) {\n    _promiseCreator = creator ? createCachedValue(creator) : null;\n}\nfunction createPromise(executor, timeout) {\n    !_promiseCreator && (_promiseCreator = createCachedValue(createNativePromise));\n    return _promiseCreator.v.call(this, executor, timeout);\n}\nvar createAllPromise = /*#__PURE__*/ _createAllPromise(createPromise);\nvar createResolvedPromise = /*#__PURE__*/ _createResolvedPromise(createPromise);\nvar createRejectedPromise = /*#__PURE__*/ _createRejectedPromise(createPromise);\nfunction createAllSettledPromise(input, timeout) {\n    !_allSettledCreator && (_allSettledCreator = _createAllSettledPromise(createPromise));\n    return _allSettledCreator.v(input, timeout);\n}\nfunction createRacePromise(values, timeout) {\n    !_raceCreator && (_raceCreator = _createRacePromise(createPromise));\n    return _raceCreator.v(values, timeout);\n}\nfunction createAnyPromise(values, timeout) {\n    !_anyCreator && (_anyCreator = _createAnyPromise(createPromise));\n    return _anyCreator.v(values, timeout);\n}\n\nfunction createTimeoutPromise(timeout, resolveReject, message) {\n    return createPromise(function (resolve, reject) {\n        scheduleTimeout(function () {\n            (resolveReject ? resolve : reject)(!isUndefined(message) ? message : \"Timeout of \" + timeout + \"ms exceeded\");\n        }, timeout);\n    });\n}\n\nfunction _doneChk(isDone, state, value, thisArg) {\n    var result = isDone;\n    state.res = value;\n    if (!result) {\n        if (state.isDone && isFunction(state.isDone)) {\n            return doAwait(state.isDone.call(thisArg, state), function (done) {\n                state.iter++;\n                return !!done;\n            });\n        }\n        else {\n            result = !!state.isDone;\n        }\n    }\n    state.iter++;\n    return result;\n}\nfunction doWhileAsync(callbackFn, isDoneFn, thisArg) {\n    var promise;\n    var resolve;\n    var reject = function (reason) {\n        isDone = true;\n        throw reason;\n    };\n    var isDone = false;\n    var state = {\n        st: utcNow(),\n        iter: 0,\n        isDone: isDoneFn || false\n    };\n    if (callbackFn) {\n        var _createPromise_1 = function () {\n            return createPromise(function (res, rej) {\n                resolve = res;\n                reject = rej;\n            });\n        };\n        var _handleAsyncDone_1 = function (done) {\n            isDone = !!done;\n            if (!isDone) {\n                _processNext_1();\n            }\n            else {\n                resolve(state.res);\n            }\n        };\n        var _processNext_1 = function () {\n            while (!isDone) {\n                try {\n                    var cbResult = callbackFn.call(thisArg, state);\n                    if (isPromiseLike(cbResult)) {\n                        promise = promise || _createPromise_1();\n                        doAwait(cbResult, function (res) {\n                            try {\n                                doAwait(_doneChk(isDone, state, res, thisArg), _handleAsyncDone_1, reject);\n                            }\n                            catch (e) {\n                                reject(e);\n                            }\n                        }, reject);\n                        return promise;\n                    }\n                    else {\n                        var dnRes = _doneChk(isDone, state, cbResult, thisArg);\n                        if (isPromiseLike(dnRes)) {\n                            promise = promise || _createPromise_1();\n                            doAwait(dnRes, _handleAsyncDone_1, reject);\n                            return promise;\n                        }\n                        else {\n                            isDone = !!dnRes;\n                        }\n                    }\n                }\n                catch (e) {\n                    reject(e);\n                    return promise;\n                }\n            }\n            if (isDone && resolve) {\n                resolve(state.res);\n            }\n            return promise || state.res;\n        };\n        return _processNext_1();\n    }\n}\n\nfunction arrForEachAsync(theArray, callbackFn, thisArg) {\n    if (theArray) {\n        var len_1 = getLength(theArray);\n        if (len_1) {\n            var isDone = function (state) {\n                if (state.iter >= len_1 || state.res === -1) {\n                    return true;\n                }\n            };\n            return doWhileAsync(function (state) {\n                var idx = state.iter;\n                if (idx in theArray) {\n                    return callbackFn.call(thisArg || theArray, theArray[idx], idx, theArray);\n                }\n            }, isDone);\n        }\n    }\n}\n\nvar _iterSymbol;\nvar _iterAsyncSymbol;\nfunction iterForOfAsync(iter, callbackFn, thisArg) {\n    var err;\n    var iterResult;\n    var theIter = iter;\n    function onFailed(failed) {\n        err = { e: failed };\n        if (theIter.throw) {\n            iterResult = null;\n            theIter.throw(err);\n        }\n        throw failed;\n    }\n    function onFinally() {\n        try {\n            if (iterResult && !iterResult[DONE]) {\n                theIter[RETURN] && theIter[RETURN](iterResult);\n            }\n        }\n        finally {\n            if (err) {\n                throw err.e;\n            }\n        }\n    }\n    if (iter) {\n        if (!isIterator(iter)) {\n            !_iterAsyncSymbol && (_iterAsyncSymbol = createCachedValue(getKnownSymbol(0 )));\n            theIter = iter[_iterAsyncSymbol.v] ? iter[_iterAsyncSymbol.v]() : null;\n            if (!theIter) {\n                !_iterSymbol && (_iterSymbol = createCachedValue(getKnownSymbol(3 )));\n                theIter = iter[_iterSymbol.v] ? iter[_iterSymbol.v]() : null;\n            }\n        }\n        if (theIter && isIterator(theIter)) {\n            var result = void 0;\n            try {\n                result = doWhileAsync(function (state) {\n                    return doAwait(theIter.next(), function (res) {\n                        iterResult = res;\n                        if (!res[DONE]) {\n                            return fnCall(callbackFn, thisArg || theIter, iterResult[VALUE], state.iter, theIter);\n                        }\n                    }, function (reason) {\n                        state.isDone = true;\n                        onFailed(reason);\n                    });\n                }, function (state) {\n                    if (!iterResult || iterResult[DONE] || state.res === -1) {\n                        onFinally();\n                        return true;\n                    }\n                }, thisArg || theIter);\n                if (isPromiseLike(result)) {\n                    result = doFinally(result.catch(onFailed), onFinally);\n                }\n                return result;\n            }\n            catch (failed) {\n                onFailed(failed);\n            }\n            finally {\n                if (result && !isPromiseLike(result)) {\n                    onFinally();\n                }\n            }\n        }\n    }\n}\n\nvar REJECT = \"reject\";\nvar REJECTED_ERROR = \"Rejected\";\nvar _schedulerId = 0;\nvar _debugName;\nvar _debugIntState;\nvar _customErrors = {};\nfunction _rejectDone() {\n}\nfunction _createError(type, evt, message) {\n    !_customErrors[type] && (_customErrors[type] = createCustomError(type));\n    var now = utcNow();\n    return new (_customErrors[type])(\"Task [\".concat(evt.id, \"] \").concat(message || \"\", \"- \").concat((evt.st ? \"Running\" : \"Waiting\"), \": \").concat(_calcTime(now, evt.st || evt.cr)));\n}\nfunction _calcTime(now, start) {\n    return ((now - start) || \"0\") + \" ms\";\n}\nfunction _abortStaleTasks(taskQueue, staleTimeoutPeriod) {\n    var now = utcNow();\n    var expired = now - staleTimeoutPeriod;\n    arrForEach(taskQueue, function (evt) {\n        if (evt && !evt.rj && (evt.st && evt.st < expired) || (!evt.st && evt.cr && evt.cr < expired)) {\n            evt && evt[REJECT](evt.rj || _createError(\"Aborted\", evt, \"Stale \"));\n        }\n    });\n}\nfunction _removeTask(queue, taskDetail) {\n    var idx = arrIndexOf(queue, taskDetail);\n    if (idx !== -1) {\n        queue.splice(idx, 1);\n    }\n}\nfunction _addDebugState(theScheduler, nameFn, stateFn) {\n    _debugName = _debugName || { toString: function () { return \"[[SchedulerName]]\"; } };\n    _debugIntState = _debugIntState || { toString: function () { return \"[[SchedulerState]]\"; } };\n    objDefineProp(theScheduler, _debugName, { get: nameFn });\n    objDefineProp(theScheduler, _debugIntState, { get: stateFn });\n}\nfunction createTaskScheduler(newPromise, name) {\n    var _theTask;\n    var _running = [];\n    var _waiting = [];\n    var _staleTimeoutPeriod = 600000;\n    var _staleTimeoutCheckPeriod = _staleTimeoutPeriod / 10;\n    var _taskCount = 0;\n    var _schedulerName = (name ? (name + \".\") : \"\") + _schedulerId++;\n    var _blockedTimer;\n    newPromise = newPromise || createPromise;\n    var _startBlockedTimer = function () {\n        var hasTasks = (getLength(_running) + getLength(_waiting)) > 0;\n        if (_staleTimeoutPeriod > 0) {\n            if (!_blockedTimer) {\n                _blockedTimer = scheduleTimeout(function () {\n                    _abortStaleTasks(_running, _staleTimeoutPeriod);\n                    _abortStaleTasks(_waiting, _staleTimeoutPeriod);\n                    _blockedTimer && (_blockedTimer.enabled = ((getLength(_running) + getLength(_waiting)) > 0));\n                }, _staleTimeoutCheckPeriod);\n                _blockedTimer.unref();\n            }\n            _blockedTimer && (_blockedTimer.enabled = hasTasks);\n        }\n    };\n    var _queueTask = function (startAction, taskName, timeout) {\n        var _a;\n        var taskId = _schedulerName + \".\" + _taskCount++;\n        if (taskName) {\n            taskId += \"-(\" + taskName + \")\";\n        }\n        var newTask = (_a = {\n                id: taskId,\n                cr: utcNow(),\n                to: timeout\n            },\n            _a[REJECT] = function (reason) {\n                newTask.rj = reason || _createError(REJECTED_ERROR, newTask);\n                newTask[REJECT] = _rejectDone;\n            },\n            _a);\n        if (!_theTask) {\n            newTask.p = newPromise(_runTask(newTask, startAction));\n        }\n        else {\n            newTask.p = _waitForPreviousTask(newTask, _theTask, startAction);\n        }\n        _theTask = newTask;\n        return newTask.p;\n    };\n    var _runTask = function (taskDetail, startAction) {\n        taskDetail.st = utcNow();\n        _running.push(taskDetail);\n        _startBlockedTimer();\n        return function (onTaskResolve, onTaskReject) {\n            var _promiseReject = function (reason) {\n                taskDetail.rj = taskDetail.rj || reason || _createError(REJECTED_ERROR, taskDetail);\n                taskDetail[REJECT] = _rejectDone;\n                _doCleanup(taskDetail);\n                onTaskResolve = null;\n                onTaskReject && onTaskReject(reason);\n                onTaskReject = null;\n            };\n            var taskId = taskDetail.id;\n            if (taskDetail.rj) {\n                _promiseReject(taskDetail.rj);\n            }\n            else {\n                taskDetail[REJECT] = _promiseReject;\n                try {\n                    var startResult = startAction(taskId);\n                    if (taskDetail.to && isPromiseLike(startResult)) {\n                        taskDetail.t = scheduleTimeout(function () {\n                            _promiseReject(_createError(\"Timeout\", taskDetail));\n                        }, taskDetail.to);\n                    }\n                    doAwait(startResult, function (theResult) {\n                        _doCleanup(taskDetail);\n                        try {\n                            onTaskResolve && onTaskResolve(theResult);\n                        }\n                        catch (e) {\n                            onTaskReject && onTaskReject(e);\n                        }\n                        onTaskReject = null;\n                        onTaskResolve = null;\n                    }, _promiseReject);\n                }\n                catch (e) {\n                    _promiseReject(e);\n                }\n            }\n        };\n    };\n    var _waitForPreviousTask = function (taskDetail, prevTask, startAction) {\n        _waiting.push(taskDetail);\n        _startBlockedTimer();\n        return newPromise(function (onWaitResolve, onWaitReject) {\n            doAwaitResponse(prevTask.p, function () {\n                _removeTask(_waiting, taskDetail);\n                _runTask(taskDetail, startAction)(onWaitResolve, onWaitReject);\n            });\n        });\n    };\n    var _doCleanup = function (taskDetail) {\n        _removeTask(_running, taskDetail);\n        taskDetail.t && taskDetail.t.cancel();\n        taskDetail.t = null;\n        if (_theTask && _theTask === taskDetail) {\n            _theTask = null;\n            if (getLength(_running) + getLength(_waiting) === 0) {\n                _blockedTimer && _blockedTimer.cancel();\n                _blockedTimer = null;\n            }\n        }\n    };\n    var theScheduler = {\n        idle: true,\n        queue: _queueTask,\n        setStaleTimeout: function (staleTimeout, staleCheckPeriod) {\n            _blockedTimer && _blockedTimer.cancel();\n            _blockedTimer = null;\n            _staleTimeoutPeriod = staleTimeout;\n            _staleTimeoutCheckPeriod = staleCheckPeriod || staleTimeout / 10;\n            _startBlockedTimer();\n        }\n    };\n    objDefine(theScheduler, \"idle\", {\n        g: function () {\n            return getLength(_running) + getLength(_waiting) === 0;\n        }\n    });\n    _addDebugState(theScheduler, function () { return _schedulerName; }, function () {\n        return {\n            l: _theTask,\n            r: _running,\n            w: _waiting\n        };\n    });\n    return theScheduler;\n}\n\nvar toStringTagSymbol = getKnownSymbol(11 );\nvar PolyPromise = /*#__PURE__*/ (function () {\n    function PolyPromiseImpl(executor) {\n        this._$ = createAsyncPromise(executor);\n        if (toStringTagSymbol) {\n            this[toStringTagSymbol] = \"Promise\";\n        }\n        objDefineProp(this, \"state\", {\n            get: function () {\n                return this._$.state;\n            }\n        });\n    }\n    PolyPromiseImpl.all = createAsyncAllPromise;\n    PolyPromiseImpl.race = createAsyncRacePromise;\n    PolyPromiseImpl.any = createAsyncAnyPromise;\n    PolyPromiseImpl.reject = createAsyncRejectedPromise;\n    PolyPromiseImpl.resolve = createAsyncResolvedPromise;\n    PolyPromiseImpl.allSettled = createAsyncAllSettledPromise;\n    var theProto = PolyPromiseImpl.prototype;\n    theProto.then = function (onResolved, onRejected) {\n        return this._$.then(onResolved, onRejected);\n    };\n    theProto.catch = function (onRejected) {\n        return this._$.catch(onRejected);\n    };\n    theProto.finally = function (onfinally) {\n        return this._$.finally(onfinally);\n    };\n    return PolyPromiseImpl;\n}());\n\nexport { PolyPromise, arrForEachAsync, createAllPromise, createAllSettledPromise, createAnyPromise, createAsyncAllPromise, createAsyncAllSettledPromise, createAsyncAnyPromise, createAsyncPromise, createAsyncRacePromise, createAsyncRejectedPromise, createAsyncResolvedPromise, createIdleAllPromise, createIdleAllSettledPromise, createIdleAnyPromise, createIdlePromise, createIdleRacePromise, createIdleRejectedPromise, createIdleResolvedPromise, createNativeAllPromise, createNativeAllSettledPromise, createNativeAnyPromise, createNativePromise, createNativeRacePromise, createNativeRejectedPromise, createNativeResolvedPromise, createPromise, createRacePromise, createRejectedPromise, createResolvedPromise, createSyncAllPromise, createSyncAllSettledPromise, createSyncAnyPromise, createSyncPromise, createSyncRacePromise, createSyncRejectedPromise, createSyncResolvedPromise, createTaskScheduler, createTimeoutPromise, doAwait, doAwaitResponse, doFinally, doWhileAsync, iterForOfAsync, setCreatePromiseImpl, setDefaultIdlePromiseTimeout, setDefaultIdleTimeout, setPromiseDebugState };\n//# sourceMappingURL=ts-async.js.map\n","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nvar _a;\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { isFunction, objDefine } from \"@nevware21/ts-utils\";\r\nimport { createDynamicConfig } from \"../Config/DynamicConfig\";\r\nimport { _DYN_CREATE_NEW, _DYN_DIAG_LOG, _DYN_GET_NEXT, _DYN_GET_PROCESS_TEL_CONT2, _DYN_INITIALIZE, _DYN_IS_ASYNC, _DYN_IS_INITIALIZED, _DYN_PROCESS_NEXT, _DYN_SET_NEXT_PLUGIN, _DYN_TEARDOWN, _DYN_UPDATE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { safeGetLogger } from \"./DiagnosticLogger\";\r\nimport { isNotNullOrUndefined, proxyFunctionAs } from \"./HelperFuncs\";\r\nimport { STR_CORE, STR_EXTENSION_CONFIG, STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nimport { createProcessTelemetryContext, createProcessTelemetryUnloadContext, createProcessTelemetryUpdateContext } from \"./ProcessTelemetryContext\";\r\nimport { createUnloadHandlerContainer } from \"./UnloadHandlerContainer\";\r\nimport { createUnloadHookContainer } from \"./UnloadHookContainer\";\r\nvar strGetPlugin = \"getPlugin\";\r\nvar defaultValues = (_a = {},\r\n    _a[STR_EXTENSION_CONFIG] = { isVal: isNotNullOrUndefined, v: {} },\r\n    _a);\r\n/**\r\n * BaseTelemetryPlugin provides a basic implementation of the ITelemetryPlugin interface so that plugins\r\n * can avoid implementation the same set of boiler plate code as well as provide a base\r\n * implementation so that new default implementations can be added without breaking all plugins.\r\n */\r\nvar BaseTelemetryPlugin = /** @class */ (function () {\r\n    function BaseTelemetryPlugin() {\r\n        var _self = this; // Setting _self here as it's used outside of the dynamicProto as well\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _isinitialized;\r\n        var _rootCtx; // Used as the root context, holding the current config and initialized core\r\n        var _nextPlugin; // Used for backward compatibility where plugins don't call the main pipeline\r\n        var _unloadHandlerContainer;\r\n        var _hookContainer;\r\n        _initDefaults();\r\n        dynamicProto(BaseTelemetryPlugin, _self, function (_self) {\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (config, core, extensions, pluginChain) {\r\n                _setDefaults(config, core, pluginChain);\r\n                _isinitialized = true;\r\n            };\r\n            _self[_DYN_TEARDOWN /* @min:%2eteardown */] = function (unloadCtx, unloadState) {\r\n                var _a;\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (unloadCtx && core !== unloadCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing as either the plugin is not initialized or was not initialized by the current core\r\n                    return;\r\n                }\r\n                var result;\r\n                var unloadDone = false;\r\n                var theUnloadCtx = unloadCtx || createProcessTelemetryUnloadContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUnloadState = unloadState || (_a = {\r\n                        reason: 0 /* TelemetryUnloadReason.ManualTeardown */\r\n                    },\r\n                    _a[_DYN_IS_ASYNC /* @min:isAsync */] = false,\r\n                    _a);\r\n                function _unloadCallback() {\r\n                    if (!unloadDone) {\r\n                        unloadDone = true;\r\n                        _unloadHandlerContainer.run(theUnloadCtx, unloadState);\r\n                        _hookContainer.run(theUnloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */]());\r\n                        if (result === true) {\r\n                            theUnloadCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](theUnloadState);\r\n                        }\r\n                        _initDefaults();\r\n                    }\r\n                }\r\n                if (!_self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] || _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */](theUnloadCtx, theUnloadState, _unloadCallback) !== true) {\r\n                    _unloadCallback();\r\n                }\r\n                else {\r\n                    // Tell the caller that we will be calling processNext()\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            _self[_DYN_UPDATE /* @min:%2eupdate */] = function (updateCtx, updateState) {\r\n                // If this plugin has already been torn down (not operational) or is not initialized (core is not set)\r\n                // or the core being used for unload was not the same core used for initialization.\r\n                var core = _self[STR_CORE /* @min:%2ecore */];\r\n                if (!core || (updateCtx && core !== updateCtx[STR_CORE /* @min:%2ecore */]())) {\r\n                    // Do Nothing\r\n                    return;\r\n                }\r\n                var result;\r\n                var updateDone = false;\r\n                var theUpdateCtx = updateCtx || createProcessTelemetryUpdateContext(null, core, _nextPlugin && _nextPlugin[strGetPlugin] ? _nextPlugin[strGetPlugin]() : _nextPlugin);\r\n                var theUpdateState = updateState || {\r\n                    reason: 0 /* TelemetryUpdateReason.Unknown */\r\n                };\r\n                function _updateCallback() {\r\n                    if (!updateDone) {\r\n                        updateDone = true;\r\n                        _setDefaults(theUpdateCtx.getCfg(), theUpdateCtx.core(), theUpdateCtx[_DYN_GET_NEXT /* @min:%2egetNext */]());\r\n                    }\r\n                }\r\n                if (!_self._doUpdate || _self._doUpdate(theUpdateCtx, theUpdateState, _updateCallback) !== true) {\r\n                    _updateCallback();\r\n                }\r\n                else {\r\n                    result = true;\r\n                }\r\n                return result;\r\n            };\r\n            proxyFunctionAs(_self, \"_addUnloadCb\", function () { return _unloadHandlerContainer; }, \"add\");\r\n            proxyFunctionAs(_self, \"_addHook\", function () { return _hookContainer; }, \"add\");\r\n            objDefine(_self, \"_unloadHooks\", { g: function () { return _hookContainer; } });\r\n        });\r\n        // These are added after the dynamicProto so that are not moved to the prototype\r\n        _self[_DYN_DIAG_LOG /* @min:%2ediagLog */] = function (itemCtx) {\r\n            return _getTelCtx(itemCtx)[_DYN_DIAG_LOG /* @min:%2ediagLog */]();\r\n        };\r\n        _self[_DYN_IS_INITIALIZED /* @min:%2eisInitialized */] = function () {\r\n            return _isinitialized;\r\n        };\r\n        _self.setInitialized = function (isInitialized) {\r\n            _isinitialized = isInitialized;\r\n        };\r\n        // _self.getNextPlugin = () => DO NOT IMPLEMENT\r\n        // Sub-classes of this base class *should* not be relying on this value and instead\r\n        // should use processNext() function. If you require access to the plugin use the\r\n        // IProcessTelemetryContext.getNext().getPlugin() while in the pipeline, Note getNext() may return null.\r\n        _self[_DYN_SET_NEXT_PLUGIN /* @min:%2esetNextPlugin */] = function (next) {\r\n            _nextPlugin = next;\r\n        };\r\n        _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */] = function (env, itemCtx) {\r\n            if (itemCtx) {\r\n                // Normal core execution sequence\r\n                itemCtx[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](env);\r\n            }\r\n            else if (_nextPlugin && isFunction(_nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */])) {\r\n                // Looks like backward compatibility or out of band processing. And as it looks\r\n                // like a ITelemetryPlugin or ITelemetryPluginChain, just call processTelemetry\r\n                _nextPlugin[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */](env, null);\r\n            }\r\n        };\r\n        _self._getTelCtx = _getTelCtx;\r\n        function _getTelCtx(currentCtx) {\r\n            if (currentCtx === void 0) { currentCtx = null; }\r\n            var itemCtx = currentCtx;\r\n            if (!itemCtx) {\r\n                var rootCtx = _rootCtx || createProcessTelemetryContext(null, {}, _self[STR_CORE /* @min:%2ecore */]);\r\n                // tslint:disable-next-line: prefer-conditional-expression\r\n                if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                    // Looks like a chain object\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin[strGetPlugin]);\r\n                }\r\n                else {\r\n                    itemCtx = rootCtx[_DYN_CREATE_NEW /* @min:%2ecreateNew */](null, _nextPlugin);\r\n                }\r\n            }\r\n            return itemCtx;\r\n        }\r\n        function _setDefaults(config, core, pluginChain) {\r\n            // Make sure the extensionConfig exists and the config is dynamic\r\n            createDynamicConfig(config, defaultValues, safeGetLogger(core));\r\n            if (!pluginChain && core) {\r\n                // Get the first plugin from the core\r\n                pluginChain = core[_DYN_GET_PROCESS_TEL_CONT2 /* @min:%2egetProcessTelContext */]()[_DYN_GET_NEXT /* @min:%2egetNext */]();\r\n            }\r\n            var nextPlugin = _nextPlugin;\r\n            if (_nextPlugin && _nextPlugin[strGetPlugin]) {\r\n                // If it looks like a proxy/chain then get the plugin\r\n                nextPlugin = _nextPlugin[strGetPlugin]();\r\n            }\r\n            // Support legacy plugins where core was defined as a property\r\n            _self[STR_CORE /* @min:%2ecore */] = core;\r\n            _rootCtx = createProcessTelemetryContext(pluginChain, config, core, nextPlugin);\r\n        }\r\n        function _initDefaults() {\r\n            _isinitialized = false;\r\n            _self[STR_CORE /* @min:%2ecore */] = null;\r\n            _rootCtx = null;\r\n            _nextPlugin = null;\r\n            _hookContainer = createUnloadHookContainer();\r\n            _unloadHandlerContainer = createUnloadHandlerContainer();\r\n        }\r\n    }\r\n// Removed Stub for BaseTelemetryPlugin.prototype.initialize.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.teardown.\r\n// Removed Stub for BaseTelemetryPlugin.prototype.update.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addUnloadCb.\r\n// Removed Stub for BaseTelemetryPlugin.prototype._addHook.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    BaseTelemetryPlugin.__ieDyn=1;\n\n    return BaseTelemetryPlugin;\r\n}());\r\nexport { BaseTelemetryPlugin };\r\n//# sourceMappingURL=BaseTelemetryPlugin.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nvar _a;\r\nimport { getGlobal, objCreate, objHasOwnProperty, throwTypeError } from \"@nevware21/ts-utils\";\r\n;\r\nvar UNDEFINED = \"undefined\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Constructor = 'constructor';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar Prototype = 'prototype';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strFunction = 'function';\r\n/**\r\n * Used to define the name of the instance function lookup table\r\n * @ignore\r\n */\r\nvar DynInstFuncTable = '_dynInstFuncs';\r\n/**\r\n * Name used to tag the dynamic prototype function\r\n * @ignore\r\n */\r\nvar DynProxyTag = '_isDynProxy';\r\n/**\r\n * Name added to a prototype to define the dynamic prototype \"class\" name used to lookup the function table\r\n * @ignore\r\n */\r\nvar DynClassName = '_dynClass';\r\n/**\r\n * Prefix added to the classname to avoid any name clashes with other instance level properties\r\n * @ignore\r\n */\r\nvar DynClassNamePrefix = '_dynCls$';\r\n/**\r\n * A tag which is used to check if we have already to attempted to set the instance function if one is not present\r\n * @ignore\r\n */\r\nvar DynInstChkTag = '_dynInstChk';\r\n/**\r\n * A tag which is used to check if we are allows to try and set an instance function is one is not present. Using the same\r\n * tag name as the function level but a different const name for readability only.\r\n */\r\nvar DynAllowInstChkTag = DynInstChkTag;\r\n/**\r\n * The global (imported) instances where the global performance options are stored\r\n */\r\nvar DynProtoDefaultOptions = '_dfOpts';\r\n/**\r\n * Value used as the name of a class when it cannot be determined\r\n * @ignore\r\n */\r\nvar UnknownValue = '_unknown_';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar str__Proto = \"__proto__\";\r\n/**\r\n * The polyfill version of __proto__ so that it doesn't cause issues for anyone not expecting it to exist\r\n */\r\nvar DynProtoBaseProto = \"_dyn\" + str__Proto;\r\n/**\r\n * Runtime Global holder for dynamicProto settings\r\n */\r\nvar DynProtoGlobalSettings = \"__dynProto$Gbl\";\r\n/**\r\n * Track the current prototype for IE8 as you can't look back to get the prototype\r\n */\r\nvar DynProtoCurrent = \"_dynInstProto\";\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strUseBaseInst = 'useBaseInst';\r\n/**\r\n * Constant string defined to support minimization\r\n * @ignore\r\n */\r\nvar strSetInstFuncs = 'setInstFuncs';\r\nvar Obj = Object;\r\n/**\r\n * Pre-lookup to check if we are running on a modern browser (i.e. not IE8)\r\n * @ignore\r\n */\r\nvar _objGetPrototypeOf = Obj[\"getPrototypeOf\"];\r\n/**\r\n * Pre-lookup to check for the existence of this function\r\n */\r\nvar _objGetOwnProps = Obj[\"getOwnPropertyNames\"];\r\n// Since 1.1.7 moving these to the runtime global to work around mixed version and module issues\r\n// See Issue https://github.com/microsoft/DynamicProto-JS/issues/57 for details\r\nvar _gbl = getGlobal();\r\nvar _gblInst = _gbl[DynProtoGlobalSettings] || (_gbl[DynProtoGlobalSettings] = {\r\n    o: (_a = {},\r\n        _a[strSetInstFuncs] = true,\r\n        _a[strUseBaseInst] = true,\r\n        _a),\r\n    n: 1000 // Start new global index @ 1000 so we \"fix\" some cases when mixed with 1.1.6 or earlier\r\n});\r\n/**\r\n * Helper used to check whether the target is an Object prototype or Array prototype\r\n * @ignore\r\n */\r\nfunction _isObjectOrArrayPrototype(target) {\r\n    return target && (target === Obj[Prototype] || target === Array[Prototype]);\r\n}\r\n/**\r\n * Helper used to check whether the target is an Object prototype, Array prototype or Function prototype\r\n * @ignore\r\n */\r\nfunction _isObjectArrayOrFunctionPrototype(target) {\r\n    return _isObjectOrArrayPrototype(target) || target === Function[Prototype];\r\n}\r\n/**\r\n * Helper used to get the prototype of the target object as getPrototypeOf is not available in an ES3 environment.\r\n * @ignore\r\n */\r\nfunction _getObjProto(target) {\r\n    var newProto;\r\n    if (target) {\r\n        // This method doesn't exist in older browsers (e.g. IE8)\r\n        if (_objGetPrototypeOf) {\r\n            return _objGetPrototypeOf(target);\r\n        }\r\n        var curProto = target[str__Proto] || target[Prototype] || (target[Constructor] ? target[Constructor][Prototype] : null);\r\n        // Using the pre-calculated value as IE8 doesn't support looking up the prototype of a prototype and thus fails for more than 1 base class\r\n        newProto = target[DynProtoBaseProto] || curProto;\r\n        if (!objHasOwnProperty(target, DynProtoBaseProto)) {\r\n            // As this prototype doesn't have this property then this is from an inherited class so newProto is the base to return so save it\r\n            // so we can look it up value (which for a multiple hierarchy dynamicProto will be the base class)\r\n            delete target[DynProtoCurrent]; // Delete any current value allocated to this instance so we pick up the value from prototype hierarchy\r\n            newProto = target[DynProtoBaseProto] = target[DynProtoCurrent] || target[DynProtoBaseProto];\r\n            target[DynProtoCurrent] = curProto;\r\n        }\r\n    }\r\n    return newProto;\r\n}\r\n/**\r\n * Helper to get the properties of an object, including none enumerable ones as functions on a prototype in ES6\r\n * are not enumerable.\r\n * @param target\r\n */\r\nfunction _forEachProp(target, func) {\r\n    var props = [];\r\n    if (_objGetOwnProps) {\r\n        props = _objGetOwnProps(target);\r\n    }\r\n    else {\r\n        for (var name_1 in target) {\r\n            if (typeof name_1 === \"string\" && objHasOwnProperty(target, name_1)) {\r\n                props.push(name_1);\r\n            }\r\n        }\r\n    }\r\n    if (props && props.length > 0) {\r\n        for (var lp = 0; lp < props.length; lp++) {\r\n            func(props[lp]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Helper function to check whether the provided function name is a potential candidate for dynamic\r\n * callback and prototype generation.\r\n * @param target The target object, may be a prototype or class object\r\n * @param funcName The function name\r\n * @param skipOwn Skips the check for own property\r\n * @ignore\r\n */\r\nfunction _isDynamicCandidate(target, funcName, skipOwn) {\r\n    return (funcName !== Constructor && typeof target[funcName] === strFunction && (skipOwn || objHasOwnProperty(target, funcName)) && funcName !== str__Proto && funcName !== Prototype);\r\n}\r\n/**\r\n * Helper to throw a TypeError exception\r\n * @param message the message\r\n * @ignore\r\n */\r\nfunction _throwTypeError(message) {\r\n    throwTypeError(\"DynamicProto: \" + message);\r\n}\r\n/**\r\n * Returns a collection of the instance functions that are defined directly on the thisTarget object, it does\r\n * not return any inherited functions\r\n * @param thisTarget The object to get the instance functions from\r\n * @ignore\r\n */\r\nfunction _getInstanceFuncs(thisTarget) {\r\n    // Get the base proto\r\n    var instFuncs = objCreate(null);\r\n    // Save any existing instance functions\r\n    _forEachProp(thisTarget, function (name) {\r\n        // Don't include any dynamic prototype instances - as we only want the real functions\r\n        if (!instFuncs[name] && _isDynamicCandidate(thisTarget, name, false)) {\r\n            // Create an instance callback for passing the base function to the caller\r\n            instFuncs[name] = thisTarget[name];\r\n        }\r\n    });\r\n    return instFuncs;\r\n}\r\n/**\r\n * Returns whether the value is included in the array\r\n * @param values The array of values\r\n * @param value  The value\r\n */\r\nfunction _hasVisited(values, value) {\r\n    for (var lp = values.length - 1; lp >= 0; lp--) {\r\n        if (values[lp] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Returns an object that contains callback functions for all \"base/super\" functions, this is used to \"save\"\r\n * enabling calling super.xxx() functions without requiring that the base \"class\" has defined a prototype references\r\n * @param target The current instance\r\n * @ignore\r\n */\r\nfunction _getBaseFuncs(classProto, thisTarget, instFuncs, useBaseInst) {\r\n    function _instFuncProxy(target, funcHost, funcName) {\r\n        var theFunc = funcHost[funcName];\r\n        if (theFunc[DynProxyTag] && useBaseInst) {\r\n            // grab and reuse the hosted looking function (if available) otherwise the original passed function\r\n            var instFuncTable = target[DynInstFuncTable] || {};\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                theFunc = (instFuncTable[funcHost[DynClassName]] || {})[funcName] || theFunc;\r\n            }\r\n        }\r\n        return function () {\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return theFunc.apply(target, arguments);\r\n        };\r\n    }\r\n    // Start creating a new baseFuncs by creating proxies for the instance functions (as they may get replaced)\r\n    var baseFuncs = objCreate(null);\r\n    _forEachProp(instFuncs, function (name) {\r\n        // Create an instance callback for passing the base function to the caller\r\n        baseFuncs[name] = _instFuncProxy(thisTarget, instFuncs, name);\r\n    });\r\n    // Get the base prototype functions\r\n    var baseProto = _getObjProto(classProto);\r\n    var visited = [];\r\n    // Don't include base object functions for Object, Array or Function\r\n    while (baseProto && !_isObjectArrayOrFunctionPrototype(baseProto) && !_hasVisited(visited, baseProto)) {\r\n        // look for prototype functions\r\n        _forEachProp(baseProto, function (name) {\r\n            // Don't include any dynamic prototype instances - as we only want the real functions\r\n            // For IE 7/8 the prototype lookup doesn't provide the full chain so we need to bypass the \r\n            // hasOwnProperty check we get all of the methods, main difference is that IE7/8 doesn't return\r\n            // the Object prototype methods while bypassing the check\r\n            if (!baseFuncs[name] && _isDynamicCandidate(baseProto, name, !_objGetPrototypeOf)) {\r\n                // Create an instance callback for passing the base function to the caller\r\n                baseFuncs[name] = _instFuncProxy(thisTarget, baseProto, name);\r\n            }\r\n        });\r\n        // We need to find all possible functions that might be overloaded by walking the entire prototype chain\r\n        // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n        // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n        visited.push(baseProto);\r\n        baseProto = _getObjProto(baseProto);\r\n    }\r\n    return baseFuncs;\r\n}\r\nfunction _getInstFunc(target, funcName, proto, currentDynProtoProxy) {\r\n    var instFunc = null;\r\n    // We need to check whether the class name is defined directly on this prototype otherwise\r\n    // it will walk the proto chain and return any parent proto classname.\r\n    if (target && objHasOwnProperty(proto, DynClassName)) {\r\n        var instFuncTable = target[DynInstFuncTable] || objCreate(null);\r\n        instFunc = (instFuncTable[proto[DynClassName]] || objCreate(null))[funcName];\r\n        if (!instFunc) {\r\n            // Avoid stack overflow from recursive calling the same function\r\n            _throwTypeError(\"Missing [\" + funcName + \"] \" + strFunction);\r\n        }\r\n        // We have the instance function, lets check it we can speed up further calls\r\n        // by adding the instance function back directly on the instance (avoiding the dynamic func lookup)\r\n        if (!instFunc[DynInstChkTag] && instFuncTable[DynAllowInstChkTag] !== false) {\r\n            // If the instance already has an instance function we can't replace it\r\n            var canAddInst = !objHasOwnProperty(target, funcName);\r\n            // Get current prototype\r\n            var objProto = _getObjProto(target);\r\n            var visited = [];\r\n            // Lookup the function starting at the top (instance level prototype) and traverse down, if the first matching function\r\n            // if nothing is found or if the first hit is a dynamic proto instance then we can safely add an instance shortcut\r\n            while (canAddInst && objProto && !_isObjectArrayOrFunctionPrototype(objProto) && !_hasVisited(visited, objProto)) {\r\n                var protoFunc = objProto[funcName];\r\n                if (protoFunc) {\r\n                    canAddInst = (protoFunc === currentDynProtoProxy);\r\n                    break;\r\n                }\r\n                // We need to find all possible initial functions to ensure that we don't bypass a valid override function\r\n                visited.push(objProto);\r\n                objProto = _getObjProto(objProto);\r\n            }\r\n            try {\r\n                if (canAddInst) {\r\n                    // This instance doesn't have an instance func and the class hierarchy does have a higher level prototype version\r\n                    // so it's safe to directly assign for any subsequent calls (for better performance)\r\n                    target[funcName] = instFunc;\r\n                }\r\n                // Block further attempts to set the instance function for any\r\n                instFunc[DynInstChkTag] = 1;\r\n            }\r\n            catch (e) {\r\n                // Don't crash if the object is readonly or the runtime doesn't allow changing this\r\n                // And set a flag so we don't try again for any function\r\n                instFuncTable[DynAllowInstChkTag] = false;\r\n            }\r\n        }\r\n    }\r\n    return instFunc;\r\n}\r\nfunction _getProtoFunc(funcName, proto, currentDynProtoProxy) {\r\n    var protoFunc = proto[funcName];\r\n    // Check that the prototype function is not a self reference -- try to avoid stack overflow!\r\n    if (protoFunc === currentDynProtoProxy) {\r\n        // It is so lookup the base prototype\r\n        protoFunc = _getObjProto(proto)[funcName];\r\n    }\r\n    if (typeof protoFunc !== strFunction) {\r\n        _throwTypeError(\"[\" + funcName + \"] is not a \" + strFunction);\r\n    }\r\n    return protoFunc;\r\n}\r\n/**\r\n * Add the required dynamic prototype methods to the the class prototype\r\n * @param proto - The class prototype\r\n * @param className - The instance classname\r\n * @param target - The target instance\r\n * @param baseInstFuncs - The base instance functions\r\n * @param setInstanceFunc - Flag to allow prototype function to reset the instance function if one does not exist\r\n * @ignore\r\n */\r\nfunction _populatePrototype(proto, className, target, baseInstFuncs, setInstanceFunc) {\r\n    function _createDynamicPrototype(proto, funcName) {\r\n        var dynProtoProxy = function () {\r\n            // Use the instance or prototype function\r\n            var instFunc = _getInstFunc(this, funcName, proto, dynProtoProxy) || _getProtoFunc(funcName, proto, dynProtoProxy);\r\n            // eslint-disable-next-line prefer-rest-params\r\n            return instFunc.apply(this, arguments);\r\n        };\r\n        // Tag this function as a proxy to support replacing dynamic proxy elements (primary use case is for unit testing\r\n        // via which can dynamically replace the prototype function reference)\r\n        dynProtoProxy[DynProxyTag] = 1;\r\n        return dynProtoProxy;\r\n    }\r\n    if (!_isObjectOrArrayPrototype(proto)) {\r\n        var instFuncTable = target[DynInstFuncTable] = target[DynInstFuncTable] || objCreate(null);\r\n        if (!_isObjectOrArrayPrototype(instFuncTable)) {\r\n            var instFuncs_1 = instFuncTable[className] = (instFuncTable[className] || objCreate(null)); // fetch and assign if as it may not exist yet\r\n            // Set whether we are allow to lookup instances, if someone has set to false then do not re-enable\r\n            if (instFuncTable[DynAllowInstChkTag] !== false) {\r\n                instFuncTable[DynAllowInstChkTag] = !!setInstanceFunc;\r\n            }\r\n            if (!_isObjectOrArrayPrototype(instFuncs_1)) {\r\n                _forEachProp(target, function (name) {\r\n                    // Only add overridden functions\r\n                    if (_isDynamicCandidate(target, name, false) && target[name] !== baseInstFuncs[name]) {\r\n                        // Save the instance Function to the lookup table and remove it from the instance as it's not a dynamic proto function\r\n                        instFuncs_1[name] = target[name];\r\n                        delete target[name];\r\n                        // Add a dynamic proto if one doesn't exist or if a prototype function exists and it's not a dynamic one\r\n                        if (!objHasOwnProperty(proto, name) || (proto[name] && !proto[name][DynProxyTag])) {\r\n                            proto[name] = _createDynamicPrototype(proto, name);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the passed prototype object appears to be correct by walking the prototype hierarchy of the instance\r\n * @param classProto The class prototype instance\r\n * @param thisTarget The current instance that will be checked whether the passed prototype instance is in the hierarchy\r\n * @ignore\r\n */\r\nfunction _checkPrototype(classProto, thisTarget) {\r\n    // This method doesn't existing in older browsers (e.g. IE8)\r\n    if (_objGetPrototypeOf) {\r\n        // As this is primarily a coding time check, don't bother checking if running in IE8 or lower\r\n        var visited = [];\r\n        var thisProto = _getObjProto(thisTarget);\r\n        while (thisProto && !_isObjectArrayOrFunctionPrototype(thisProto) && !_hasVisited(visited, thisProto)) {\r\n            if (thisProto === classProto) {\r\n                return true;\r\n            }\r\n            // This avoids the caller from needing to check whether it's direct base class implements the function or not\r\n            // by walking the entire chain it simplifies the usage and issues from upgrading any of the base classes.\r\n            visited.push(thisProto);\r\n            thisProto = _getObjProto(thisProto);\r\n        }\r\n        return false;\r\n    }\r\n    // If objGetPrototypeOf doesn't exist then just assume everything is ok.\r\n    return true;\r\n}\r\n/**\r\n * Gets the current prototype name using the ES6 name if available otherwise falling back to a use unknown as the name.\r\n * It's not critical for this to return a name, it's used to decorate the generated unique name for easier debugging only.\r\n * @param target\r\n * @param unknownValue\r\n * @ignore\r\n */\r\nfunction _getObjName(target, unknownValue) {\r\n    if (objHasOwnProperty(target, Prototype)) {\r\n        // Look like a prototype\r\n        return target.name || unknownValue || UnknownValue;\r\n    }\r\n    return (((target || {})[Constructor]) || {}).name || unknownValue || UnknownValue;\r\n}\r\n/**\r\n * Helper function when creating dynamic (inline) functions for classes, this helper performs the following tasks :-\r\n * - Saves references to all defined base class functions\r\n * - Calls the delegateFunc with the current target (this) and a base object reference that can be used to call all \"super\" functions.\r\n * - Will populate the class prototype for all overridden functions to support class extension that call the prototype instance.\r\n * Callers should use this helper when declaring all function within the constructor of a class, as mentioned above the delegateFunc is\r\n * passed both the target \"this\" and an object that can be used to call any base (super) functions, using this based object in place of\r\n * super.XXX() (which gets expanded to _super.prototype.XXX()) provides a better minification outcome and also ensures the correct \"this\"\r\n * context is maintained as TypeScript creates incorrect references using super.XXXX() for dynamically defined functions i.e. Functions\r\n * defined in the constructor or some other function (rather than declared as complete typescript functions).\r\n * ### Usage\r\n * ```typescript\r\n * import dynamicProto from \"@microsoft/dynamicproto-js\";\r\n * class ExampleClass extends BaseClass {\r\n *     constructor() {\r\n *         dynamicProto(ExampleClass, this, (_self, base) => {\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.newFunc = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     ...\r\n *                 }\r\n *             }\r\n *             // This will define a function that will be converted to a prototype function\r\n *             _self.myFunction = () => {\r\n *                 // Access any \"this\" instance property\r\n *                 if (_self.someProperty) {\r\n *                     // Call the base version of the function that we are overriding\r\n *                     base.myFunction();\r\n *                 }\r\n *                 ...\r\n *             }\r\n *             _self.initialize = () => {\r\n *                 ...\r\n *             }\r\n *             // Warnings: While the following will work as _self is simply a reference to\r\n *             // this, if anyone overrides myFunction() the overridden will be called first\r\n *             // as the normal JavaScript method resolution will occur and the defined\r\n *             // _self.initialize() function is actually gets removed from the instance and\r\n *             // a proxy prototype version is created to reference the created method.\r\n *             _self.initialize();\r\n *         });\r\n *     }\r\n * }\r\n * ```\r\n * @typeparam DPType This is the generic type of the class, used to keep intellisense valid\r\n * @typeparam DPCls The type that contains the prototype of the current class\r\n * @param theClass - This is the current class instance which contains the prototype for the current class\r\n * @param target - The current \"this\" (target) reference, when the class has been extended this.prototype will not be the 'theClass' value.\r\n * @param delegateFunc - The callback function (closure) that will create the dynamic function\r\n * @param options - Additional options to configure how the dynamic prototype operates\r\n */\r\nexport default function dynamicProto(theClass, target, delegateFunc, options) {\r\n    // Make sure that the passed theClass argument looks correct\r\n    if (!objHasOwnProperty(theClass, Prototype)) {\r\n        _throwTypeError(\"theClass is an invalid class definition.\");\r\n    }\r\n    // Quick check to make sure that the passed theClass argument looks correct (this is a common copy/paste error)\r\n    var classProto = theClass[Prototype];\r\n    if (!_checkPrototype(classProto, target)) {\r\n        _throwTypeError(\"[\" + _getObjName(theClass) + \"] not in hierarchy of [\" + _getObjName(target) + \"]\");\r\n    }\r\n    var className = null;\r\n    if (objHasOwnProperty(classProto, DynClassName)) {\r\n        // Only grab the class name if it's defined on this prototype (i.e. don't walk the prototype chain)\r\n        className = classProto[DynClassName];\r\n    }\r\n    else {\r\n        // As not all browser support name on the prototype creating a unique dynamic one if we have not already\r\n        // assigned one, so we can use a simple string as the lookup rather than an object for the dynamic instance\r\n        // function table lookup.\r\n        className = DynClassNamePrefix + _getObjName(theClass, \"_\") + \"$\" + _gblInst.n;\r\n        _gblInst.n++;\r\n        classProto[DynClassName] = className;\r\n    }\r\n    var perfOptions = dynamicProto[DynProtoDefaultOptions];\r\n    var useBaseInst = !!perfOptions[strUseBaseInst];\r\n    if (useBaseInst && options && options[strUseBaseInst] !== undefined) {\r\n        useBaseInst = !!options[strUseBaseInst];\r\n    }\r\n    // Get the current instance functions\r\n    var instFuncs = _getInstanceFuncs(target);\r\n    // Get all of the functions for any base instance (before they are potentially overridden)\r\n    var baseFuncs = _getBaseFuncs(classProto, target, instFuncs, useBaseInst);\r\n    // Execute the delegate passing in both the current target \"this\" and \"base\" function references\r\n    // Note casting the same type as we don't actually have the base class here and this will provide some intellisense support\r\n    delegateFunc(target, baseFuncs);\r\n    // Don't allow setting instance functions for older IE instances\r\n    var setInstanceFunc = !!_objGetPrototypeOf && !!perfOptions[strSetInstFuncs];\r\n    if (setInstanceFunc && options) {\r\n        setInstanceFunc = !!options[strSetInstFuncs];\r\n    }\r\n    // Populate the Prototype for any overridden instance functions\r\n    _populatePrototype(classProto, className, target, instFuncs, setInstanceFunc !== false);\r\n}\r\n/**\r\n * Exposes the default global options to allow global configuration, if the global values are disabled these will override\r\n * any passed values. This is primarily exposed to support unit-testing without the need for individual classes to expose\r\n * their internal usage of dynamic proto.\r\n */\r\ndynamicProto[DynProtoDefaultOptions] = _gblInst.o;\r\n//# sourceMappingURL=DynamicProto.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface IConfig {\n\t// The client ID of the GitHub OAuth app\n\tgitHubClientId: string;\n\tgitHubClientSecret?: string;\n}\n\n// For easy access to mixin client ID and secret\n//\n// NOTE: GitHub client secrets cannot be secured when running in a native client so in other words, the client secret is\n// not really a secret... so we allow the client secret in code. It is brought in before we publish VS Code. Reference:\n// https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/best-practices-for-creating-an-oauth-app#client-secrets\nexport const Config: IConfig = {\n\tgitHubClientId: '01ab8ac9400c4e429b23'\n};\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MemoryKeyValueStorage = void 0;\nclass MemoryKeyValueStorage {\n    constructor() {\n        this.storage = new Map();\n    }\n    async getValue(key, defaultValue) {\n        if (this.storage.has(key)) {\n            return await Promise.resolve(this.storage.get(key));\n        }\n        return await Promise.resolve(defaultValue || undefined);\n    }\n    setValue(key, value) {\n        this.storage.set(key, value);\n    }\n}\nexports.MemoryKeyValueStorage = MemoryKeyValueStorage;\n//# sourceMappingURL=MemoryKeyValueStorage.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n * Real Time profile (default profile). RealTime Latency events are sent every 1 sec and\r\n * Normal Latency events are sent every 2 sec.\r\n */\r\nexport var RT_PROFILE = \"REAL_TIME\";\r\n/**\r\n * Near Real Time profile. RealTime Latency events are sent every 3 sec and\r\n * Normal Latency events are sent every 6 sec.\r\n */\r\nexport var NRT_PROFILE = \"NEAR_REAL_TIME\";\r\n/**\r\n * Best Effort. RealTime Latency events are sent every 9 sec and\r\n * Normal Latency events are sent every 18 sec.\r\n */\r\nexport var BE_PROFILE = \"BEST_EFFORT\";\r\n//# sourceMappingURL=DataModels.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Generally you should only put values that are used more than 2 times and then only if not already exposed as a constant (such as SdkCoreNames)\r\n// as when using \"short\" named values from here they will be will be minified smaller than the SdkCoreNames[eSdkCoreNames.xxxx] value.\r\nexport var STR_EMPTY = \"\";\r\nexport var STR_POST_METHOD = \"POST\";\r\nexport var STR_DISABLED_PROPERTY_NAME = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\nexport var STR_DROPPED = \"drop\";\r\nexport var STR_SENDING = \"send\";\r\nexport var STR_REQUEUE = \"requeue\";\r\nexport var STR_RESPONSE_FAIL = \"rspFail\";\r\nexport var STR_OTHER = \"oth\";\r\nexport var DEFAULT_CACHE_CONTROL = \"no-cache, no-store\";\r\nexport var DEFAULT_CONTENT_TYPE = \"application/x-json-stream\";\r\nexport var STR_CACHE_CONTROL = \"cache-control\";\r\nexport var STR_CONTENT_TYPE_HEADER = \"content-type\";\r\nexport var STR_KILL_TOKENS_HEADER = \"kill-tokens\";\r\nexport var STR_KILL_DURATION_HEADER = \"kill-duration\";\r\nexport var STR_KILL_DURATION_SECONDS_HEADER = \"kill-duration-seconds\";\r\nexport var STR_TIME_DELTA_HEADER = \"time-delta-millis\";\r\nexport var STR_CLIENT_VERSION = \"client-version\";\r\nexport var STR_CLIENT_ID = \"client-id\";\r\nexport var STR_TIME_DELTA_TO_APPLY = \"time-delta-to-apply-millis\";\r\nexport var STR_UPLOAD_TIME = \"upload-time\";\r\nexport var STR_API_KEY = \"apikey\";\r\nexport var STR_MSA_DEVICE_TICKET = \"AuthMsaDeviceTicket\";\r\nexport var STR_AUTH_WEB_TOKEN = \"WebAuthToken\";\r\nexport var STR_AUTH_XTOKEN = \"AuthXToken\";\r\nexport var STR_SDK_VERSION = \"sdk-version\";\r\nexport var STR_NO_RESPONSE_BODY = \"NoResponseBody\";\r\nexport var STR_MSFPC = \"msfpc\";\r\nexport var STR_TRACE = \"trace\";\r\nexport var STR_USER = \"user\";\r\n//# sourceMappingURL=InternalConstants.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n\r\n// Licensed under the MIT License.\r\n// @skip-file-minify\r\n// ##############################################################\r\n// AUTO GENERATED FILE: This file is Auto Generated during build.\r\n// ##############################################################\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// Note: DON'T Export these const from the package as we are still targeting ES3 this will export a mutable variables that someone could change!!!\r\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nexport var _DYN_ALLOW_REQUEST_SENDIN0 = \"allowRequestSending\"; // Count: 3\r\nexport var _DYN_FIRST_REQUEST_SENT = \"firstRequestSent\"; // Count: 2\r\nexport var _DYN_SHOULD_ADD_CLOCK_SKE1 = \"shouldAddClockSkewHeaders\"; // Count: 2\r\nexport var _DYN_GET_CLOCK_SKEW_HEADE2 = \"getClockSkewHeaderValue\"; // Count: 2\r\nexport var _DYN_SET_CLOCK_SKEW = \"setClockSkew\"; // Count: 3\r\nexport var _DYN_LENGTH = \"length\"; // Count: 38\r\nexport var _DYN_CONCAT = \"concat\"; // Count: 7\r\nexport var _DYN_I_KEY = \"iKey\"; // Count: 11\r\nexport var _DYN_COUNT = \"count\"; // Count: 19\r\nexport var _DYN_EVENTS = \"events\"; // Count: 8\r\nexport var _DYN_PUSH = \"push\"; // Count: 15\r\nexport var _DYN_SPLIT = \"split\"; // Count: 6\r\nexport var _DYN_SPLICE = \"splice\"; // Count: 4\r\nexport var _DYN_TO_LOWER_CASE = \"toLowerCase\"; // Count: 3\r\nexport var _DYN_HDRS = \"hdrs\"; // Count: 7\r\nexport var _DYN_USE_HDRS = \"useHdrs\"; // Count: 5\r\nexport var _DYN_INITIALIZE = \"initialize\"; // Count: 5\r\nexport var _DYN_SET_TIMEOUT_OVERRIDE = \"setTimeoutOverride\"; // Count: 3\r\nexport var _DYN_CLEAR_TIMEOUT_OVERRI3 = \"clearTimeoutOverride\"; // Count: 3\r\nexport var _DYN_PAYLOAD_PREPROCESSOR = \"payloadPreprocessor\"; // Count: 2\r\nexport var _DYN_OVERRIDE_ENDPOINT_UR4 = \"overrideEndpointUrl\"; // Count: 3\r\nexport var _DYN_AVOID_OPTIONS = \"avoidOptions\"; // Count: 3\r\nexport var _DYN_DISABLE_EVENT_TIMING5 = \"disableEventTimings\"; // Count: 2\r\nexport var _DYN_STRINGIFY_OBJECTS = \"stringifyObjects\"; // Count: 2\r\nexport var _DYN_ENABLE_COMPOUND_KEY = \"enableCompoundKey\"; // Count: 4\r\nexport var _DYN_DISABLE_XHR_SYNC = \"disableXhrSync\"; // Count: 6\r\nexport var _DYN_DISABLE_FETCH_KEEP_A6 = \"disableFetchKeepAlive\"; // Count: 7\r\nexport var _DYN_ADD_NO_RESPONSE = \"addNoResponse\"; // Count: 3\r\nexport var _DYN_EXCLUDE_CS_META_DATA = \"excludeCsMetaData\"; // Count: 2\r\nexport var _DYN_USE_SEND_BEACON = \"useSendBeacon\"; // Count: 3\r\nexport var _DYN_FETCH_CREDENTIALS = \"fetchCredentials\"; // Count: 4\r\nexport var _DYN_ALWAYS_USE_XHR_OVERR7 = \"alwaysUseXhrOverride\"; // Count: 3\r\nexport var _DYN_UNLOAD_TRANSPORTS = \"unloadTransports\"; // Count: 2\r\nexport var _DYN_SERIALIZE_OFFLINE_EV8 = \"serializeOfflineEvt\"; // Count: 2\r\nexport var _DYN_GET_OFFLINE_REQUEST_9 = \"getOfflineRequestDetails\"; // Count: 2\r\nexport var _DYN_CREATE_PAYLOAD = \"createPayload\"; // Count: 4\r\nexport var _DYN_CREATE_ONE_DSPAYLOAD = \"createOneDSPayload\"; // Count: 4\r\nexport var _DYN_PAYLOAD_BLOB = \"payloadBlob\"; // Count: 3\r\nexport var _DYN_HEADERS = \"headers\"; // Count: 12\r\nexport var _DYN__THE_PAYLOAD = \"_thePayload\"; // Count: 6\r\nexport var _DYN_URL_STRING = \"urlString\"; // Count: 5\r\nexport var _DYN_BATCHES = \"batches\"; // Count: 15\r\nexport var _DYN_SEND_TYPE = \"sendType\"; // Count: 13\r\nexport var _DYN_ADD_HEADER = \"addHeader\"; // Count: 3\r\nexport var _DYN_CAN_SEND_REQUEST = \"canSendRequest\"; // Count: 3\r\nexport var _DYN_SEND_QUEUED_REQUESTS = \"sendQueuedRequests\"; // Count: 5\r\nexport var _DYN_IS_COMPLETELY_IDLE = \"isCompletelyIdle\"; // Count: 2\r\nexport var _DYN_SET_UNLOADING = \"setUnloading\"; // Count: 3\r\nexport var _DYN_IS_TENANT_KILLED = \"isTenantKilled\"; // Count: 3\r\nexport var _DYN_RESUME = \"resume\"; // Count: 4\r\nexport var _DYN_SEND_SYNCHRONOUS_BAT10 = \"sendSynchronousBatch\"; // Count: 2\r\nexport var _DYN__TRANSPORT = \"_transport\"; // Count: 3\r\nexport var _DYN_GET_WPARAM = \"getWParam\"; // Count: 4\r\nexport var _DYN_IS_BEACON = \"isBeacon\"; // Count: 4\r\nexport var _DYN_TIMINGS = \"timings\"; // Count: 4\r\nexport var _DYN_IS_TEARDOWN = \"isTeardown\"; // Count: 3\r\nexport var _DYN_IS_SYNC = \"isSync\"; // Count: 4\r\nexport var _DYN_DATA = \"data\"; // Count: 7\r\nexport var _DYN_TIMEOUT = \"timeout\"; // Count: 4\r\nexport var _DYN__SEND_REASON = \"_sendReason\"; // Count: 4\r\nexport var _DYN_SET_KILL_SWITCH_TENA11 = \"setKillSwitchTenants\"; // Count: 2\r\nexport var _DYN__BACK_OFF_TRANSMISSI12 = \"_backOffTransmission\"; // Count: 2\r\nexport var _DYN_IDENTIFIER = \"identifier\"; // Count: 4\r\nexport var _DYN_DISABLE_OPTIMIZE_OBJ = \"disableOptimizeObj\"; // Count: 2\r\nexport var _DYN_IGNORE_MC1_MS0_COOKI13 = \"ignoreMc1Ms0CookieProcessing\"; // Count: 2\r\nexport var _DYN_EVENTS_LIMIT_IN_MEM = \"eventsLimitInMem\"; // Count: 2\r\nexport var _DYN_AUTO_FLUSH_EVENTS_LI14 = \"autoFlushEventsLimit\"; // Count: 2\r\nexport var _DYN_DISABLE_AUTO_BATCH_F15 = \"disableAutoBatchFlushLimit\"; // Count: 2\r\nexport var _DYN_OVERRIDE_INSTRUMENTA16 = \"overrideInstrumentationKey\"; // Count: 2\r\nexport var _DYN_DISABLE_TELEMETRY = \"disableTelemetry\"; // Count: 2\r\nexport var _DYN_BASE_DATA = \"baseData\"; // Count: 3\r\nexport var _DYN_SEND_ATTEMPT = \"sendAttempt\"; // Count: 4\r\nexport var _DYN_LATENCY = \"latency\"; // Count: 7\r\nexport var _DYN_SYNC = \"sync\"; // Count: 7\r\n//# sourceMappingURL=__DynamicConstants.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* EventBatch.ts\r\n* @author Nev Wylie (newylie)\r\n* @copyright Microsoft 2020\r\n*/\r\nimport { isNullOrUndefined, isValueAssigned } from \"@microsoft/1ds-core-js\";\r\nimport { STR_EMPTY, STR_MSFPC } from \"./InternalConstants\";\r\nimport { _DYN_CONCAT, _DYN_COUNT, _DYN_EVENTS, _DYN_I_KEY, _DYN_LENGTH, _DYN_PUSH, _DYN_SPLICE, _DYN_SPLIT } from \"./__DynamicConstants\";\r\nfunction _getEventMsfpc(theEvent) {\r\n    var intWeb = ((theEvent.ext || {})[\"intweb\"]);\r\n    if (intWeb && isValueAssigned(intWeb[STR_MSFPC])) {\r\n        return intWeb[STR_MSFPC];\r\n    }\r\n    return null;\r\n}\r\nfunction _getMsfpc(theEvents) {\r\n    var msfpc = null;\r\n    for (var lp = 0; msfpc === null && lp < theEvents[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n        msfpc = _getEventMsfpc(theEvents[lp]);\r\n    }\r\n    return msfpc;\r\n}\r\n/**\r\n* This class defines a \"batch\" events related to a specific iKey, it is used by the PostChannel and HttpManager\r\n* to collect and transfer ownership of events without duplicating them in-memory. This reduces the previous\r\n* array duplication and shared ownership issues that occurred due to race conditions caused by the async nature\r\n* of sending requests.\r\n*/\r\nvar EventBatch = /** @class */ (function () {\r\n    /**\r\n     * Private constructor so that caller is forced to use the static create method.\r\n     * @param iKey - The iKey to associate with the events (not validated)\r\n     * @param addEvents - The optional collection of events to assign to this batch - defaults to an empty array.\r\n     */\r\n    function EventBatch(iKey, addEvents) {\r\n        var events = addEvents ? [][_DYN_CONCAT /* @min:%2econcat */](addEvents) : [];\r\n        var _self = this;\r\n        var _msfpc = _getMsfpc(events);\r\n        _self[_DYN_I_KEY /* @min:%2eiKey */] = function () {\r\n            return iKey;\r\n        };\r\n        _self.Msfpc = function () {\r\n            // return the cached value unless it's undefined -- used to avoid cpu\r\n            return _msfpc || STR_EMPTY;\r\n        };\r\n        _self[_DYN_COUNT /* @min:%2ecount */] = function () {\r\n            return events[_DYN_LENGTH /* @min:%2elength */];\r\n        };\r\n        _self[_DYN_EVENTS /* @min:%2eevents */] = function () {\r\n            return events;\r\n        };\r\n        _self.addEvent = function (theEvent) {\r\n            if (theEvent) {\r\n                events[_DYN_PUSH /* @min:%2epush */](theEvent);\r\n                if (!_msfpc) {\r\n                    // Not found so try and find one\r\n                    _msfpc = _getEventMsfpc(theEvent);\r\n                }\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        _self[_DYN_SPLIT /* @min:%2esplit */] = function (fromEvent, numEvents) {\r\n            // Create a new batch with the same iKey\r\n            var theEvents;\r\n            if (fromEvent < events[_DYN_LENGTH /* @min:%2elength */]) {\r\n                var cnt = events[_DYN_LENGTH /* @min:%2elength */] - fromEvent;\r\n                if (!isNullOrUndefined(numEvents)) {\r\n                    cnt = numEvents < cnt ? numEvents : cnt;\r\n                }\r\n                theEvents = events[_DYN_SPLICE /* @min:%2esplice */](fromEvent, cnt);\r\n                // reset the fetched msfpc value\r\n                _msfpc = _getMsfpc(events);\r\n            }\r\n            return new EventBatch(iKey, theEvents);\r\n        };\r\n    }\r\n    /**\r\n     * Creates a new Event Batch object\r\n     * @param iKey The iKey associated with this batch of events\r\n     */\r\n    EventBatch.create = function (iKey, theEvents) {\r\n        return new EventBatch(iKey, theEvents);\r\n    };\r\n    return EventBatch;\r\n}());\r\nexport { EventBatch };\r\n//# sourceMappingURL=EventBatch.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* ClockSkewManager.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _DYN_ALLOW_REQUEST_SENDIN0, _DYN_FIRST_REQUEST_SENT, _DYN_GET_CLOCK_SKEW_HEADE2, _DYN_SET_CLOCK_SKEW, _DYN_SHOULD_ADD_CLOCK_SKE1 } from \"./__DynamicConstants\";\r\n/**\r\n* Class to manage clock skew correction.\r\n*/\r\nvar ClockSkewManager = /** @class */ (function () {\r\n    function ClockSkewManager() {\r\n        var _allowRequestSending = true;\r\n        var _shouldAddClockSkewHeaders = true;\r\n        var _isFirstRequest = true;\r\n        var _clockSkewHeaderValue = \"use-collector-delta\";\r\n        var _clockSkewSet = false;\r\n        dynamicProto(ClockSkewManager, this, function (_self) {\r\n            /**\r\n             * Determine if requests can be sent.\r\n             * @returns True if requests can be sent, false otherwise.\r\n             */\r\n            _self[_DYN_ALLOW_REQUEST_SENDIN0 /* @min:%2eallowRequestSending */] = function () {\r\n                return _allowRequestSending;\r\n            };\r\n            /**\r\n             * Tells the ClockSkewManager that it should assume that the first request has now been sent,\r\n             * If this method had not yet been called AND the clock Skew had not been set this will set\r\n             * allowRequestSending to false until setClockSet() is called.\r\n             */\r\n            _self[_DYN_FIRST_REQUEST_SENT /* @min:%2efirstRequestSent */] = function () {\r\n                if (_isFirstRequest) {\r\n                    _isFirstRequest = false;\r\n                    if (!_clockSkewSet) {\r\n                        // Block sending until we get the first clock Skew\r\n                        _allowRequestSending = false;\r\n                    }\r\n                }\r\n            };\r\n            /**\r\n             * Determine if clock skew headers should be added to the request.\r\n             * @returns True if clock skew headers should be added, false otherwise.\r\n             */\r\n            _self[_DYN_SHOULD_ADD_CLOCK_SKE1 /* @min:%2eshouldAddClockSkewHeaders */] = function () {\r\n                return _shouldAddClockSkewHeaders;\r\n            };\r\n            /**\r\n             * Gets the clock skew header value.\r\n             * @returns The clock skew header value.\r\n             */\r\n            _self[_DYN_GET_CLOCK_SKEW_HEADE2 /* @min:%2egetClockSkewHeaderValue */] = function () {\r\n                return _clockSkewHeaderValue;\r\n            };\r\n            /**\r\n             * Sets the clock skew header value. Once clock skew is set this method\r\n             * is no-op.\r\n             * @param timeDeltaInMillis - Time delta to be saved as the clock skew header value.\r\n             */\r\n            _self[_DYN_SET_CLOCK_SKEW /* @min:%2esetClockSkew */] = function (timeDeltaInMillis) {\r\n                if (!_clockSkewSet) {\r\n                    if (timeDeltaInMillis) {\r\n                        _clockSkewHeaderValue = timeDeltaInMillis;\r\n                        _shouldAddClockSkewHeaders = true;\r\n                        _clockSkewSet = true;\r\n                    }\r\n                    else {\r\n                        _shouldAddClockSkewHeaders = false;\r\n                    }\r\n                    // Unblock sending\r\n                    _allowRequestSending = true;\r\n                }\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for ClockSkewManager.prototype.allowRequestSending.\r\n// Removed Stub for ClockSkewManager.prototype.firstRequestSent.\r\n// Removed Stub for ClockSkewManager.prototype.shouldAddClockSkewHeaders.\r\n// Removed Stub for ClockSkewManager.prototype.getClockSkewHeaderValue.\r\n// Removed Stub for ClockSkewManager.prototype.setClockSkew.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    ClockSkewManager.__ieDyn=1;\n\n    return ClockSkewManager;\r\n}());\r\nexport { ClockSkewManager };\r\n//# sourceMappingURL=ClockSkewManager.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* KillSwitch.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrForEach, dateNow, strTrim } from \"@microsoft/1ds-core-js\";\r\nimport { _DYN_IS_TENANT_KILLED, _DYN_LENGTH, _DYN_PUSH, _DYN_SET_KILL_SWITCH_TENA11, _DYN_SPLIT } from \"./__DynamicConstants\";\r\nvar SecToMsMultiplier = 1000;\r\n/**\r\n* Class to stop certain tenants sending events.\r\n*/\r\nvar KillSwitch = /** @class */ (function () {\r\n    function KillSwitch() {\r\n        var _killedTokenDictionary = {};\r\n        function _normalizeTenants(values) {\r\n            var result = [];\r\n            if (values) {\r\n                arrForEach(values, function (value) {\r\n                    result[_DYN_PUSH /* @min:%2epush */](strTrim(value));\r\n                });\r\n            }\r\n            return result;\r\n        }\r\n        dynamicProto(KillSwitch, this, function (_self) {\r\n            _self[_DYN_SET_KILL_SWITCH_TENA11 /* @min:%2esetKillSwitchTenants */] = function (killTokens, killDuration) {\r\n                if (killTokens && killDuration) {\r\n                    try {\r\n                        var killedTokens = _normalizeTenants(killTokens[_DYN_SPLIT /* @min:%2esplit */](\",\"));\r\n                        if (killDuration === \"this-request-only\") {\r\n                            return killedTokens;\r\n                        }\r\n                        var durationMs = parseInt(killDuration, 10) * SecToMsMultiplier;\r\n                        for (var i = 0; i < killedTokens[_DYN_LENGTH /* @min:%2elength */]; ++i) {\r\n                            _killedTokenDictionary[killedTokens[i]] = dateNow() + durationMs;\r\n                        }\r\n                    }\r\n                    catch (ex) {\r\n                        return [];\r\n                    }\r\n                }\r\n                return [];\r\n            };\r\n            _self[_DYN_IS_TENANT_KILLED /* @min:%2eisTenantKilled */] = function (tenantToken) {\r\n                var killDictionary = _killedTokenDictionary;\r\n                var name = strTrim(tenantToken);\r\n                if (killDictionary[name] !== undefined && killDictionary[name] > dateNow()) {\r\n                    return true;\r\n                }\r\n                delete killDictionary[name];\r\n                return false;\r\n            };\r\n        });\r\n    }\r\n// Removed Stub for KillSwitch.prototype.setKillSwitchTenants.\r\n// Removed Stub for KillSwitch.prototype.isTenantKilled.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    KillSwitch.__ieDyn=1;\n\n    return KillSwitch;\r\n}());\r\nexport { KillSwitch };\r\n//# sourceMappingURL=KillSwitch.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* RetryPolicy.ts\r\n* @author Abhilash Panwar (abpanwar)\r\n* @copyright Microsoft 2018\r\n*/\r\nvar RandomizationLowerThreshold = 0.8;\r\nvar RandomizationUpperThreshold = 1.2;\r\nvar BaseBackoff = 3000;\r\nvar MaxBackoff = 600000;\r\n/**\r\n * Determine if the request should be retried for the given status code.\r\n * The below expression reads that we should only retry for:\r\n *      - HttpStatusCodes that are smaller than 300.\r\n *      - HttpStatusCodes greater or equal to 500 (except for 501-NotImplement\r\n *        and 505-HttpVersionNotSupport).\r\n *      - HttpStatusCode 408-RequestTimeout.\r\n *      - HttpStatusCode 429.\r\n * This is based on Microsoft.WindowsAzure.Storage.RetryPolicies.ExponentialRetry class\r\n * @param httpStatusCode - The status code returned for the request.\r\n * @returns True if request should be retried, false otherwise.\r\n */\r\nexport function retryPolicyShouldRetryForStatus(httpStatusCode) {\r\n    /* tslint:disable:triple-equals */\r\n    // Disabling triple-equals rule to avoid httpOverrides from failing because they are returning a string value\r\n    return !((httpStatusCode >= 300 && httpStatusCode < 500 && httpStatusCode != 429)\r\n        || (httpStatusCode == 501)\r\n        || (httpStatusCode == 505));\r\n    /* tslint:enable:triple-equals */\r\n}\r\n/**\r\n * Gets the number of milliseconds to back off before retrying the request. The\r\n * back off duration is exponentially scaled based on the number of retries already\r\n * done for the request.\r\n * @param retriesSoFar - The number of times the request has already been retried.\r\n * @returns The back off duration for the request before it can be retried.\r\n */\r\nexport function retryPolicyGetMillisToBackoffForRetry(retriesSoFar) {\r\n    var waitDuration = 0;\r\n    var minBackoff = BaseBackoff * RandomizationLowerThreshold;\r\n    var maxBackoff = BaseBackoff * RandomizationUpperThreshold;\r\n    var randomBackoff = Math.floor(Math.random() * (maxBackoff - minBackoff)) + minBackoff;\r\n    waitDuration = Math.pow(2, retriesSoFar) * randomBackoff;\r\n    return Math.min(waitDuration, MaxBackoff);\r\n}\r\n//# sourceMappingURL=RetryPolicy.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* Serializer.ts\r\n* @author Abhilash Panwar (abpanwar); Hector Hernandez (hectorh); Nev Wylie (newylie)\r\n* @copyright Microsoft 2018-2020\r\n*/\r\n// @skip-file-minify\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { arrIndexOf, doPerf, getCommonSchemaMetaData, getTenantId, isArray, isValueAssigned, objForEachKey, sanitizeProperty, strStartsWith } from \"@microsoft/1ds-core-js\";\r\nimport { EventBatch } from \"./EventBatch\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { strSubstr } from \"@nevware21/ts-utils\";\r\n/**\r\n * Note: This is an optimization for V8-based browsers. When V8 concatenates a string,\r\n * the strings are only joined logically using a \"cons string\" or \"constructed/concatenated\r\n * string\". These containers keep references to one another and can result in very large\r\n * memory usage. For example, if a 2MB string is constructed by concatenating 4 bytes\r\n * together at a time, the memory usage will be ~44MB; so ~22x increase. The strings are\r\n * only joined together when an operation requiring their joining takes place, such as\r\n * substr(). This function is called when adding data to this buffer to ensure these\r\n * types of strings are periodically joined to reduce the memory footprint.\r\n * Setting to every 20 events as the JSON.stringify() may have joined many strings\r\n * and calling this too much causes a minor delay while processing.\r\n */\r\nvar _MAX_STRING_JOINS = 20;\r\nvar RequestSizeLimitBytes = 3984588; // approx 3.8 Mb\r\nvar BeaconRequestSizeLimitBytes = 65000; // approx 64kb (the current Edge, Firefox and Chrome max limit)\r\nvar MaxRecordSize = 2000000; // approx 2 Mb\r\nvar MaxBeaconRecordSize = Math.min(MaxRecordSize, BeaconRequestSizeLimitBytes);\r\nvar metadata = \"metadata\";\r\nvar f = \"f\";\r\nvar rCheckDot = /\\./;\r\n/**\r\n* Class to handle serialization of event and request.\r\n* Currently uses Bond for serialization. Please note that this may be subject to change.\r\n*/\r\nvar Serializer = /** @class */ (function () {\r\n    /**\r\n     * Constructs a new instance of the Serializer class\r\n     * @param perfManager - The performance manager to use for tracking performance\r\n     * @param valueSanitizer - The value sanitizer to use for sanitizing field values\r\n     * @param stringifyObjects - Should objects be stringified before being sent\r\n     * @param enableCompoundKey - Should compound keys be enabled (defaults to false)\r\n     * @param getEncodedTypeOverride - The callback to get the encoded type for a property defaults to ({@link getCommonSchemaMetaData }(...))\r\n     * @param excludeCsMetaData - (!DANGER!) Should metadata be populated when encoding the event blob (defaults to false) - PII data will NOT be tagged as PII for backend processing\r\n     */\r\n    function Serializer(perfManager, valueSanitizer, stringifyObjects, enableCompoundKey, getEncodedTypeOverride, excludeCsMetaData) {\r\n        var strData = \"data\";\r\n        var strBaseData = \"baseData\";\r\n        var strExt = \"ext\";\r\n        var _checkForCompoundkey = !!enableCompoundKey;\r\n        var _processSubKeys = true;\r\n        var _theSanitizer = valueSanitizer;\r\n        var _isReservedCache = {};\r\n        var _excludeCsMetaData = !!excludeCsMetaData;\r\n        var _getEncodedType = getEncodedTypeOverride || getCommonSchemaMetaData;\r\n        dynamicProto(Serializer, this, function (_self) {\r\n            _self.createPayload = function (retryCnt, isTeardown, isSync, isReducedPayload, sendReason, sendType) {\r\n                return {\r\n                    apiKeys: [],\r\n                    payloadBlob: STR_EMPTY,\r\n                    overflow: null,\r\n                    sizeExceed: [],\r\n                    failedEvts: [],\r\n                    batches: [],\r\n                    numEvents: 0,\r\n                    retryCnt: retryCnt,\r\n                    isTeardown: isTeardown,\r\n                    isSync: isSync,\r\n                    isBeacon: isReducedPayload,\r\n                    sendType: sendType,\r\n                    sendReason: sendReason\r\n                };\r\n            };\r\n            _self.appendPayload = function (payload, theBatch, maxEventsPerBatch) {\r\n                var canAddEvents = payload && theBatch && !payload.overflow;\r\n                if (canAddEvents) {\r\n                    doPerf(perfManager, function () { return \"Serializer:appendPayload\"; }, function () {\r\n                        var theEvents = theBatch.events();\r\n                        var payloadBlob = payload.payloadBlob;\r\n                        var payloadEvents = payload.numEvents;\r\n                        var eventsAdded = false;\r\n                        var sizeExceeded = [];\r\n                        var failedEvts = [];\r\n                        var isBeaconPayload = payload.isBeacon;\r\n                        var requestMaxSize = isBeaconPayload ? BeaconRequestSizeLimitBytes : RequestSizeLimitBytes;\r\n                        var recordMaxSize = isBeaconPayload ? MaxBeaconRecordSize : MaxRecordSize;\r\n                        var lp = 0;\r\n                        var joinCount = 0;\r\n                        while (lp < theEvents.length) {\r\n                            var theEvent = theEvents[lp];\r\n                            if (theEvent) {\r\n                                if (payloadEvents >= maxEventsPerBatch) {\r\n                                    // Maximum events per payload reached, so don't add any more\r\n                                    payload.overflow = theBatch.split(lp);\r\n                                    break;\r\n                                }\r\n                                var eventBlob = _self.getEventBlob(theEvent);\r\n                                if (eventBlob && eventBlob.length <= recordMaxSize) {\r\n                                    // This event will fit into the payload\r\n                                    var blobLength = eventBlob.length;\r\n                                    var currentSize = payloadBlob.length;\r\n                                    if (currentSize + blobLength > requestMaxSize) {\r\n                                        // Request or batch size exceeded, so don't add any more to the payload\r\n                                        payload.overflow = theBatch.split(lp);\r\n                                        break;\r\n                                    }\r\n                                    if (payloadBlob) {\r\n                                        payloadBlob += \"\\n\";\r\n                                    }\r\n                                    payloadBlob += eventBlob;\r\n                                    joinCount++;\r\n                                    // v8 memory optimization only\r\n                                    if (joinCount > _MAX_STRING_JOINS) {\r\n                                        // this substr() should cause the constructed string to join\r\n                                        strSubstr(payloadBlob, 0, 1);\r\n                                        joinCount = 0;\r\n                                    }\r\n                                    eventsAdded = true;\r\n                                    payloadEvents++;\r\n                                }\r\n                                else {\r\n                                    if (eventBlob) {\r\n                                        // Single event size exceeded so remove from the batch\r\n                                        sizeExceeded.push(theEvent);\r\n                                    }\r\n                                    else {\r\n                                        failedEvts.push(theEvent);\r\n                                    }\r\n                                    // We also need to remove this event from the existing array, otherwise a notification will be sent\r\n                                    // indicating that it was successfully sent\r\n                                    theEvents.splice(lp, 1);\r\n                                    lp--;\r\n                                }\r\n                            }\r\n                            lp++;\r\n                        }\r\n                        if (sizeExceeded.length > 0) {\r\n                            payload.sizeExceed.push(EventBatch.create(theBatch.iKey(), sizeExceeded));\r\n                            // Remove the exceeded events from the batch\r\n                        }\r\n                        if (failedEvts.length > 0) {\r\n                            payload.failedEvts.push(EventBatch.create(theBatch.iKey(), failedEvts));\r\n                            // Remove the failed events from the batch\r\n                        }\r\n                        if (eventsAdded) {\r\n                            payload.batches.push(theBatch);\r\n                            payload.payloadBlob = payloadBlob;\r\n                            payload.numEvents = payloadEvents;\r\n                            var apiKey = theBatch.iKey();\r\n                            if (arrIndexOf(payload.apiKeys, apiKey) === -1) {\r\n                                payload.apiKeys.push(apiKey);\r\n                            }\r\n                        }\r\n                    }, function () { return ({ payload: payload, theBatch: { iKey: theBatch.iKey(), evts: theBatch.events() }, max: maxEventsPerBatch }); });\r\n                }\r\n                return canAddEvents;\r\n            };\r\n            _self.getEventBlob = function (eventData) {\r\n                try {\r\n                    return doPerf(perfManager, function () { return \"Serializer.getEventBlob\"; }, function () {\r\n                        var serializedEvent = {};\r\n                        // Adding as dynamic keys for v8 performance\r\n                        serializedEvent.name = eventData.name;\r\n                        serializedEvent.time = eventData.time;\r\n                        serializedEvent.ver = eventData.ver;\r\n                        serializedEvent.iKey = \"o:\" + getTenantId(eventData.iKey);\r\n                        // Assigning local var so usage in part b/c don't throw if there is no ext\r\n                        var serializedExt = {};\r\n                        var _addMetadataCallback;\r\n                        if (!_excludeCsMetaData) {\r\n                            _addMetadataCallback = function (pathKeys, key, value) {\r\n                                _addJSONPropertyMetaData(_getEncodedType, serializedExt, pathKeys, key, value);\r\n                            };\r\n                        }\r\n                        // Part A\r\n                        var eventExt = eventData[strExt];\r\n                        if (eventExt) {\r\n                            // Only assign ext if the event had one (There are tests covering this use case)\r\n                            serializedEvent[strExt] = serializedExt;\r\n                            objForEachKey(eventExt, function (key, value) {\r\n                                var data = serializedExt[key] = {};\r\n                                // Don't include a metadata callback as we don't currently set metadata Part A fields\r\n                                _processPathKeys(value, data, \"ext.\" + key, true, null, null, true);\r\n                            });\r\n                        }\r\n                        var serializedData = serializedEvent[strData] = {};\r\n                        serializedData.baseType = eventData.baseType;\r\n                        var serializedBaseData = serializedData[strBaseData] = {};\r\n                        // Part B\r\n                        _processPathKeys(eventData.baseData, serializedBaseData, strBaseData, false, [strBaseData], _addMetadataCallback, _processSubKeys);\r\n                        // Part C\r\n                        _processPathKeys(eventData.data, serializedData, strData, false, [], _addMetadataCallback, _processSubKeys);\r\n                        return JSON.stringify(serializedEvent);\r\n                    }, function () { return ({ item: eventData }); });\r\n                }\r\n                catch (e) {\r\n                    return null;\r\n                }\r\n            };\r\n            function _isReservedField(path, name) {\r\n                var result = _isReservedCache[path];\r\n                if (result === undefined) {\r\n                    if (path.length >= 7) {\r\n                        // Do not allow the changing of fields located in the ext.metadata or ext.web extension\r\n                        result = strStartsWith(path, \"ext.metadata\") || strStartsWith(path, \"ext.web\");\r\n                    }\r\n                    _isReservedCache[path] = result;\r\n                }\r\n                return result;\r\n            }\r\n            function _processPathKeys(srcObj, target, thePath, checkReserved, metadataPathKeys, metadataCallback, processSubKeys) {\r\n                objForEachKey(srcObj, function (key, srcValue) {\r\n                    var prop = null;\r\n                    if (srcValue || isValueAssigned(srcValue)) {\r\n                        var path = thePath;\r\n                        var name_1 = key;\r\n                        var theMetaPathKeys = metadataPathKeys;\r\n                        var destObj = target;\r\n                        // Handle keys with embedded '.', like \"TestObject.testProperty\"\r\n                        if (_checkForCompoundkey && !checkReserved && rCheckDot.test(key)) {\r\n                            var subKeys = key.split(\".\");\r\n                            var keyLen = subKeys.length;\r\n                            if (keyLen > 1) {\r\n                                if (theMetaPathKeys) {\r\n                                    // Create a copy of the meta path keys so we can add the extra ones\r\n                                    theMetaPathKeys = theMetaPathKeys.slice();\r\n                                }\r\n                                for (var lp = 0; lp < keyLen - 1; lp++) {\r\n                                    var subKey = subKeys[lp];\r\n                                    // Add/reuse the sub key object\r\n                                    destObj = destObj[subKey] = destObj[subKey] || {};\r\n                                    path += \".\" + subKey;\r\n                                    if (theMetaPathKeys) {\r\n                                        theMetaPathKeys.push(subKey);\r\n                                    }\r\n                                }\r\n                                name_1 = subKeys[keyLen - 1];\r\n                            }\r\n                        }\r\n                        var isReserved = checkReserved && _isReservedField(path, name_1);\r\n                        if (!isReserved && _theSanitizer && _theSanitizer.handleField(path, name_1)) {\r\n                            prop = _theSanitizer.value(path, name_1, srcValue, stringifyObjects);\r\n                        }\r\n                        else {\r\n                            prop = sanitizeProperty(name_1, srcValue, stringifyObjects);\r\n                        }\r\n                        if (prop) {\r\n                            // Set the value\r\n                            var newValue = prop.value;\r\n                            destObj[name_1] = newValue;\r\n                            if (metadataCallback) {\r\n                                metadataCallback(theMetaPathKeys, name_1, prop);\r\n                            }\r\n                            if (processSubKeys && typeof newValue === \"object\" && !isArray(newValue)) {\r\n                                var newPath = theMetaPathKeys;\r\n                                if (newPath) {\r\n                                    newPath = newPath.slice();\r\n                                    newPath.push(name_1);\r\n                                }\r\n                                // Make sure we process sub objects as well (for value sanitization and metadata)\r\n                                _processPathKeys(srcValue, newValue, path + \".\" + name_1, checkReserved, newPath, metadataCallback, processSubKeys);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for Serializer.prototype.createPayload.\r\n// Removed Stub for Serializer.prototype.appendPayload.\r\n// Removed Stub for Serializer.prototype.getEventBlob.\r\n// Removed Stub for Serializer.prototype.handleField.\r\n// Removed Stub for Serializer.prototype.getSanitizer.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    Serializer.__ieDyn=1;\n\n    return Serializer;\r\n}());\r\nexport { Serializer };\r\n/**\r\n * @ignore\r\n * @param getEncodedType - The function to get the encoded type for the property\r\n * @param json - The json object to add the metadata to\r\n * @param propKeys - The property keys to add to the metadata\r\n * @param name - The name of the property\r\n * @param propertyValue - The property value\r\n */\r\nfunction _addJSONPropertyMetaData(getEncodedType, json, propKeys, name, propertyValue) {\r\n    if (propertyValue && json) {\r\n        var encodedTypeValue = getEncodedType(propertyValue.value, propertyValue.kind, propertyValue.propertyType);\r\n        if (encodedTypeValue > -1) {\r\n            // Add the root metadata\r\n            var metaData = json[metadata];\r\n            if (!metaData) {\r\n                // Sets the root 'f'\r\n                metaData = json[metadata] = { f: {} };\r\n            }\r\n            var metaTarget = metaData[f];\r\n            if (!metaTarget) {\r\n                // This can occur if someone has manually added an ext.metadata object\r\n                // Such as ext.metadata.privLevel and ext.metadata.privTags\r\n                metaTarget = metaData[f] = {};\r\n            }\r\n            // Traverse the metadata path and build each object (contains an 'f' key) -- if required\r\n            if (propKeys) {\r\n                for (var lp = 0; lp < propKeys.length; lp++) {\r\n                    var key = propKeys[lp];\r\n                    if (!metaTarget[key]) {\r\n                        metaTarget[key] = { f: {} };\r\n                    }\r\n                    var newTarget = metaTarget[key][f];\r\n                    if (!newTarget) {\r\n                        // Not expected, but can occur if the metadata context was pre-created as part of the event\r\n                        newTarget = metaTarget[key][f] = {};\r\n                    }\r\n                    metaTarget = newTarget;\r\n                }\r\n            }\r\n            metaTarget = metaTarget[name] = {};\r\n            if (isArray(propertyValue.value)) {\r\n                metaTarget[\"a\"] = {\r\n                    t: encodedTypeValue\r\n                };\r\n            }\r\n            else {\r\n                metaTarget[\"t\"] = encodedTypeValue;\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Serializer.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nvar _a;\r\n/**\r\n* HttpManager.ts\r\n* @author Abhilash Panwar (abpanwar); Hector Hernandez (hectorh); Nev Wylie (newylie)\r\n* @copyright Microsoft 2018-2020\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { FullVersionString, SenderPostManager, _getAllResponseHeaders, _throwInternal, _warnToConsole, arrForEach, dateNow, doPerf, dumpObj, extend, getCommonSchemaMetaData, getNavigator, getResponseText, getTime, hasOwnProperty, isBeaconsSupported, isFetchSupported, isNullOrUndefined, isReactNative, isUndefined, isValueAssigned, objForEachKey, objKeys, onConfigChange, optimizeObject, prependTransports, strUndefined } from \"@microsoft/1ds-core-js\";\r\nimport { arrAppend } from \"@nevware21/ts-utils\";\r\nimport { ClockSkewManager } from \"./ClockSkewManager\";\r\nimport { EventBatch } from \"./EventBatch\";\r\nimport { DEFAULT_CACHE_CONTROL, DEFAULT_CONTENT_TYPE, STR_API_KEY, STR_AUTH_XTOKEN, STR_CACHE_CONTROL, STR_CLIENT_ID, STR_CLIENT_VERSION, STR_CONTENT_TYPE_HEADER, STR_DROPPED, STR_EMPTY, STR_KILL_DURATION_HEADER, STR_KILL_TOKENS_HEADER, STR_MSA_DEVICE_TICKET, STR_MSFPC, STR_NO_RESPONSE_BODY, STR_OTHER, STR_REQUEUE, STR_RESPONSE_FAIL, STR_SENDING, STR_TIME_DELTA_HEADER, STR_TIME_DELTA_TO_APPLY, STR_UPLOAD_TIME } from \"./InternalConstants\";\r\nimport { KillSwitch } from \"./KillSwitch\";\r\nimport { retryPolicyGetMillisToBackoffForRetry, retryPolicyShouldRetryForStatus } from \"./RetryPolicy\";\r\nimport { Serializer } from \"./Serializer\";\r\nimport { createTimeoutWrapper } from \"./TimeoutOverrideWrapper\";\r\nimport { _DYN_ADD_HEADER, _DYN_ADD_NO_RESPONSE, _DYN_ALLOW_REQUEST_SENDIN0, _DYN_ALWAYS_USE_XHR_OVERR7, _DYN_AVOID_OPTIONS, _DYN_BATCHES, _DYN_CAN_SEND_REQUEST, _DYN_CLEAR_TIMEOUT_OVERRI3, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_ONE_DSPAYLOAD, _DYN_CREATE_PAYLOAD, _DYN_DATA, _DYN_DISABLE_EVENT_TIMING5, _DYN_DISABLE_FETCH_KEEP_A6, _DYN_DISABLE_XHR_SYNC, _DYN_ENABLE_COMPOUND_KEY, _DYN_EVENTS, _DYN_EXCLUDE_CS_META_DATA, _DYN_FETCH_CREDENTIALS, _DYN_FIRST_REQUEST_SENT, _DYN_GET_CLOCK_SKEW_HEADE2, _DYN_GET_OFFLINE_REQUEST_9, _DYN_GET_WPARAM, _DYN_HDRS, _DYN_HEADERS, _DYN_INITIALIZE, _DYN_IS_BEACON, _DYN_IS_COMPLETELY_IDLE, _DYN_IS_SYNC, _DYN_IS_TEARDOWN, _DYN_I_KEY, _DYN_LENGTH, _DYN_OVERRIDE_ENDPOINT_UR4, _DYN_PAYLOAD_BLOB, _DYN_PAYLOAD_PREPROCESSOR, _DYN_PUSH, _DYN_RESUME, _DYN_SEND_QUEUED_REQUESTS, _DYN_SEND_SYNCHRONOUS_BAT10, _DYN_SEND_TYPE, _DYN_SERIALIZE_OFFLINE_EV8, _DYN_SET_CLOCK_SKEW, _DYN_SET_KILL_SWITCH_TENA11, _DYN_SET_TIMEOUT_OVERRIDE, _DYN_SET_UNLOADING, _DYN_SHOULD_ADD_CLOCK_SKE1, _DYN_SPLICE, _DYN_SPLIT, _DYN_STRINGIFY_OBJECTS, _DYN_TIMEOUT, _DYN_TIMINGS, _DYN_TO_LOWER_CASE, _DYN_UNLOAD_TRANSPORTS, _DYN_URL_STRING, _DYN_USE_HDRS, _DYN_USE_SEND_BEACON, _DYN__BACK_OFF_TRANSMISSI12, _DYN__SEND_REASON, _DYN__THE_PAYLOAD, _DYN__TRANSPORT } from \"./__DynamicConstants\";\r\nvar strSendAttempt = \"sendAttempt\";\r\nvar _noResponseQs = \"&\" + STR_NO_RESPONSE_BODY + \"=true\";\r\nvar UrlQueryString = \"?cors=true&\" + STR_CONTENT_TYPE_HEADER[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() + \"=\" + DEFAULT_CONTENT_TYPE;\r\n/**\r\n * Identifies the default notification reason to the action names\r\n */\r\nvar _eventActionMap = (_a = {},\r\n    _a[1 /* EventBatchNotificationReason.Paused */] = STR_REQUEUE,\r\n    _a[100 /* EventBatchNotificationReason.RequeueEvents */] = STR_REQUEUE,\r\n    _a[200 /* EventBatchNotificationReason.Complete */] = \"sent\",\r\n    _a[8004 /* EventBatchNotificationReason.KillSwitch */] = STR_DROPPED,\r\n    _a[8003 /* EventBatchNotificationReason.SizeLimitExceeded */] = STR_DROPPED,\r\n    _a);\r\nvar _collectorQsHeaders = {};\r\nvar _collectorHeaderToQs = {};\r\nfunction _addCollectorHeaderQsMapping(qsName, headerName, allowQs) {\r\n    _collectorQsHeaders[qsName] = headerName;\r\n    if (allowQs !== false) {\r\n        _collectorHeaderToQs[headerName] = qsName;\r\n    }\r\n}\r\n_addCollectorHeaderQsMapping(STR_MSA_DEVICE_TICKET, STR_MSA_DEVICE_TICKET, false);\r\n_addCollectorHeaderQsMapping(STR_CLIENT_VERSION, STR_CLIENT_VERSION);\r\n_addCollectorHeaderQsMapping(STR_CLIENT_ID, \"Client-Id\");\r\n_addCollectorHeaderQsMapping(STR_API_KEY, STR_API_KEY);\r\n_addCollectorHeaderQsMapping(STR_TIME_DELTA_TO_APPLY, STR_TIME_DELTA_TO_APPLY);\r\n_addCollectorHeaderQsMapping(STR_UPLOAD_TIME, STR_UPLOAD_TIME);\r\n_addCollectorHeaderQsMapping(STR_AUTH_XTOKEN, STR_AUTH_XTOKEN);\r\nfunction _hasHeader(headers, header) {\r\n    var hasHeader = false;\r\n    if (headers && header) {\r\n        var keys = objKeys(headers);\r\n        if (keys && keys[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            var lowerHeader = header[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]();\r\n            for (var lp = 0; lp < keys[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                var value = keys[lp];\r\n                if (value && hasOwnProperty(header, value) &&\r\n                    value[_DYN_TO_LOWER_CASE /* @min:%2etoLowerCase */]() === lowerHeader) {\r\n                    hasHeader = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return hasHeader;\r\n}\r\nfunction _addRequestDetails(details, name, value, useHeaders) {\r\n    if (name && value && value[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n        if (useHeaders && _collectorQsHeaders[name]) {\r\n            details[_DYN_HDRS /* @min:%2ehdrs */][_collectorQsHeaders[name]] = value;\r\n            details[_DYN_USE_HDRS /* @min:%2euseHdrs */] = true;\r\n        }\r\n        else {\r\n            details.url += \"&\" + name + \"=\" + value;\r\n        }\r\n    }\r\n}\r\nfunction _addQueryStringParameter(qsParams, name, value) {\r\n    for (var i = 0; i < qsParams[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        if (qsParams[i].name === name) {\r\n            qsParams[i].value = value;\r\n            return;\r\n        }\r\n    }\r\n    qsParams[_DYN_PUSH /* @min:%2epush */]({ name: name, value: value });\r\n}\r\nfunction _removeQueryStringParameter(qsParams, name) {\r\n    for (var i = 0; i < qsParams[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n        if (qsParams[i].name === name) {\r\n            qsParams[_DYN_SPLICE /* @min:%2esplice */](i, 1);\r\n            return;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Class managing the sending of requests.\r\n */\r\nvar HttpManager = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * @param requestQueue   - The queue that contains the requests to be sent.\r\n     */\r\n    function HttpManager(maxEventsPerBatch, maxConnections, maxRequestRetriesBeforeBackoff, actions) {\r\n        // ------------------------------------------------------------------------------------------------------------------------\r\n        // Only set \"Default\" values in the _initDefaults() method, unless value are not \"reset\" during unloading\r\n        // ------------------------------------------------------------------------------------------------------------------------\r\n        var _urlString;\r\n        var _killSwitch;\r\n        var _paused;\r\n        var _clockSkewManager;\r\n        var _useBeacons = false;\r\n        var _outstandingRequests; // Holds the number of outstanding async requests that have not returned a response yet\r\n        var _postManager;\r\n        var _logger;\r\n        var _sendInterfaces;\r\n        var _core;\r\n        var _customHttpInterface;\r\n        var _queryStringParameters;\r\n        var _headers;\r\n        var _batchQueue;\r\n        var _serializer;\r\n        var _enableEventTimings;\r\n        var _cookieMgr;\r\n        var _isUnloading;\r\n        var _useHeaders;\r\n        var _xhrTimeout;\r\n        var _disableXhrSync;\r\n        var _disableFetchKeepAlive;\r\n        var _canHaveReducedPayload;\r\n        var _addNoResponse;\r\n        var _unloadHooks;\r\n        var _sendHook;\r\n        var _sendListener;\r\n        var _responseHandlers;\r\n        var _isInitialized;\r\n        var _timeoutWrapper;\r\n        var _excludeCsMetaData;\r\n        var _sendPostMgr;\r\n        var _fetchCredentials;\r\n        dynamicProto(HttpManager, this, function (_self) {\r\n            _initDefaults();\r\n            var _sendCredentials = true;\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (theConfig, core, postChannel) {\r\n                if (!_isInitialized) {\r\n                    _core = core;\r\n                    _cookieMgr = core.getCookieMgr();\r\n                    _postManager = postChannel;\r\n                    _logger = _postManager.diagLog();\r\n                    arrAppend(_unloadHooks, onConfigChange(theConfig, function (details) {\r\n                        var _a;\r\n                        var coreConfig = details.cfg;\r\n                        var channelConfig = details.cfg.extensionConfig[postChannel.identifier];\r\n                        _timeoutWrapper = createTimeoutWrapper(channelConfig[_DYN_SET_TIMEOUT_OVERRIDE /* @min:%2esetTimeoutOverride */], channelConfig[_DYN_CLEAR_TIMEOUT_OVERRI3 /* @min:%2eclearTimeoutOverride */]);\r\n                        if (isValueAssigned(coreConfig.anonCookieName)) {\r\n                            _addQueryStringParameter(_queryStringParameters, \"anoncknm\", coreConfig.anonCookieName);\r\n                        }\r\n                        else {\r\n                            _removeQueryStringParameter(_queryStringParameters, \"anoncknm\");\r\n                        }\r\n                        _sendHook = channelConfig[_DYN_PAYLOAD_PREPROCESSOR /* @min:%2epayloadPreprocessor */];\r\n                        _sendListener = channelConfig.payloadListener;\r\n                        var httpInterface = channelConfig.httpXHROverride;\r\n                        // Override endpointUrl if provided in Post config\r\n                        var endpointUrl = channelConfig[_DYN_OVERRIDE_ENDPOINT_UR4 /* @min:%2eoverrideEndpointUrl */] ? channelConfig[_DYN_OVERRIDE_ENDPOINT_UR4 /* @min:%2eoverrideEndpointUrl */] : coreConfig.endpointUrl;\r\n                        _urlString = endpointUrl + UrlQueryString;\r\n                        _useHeaders = !isUndefined(channelConfig[_DYN_AVOID_OPTIONS /* @min:%2eavoidOptions */]) ? !channelConfig[_DYN_AVOID_OPTIONS /* @min:%2eavoidOptions */] : true;\r\n                        _enableEventTimings = !channelConfig[_DYN_DISABLE_EVENT_TIMING5 /* @min:%2edisableEventTimings */];\r\n                        var valueSanitizer = channelConfig.valueSanitizer;\r\n                        var stringifyObjects = channelConfig[_DYN_STRINGIFY_OBJECTS /* @min:%2estringifyObjects */];\r\n                        var enableCompoundKey = !!coreConfig[_DYN_ENABLE_COMPOUND_KEY /* @min:%2eenableCompoundKey */];\r\n                        if (!isUndefined(channelConfig[_DYN_ENABLE_COMPOUND_KEY /* @min:%2eenableCompoundKey */])) {\r\n                            enableCompoundKey = !!channelConfig[_DYN_ENABLE_COMPOUND_KEY /* @min:%2eenableCompoundKey */];\r\n                        }\r\n                        _xhrTimeout = channelConfig.xhrTimeout;\r\n                        _disableXhrSync = !!channelConfig[_DYN_DISABLE_XHR_SYNC /* @min:%2edisableXhrSync */];\r\n                        _disableFetchKeepAlive = !!channelConfig[_DYN_DISABLE_FETCH_KEEP_A6 /* @min:%2edisableFetchKeepAlive */];\r\n                        _addNoResponse = channelConfig[_DYN_ADD_NO_RESPONSE /* @min:%2eaddNoResponse */] !== false;\r\n                        _excludeCsMetaData = !!channelConfig[_DYN_EXCLUDE_CS_META_DATA /* @min:%2eexcludeCsMetaData */];\r\n                        if (!!core.getPlugin(\"LocalStorage\")) {\r\n                            // Always disable fetch keep alive when persisten storage is available\r\n                            _disableFetchKeepAlive = true;\r\n                        }\r\n                        _useBeacons = !isReactNative(); // Only use beacons if not running in React Native\r\n                        _serializer = new Serializer(_core, valueSanitizer, stringifyObjects, enableCompoundKey, getCommonSchemaMetaData, _excludeCsMetaData);\r\n                        if (!isNullOrUndefined(channelConfig[_DYN_USE_SEND_BEACON /* @min:%2euseSendBeacon */])) {\r\n                            _useBeacons = !!channelConfig[_DYN_USE_SEND_BEACON /* @min:%2euseSendBeacon */];\r\n                        }\r\n                        if (channelConfig[_DYN_FETCH_CREDENTIALS /* @min:%2efetchCredentials */]) {\r\n                            _fetchCredentials = channelConfig[_DYN_FETCH_CREDENTIALS /* @min:%2efetchCredentials */];\r\n                        }\r\n                        var sendPostConfig = _getSendPostMgrConfig();\r\n                        // only init it once\r\n                        if (!_sendPostMgr) {\r\n                            _sendPostMgr = new SenderPostManager();\r\n                            _sendPostMgr[_DYN_INITIALIZE /* @min:%2einitialize */](sendPostConfig, _logger);\r\n                        }\r\n                        else {\r\n                            _sendPostMgr.SetConfig(sendPostConfig);\r\n                        }\r\n                        var syncHttpInterface = httpInterface;\r\n                        var beaconHttpInterface = channelConfig[_DYN_ALWAYS_USE_XHR_OVERR7 /* @min:%2ealwaysUseXhrOverride */] ? httpInterface : null;\r\n                        var fetchSyncHttpInterface = channelConfig[_DYN_ALWAYS_USE_XHR_OVERR7 /* @min:%2ealwaysUseXhrOverride */] ? httpInterface : null;\r\n                        var beaconUnloadTransports = [3 /* TransportType.Beacon */, 2 /* TransportType.Fetch */];\r\n                        if (!httpInterface) {\r\n                            _customHttpInterface = false;\r\n                            // this is handled in SendPostManager now\r\n                            // let location = getLocation();\r\n                            // if (location && location.protocol && location.protocol.toLowerCase() === \"file:\") {\r\n                            //     // Special case where a local html file fails with a CORS error on Chromium browsers\r\n                            //     _sendCredentials = false;\r\n                            // }\r\n                            var theTransports = [];\r\n                            if (isReactNative()) {\r\n                                // Use Fetch or XDR/XHR\r\n                                theTransports = [2 /* TransportType.Fetch */, 1 /* TransportType.Xhr */];\r\n                                beaconUnloadTransports = [2 /* TransportType.Fetch */, 1 /* TransportType.Xhr */, 3 /* TransportType.Beacon */];\r\n                            }\r\n                            else {\r\n                                // Use XDR/XHR, Fetch or beacons\r\n                                theTransports = [1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */, 3 /* TransportType.Beacon */];\r\n                            }\r\n                            // Prefix any user requested transport(s) values\r\n                            theTransports = prependTransports(theTransports, channelConfig.transports);\r\n                            httpInterface = _getSenderInterface(theTransports, false);\r\n                            if (!httpInterface) {\r\n                                _warnToConsole(_logger, \"No available transport to send events\");\r\n                            }\r\n                            syncHttpInterface = _getSenderInterface(theTransports, true);\r\n                        }\r\n                        if (!beaconHttpInterface) {\r\n                            // Allow overriding the usage of sendBeacon\r\n                            beaconUnloadTransports = prependTransports(beaconUnloadTransports, channelConfig[_DYN_UNLOAD_TRANSPORTS /* @min:%2eunloadTransports */]);\r\n                            beaconHttpInterface = _getSenderInterface(beaconUnloadTransports, true);\r\n                        }\r\n                        _canHaveReducedPayload = !_customHttpInterface && ((_useBeacons && isBeaconsSupported()) || (!_disableFetchKeepAlive && isFetchSupported(true)));\r\n                        _sendInterfaces = (_a = {},\r\n                            _a[0 /* EventSendType.Batched */] = httpInterface,\r\n                            _a[1 /* EventSendType.Synchronous */] = syncHttpInterface || _getSenderInterface([1 /* TransportType.Xhr */, 2 /* TransportType.Fetch */, 3 /* TransportType.Beacon */], true),\r\n                            _a[2 /* EventSendType.SendBeacon */] = beaconHttpInterface || syncHttpInterface || _getSenderInterface([1 /* TransportType.Xhr */], true),\r\n                            _a[3 /* EventSendType.SyncFetch */] = fetchSyncHttpInterface || _getSenderInterface([2 /* TransportType.Fetch */, 3 /* TransportType.Beacon */], true) || syncHttpInterface || _getSenderInterface([1 /* TransportType.Xhr */], true),\r\n                            _a);\r\n                    }));\r\n                    _isInitialized = true;\r\n                }\r\n            };\r\n            _self.addResponseHandler = function (responseHandler) {\r\n                _responseHandlers[_DYN_PUSH /* @min:%2epush */](responseHandler);\r\n                return {\r\n                    rm: function () {\r\n                        var index = _responseHandlers.indexOf(responseHandler);\r\n                        if (index >= 0) {\r\n                            _responseHandlers[_DYN_SPLICE /* @min:%2esplice */](index, 1);\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n            _self[_DYN_SERIALIZE_OFFLINE_EV8 /* @min:%2eserializeOfflineEvt */] = function (evt) {\r\n                try {\r\n                    if (_serializer) {\r\n                        return _serializer.getEventBlob(evt);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return STR_EMPTY;\r\n            };\r\n            _self[_DYN_GET_OFFLINE_REQUEST_9 /* @min:%2egetOfflineRequestDetails */] = function () {\r\n                try {\r\n                    // get current url without paramter\r\n                    var payload = _serializer && _serializer[_DYN_CREATE_PAYLOAD /* @min:%2ecreatePayload */](0, false, false, false, 1 /* SendRequestReason.NormalSchedule */, 0 /* EventSendType.Batched */);\r\n                    return _buildRequestDetails(payload, _useHeaders);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            };\r\n            _self[_DYN_CREATE_ONE_DSPAYLOAD /* @min:%2ecreateOneDSPayload */] = function (evts, optimize) {\r\n                try {\r\n                    // TODO: optimize\r\n                    var theBatches_1 = [];\r\n                    // create a eventBatch for each event\r\n                    arrForEach(evts, function (evt) {\r\n                        if (optimize) {\r\n                            evt = optimizeObject(evt);\r\n                        }\r\n                        var batch = EventBatch.create(evt[_DYN_I_KEY /* @min:%2eiKey */], [evt]);\r\n                        theBatches_1[_DYN_PUSH /* @min:%2epush */](batch);\r\n                    });\r\n                    var thePayload = null;\r\n                    while (theBatches_1[_DYN_LENGTH /* @min:%2elength */] > 0 && _serializer) {\r\n                        var theBatch = theBatches_1.shift();\r\n                        if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                            thePayload = thePayload || _serializer[_DYN_CREATE_PAYLOAD /* @min:%2ecreatePayload */](0, false, false, false, 1 /* SendRequestReason.NormalSchedule */, 0 /* EventSendType.Batched */);\r\n                            _serializer.appendPayload(thePayload, theBatch, maxEventsPerBatch);\r\n                        }\r\n                    }\r\n                    var requestDetails = _buildRequestDetails(thePayload, _useHeaders);\r\n                    var payloadData = {\r\n                        data: thePayload[_DYN_PAYLOAD_BLOB /* @min:%2epayloadBlob */],\r\n                        urlString: requestDetails.url,\r\n                        headers: requestDetails[_DYN_HDRS /* @min:%2ehdrs */],\r\n                        timeout: _xhrTimeout,\r\n                        disableXhrSync: _disableXhrSync,\r\n                        disableFetchKeepAlive: _disableFetchKeepAlive\r\n                    };\r\n                    // Only automatically add the following headers if already sending headers and we are not attempting to avoid an options call\r\n                    if (_useHeaders) {\r\n                        if (!_hasHeader(payloadData[_DYN_HEADERS /* @min:%2eheaders */], STR_CACHE_CONTROL)) {\r\n                            payloadData[_DYN_HEADERS /* @min:%2eheaders */][STR_CACHE_CONTROL] = DEFAULT_CACHE_CONTROL;\r\n                        }\r\n                        if (!_hasHeader(payloadData[_DYN_HEADERS /* @min:%2eheaders */], STR_CONTENT_TYPE_HEADER)) {\r\n                            payloadData[_DYN_HEADERS /* @min:%2eheaders */][STR_CONTENT_TYPE_HEADER] = DEFAULT_CONTENT_TYPE;\r\n                        }\r\n                    }\r\n                    return payloadData;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            };\r\n            // Special internal method to allow the DebugPlugin to hook embedded objects\r\n            function _getSenderInterface(transports, syncSupport) {\r\n                try {\r\n                    return _sendPostMgr && _sendPostMgr.getSenderInst(transports, syncSupport);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_sendInterfaces[0 /* EventSendType.Batched */], _killSwitch, _serializer, _sendInterfaces, _getSendPostMgrConfig(), _urlString];\r\n            };\r\n            function _getSendPostMgrConfig() {\r\n                try {\r\n                    var onCompleteFuncs = {\r\n                        xdrOnComplete: _xdrOncomplete,\r\n                        fetchOnComplete: _fetchOnComplete,\r\n                        xhrOnComplete: _xhrOnComplete,\r\n                        beaconOnRetry: _onBeaconRetry\r\n                    };\r\n                    var config = {\r\n                        enableSendPromise: false,\r\n                        isOneDs: true,\r\n                        disableCredentials: !_sendCredentials,\r\n                        fetchCredentials: _fetchCredentials,\r\n                        disableXhr: false,\r\n                        disableBeacon: !_useBeacons,\r\n                        disableBeaconSync: !_useBeacons,\r\n                        disableFetchKeepAlive: _disableFetchKeepAlive,\r\n                        timeWrapper: _timeoutWrapper,\r\n                        addNoResponse: _addNoResponse,\r\n                        senderOnCompleteCallBack: onCompleteFuncs\r\n                    };\r\n                    return config;\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            }\r\n            function _xdrOncomplete(xdr, oncomplete, payload) {\r\n                var response = getResponseText(xdr);\r\n                _doOnComplete(oncomplete, 200, {}, response);\r\n                _handleCollectorResponse(response);\r\n            }\r\n            function _initDefaults() {\r\n                var undefValue;\r\n                _urlString = null;\r\n                _killSwitch = new KillSwitch();\r\n                _paused = false;\r\n                _clockSkewManager = new ClockSkewManager();\r\n                _useBeacons = false;\r\n                _outstandingRequests = 0; // Holds the number of outstanding async requests that have not returned a response yet\r\n                _postManager = null;\r\n                _logger = null;\r\n                _sendInterfaces = null;\r\n                _core = null;\r\n                _customHttpInterface = true;\r\n                _queryStringParameters = [];\r\n                _headers = {};\r\n                _batchQueue = [];\r\n                _serializer = null;\r\n                _enableEventTimings = false;\r\n                _cookieMgr = null;\r\n                _isUnloading = false;\r\n                _useHeaders = false;\r\n                _xhrTimeout = undefValue;\r\n                _disableXhrSync = undefValue;\r\n                _disableFetchKeepAlive = undefValue;\r\n                _canHaveReducedPayload = undefValue;\r\n                _addNoResponse = undefValue;\r\n                _unloadHooks = [];\r\n                _sendHook = undefValue;\r\n                _sendListener = undefValue;\r\n                _responseHandlers = [];\r\n                _isInitialized = false;\r\n                _timeoutWrapper = createTimeoutWrapper();\r\n                _excludeCsMetaData = false;\r\n                _sendPostMgr = null;\r\n            }\r\n            function _fetchOnComplete(response, onComplete, resValue, payload) {\r\n                var handleResponse = function (status, headerMap, responseText) {\r\n                    _doOnComplete(onComplete, status, headerMap, responseText);\r\n                    _handleCollectorResponse(responseText);\r\n                };\r\n                var headerMap = {};\r\n                var headers = response[_DYN_HEADERS /* @min:%2eheaders */];\r\n                if (headers) {\r\n                    headers[\"forEach\"](function (value, name) {\r\n                        headerMap[name] = value;\r\n                    });\r\n                }\r\n                handleResponse(response.status, headerMap, resValue || STR_EMPTY);\r\n            }\r\n            function _xhrOnComplete(request, oncomplete, payload) {\r\n                var response = getResponseText(request);\r\n                _doOnComplete(oncomplete, request.status, _getAllResponseHeaders(request, true), response);\r\n                _handleCollectorResponse(response);\r\n            }\r\n            function _doOnComplete(oncomplete, status, headers, response) {\r\n                try {\r\n                    oncomplete(status, headers, response);\r\n                }\r\n                catch (e) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 518 /* _eExtendedInternalMessageId.SendPostOnCompleteFailure */, dumpObj(e));\r\n                }\r\n            }\r\n            function _onBeaconRetry(payload, onComplete, canSend) {\r\n                // Custom headers not supported in sendBeacon payload.headers would be ignored\r\n                var internalPayloadData = payload;\r\n                var status = 200;\r\n                var thePayload = internalPayloadData[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */];\r\n                var theUrl = payload[_DYN_URL_STRING /* @min:%2eurlString */] + (_addNoResponse ? _noResponseQs : STR_EMPTY);\r\n                try {\r\n                    var nav_1 = getNavigator();\r\n                    if (thePayload) {\r\n                        var persistStorage = !!_core.getPlugin(\"LocalStorage\");\r\n                        // Failed to send entire payload so try and split data and try to send as much events as possible\r\n                        var droppedBatches_1 = [];\r\n                        var sentBatches_1 = [];\r\n                        arrForEach(thePayload[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                            if (droppedBatches_1 && theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                var theEvents = theBatch[_DYN_EVENTS /* @min:%2eevents */]();\r\n                                for (var lp = 0; lp < theEvents[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                                    if (!nav_1.sendBeacon(theUrl, _serializer.getEventBlob(theEvents[lp]))) {\r\n                                        // Can't send anymore, so split the batch and drop the rest\r\n                                        droppedBatches_1[_DYN_PUSH /* @min:%2epush */](theBatch[_DYN_SPLIT /* @min:%2esplit */](lp));\r\n                                        break;\r\n                                    }\r\n                                    else {\r\n                                        sentBatches_1[_DYN_PUSH /* @min:%2epush */](theBatch[lp]);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                // Remove all of the events from the existing batch in the payload as the copy includes the original\r\n                                droppedBatches_1[_DYN_PUSH /* @min:%2epush */](theBatch[_DYN_SPLIT /* @min:%2esplit */](0));\r\n                            }\r\n                        });\r\n                        if (sentBatches_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                            // Update the payload with the sent batches\r\n                            thePayload.sentEvts = sentBatches_1;\r\n                        }\r\n                        if (!persistStorage) {\r\n                            _sendBatchesNotification(droppedBatches_1, 8003 /* EventBatchNotificationReason.SizeLimitExceeded */, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        status = 0;\r\n                    }\r\n                }\r\n                catch (ex) {\r\n                    _warnToConsole(_logger, \"Failed to send telemetry using sendBeacon API. Ex:\" + dumpObj(ex));\r\n                    status = 0;\r\n                }\r\n                finally {\r\n                    _doOnComplete(onComplete, status, {}, STR_EMPTY);\r\n                }\r\n            }\r\n            function _isBeaconPayload(sendType) {\r\n                // Sync Fetch has the same payload limitation as sendBeacon -- 64kb limit, so treat both as a beacon send\r\n                return sendType === 2 /* EventSendType.SendBeacon */ || sendType === 3 /* EventSendType.SyncFetch */;\r\n            }\r\n            function _adjustSendType(sendType) {\r\n                if (_isUnloading && _isBeaconPayload(sendType)) {\r\n                    sendType = 2 /* EventSendType.SendBeacon */;\r\n                }\r\n                return sendType;\r\n            }\r\n            _self[_DYN_ADD_HEADER /* @min:%2eaddHeader */] = function (name, value) {\r\n                _headers[name] = value;\r\n            };\r\n            _self.removeHeader = function (name) {\r\n                delete _headers[name];\r\n            };\r\n            _self[_DYN_CAN_SEND_REQUEST /* @min:%2ecanSendRequest */] = function () {\r\n                return _hasIdleConnection() && _clockSkewManager[_DYN_ALLOW_REQUEST_SENDIN0 /* @min:%2eallowRequestSending */]();\r\n            };\r\n            _self[_DYN_SEND_QUEUED_REQUESTS /* @min:%2esendQueuedRequests */] = function (sendType, sendReason) {\r\n                if (isUndefined(sendType)) {\r\n                    sendType = 0 /* EventSendType.Batched */;\r\n                }\r\n                if (_isUnloading) {\r\n                    sendType = _adjustSendType(sendType);\r\n                    sendReason = 2 /* SendRequestReason.Unload */;\r\n                }\r\n                if (_canSendPayload(_batchQueue, sendType, 0)) {\r\n                    _sendBatches(_clearQueue(), 0, false, sendType, sendReason || 0 /* SendRequestReason.Undefined */);\r\n                }\r\n            };\r\n            _self[_DYN_IS_COMPLETELY_IDLE /* @min:%2eisCompletelyIdle */] = function () {\r\n                return !_paused && _outstandingRequests === 0 && _batchQueue[_DYN_LENGTH /* @min:%2elength */] === 0;\r\n            };\r\n            _self[_DYN_SET_UNLOADING /* @min:%2esetUnloading */] = function (value) {\r\n                _isUnloading = value;\r\n            };\r\n            _self.addBatch = function (theBatch) {\r\n                if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                    // Try and kill the event faster\r\n                    if (_killSwitch.isTenantKilled(theBatch[_DYN_I_KEY /* @min:%2eiKey */]())) {\r\n                        return false;\r\n                    }\r\n                    _batchQueue[_DYN_PUSH /* @min:%2epush */](theBatch);\r\n                }\r\n                return true;\r\n            };\r\n            /**\r\n             * Queue all the remaining requests to be sent. The requests will be\r\n             * sent using HTML5 Beacons if they are available.\r\n             */\r\n            _self.teardown = function () {\r\n                if (_batchQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _sendBatches(_clearQueue(), 0, true, 2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                }\r\n                arrForEach(_unloadHooks, function (hook) {\r\n                    hook && hook.rm && hook.rm();\r\n                });\r\n                _unloadHooks = [];\r\n            };\r\n            /**\r\n             * Pause the sending of requests. No new requests will be sent.\r\n             */\r\n            _self.pause = function () {\r\n                _paused = true;\r\n            };\r\n            /**\r\n             * Resume the sending of requests.\r\n             */\r\n            _self[_DYN_RESUME /* @min:%2eresume */] = function () {\r\n                _paused = false;\r\n                _self[_DYN_SEND_QUEUED_REQUESTS /* @min:%2esendQueuedRequests */](0 /* EventSendType.Batched */, 4 /* SendRequestReason.Resumed */);\r\n            };\r\n            /**\r\n             * Sends a request synchronously to the Aria collector. This api is used to send\r\n             * a request containing a single immediate event.\r\n             *\r\n             * @param batch - The request to be sent.\r\n             * @param sendReason   - The token used to send the request.\r\n             */\r\n            _self[_DYN_SEND_SYNCHRONOUS_BAT10 /* @min:%2esendSynchronousBatch */] = function (batch, sendType, sendReason) {\r\n                // This will not take into account the max connections restriction. Since this is sync, we can\r\n                // only send one of this request at a time and thus should not worry about multiple connections\r\n                // being used to send synchronous events.\r\n                // Increment active connection since we are still going to use a connection to send the request.\r\n                if (batch && batch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                    if (isNullOrUndefined(sendType)) {\r\n                        sendType = 1 /* EventSendType.Synchronous */;\r\n                    }\r\n                    if (_isUnloading) {\r\n                        sendType = _adjustSendType(sendType);\r\n                        sendReason = 2 /* SendRequestReason.Unload */;\r\n                    }\r\n                    // For sync requests we will not wait for the clock skew.\r\n                    _sendBatches([batch], 0, false, sendType, sendReason || 0 /* SendRequestReason.Undefined */);\r\n                }\r\n            };\r\n            function _hasIdleConnection() {\r\n                return !_paused && _outstandingRequests < maxConnections;\r\n            }\r\n            function _clearQueue() {\r\n                var theQueue = _batchQueue;\r\n                _batchQueue = [];\r\n                return theQueue;\r\n            }\r\n            function _canSendPayload(theBatches, sendType, retryCnt) {\r\n                var result = false;\r\n                if (theBatches && theBatches[_DYN_LENGTH /* @min:%2elength */] > 0 && !_paused && _sendInterfaces[sendType] && _serializer) {\r\n                    // Always attempt to send synchronous events don't wait for idle or clockSkew\r\n                    // and don't block retry requests if clockSkew is not yet set\r\n                    result = (sendType !== 0 /* EventSendType.Batched */) || (_hasIdleConnection() && (retryCnt > 0 || _clockSkewManager[_DYN_ALLOW_REQUEST_SENDIN0 /* @min:%2eallowRequestSending */]()));\r\n                }\r\n                return result;\r\n            }\r\n            function _createDebugBatches(theBatches) {\r\n                var values = {};\r\n                if (theBatches) {\r\n                    arrForEach(theBatches, function (theBatch, idx) {\r\n                        values[idx] = {\r\n                            iKey: theBatch[_DYN_I_KEY /* @min:%2eiKey */](),\r\n                            evts: theBatch[_DYN_EVENTS /* @min:%2eevents */]()\r\n                        };\r\n                    });\r\n                }\r\n                return values;\r\n            }\r\n            function _sendBatches(theBatches, retryCount, isTeardown, sendType, sendReason) {\r\n                if (!theBatches || theBatches[_DYN_LENGTH /* @min:%2elength */] === 0) {\r\n                    // Nothing to do\r\n                    return;\r\n                }\r\n                if (_paused) {\r\n                    _sendBatchesNotification(theBatches, 1 /* EventBatchNotificationReason.Paused */, sendType);\r\n                    return;\r\n                }\r\n                // Make sure that if we are unloading the sendType is a supported version\r\n                sendType = _adjustSendType(sendType);\r\n                try {\r\n                    var orgBatches_1 = theBatches;\r\n                    var isSynchronous_1 = sendType !== 0 /* EventSendType.Batched */;\r\n                    doPerf(_core, function () { return \"HttpManager:_sendBatches\"; }, function (perfEvt) {\r\n                        if (perfEvt) {\r\n                            // Perf Monitoring is enabled, so create a \"Quick\" copy of the original batches so we still report\r\n                            // the original values as part of the perfEvent. This is because theBatches uses .shift() to remove each\r\n                            // batch as they are processed - removing from the original array, so by the time the _createDebugBatches()\r\n                            // function is called the passed in value has changed and therefore the reported value for the perfEvent is incorrect\r\n                            theBatches = theBatches.slice(0);\r\n                        }\r\n                        var droppedBatches = [];\r\n                        var thePayload = null;\r\n                        var serializationStart = getTime();\r\n                        var sendInterface = _sendInterfaces[sendType] || (isSynchronous_1 ? _sendInterfaces[1 /* EventSendType.Synchronous */] : _sendInterfaces[0 /* EventSendType.Batched */]);\r\n                        var sendTransport = sendInterface && sendInterface[_DYN__TRANSPORT /* @min:%2e_transport */];\r\n                        // Sync Fetch has the same payload limitation as sendBeacon -- 64kb limit\r\n                        var isReducedPayload = _canHaveReducedPayload && (_isUnloading || _isBeaconPayload(sendType) || (sendTransport === 3 /* TransportType.Beacon */ || (sendInterface._isSync && sendTransport === 2 /* TransportType.Fetch */)));\r\n                        while (_canSendPayload(theBatches, sendType, retryCount)) {\r\n                            var theBatch = theBatches.shift();\r\n                            if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                                if (!_killSwitch.isTenantKilled(theBatch[_DYN_I_KEY /* @min:%2eiKey */]())) {\r\n                                    // Make sure we have a payload object\r\n                                    thePayload = thePayload || _serializer[_DYN_CREATE_PAYLOAD /* @min:%2ecreatePayload */](retryCount, isTeardown, isSynchronous_1, isReducedPayload, sendReason, sendType);\r\n                                    // Add the batch to the current payload\r\n                                    if (!_serializer.appendPayload(thePayload, theBatch, maxEventsPerBatch)) {\r\n                                        // Entire batch was not added so send the payload and retry adding this batch\r\n                                        _doPayloadSend(thePayload, serializationStart, getTime(), sendReason);\r\n                                        serializationStart = getTime();\r\n                                        theBatches = [theBatch][_DYN_CONCAT /* @min:%2econcat */](theBatches);\r\n                                        thePayload = null;\r\n                                    }\r\n                                    else if (thePayload.overflow !== null) {\r\n                                        // Total Payload size was exceeded so send the payload and add the unsent as the next batch to send\r\n                                        theBatches = [thePayload.overflow][_DYN_CONCAT /* @min:%2econcat */](theBatches);\r\n                                        thePayload.overflow = null;\r\n                                        _doPayloadSend(thePayload, serializationStart, getTime(), sendReason);\r\n                                        serializationStart = getTime();\r\n                                        thePayload = null;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    droppedBatches[_DYN_PUSH /* @min:%2epush */](theBatch);\r\n                                }\r\n                            }\r\n                        }\r\n                        // Make sure to flush any remaining payload\r\n                        if (thePayload) {\r\n                            _doPayloadSend(thePayload, serializationStart, getTime(), sendReason);\r\n                        }\r\n                        if (theBatches[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                            // Add any unsent batches back to the head of the queue\r\n                            _batchQueue = theBatches[_DYN_CONCAT /* @min:%2econcat */](_batchQueue);\r\n                        }\r\n                        // Now send notification about any dropped events\r\n                        _sendBatchesNotification(droppedBatches, 8004 /* EventBatchNotificationReason.KillSwitch */, sendType);\r\n                    }, function () { return ({ batches: _createDebugBatches(orgBatches_1), retryCount: retryCount, isTeardown: isTeardown, isSynchronous: isSynchronous_1, sendReason: sendReason, useSendBeacon: _isBeaconPayload(sendType), sendType: sendType }); }, !isSynchronous_1);\r\n                }\r\n                catch (ex) {\r\n                    _throwInternal(_logger, 2 /* eLoggingSeverity.WARNING */, 48 /* _eInternalMessageId.CannotSerializeObject */, \"Unexpected Exception sending batch: \" + dumpObj(ex));\r\n                }\r\n            }\r\n            function _buildRequestDetails(thePayload, useHeaders) {\r\n                var requestDetails = {\r\n                    url: _urlString,\r\n                    hdrs: {},\r\n                    useHdrs: false // Assume no headers\r\n                };\r\n                if (!useHeaders) {\r\n                    // Attempt to map headers to a query string if possible\r\n                    objForEachKey(_headers, function (name, value) {\r\n                        if (_collectorHeaderToQs[name]) {\r\n                            _addRequestDetails(requestDetails, _collectorHeaderToQs[name], value, false);\r\n                        }\r\n                        else {\r\n                            // No mapping, so just include in the headers anyway (may not get sent if using sendBeacon())\r\n                            requestDetails[_DYN_HDRS /* @min:%2ehdrs */][name] = value;\r\n                            requestDetails[_DYN_USE_HDRS /* @min:%2euseHdrs */] = true;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    // Copy the pre-defined headers into the payload headers\r\n                    requestDetails[_DYN_HDRS /* @min:%2ehdrs */] = extend(requestDetails[_DYN_HDRS /* @min:%2ehdrs */], _headers);\r\n                    requestDetails.useHdrs = (objKeys(requestDetails.hdrs)[_DYN_LENGTH /* @min:%2elength */] > 0);\r\n                }\r\n                _addRequestDetails(requestDetails, STR_CLIENT_ID, \"NO_AUTH\", useHeaders);\r\n                _addRequestDetails(requestDetails, STR_CLIENT_VERSION, FullVersionString, useHeaders);\r\n                var apiQsKeys = STR_EMPTY;\r\n                arrForEach(thePayload.apiKeys, function (apiKey) {\r\n                    if (apiQsKeys[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        apiQsKeys += \",\";\r\n                    }\r\n                    apiQsKeys += apiKey;\r\n                });\r\n                _addRequestDetails(requestDetails, STR_API_KEY, apiQsKeys, useHeaders);\r\n                _addRequestDetails(requestDetails, STR_UPLOAD_TIME, dateNow().toString(), useHeaders);\r\n                var msfpc = _getMsfpc(thePayload);\r\n                if (isValueAssigned(msfpc)) {\r\n                    requestDetails.url += \"&ext.intweb.msfpc=\" + msfpc;\r\n                }\r\n                if (_clockSkewManager[_DYN_SHOULD_ADD_CLOCK_SKE1 /* @min:%2eshouldAddClockSkewHeaders */]()) {\r\n                    _addRequestDetails(requestDetails, STR_TIME_DELTA_TO_APPLY, _clockSkewManager[_DYN_GET_CLOCK_SKEW_HEADE2 /* @min:%2egetClockSkewHeaderValue */](), useHeaders);\r\n                }\r\n                if (_core[_DYN_GET_WPARAM /* @min:%2egetWParam */]) {\r\n                    var wParam = _core[_DYN_GET_WPARAM /* @min:%2egetWParam */]();\r\n                    if (wParam >= 0) {\r\n                        requestDetails.url += \"&w=\" + wParam;\r\n                    }\r\n                }\r\n                for (var i = 0; i < _queryStringParameters[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                    requestDetails.url += \"&\" + _queryStringParameters[i].name + \"=\" + _queryStringParameters[i].value;\r\n                }\r\n                return requestDetails;\r\n            }\r\n            function _setTimingValue(timings, name, value) {\r\n                timings[name] = timings[name] || {};\r\n                timings[name][_postManager.identifier] = value;\r\n            }\r\n            function _doPayloadSend(thePayload, serializationStart, serializationCompleted, sendReason) {\r\n                if (thePayload && thePayload.payloadBlob && thePayload.payloadBlob[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    var useSendHook_1 = !!_sendHook;\r\n                    var sendInterface_1 = _sendInterfaces[thePayload.sendType];\r\n                    // Send all data using a beacon style transport if closing mode is on or channel was teared down\r\n                    if (!_isBeaconPayload(thePayload[_DYN_SEND_TYPE /* @min:%2esendType */]) && thePayload[_DYN_IS_BEACON /* @min:%2eisBeacon */] && thePayload.sendReason === 2 /* SendRequestReason.Unload */) {\r\n                        sendInterface_1 = _sendInterfaces[2 /* EventSendType.SendBeacon */] || _sendInterfaces[3 /* EventSendType.SyncFetch */] || sendInterface_1;\r\n                    }\r\n                    var useHeaders_1 = _useHeaders;\r\n                    // Disable header usage if we know we are using sendBeacon as additional headers are not supported\r\n                    if (thePayload.isBeacon || sendInterface_1[_DYN__TRANSPORT /* @min:%2e_transport */] === 3 /* TransportType.Beacon */) {\r\n                        useHeaders_1 = false;\r\n                    }\r\n                    var requestDetails_1 = _buildRequestDetails(thePayload, useHeaders_1);\r\n                    useHeaders_1 = useHeaders_1 || requestDetails_1[_DYN_USE_HDRS /* @min:%2euseHdrs */];\r\n                    var sendEventStart_1 = getTime();\r\n                    doPerf(_core, function () { return \"HttpManager:_doPayloadSend\"; }, function () {\r\n                        // Increment the send attempt count and add timings after packaging (So it's not serialized in the 1st attempt)\r\n                        for (var batchLp = 0; batchLp < thePayload.batches[_DYN_LENGTH /* @min:%2elength */]; batchLp++) {\r\n                            var theBatch = thePayload[_DYN_BATCHES /* @min:%2ebatches */][batchLp];\r\n                            var theEvents = theBatch[_DYN_EVENTS /* @min:%2eevents */]();\r\n                            for (var evtLp = 0; evtLp < theEvents[_DYN_LENGTH /* @min:%2elength */]; evtLp++) {\r\n                                var telemetryItem = theEvents[evtLp];\r\n                                if (_enableEventTimings) {\r\n                                    var timings = telemetryItem[_DYN_TIMINGS /* @min:%2etimings */] = telemetryItem[_DYN_TIMINGS /* @min:%2etimings */] || {};\r\n                                    _setTimingValue(timings, \"sendEventStart\", sendEventStart_1);\r\n                                    _setTimingValue(timings, \"serializationStart\", serializationStart);\r\n                                    _setTimingValue(timings, \"serializationCompleted\", serializationCompleted);\r\n                                }\r\n                                telemetryItem[strSendAttempt] > 0 ? telemetryItem[strSendAttempt]++ : telemetryItem[strSendAttempt] = 1;\r\n                            }\r\n                        }\r\n                        // Note: always sending this notification in a synchronous manner.\r\n                        _sendBatchesNotification(thePayload[_DYN_BATCHES /* @min:%2ebatches */], (1000 /* EventBatchNotificationReason.SendingUndefined */ + (sendReason || 0 /* SendRequestReason.Undefined */)), thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], true);\r\n                        // Disabling the use of const because of Issue:\r\n                        // - Task 9227844: [1DS] Some environments and packagers automatically \"freeze\" objects which are defined as const which causes any mutations to throw\r\n                        // eslint-disable-next-line prefer-const\r\n                        var orgPayloadData = {\r\n                            data: thePayload[_DYN_PAYLOAD_BLOB /* @min:%2epayloadBlob */],\r\n                            urlString: requestDetails_1.url,\r\n                            headers: requestDetails_1[_DYN_HDRS /* @min:%2ehdrs */],\r\n                            _thePayload: thePayload,\r\n                            _sendReason: sendReason,\r\n                            timeout: _xhrTimeout,\r\n                            disableXhrSync: _disableXhrSync,\r\n                            disableFetchKeepAlive: _disableFetchKeepAlive\r\n                        };\r\n                        // Only automatically add the following headers if already sending headers and we are not attempting to avoid an options call\r\n                        if (useHeaders_1) {\r\n                            if (!_hasHeader(orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */], STR_CACHE_CONTROL)) {\r\n                                orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */][STR_CACHE_CONTROL] = DEFAULT_CACHE_CONTROL;\r\n                            }\r\n                            if (!_hasHeader(orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */], STR_CONTENT_TYPE_HEADER)) {\r\n                                orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */][STR_CONTENT_TYPE_HEADER] = DEFAULT_CONTENT_TYPE;\r\n                            }\r\n                        }\r\n                        var sender = null;\r\n                        if (sendInterface_1) {\r\n                            // Send sync requests if the request is immediate or we are tearing down telemetry.\r\n                            sender = function (payload) {\r\n                                // Notify the clock skew manager that we are sending the first request (Potentially blocking all further requests)\r\n                                _clockSkewManager[_DYN_FIRST_REQUEST_SENT /* @min:%2efirstRequestSent */]();\r\n                                var onComplete = function (status, headers) {\r\n                                    _retryRequestIfNeeded(status, headers, thePayload, sendReason);\r\n                                };\r\n                                var isSync = thePayload[_DYN_IS_TEARDOWN /* @min:%2eisTeardown */] || thePayload[_DYN_IS_SYNC /* @min:%2eisSync */];\r\n                                try {\r\n                                    sendInterface_1.sendPOST(payload, onComplete, isSync);\r\n                                    if (_sendListener) {\r\n                                        // Send the original payload to the listener\r\n                                        _sendListener(orgPayloadData, payload, isSync, thePayload[_DYN_IS_BEACON /* @min:%2eisBeacon */]);\r\n                                    }\r\n                                }\r\n                                catch (ex) {\r\n                                    _warnToConsole(_logger, \"Unexpected exception sending payload. Ex:\" + dumpObj(ex));\r\n                                    _doOnComplete(onComplete, 0, {});\r\n                                }\r\n                            };\r\n                        }\r\n                        doPerf(_core, function () { return \"HttpManager:_doPayloadSend.sender\"; }, function () {\r\n                            if (sender) {\r\n                                if (thePayload[_DYN_SEND_TYPE /* @min:%2esendType */] === 0 /* EventSendType.Batched */) {\r\n                                    _outstandingRequests++;\r\n                                }\r\n                                // Only call the hook if it's defined and we are not using sendBeacon as additional headers are not supported\r\n                                if (useSendHook_1 && !thePayload.isBeacon && sendInterface_1[_DYN__TRANSPORT /* @min:%2e_transport */] !== 3 /* TransportType.Beacon */) {\r\n                                    // Create a new IPayloadData that is sent into the hook method, so that the hook method\r\n                                    // can't change the object references to the orgPayloadData (it can still change the content -- mainly the headers)\r\n                                    // Disabling the use of const because of Issue:\r\n                                    // - Task 9227844: [1DS] Some environments and packagers automatically \"freeze\" objects which are defined as const which causes any mutations to throw\r\n                                    // eslint-disable-next-line prefer-const\r\n                                    var hookData_1 = {\r\n                                        data: orgPayloadData[_DYN_DATA /* @min:%2edata */],\r\n                                        urlString: orgPayloadData[_DYN_URL_STRING /* @min:%2eurlString */],\r\n                                        headers: extend({}, orgPayloadData[_DYN_HEADERS /* @min:%2eheaders */]),\r\n                                        timeout: orgPayloadData[_DYN_TIMEOUT /* @min:%2etimeout */],\r\n                                        disableXhrSync: orgPayloadData[_DYN_DISABLE_XHR_SYNC /* @min:%2edisableXhrSync */],\r\n                                        disableFetchKeepAlive: orgPayloadData[_DYN_DISABLE_FETCH_KEEP_A6 /* @min:%2edisableFetchKeepAlive */]\r\n                                    };\r\n                                    var senderCalled_1 = false;\r\n                                    doPerf(_core, function () { return \"HttpManager:_doPayloadSend.sendHook\"; }, function () {\r\n                                        try {\r\n                                            _sendHook(hookData_1, function (payload) {\r\n                                                senderCalled_1 = true;\r\n                                                // Add back the internal properties\r\n                                                if (!_customHttpInterface && !payload[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */]) {\r\n                                                    payload[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */] = payload[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */] || orgPayloadData[_DYN__THE_PAYLOAD /* @min:%2e_thePayload */];\r\n                                                    payload[_DYN__SEND_REASON /* @min:%2e_sendReason */] = payload[_DYN__SEND_REASON /* @min:%2e_sendReason */] || orgPayloadData[_DYN__SEND_REASON /* @min:%2e_sendReason */];\r\n                                                }\r\n                                                sender(payload);\r\n                                            }, thePayload.isSync || thePayload[_DYN_IS_TEARDOWN /* @min:%2eisTeardown */]);\r\n                                        }\r\n                                        catch (ex) {\r\n                                            if (!senderCalled_1) {\r\n                                                // The hook never called the sender -- assume that it never will\r\n                                                sender(orgPayloadData);\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    sender(orgPayloadData);\r\n                                }\r\n                            }\r\n                        });\r\n                    }, function () { return ({ thePayload: thePayload, serializationStart: serializationStart, serializationCompleted: serializationCompleted, sendReason: sendReason }); }, thePayload[_DYN_IS_SYNC /* @min:%2eisSync */]);\r\n                }\r\n                if (thePayload.sizeExceed && thePayload.sizeExceed[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    // Ensure that we send any discard events for oversize events even when there was no payload to send\r\n                    _sendBatchesNotification(thePayload.sizeExceed, 8003 /* EventBatchNotificationReason.SizeLimitExceeded */, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */]);\r\n                }\r\n                if (thePayload.failedEvts && thePayload.failedEvts[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    // Ensure that we send any discard events for events that could not be serialized even when there was no payload to send\r\n                    _sendBatchesNotification(thePayload.failedEvts, 8002 /* EventBatchNotificationReason.InvalidEvent */, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */]);\r\n                }\r\n            }\r\n            function _addEventCompletedTimings(theEvents, sendEventCompleted) {\r\n                if (_enableEventTimings) {\r\n                    arrForEach(theEvents, function (theEvent) {\r\n                        var timings = theEvent[_DYN_TIMINGS /* @min:%2etimings */] = theEvent[_DYN_TIMINGS /* @min:%2etimings */] || {};\r\n                        _setTimingValue(timings, \"sendEventCompleted\", sendEventCompleted);\r\n                    });\r\n                }\r\n            }\r\n            function _retryRequestIfNeeded(status, headers, thePayload, sendReason) {\r\n                var reason = 9000 /* EventBatchNotificationReason.ResponseFailure */;\r\n                var droppedBatches = null;\r\n                var isRetrying = false;\r\n                var backOffTrans = false;\r\n                try {\r\n                    var shouldRetry = true;\r\n                    if (typeof status !== strUndefined) {\r\n                        if (headers) {\r\n                            _clockSkewManager[_DYN_SET_CLOCK_SKEW /* @min:%2esetClockSkew */](headers[STR_TIME_DELTA_HEADER]);\r\n                            var killDuration = headers[STR_KILL_DURATION_HEADER] || headers[\"kill-duration-seconds\"];\r\n                            arrForEach(_killSwitch[_DYN_SET_KILL_SWITCH_TENA11 /* @min:%2esetKillSwitchTenants */](headers[STR_KILL_TOKENS_HEADER], killDuration), function (killToken) {\r\n                                arrForEach(thePayload[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                                    if (theBatch[_DYN_I_KEY /* @min:%2eiKey */]() === killToken) {\r\n                                        // Make sure we have initialized the array\r\n                                        droppedBatches = droppedBatches || [];\r\n                                        // Create a copy of the batch with all of the events (and more importantly the action functions)\r\n                                        var removedEvents = theBatch[_DYN_SPLIT /* @min:%2esplit */](0);\r\n                                        // And then remove the events for the payload batch and reduce the actual number of processed\r\n                                        thePayload.numEvents -= removedEvents[_DYN_COUNT /* @min:%2ecount */]();\r\n                                        droppedBatches[_DYN_PUSH /* @min:%2epush */](removedEvents);\r\n                                    }\r\n                                });\r\n                            });\r\n                        }\r\n                        // Disabling triple-equals rule to avoid httpOverrides from failing because they are returning a string value\r\n                        // tslint:disable-next-line:triple-equals\r\n                        if (status == 200 || status == 204) {\r\n                            // Response was successfully sent\r\n                            reason = 200 /* EventBatchNotificationReason.Complete */;\r\n                            return;\r\n                        }\r\n                        if (!retryPolicyShouldRetryForStatus(status) || thePayload.numEvents <= 0) {\r\n                            // Only retry for specific response codes and if there is still events after kill switch processing\r\n                            shouldRetry = false;\r\n                        }\r\n                        // Derive the notification response from the HttpStatus Code\r\n                        reason = 9000 /* EventBatchNotificationReason.ResponseFailure */ + (status % 1000);\r\n                    }\r\n                    if (shouldRetry) {\r\n                        // The events should be retried -- so change notification to requeue them\r\n                        reason = 100 /* EventBatchNotificationReason.RequeueEvents */;\r\n                        var retryCount_1 = thePayload.retryCnt;\r\n                        if (thePayload[_DYN_SEND_TYPE /* @min:%2esendType */] === 0 /* EventSendType.Batched */) {\r\n                            // attempt to resend the entire batch\r\n                            if (retryCount_1 < maxRequestRetriesBeforeBackoff) {\r\n                                isRetrying = true;\r\n                                _doAction(function () {\r\n                                    // try to resend the same batches\r\n                                    if (thePayload[_DYN_SEND_TYPE /* @min:%2esendType */] === 0 /* EventSendType.Batched */) {\r\n                                        // Reduce the outstanding request count (if this was an async request) as we didn't reduce the count\r\n                                        // previously and we are about to reschedule our retry attempt and we want an attempt to send\r\n                                        // to occur, it's also required to ensure that a follow up handleRequestFinished() call occurs\r\n                                        _outstandingRequests--;\r\n                                    }\r\n                                    _sendBatches(thePayload[_DYN_BATCHES /* @min:%2ebatches */], retryCount_1 + 1, thePayload[_DYN_IS_TEARDOWN /* @min:%2eisTeardown */], _isUnloading ? 2 /* EventSendType.SendBeacon */ : thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], 5 /* SendRequestReason.Retry */);\r\n                                }, _isUnloading, retryPolicyGetMillisToBackoffForRetry(retryCount_1));\r\n                            }\r\n                            else {\r\n                                backOffTrans = true;\r\n                                if (_isUnloading) {\r\n                                    // we are unloading so don't try and requeue the events otherwise let the events get requeued and resent during the backoff sending\r\n                                    // This will also cause the events to be purged based on the priority (if necessary)\r\n                                    reason = 8001 /* EventBatchNotificationReason.NonRetryableStatus */;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                finally {\r\n                    if (!isRetrying) {\r\n                        // Make sure the clockSkewManager doesn't blocking further sending of requests once we have a proper response\r\n                        // This won't override any previously sent clock Skew value\r\n                        _clockSkewManager[_DYN_SET_CLOCK_SKEW /* @min:%2esetClockSkew */]();\r\n                        _handleRequestFinished(thePayload, reason, sendReason, backOffTrans);\r\n                    }\r\n                    _sendBatchesNotification(droppedBatches, 8004 /* EventBatchNotificationReason.KillSwitch */, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */]);\r\n                }\r\n            }\r\n            function _handleRequestFinished(thePayload, batchReason, sendReason, backOffTrans) {\r\n                try {\r\n                    if (backOffTrans) {\r\n                        // Slow down the transmission requests\r\n                        _postManager[_DYN__BACK_OFF_TRANSMISSI12 /* @min:%2e_backOffTransmission */]();\r\n                    }\r\n                    var theBatches = thePayload[_DYN_BATCHES /* @min:%2ebatches */];\r\n                    if (batchReason === 200 /* EventBatchNotificationReason.Complete */) {\r\n                        theBatches = thePayload.sentEvts || thePayload[_DYN_BATCHES /* @min:%2ebatches */];\r\n                        if (!backOffTrans && !thePayload[_DYN_IS_SYNC /* @min:%2eisSync */]) {\r\n                            // We have a successful async response, so the lets open the floodgates\r\n                            // The reason for checking isSync is to avoid unblocking if beacon send occurred as it\r\n                            // doesn't wait for a response.\r\n                            _postManager._clearBackOff();\r\n                        }\r\n                        _addCompleteTimings(theBatches);\r\n                    }\r\n                    // Send the notifications synchronously\r\n                    _sendBatchesNotification(theBatches, batchReason, thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], true);\r\n                }\r\n                finally {\r\n                    if (thePayload[_DYN_SEND_TYPE /* @min:%2esendType */] === 0 /* EventSendType.Batched */) {\r\n                        // we always need to decrement this value otherwise the httpmanager locks up and won't send any more events\r\n                        _outstandingRequests--;\r\n                        // Don't try to send additional queued events if this is a retry operation as the retried\r\n                        // response will eventually call _handleRequestFinished for the retried event\r\n                        if (sendReason !== 5 /* SendRequestReason.Retry */) {\r\n                            // Try and send any other queued batched events\r\n                            _self.sendQueuedRequests(thePayload[_DYN_SEND_TYPE /* @min:%2esendType */], sendReason);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            function _addCompleteTimings(theBatches) {\r\n                if (_enableEventTimings) {\r\n                    var sendEventCompleted_1 = getTime();\r\n                    arrForEach(theBatches, function (theBatch) {\r\n                        if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                            _addEventCompletedTimings(theBatch[_DYN_EVENTS /* @min:%2eevents */](), sendEventCompleted_1);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            function _doAction(cb, isSync, interval) {\r\n                if (isSync) {\r\n                    cb();\r\n                }\r\n                else {\r\n                    _timeoutWrapper.set(cb, interval);\r\n                }\r\n            }\r\n            function _getMsfpc(thePayload) {\r\n                for (var lp = 0; lp < thePayload.batches[_DYN_LENGTH /* @min:%2elength */]; lp++) {\r\n                    var msfpc = thePayload[_DYN_BATCHES /* @min:%2ebatches */][lp].Msfpc();\r\n                    if (msfpc) {\r\n                        return encodeURIComponent(msfpc);\r\n                    }\r\n                }\r\n                return STR_EMPTY;\r\n            }\r\n            function _handleCollectorResponse(responseText) {\r\n                var responseHandlers = _responseHandlers;\r\n                try {\r\n                    for (var i = 0; i < responseHandlers[_DYN_LENGTH /* @min:%2elength */]; i++) {\r\n                        try {\r\n                            responseHandlers[i](responseText);\r\n                        }\r\n                        catch (e) {\r\n                            _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 519 /* _eExtendedInternalMessageId.PostResponseHandler */, \"Response handler failed: \" + e);\r\n                        }\r\n                    }\r\n                    if (responseText) {\r\n                        var response = JSON.parse(responseText);\r\n                        if (isValueAssigned(response.webResult) && isValueAssigned(response.webResult[STR_MSFPC])) {\r\n                            // Set cookie\r\n                            _cookieMgr.set(\"MSFPC\", response.webResult[STR_MSFPC], 365 * 86400);\r\n                        }\r\n                    }\r\n                }\r\n                catch (ex) {\r\n                    // Doing nothing\r\n                }\r\n            }\r\n            function _sendBatchesNotification(theBatches, batchReason, sendType, sendSync) {\r\n                if (theBatches && theBatches[_DYN_LENGTH /* @min:%2elength */] > 0 && actions) {\r\n                    var theAction_1 = actions[_getNotificationAction(batchReason)];\r\n                    if (theAction_1) {\r\n                        var isSyncRequest_1 = sendType !== 0 /* EventSendType.Batched */;\r\n                        doPerf(_core, function () { return \"HttpManager:_sendBatchesNotification\"; }, function () {\r\n                            _doAction(function () {\r\n                                try {\r\n                                    theAction_1.call(actions, theBatches, batchReason, isSyncRequest_1, sendType);\r\n                                }\r\n                                catch (e) {\r\n                                    _throwInternal(_logger, 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, \"send request notification failed: \" + e);\r\n                                }\r\n                            }, sendSync || isSyncRequest_1, 0);\r\n                        }, function () { return ({ batches: _createDebugBatches(theBatches), reason: batchReason, isSync: isSyncRequest_1, sendSync: sendSync, sendType: sendType }); }, !isSyncRequest_1);\r\n                    }\r\n                }\r\n            }\r\n            function _getNotificationAction(reason) {\r\n                var action = _eventActionMap[reason];\r\n                if (!isValueAssigned(action)) {\r\n                    action = STR_OTHER;\r\n                    if (reason >= 9000 /* EventBatchNotificationReason.ResponseFailure */ && reason <= 9999 /* EventBatchNotificationReason.ResponseFailureMax */) {\r\n                        action = STR_RESPONSE_FAIL;\r\n                    }\r\n                    else if (reason >= 8000 /* EventBatchNotificationReason.EventsDropped */ && reason <= 8999 /* EventBatchNotificationReason.EventsDroppedMax */) {\r\n                        action = STR_DROPPED;\r\n                    }\r\n                    else if (reason >= 1000 /* EventBatchNotificationReason.SendingUndefined */ && reason <= 1999 /* EventBatchNotificationReason.SendingEventMax */) {\r\n                        action = STR_SENDING;\r\n                    }\r\n                }\r\n                return action;\r\n            }\r\n        });\r\n    }\r\n// Removed Stub for HttpManager.prototype.initialize.\r\n// Removed Stub for HttpManager.prototype.addHeader.\r\n// Removed Stub for HttpManager.prototype.removeHeader.\r\n// Removed Stub for HttpManager.prototype.addResponseHandler.\r\n// Removed Stub for HttpManager.prototype.addBatch.\r\n// Removed Stub for HttpManager.prototype.canSendRequest.\r\n// Removed Stub for HttpManager.prototype.sendQueuedRequests.\r\n// Removed Stub for HttpManager.prototype.isCompletelyIdle.\r\n// Removed Stub for HttpManager.prototype.setUnloading.\r\n// Removed Stub for HttpManager.prototype.teardown.\r\n// Removed Stub for HttpManager.prototype.pause.\r\n// Removed Stub for HttpManager.prototype.resume.\r\n// Removed Stub for HttpManager.prototype.sendSynchronousBatch.\r\n// Removed Stub for HttpManager.prototype.serializeOfflineEvt.\r\n// Removed Stub for HttpManager.prototype.getOfflineRequestDetails.\r\n// Removed Stub for HttpManager.prototype.createOneDSPayload.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    HttpManager.__ieDyn=1;\n\n    return HttpManager;\r\n}());\r\nexport { HttpManager };\r\n//# sourceMappingURL=HttpManager.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\n/**\r\n* TimeoutOverrideWrapper.ts\r\n* @author  Nev Wylie (newylie)\r\n* @copyright Microsoft 2022\r\n* Simple internal timeout wrapper\r\n*/\r\nimport { scheduleTimeoutWith } from \"@nevware21/ts-utils\";\r\nexport function createTimeoutWrapper(argSetTimeout, argClearTimeout) {\r\n    return {\r\n        set: function (callback, ms) {\r\n            var args = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                args[_i - 2] = arguments[_i];\r\n            }\r\n            return scheduleTimeoutWith([argSetTimeout, argClearTimeout], callback, ms, args);\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=TimeoutOverrideWrapper.js.map","/*\n * 1DS JS SDK POST plugin, 4.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n * (Microsoft Internal Only)\n */\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\r\n/**\r\n* PostManager.ts\r\n* @author Abhilash Panwar (abpanwar); Hector Hernandez (hectorh); Nev Wylie (newylie)\r\n* @copyright Microsoft 2018-2020\r\n*/\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BaseTelemetryPlugin, EventsDiscardedReason, _throwInternal, addPageHideEventListener, addPageShowEventListener, addPageUnloadEventListener, arrForEach, createProcessTelemetryContext, createUniqueNamespace, doPerf, getWindow, isChromium, isGreaterThanZero, isNumber, mergeEvtNamespace, objForEachKey, onConfigChange, optimizeObject, proxyFunctions, removePageHideEventListener, removePageShowEventListener, removePageUnloadEventListener, setProcessTelemetryTimings } from \"@microsoft/1ds-core-js\";\r\nimport { createPromise } from \"@nevware21/ts-async\";\r\nimport { isPromiseLike, objDeepFreeze } from \"@nevware21/ts-utils\";\r\nimport { BE_PROFILE, NRT_PROFILE, RT_PROFILE } from \"./DataModels\";\r\nimport { EventBatch } from \"./EventBatch\";\r\nimport { HttpManager } from \"./HttpManager\";\r\nimport { STR_AUTH_WEB_TOKEN, STR_MSA_DEVICE_TICKET, STR_TRACE, STR_USER } from \"./InternalConstants\";\r\nimport { retryPolicyGetMillisToBackoffForRetry } from \"./RetryPolicy\";\r\nimport { createTimeoutWrapper } from \"./TimeoutOverrideWrapper\";\r\nimport { _DYN_ADD_HEADER, _DYN_AUTO_FLUSH_EVENTS_LI14, _DYN_BASE_DATA, _DYN_BATCHES, _DYN_CAN_SEND_REQUEST, _DYN_CLEAR_TIMEOUT_OVERRI3, _DYN_CONCAT, _DYN_COUNT, _DYN_CREATE_ONE_DSPAYLOAD, _DYN_DATA, _DYN_DISABLE_AUTO_BATCH_F15, _DYN_DISABLE_OPTIMIZE_OBJ, _DYN_DISABLE_TELEMETRY, _DYN_EVENTS, _DYN_EVENTS_LIMIT_IN_MEM, _DYN_GET_OFFLINE_REQUEST_9, _DYN_GET_WPARAM, _DYN_IDENTIFIER, _DYN_IGNORE_MC1_MS0_COOKI13, _DYN_INITIALIZE, _DYN_IS_COMPLETELY_IDLE, _DYN_I_KEY, _DYN_LATENCY, _DYN_LENGTH, _DYN_OVERRIDE_INSTRUMENTA16, _DYN_PUSH, _DYN_RESUME, _DYN_SEND_ATTEMPT, _DYN_SEND_QUEUED_REQUESTS, _DYN_SEND_SYNCHRONOUS_BAT10, _DYN_SERIALIZE_OFFLINE_EV8, _DYN_SET_TIMEOUT_OVERRIDE, _DYN_SET_UNLOADING, _DYN_SPLICE, _DYN_SPLIT, _DYN_SYNC, _DYN__BACK_OFF_TRANSMISSI12 } from \"./__DynamicConstants\";\r\nvar FlushCheckTimer = 0.250; // This needs to be in seconds, so this is 250ms\r\nvar MaxNumberEventPerBatch = 500;\r\nvar EventsDroppedAtOneTime = 20;\r\nvar MaxSendAttempts = 6;\r\nvar MaxSyncUnloadSendAttempts = 2; // Assuming 2 based on beforeunload and unload\r\nvar MaxBackoffCount = 4;\r\nvar MaxConnections = 2;\r\nvar MaxRequestRetriesBeforeBackoff = 1;\r\nvar MaxEventsLimitInMem = 10000;\r\nvar strEventsDiscarded = \"eventsDiscarded\";\r\nvar EMPTY_STR = \"\";\r\nvar undefValue = undefined;\r\n/**\r\n * The default settings for the config.\r\n * WE MUST include all defaults here to ensure that the config is created with all of the properties\r\n * defined as dynamic.\r\n */\r\nvar defaultPostChannelConfig = objDeepFreeze({\r\n    eventsLimitInMem: { isVal: isGreaterThanZero, v: MaxEventsLimitInMem },\r\n    immediateEventLimit: { isVal: isGreaterThanZero, v: 500 },\r\n    autoFlushEventsLimit: { isVal: isGreaterThanZero, v: 0 },\r\n    disableAutoBatchFlushLimit: false,\r\n    httpXHROverride: { isVal: isOverrideFn, v: undefValue },\r\n    overrideInstrumentationKey: undefValue,\r\n    overrideEndpointUrl: undefValue,\r\n    disableTelemetry: false,\r\n    ignoreMc1Ms0CookieProcessing: false,\r\n    setTimeoutOverride: undefValue,\r\n    clearTimeoutOverride: undefValue,\r\n    payloadPreprocessor: undefValue,\r\n    payloadListener: undefValue,\r\n    disableEventTimings: undefValue,\r\n    valueSanitizer: undefValue,\r\n    stringifyObjects: undefValue,\r\n    enableCompoundKey: undefValue,\r\n    disableOptimizeObj: false,\r\n    fetchCredentials: undefValue,\r\n    // disableCacheHeader: undefValue, // See Task #7178858 - Collector requires a change to support this\r\n    transports: undefValue,\r\n    unloadTransports: undefValue,\r\n    useSendBeacon: undefValue,\r\n    disableFetchKeepAlive: undefValue,\r\n    avoidOptions: false,\r\n    xhrTimeout: undefValue,\r\n    disableXhrSync: undefValue,\r\n    alwaysUseXhrOverride: false,\r\n    maxEventRetryAttempts: { isVal: isNumber, v: MaxSendAttempts },\r\n    maxUnloadEventRetryAttempts: { isVal: isNumber, v: MaxSyncUnloadSendAttempts },\r\n    addNoResponse: undefValue,\r\n    excludeCsMetaData: undefValue\r\n});\r\nfunction isOverrideFn(httpXHROverride) {\r\n    return httpXHROverride && httpXHROverride.sendPOST;\r\n}\r\n/**\r\n * Class that manages adding events to inbound queues and batching of events\r\n * into requests.\r\n * @group Classes\r\n * @group Entrypoint\r\n */\r\nvar PostChannel = /** @class */ (function (_super) {\r\n    __extends(PostChannel, _super);\r\n    function PostChannel() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"PostChannel\";\r\n        _this.priority = 1011;\r\n        _this.version = '4.3.4';\r\n        var _postConfig;\r\n        var _isTeardownCalled = false;\r\n        var _flushCallbackQueue = [];\r\n        var _flushCallbackTimer;\r\n        var _paused = false;\r\n        var _immediateQueueSize = 0;\r\n        var _immediateQueueSizeLimit;\r\n        var _queueSize = 0;\r\n        var _queueSizeLimit;\r\n        var _profiles = {};\r\n        var _currentProfile = RT_PROFILE;\r\n        var _scheduledTimer;\r\n        var _immediateTimer;\r\n        var _currentBackoffCount;\r\n        var _timerCount;\r\n        var _httpManager;\r\n        var _batchQueues;\r\n        var _autoFlushEventsLimit;\r\n        // either MaxBatchSize * (1+ Max Connections) or _queueLimit / 6 (where 3 latency Queues [normal, realtime, cost deferred] * 2 [allow half full -- allow for retry])\r\n        var _autoFlushBatchLimit;\r\n        var _delayedBatchSendLatency;\r\n        var _delayedBatchReason;\r\n        var _optimizeObject;\r\n        var _isPageUnloadTriggered;\r\n        var _maxEventSendAttempts;\r\n        var _maxUnloadEventSendAttempts;\r\n        var _evtNamespace;\r\n        var _timeoutWrapper;\r\n        var _ignoreMc1Ms0CookieProcessing;\r\n        var _disableAutoBatchFlushLimit;\r\n        var _notificationManager;\r\n        var _unloadHandlersAdded;\r\n        var _overrideInstrumentationKey;\r\n        var _disableTelemetry;\r\n        dynamicProto(PostChannel, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            // Special internal method to allow the DebugPlugin to hook embedded objects\r\n            _self[\"_getDbgPlgTargets\"] = function () {\r\n                return [_httpManager, _postConfig];\r\n            };\r\n            _self[_DYN_INITIALIZE /* @min:%2einitialize */] = function (theConfig, core, extensions) {\r\n                doPerf(core, function () { return \"PostChannel:initialize\"; }, function () {\r\n                    _base[_DYN_INITIALIZE /* @min:%2einitialize */](theConfig, core, extensions);\r\n                    _notificationManager = core.getNotifyMgr();\r\n                    try {\r\n                        _evtNamespace = mergeEvtNamespace(createUniqueNamespace(_self[_DYN_IDENTIFIER /* @min:%2eidentifier */]), core.evtNamespace && core.evtNamespace());\r\n                        _self._addHook(onConfigChange(theConfig, function (details) {\r\n                            var coreConfig = details.cfg;\r\n                            var ctx = createProcessTelemetryContext(null, coreConfig, core);\r\n                            _postConfig = ctx.getExtCfg(_self[_DYN_IDENTIFIER /* @min:%2eidentifier */], defaultPostChannelConfig);\r\n                            _timeoutWrapper = createTimeoutWrapper(_postConfig[_DYN_SET_TIMEOUT_OVERRIDE /* @min:%2esetTimeoutOverride */], _postConfig[_DYN_CLEAR_TIMEOUT_OVERRI3 /* @min:%2eclearTimeoutOverride */]);\r\n                            // Only try and use the optimizeObject() if this appears to be a chromium based browser and it has not been explicitly disabled\r\n                            _optimizeObject = !_postConfig[_DYN_DISABLE_OPTIMIZE_OBJ /* @min:%2edisableOptimizeObj */] && isChromium();\r\n                            _ignoreMc1Ms0CookieProcessing = _postConfig[_DYN_IGNORE_MC1_MS0_COOKI13 /* @min:%2eignoreMc1Ms0CookieProcessing */];\r\n                            _hookWParam(core); // _hookWParam uses _ignoreMc1Ms0CookieProcessing\r\n                            _queueSizeLimit = _postConfig[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */];\r\n                            _immediateQueueSizeLimit = _postConfig.immediateEventLimit;\r\n                            _autoFlushEventsLimit = _postConfig[_DYN_AUTO_FLUSH_EVENTS_LI14 /* @min:%2eautoFlushEventsLimit */];\r\n                            _maxEventSendAttempts = _postConfig.maxEventRetryAttempts;\r\n                            _maxUnloadEventSendAttempts = _postConfig.maxUnloadEventRetryAttempts;\r\n                            _disableAutoBatchFlushLimit = _postConfig[_DYN_DISABLE_AUTO_BATCH_F15 /* @min:%2edisableAutoBatchFlushLimit */];\r\n                            if (isPromiseLike(coreConfig.endpointUrl)) {\r\n                                _self.pause();\r\n                            }\r\n                            else if (!!_paused) {\r\n                                // if previous url is promise, resume\r\n                                _self[_DYN_RESUME /* @min:%2eresume */]();\r\n                            }\r\n                            _setAutoLimits();\r\n                            // Override iKey if provided in Post config if provided for during initialization\r\n                            _overrideInstrumentationKey = _postConfig[_DYN_OVERRIDE_INSTRUMENTA16 /* @min:%2eoverrideInstrumentationKey */];\r\n                            // DisableTelemetry was defined in the config provided during initialization\r\n                            _disableTelemetry = !!_postConfig[_DYN_DISABLE_TELEMETRY /* @min:%2edisableTelemetry */];\r\n                            if (_unloadHandlersAdded) {\r\n                                _removeUnloadHandlers();\r\n                            }\r\n                            var excludePageUnloadEvents = coreConfig.disablePageUnloadEvents || [];\r\n                            // When running in Web browsers try to send all telemetry if page is unloaded\r\n                            _unloadHandlersAdded = addPageUnloadEventListener(_handleUnloadEvents, excludePageUnloadEvents, _evtNamespace);\r\n                            _unloadHandlersAdded = addPageHideEventListener(_handleUnloadEvents, excludePageUnloadEvents, _evtNamespace) || _unloadHandlersAdded;\r\n                            _unloadHandlersAdded = addPageShowEventListener(_handleShowEvents, coreConfig.disablePageShowEvents, _evtNamespace) || _unloadHandlersAdded;\r\n                        }));\r\n                        // only initialize the manager once\r\n                        _httpManager[_DYN_INITIALIZE /* @min:%2einitialize */](theConfig, _self.core, _self);\r\n                    }\r\n                    catch (e) {\r\n                        // resetting the initialized state because of failure\r\n                        _self.setInitialized(false);\r\n                        throw e;\r\n                    }\r\n                }, function () { return ({ theConfig: theConfig, core: core, extensions: extensions }); });\r\n            };\r\n            _self.processTelemetry = function (ev, itemCtx) {\r\n                setProcessTelemetryTimings(ev, _self[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                itemCtx = itemCtx || _self._getTelCtx(itemCtx);\r\n                var event = ev;\r\n                if (!_disableTelemetry && !_isTeardownCalled) {\r\n                    // Override iKey if provided in Post config if provided for during initialization\r\n                    if (_overrideInstrumentationKey) {\r\n                        event[_DYN_I_KEY /* @min:%2eiKey */] = _overrideInstrumentationKey;\r\n                    }\r\n                    _addEventToQueues(event, true);\r\n                    if (_isPageUnloadTriggered) {\r\n                        // Unload event has been received so we need to try and flush new events\r\n                        _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                    }\r\n                    else {\r\n                        _scheduleTimer();\r\n                    }\r\n                }\r\n                _self.processNext(event, itemCtx);\r\n            };\r\n            _self.getOfflineSupport = function () {\r\n                try {\r\n                    var details_1 = _httpManager && _httpManager[_DYN_GET_OFFLINE_REQUEST_9 /* @min:%2egetOfflineRequestDetails */]();\r\n                    if (_httpManager) {\r\n                        return {\r\n                            getUrl: function () {\r\n                                if (details_1) {\r\n                                    return details_1.url;\r\n                                }\r\n                                return null;\r\n                            },\r\n                            serialize: _serialize,\r\n                            batch: _batch,\r\n                            shouldProcess: function (evt) {\r\n                                return !_disableTelemetry;\r\n                            },\r\n                            createPayload: function (evt) {\r\n                                return null;\r\n                            },\r\n                            createOneDSPayload: function (evts) {\r\n                                if (_httpManager[_DYN_CREATE_ONE_DSPAYLOAD /* @min:%2ecreateOneDSPayload */]) {\r\n                                    return _httpManager[_DYN_CREATE_ONE_DSPAYLOAD /* @min:%2ecreateOneDSPayload */](evts, _optimizeObject);\r\n                                }\r\n                            }\r\n                        };\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return null;\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState) {\r\n                _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                _isTeardownCalled = true;\r\n                _httpManager.teardown();\r\n                _removeUnloadHandlers();\r\n                // Just register to remove all events associated with this namespace\r\n                _initDefaults();\r\n            };\r\n            function _removeUnloadHandlers() {\r\n                removePageUnloadEventListener(null, _evtNamespace);\r\n                removePageHideEventListener(null, _evtNamespace);\r\n                removePageShowEventListener(null, _evtNamespace);\r\n            }\r\n            function _hookWParam(core) {\r\n                var existingGetWParamMethod = core[_DYN_GET_WPARAM /* @min:%2egetWParam */];\r\n                core[_DYN_GET_WPARAM /* @min:%2egetWParam */] = function () {\r\n                    var wparam = 0;\r\n                    if (_ignoreMc1Ms0CookieProcessing) {\r\n                        wparam = wparam | 2;\r\n                    }\r\n                    return wparam | existingGetWParamMethod.call(core);\r\n                };\r\n            }\r\n            function _batch(arr) {\r\n                var rlt = EMPTY_STR;\r\n                if (arr && arr[_DYN_LENGTH /* @min:%2elength */]) {\r\n                    arrForEach(arr, function (item) {\r\n                        if (rlt) {\r\n                            rlt += \"\\n\";\r\n                        }\r\n                        rlt += item;\r\n                    });\r\n                }\r\n                return rlt;\r\n            }\r\n            function _serialize(event) {\r\n                var rlt = EMPTY_STR;\r\n                try {\r\n                    _cleanEvent(event);\r\n                    rlt = _httpManager[_DYN_SERIALIZE_OFFLINE_EV8 /* @min:%2eserializeOfflineEvt */](event);\r\n                }\r\n                catch (e) {\r\n                    // eslint-disable-next-line no-empty\r\n                }\r\n                return rlt;\r\n            }\r\n            // Moving event handlers out from the initialize closure so that any local variables can be garbage collected\r\n            function _handleUnloadEvents(evt) {\r\n                var theEvt = evt || getWindow().event; // IE 8 does not pass the event\r\n                if (theEvt.type !== \"beforeunload\") {\r\n                    // Only set the unload trigger if not beforeunload event as beforeunload can be cancelled while the other events can't\r\n                    _isPageUnloadTriggered = true;\r\n                    _httpManager[_DYN_SET_UNLOADING /* @min:%2esetUnloading */](_isPageUnloadTriggered);\r\n                }\r\n                _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n            }\r\n            function _handleShowEvents(evt) {\r\n                // Handle the page becoming visible again\r\n                _isPageUnloadTriggered = false;\r\n                _httpManager[_DYN_SET_UNLOADING /* @min:%2esetUnloading */](_isPageUnloadTriggered);\r\n            }\r\n            function _cleanEvent(event) {\r\n                if (event.ext && event.ext[STR_TRACE]) {\r\n                    delete (event.ext[STR_TRACE]);\r\n                }\r\n                if (event.ext && event.ext[STR_USER] && event.ext[STR_USER][\"id\"]) {\r\n                    delete (event.ext[STR_USER][\"id\"]);\r\n                }\r\n                // v8 performance optimization for iterating over the keys\r\n                if (_optimizeObject) {\r\n                    event.ext = optimizeObject(event.ext);\r\n                    if (event[_DYN_BASE_DATA /* @min:%2ebaseData */]) {\r\n                        event[_DYN_BASE_DATA /* @min:%2ebaseData */] = optimizeObject(event[_DYN_BASE_DATA /* @min:%2ebaseData */]);\r\n                    }\r\n                    if (event[_DYN_DATA /* @min:%2edata */]) {\r\n                        event[_DYN_DATA /* @min:%2edata */] = optimizeObject(event[_DYN_DATA /* @min:%2edata */]);\r\n                    }\r\n                }\r\n            }\r\n            function _addEventToQueues(event, append) {\r\n                // If send attempt field is undefined we should set it to 0.\r\n                if (!event[_DYN_SEND_ATTEMPT /* @min:%2esendAttempt */]) {\r\n                    event[_DYN_SEND_ATTEMPT /* @min:%2esendAttempt */] = 0;\r\n                }\r\n                // Add default latency\r\n                if (!event[_DYN_LATENCY /* @min:%2elatency */]) {\r\n                    event[_DYN_LATENCY /* @min:%2elatency */] = 1 /* EventLatencyValue.Normal */;\r\n                }\r\n                _cleanEvent(event);\r\n                if (event[_DYN_SYNC /* @min:%2esync */]) {\r\n                    // If the transmission is backed off then do not send synchronous events.\r\n                    // We will convert these events to Real time latency instead.\r\n                    if (_currentBackoffCount || _paused) {\r\n                        event[_DYN_LATENCY /* @min:%2elatency */] = 3 /* EventLatencyValue.RealTime */;\r\n                        event[_DYN_SYNC /* @min:%2esync */] = false;\r\n                    }\r\n                    else {\r\n                        // Log the event synchronously\r\n                        if (_httpManager) {\r\n                            // v8 performance optimization for iterating over the keys\r\n                            if (_optimizeObject) {\r\n                                event = optimizeObject(event);\r\n                            }\r\n                            _httpManager[_DYN_SEND_SYNCHRONOUS_BAT10 /* @min:%2esendSynchronousBatch */](EventBatch.create(event[_DYN_I_KEY /* @min:%2eiKey */], [event]), event[_DYN_SYNC /* @min:%2esync */] === true ? 1 /* EventSendType.Synchronous */ : event[_DYN_SYNC /* @min:%2esync */], 3 /* SendRequestReason.SyncEvent */);\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                var evtLatency = event[_DYN_LATENCY /* @min:%2elatency */];\r\n                var queueSize = _queueSize;\r\n                var queueLimit = _queueSizeLimit;\r\n                if (evtLatency === 4 /* EventLatencyValue.Immediate */) {\r\n                    queueSize = _immediateQueueSize;\r\n                    queueLimit = _immediateQueueSizeLimit;\r\n                }\r\n                var eventDropped = false;\r\n                // Only add the event if the queue isn't full or it's a direct event (which don't add to the queue sizes)\r\n                if (queueSize < queueLimit) {\r\n                    eventDropped = !_addEventToProperQueue(event, append);\r\n                }\r\n                else {\r\n                    var dropLatency = 1 /* EventLatencyValue.Normal */;\r\n                    var dropNumber = EventsDroppedAtOneTime;\r\n                    if (evtLatency === 4 /* EventLatencyValue.Immediate */) {\r\n                        // Only drop other immediate events as they are not technically sharing the general queue\r\n                        dropLatency = 4 /* EventLatencyValue.Immediate */;\r\n                        dropNumber = 1;\r\n                    }\r\n                    // Drop old event from lower or equal latency\r\n                    eventDropped = true;\r\n                    if (_dropEventWithLatencyOrLess(event[_DYN_I_KEY /* @min:%2eiKey */], event[_DYN_LATENCY /* @min:%2elatency */], dropLatency, dropNumber)) {\r\n                        eventDropped = !_addEventToProperQueue(event, append);\r\n                    }\r\n                }\r\n                if (eventDropped) {\r\n                    // Can't drop events from current queues because the all the slots are taken by queues that are being flushed.\r\n                    _notifyEvents(strEventsDiscarded, [event], EventsDiscardedReason.QueueFull);\r\n                }\r\n            }\r\n            _self.setEventQueueLimits = function (eventLimit, autoFlushLimit) {\r\n                _postConfig[_DYN_EVENTS_LIMIT_IN_MEM /* @min:%2eeventsLimitInMem */] = _queueSizeLimit = isGreaterThanZero(eventLimit) ? eventLimit : MaxEventsLimitInMem;\r\n                _postConfig[_DYN_AUTO_FLUSH_EVENTS_LI14 /* @min:%2eautoFlushEventsLimit */] = _autoFlushEventsLimit = isGreaterThanZero(autoFlushLimit) ? autoFlushLimit : 0;\r\n                _setAutoLimits();\r\n                // We only do this check here as during normal event addition if the queue is > then events start getting dropped\r\n                var doFlush = _queueSize > eventLimit;\r\n                if (!doFlush && _autoFlushBatchLimit > 0) {\r\n                    // Check the auto flush max batch size\r\n                    for (var latency = 1 /* EventLatencyValue.Normal */; !doFlush && latency <= 3 /* EventLatencyValue.RealTime */; latency++) {\r\n                        var batchQueue = _batchQueues[latency];\r\n                        if (batchQueue && batchQueue[_DYN_BATCHES /* @min:%2ebatches */]) {\r\n                            arrForEach(batchQueue[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                                if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() >= _autoFlushBatchLimit) {\r\n                                    // If any 1 batch is > than the limit then trigger an auto flush\r\n                                    doFlush = true;\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                _performAutoFlush(true, doFlush);\r\n            };\r\n            _self.pause = function () {\r\n                _clearScheduledTimer();\r\n                _paused = true;\r\n                _httpManager && _httpManager.pause();\r\n            };\r\n            _self[_DYN_RESUME /* @min:%2eresume */] = function () {\r\n                _paused = false;\r\n                _httpManager && _httpManager[_DYN_RESUME /* @min:%2eresume */]();\r\n                _scheduleTimer();\r\n            };\r\n            _self._loadTransmitProfiles = function (profiles) {\r\n                _resetTransmitProfiles();\r\n                objForEachKey(profiles, function (profileName, profileValue) {\r\n                    var profLen = profileValue[_DYN_LENGTH /* @min:%2elength */];\r\n                    if (profLen >= 2) {\r\n                        var directValue = (profLen > 2 ? profileValue[2] : 0);\r\n                        profileValue[_DYN_SPLICE /* @min:%2esplice */](0, profLen - 2);\r\n                        // Make sure if a higher latency is set to not send then don't send lower latency\r\n                        if (profileValue[1] < 0) {\r\n                            profileValue[0] = -1;\r\n                        }\r\n                        // Make sure each latency is multiple of the latency higher then it. If not a multiple\r\n                        // we round up so that it becomes a multiple.\r\n                        if (profileValue[1] > 0 && profileValue[0] > 0) {\r\n                            var timerMultiplier = profileValue[0] / profileValue[1];\r\n                            profileValue[0] = Math.ceil(timerMultiplier) * profileValue[1];\r\n                        }\r\n                        // Add back the direct profile timeout\r\n                        if (directValue >= 0 && profileValue[1] >= 0 && directValue > profileValue[1]) {\r\n                            // Make sure if it's not disabled (< 0) then make sure it's not larger than RealTime\r\n                            directValue = profileValue[1];\r\n                        }\r\n                        profileValue[_DYN_PUSH /* @min:%2epush */](directValue);\r\n                        _profiles[profileName] = profileValue;\r\n                    }\r\n                });\r\n            };\r\n            _self.flush = function (async, callback, sendReason) {\r\n                if (async === void 0) { async = true; }\r\n                var result;\r\n                if (!_paused) {\r\n                    sendReason = sendReason || 1 /* SendRequestReason.ManualFlush */;\r\n                    if (async) {\r\n                        if (!callback) {\r\n                            result = createPromise(function (resolve) {\r\n                                // Set the callback to the promise resolve callback\r\n                                callback = resolve;\r\n                            });\r\n                        }\r\n                        if (_flushCallbackTimer == null) {\r\n                            // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                            _clearScheduledTimer();\r\n                            // Move all queued events to the HttpManager so that we don't discard new events (Auto flush scenario)\r\n                            _queueBatches(1 /* EventLatencyValue.Normal */, 0 /* EventSendType.Batched */, sendReason);\r\n                            _flushCallbackTimer = _createTimer(function () {\r\n                                _flushCallbackTimer = null;\r\n                                _flushImpl(callback, sendReason);\r\n                            }, 0);\r\n                        }\r\n                        else {\r\n                            // Even if null (no callback) this will ensure after the flushImpl finishes waiting\r\n                            // for a completely idle connection it will attempt to re-flush any queued events on the next cycle\r\n                            _flushCallbackQueue[_DYN_PUSH /* @min:%2epush */](callback);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Clear the normal schedule timer as we are going to try and flush ASAP\r\n                        var cleared = _clearScheduledTimer();\r\n                        // Now cause all queued events to be sent synchronously\r\n                        _sendEventsForLatencyAndAbove(1 /* EventLatencyValue.Normal */, 1 /* EventSendType.Synchronous */, sendReason);\r\n                        callback && callback();\r\n                        if (cleared) {\r\n                            // restart the normal event timer if it was cleared\r\n                            _scheduleTimer();\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            _self.setMsaAuthTicket = function (ticket) {\r\n                _httpManager[_DYN_ADD_HEADER /* @min:%2eaddHeader */](STR_MSA_DEVICE_TICKET, ticket);\r\n            };\r\n            _self.setAuthPluginHeader = function (token) {\r\n                _httpManager[_DYN_ADD_HEADER /* @min:%2eaddHeader */](STR_AUTH_WEB_TOKEN, token);\r\n            };\r\n            _self.removeAuthPluginHeader = function () {\r\n                _httpManager.removeHeader(STR_AUTH_WEB_TOKEN);\r\n            };\r\n            _self.hasEvents = _hasEvents;\r\n            _self._setTransmitProfile = function (profileName) {\r\n                if (_currentProfile !== profileName && _profiles[profileName] !== undefined) {\r\n                    _clearScheduledTimer();\r\n                    _currentProfile = profileName;\r\n                    _scheduleTimer();\r\n                }\r\n            };\r\n            proxyFunctions(_self, function () { return _httpManager; }, [\"addResponseHandler\"]);\r\n            /**\r\n             * Batch and send events currently in the queue for the given latency.\r\n             * @param latency - Latency for which to send events.\r\n             */\r\n            function _sendEventsForLatencyAndAbove(latency, sendType, sendReason) {\r\n                var queued = _queueBatches(latency, sendType, sendReason);\r\n                // Always trigger the request as while the post channel may not have queued additional events, the httpManager may already have waiting events\r\n                _httpManager[_DYN_SEND_QUEUED_REQUESTS /* @min:%2esendQueuedRequests */](sendType, sendReason);\r\n                return queued;\r\n            }\r\n            function _hasEvents() {\r\n                return _queueSize > 0;\r\n            }\r\n            /**\r\n             * Try to schedule the timer after which events will be sent. If there are\r\n             * no events to be sent, or there is already a timer scheduled, or the\r\n             * http manager doesn't have any idle connections this method is no-op.\r\n             */\r\n            function _scheduleTimer() {\r\n                // If we had previously attempted to send requests, but the http manager didn't have any idle connections then the requests where delayed\r\n                // so try and requeue then again now\r\n                if (_delayedBatchSendLatency >= 0 && _queueBatches(_delayedBatchSendLatency, 0 /* EventSendType.Batched */, _delayedBatchReason)) {\r\n                    _httpManager[_DYN_SEND_QUEUED_REQUESTS /* @min:%2esendQueuedRequests */](0 /* EventSendType.Batched */, _delayedBatchReason);\r\n                }\r\n                if (_immediateQueueSize > 0 && !_immediateTimer && !_paused) {\r\n                    // During initialization _profiles enforce that the direct [2] is less than real time [1] timer value\r\n                    // If the immediateTimeout is disabled the immediate events will be sent with Real Time events\r\n                    var immediateTimeOut = _profiles[_currentProfile][2];\r\n                    if (immediateTimeOut >= 0) {\r\n                        _immediateTimer = _createTimer(function () {\r\n                            _immediateTimer = null;\r\n                            // Only try to send direct events\r\n                            _sendEventsForLatencyAndAbove(4 /* EventLatencyValue.Immediate */, 0 /* EventSendType.Batched */, 1 /* SendRequestReason.NormalSchedule */);\r\n                            _scheduleTimer();\r\n                        }, immediateTimeOut);\r\n                    }\r\n                }\r\n                // During initialization the _profiles enforce that the normal [0] is a multiple of the real time [1] timer value\r\n                var timeOut = _profiles[_currentProfile][1];\r\n                if (!_scheduledTimer && !_flushCallbackTimer && timeOut >= 0 && !_paused) {\r\n                    if (_hasEvents()) {\r\n                        _scheduledTimer = _createTimer(function () {\r\n                            _scheduledTimer = null;\r\n                            _sendEventsForLatencyAndAbove(_timerCount === 0 ? 3 /* EventLatencyValue.RealTime */ : 1 /* EventLatencyValue.Normal */, 0 /* EventSendType.Batched */, 1 /* SendRequestReason.NormalSchedule */);\r\n                            // Increment the count for next cycle\r\n                            _timerCount++;\r\n                            _timerCount %= 2;\r\n                            _scheduleTimer();\r\n                        }, timeOut);\r\n                    }\r\n                    else {\r\n                        _timerCount = 0;\r\n                    }\r\n                }\r\n            }\r\n            _self[_DYN__BACK_OFF_TRANSMISSI12 /* @min:%2e_backOffTransmission */] = function () {\r\n                if (_currentBackoffCount < MaxBackoffCount) {\r\n                    _currentBackoffCount++;\r\n                    _clearScheduledTimer();\r\n                    _scheduleTimer();\r\n                }\r\n            };\r\n            _self._clearBackOff = function () {\r\n                if (_currentBackoffCount) {\r\n                    _currentBackoffCount = 0;\r\n                    _clearScheduledTimer();\r\n                    _scheduleTimer();\r\n                }\r\n            };\r\n            function _initDefaults() {\r\n                _postConfig = null;\r\n                _isTeardownCalled = false;\r\n                _flushCallbackQueue = [];\r\n                _flushCallbackTimer = null;\r\n                _paused = false;\r\n                _immediateQueueSize = 0;\r\n                _immediateQueueSizeLimit = 500;\r\n                _queueSize = 0;\r\n                _queueSizeLimit = MaxEventsLimitInMem;\r\n                _profiles = {};\r\n                _currentProfile = RT_PROFILE;\r\n                _scheduledTimer = null;\r\n                _immediateTimer = null;\r\n                _currentBackoffCount = 0;\r\n                _timerCount = 0;\r\n                _batchQueues = {};\r\n                _autoFlushEventsLimit = 0;\r\n                _unloadHandlersAdded = false;\r\n                // either MaxBatchSize * (1+ Max Connections) or _queueLimit / 6 (where 3 latency Queues [normal, realtime, cost deferred] * 2 [allow half full -- allow for retry])\r\n                _autoFlushBatchLimit = 0;\r\n                _delayedBatchSendLatency = -1;\r\n                _delayedBatchReason = null;\r\n                _optimizeObject = true;\r\n                _isPageUnloadTriggered = false;\r\n                _maxEventSendAttempts = MaxSendAttempts;\r\n                _maxUnloadEventSendAttempts = MaxSyncUnloadSendAttempts;\r\n                _evtNamespace = null;\r\n                _overrideInstrumentationKey = null;\r\n                _disableTelemetry = false;\r\n                _timeoutWrapper = createTimeoutWrapper();\r\n                _httpManager = new HttpManager(MaxNumberEventPerBatch, MaxConnections, MaxRequestRetriesBeforeBackoff, {\r\n                    requeue: _requeueEvents,\r\n                    send: _sendingEvent,\r\n                    sent: _eventsSentEvent,\r\n                    drop: _eventsDropped,\r\n                    rspFail: _eventsResponseFail,\r\n                    oth: _otherEvent\r\n                });\r\n                _initializeProfiles();\r\n                _clearQueues();\r\n                _setAutoLimits();\r\n            }\r\n            function _createTimer(theTimerFunc, timeOut) {\r\n                // If the transmission is backed off make the timer at least 1 sec to allow for back off.\r\n                if (timeOut === 0 && _currentBackoffCount) {\r\n                    timeOut = 1;\r\n                }\r\n                var timerMultiplier = 1000;\r\n                if (_currentBackoffCount) {\r\n                    timerMultiplier = retryPolicyGetMillisToBackoffForRetry(_currentBackoffCount - 1);\r\n                }\r\n                return _timeoutWrapper.set(theTimerFunc, timeOut * timerMultiplier);\r\n            }\r\n            function _clearScheduledTimer() {\r\n                if (_scheduledTimer !== null) {\r\n                    _scheduledTimer.cancel();\r\n                    _scheduledTimer = null;\r\n                    _timerCount = 0;\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            // Try to send all queued events using beacons if available\r\n            function _releaseAllQueues(sendType, sendReason) {\r\n                _clearScheduledTimer();\r\n                // Cancel all flush callbacks\r\n                if (_flushCallbackTimer) {\r\n                    _flushCallbackTimer.cancel();\r\n                    _flushCallbackTimer = null;\r\n                }\r\n                if (!_paused) {\r\n                    // Queue all the remaining requests to be sent. The requests will be sent using HTML5 Beacons if they are available.\r\n                    _sendEventsForLatencyAndAbove(1 /* EventLatencyValue.Normal */, sendType, sendReason);\r\n                }\r\n            }\r\n            /**\r\n             * Add empty queues for all latencies in the inbound queues map. This is called\r\n             * when Transmission Manager is being flushed. This ensures that new events added\r\n             * after flush are stored separately till we flush the current events.\r\n             */\r\n            function _clearQueues() {\r\n                _batchQueues[4 /* EventLatencyValue.Immediate */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n                _batchQueues[3 /* EventLatencyValue.RealTime */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n                _batchQueues[2 /* EventLatencyValue.CostDeferred */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n                _batchQueues[1 /* EventLatencyValue.Normal */] = {\r\n                    batches: [],\r\n                    iKeyMap: {}\r\n                };\r\n            }\r\n            function _getEventBatch(iKey, latency, create) {\r\n                var batchQueue = _batchQueues[latency];\r\n                if (!batchQueue) {\r\n                    latency = 1 /* EventLatencyValue.Normal */;\r\n                    batchQueue = _batchQueues[latency];\r\n                }\r\n                var eventBatch = batchQueue.iKeyMap[iKey];\r\n                if (!eventBatch && create) {\r\n                    eventBatch = EventBatch.create(iKey);\r\n                    batchQueue.batches[_DYN_PUSH /* @min:%2epush */](eventBatch);\r\n                    batchQueue.iKeyMap[iKey] = eventBatch;\r\n                }\r\n                return eventBatch;\r\n            }\r\n            function _performAutoFlush(isAsync, doFlush) {\r\n                // Only perform the auto flush check if the httpManager has an idle connection and we are not in a backoff situation\r\n                if (_httpManager[_DYN_CAN_SEND_REQUEST /* @min:%2ecanSendRequest */]() && !_currentBackoffCount) {\r\n                    if (_autoFlushEventsLimit > 0 && _queueSize > _autoFlushEventsLimit) {\r\n                        // Force flushing\r\n                        doFlush = true;\r\n                    }\r\n                    if (doFlush && _flushCallbackTimer == null) {\r\n                        // Auto flush the queue, adding a callback to avoid the creation of a promise\r\n                        _self.flush(isAsync, function () { }, 20 /* SendRequestReason.MaxQueuedEvents */);\r\n                    }\r\n                }\r\n            }\r\n            function _addEventToProperQueue(event, append) {\r\n                // v8 performance optimization for iterating over the keys\r\n                if (_optimizeObject) {\r\n                    event = optimizeObject(event);\r\n                }\r\n                var latency = event[_DYN_LATENCY /* @min:%2elatency */];\r\n                var eventBatch = _getEventBatch(event[_DYN_I_KEY /* @min:%2eiKey */], latency, true);\r\n                if (eventBatch.addEvent(event)) {\r\n                    if (latency !== 4 /* EventLatencyValue.Immediate */) {\r\n                        _queueSize++;\r\n                        // Check for auto flushing based on total events in the queue, but not for requeued or retry events\r\n                        if (append && event[_DYN_SEND_ATTEMPT /* @min:%2esendAttempt */] === 0) {\r\n                            // Force the flushing of the batch if the batch (specific iKey / latency combination) reaches it's auto flush limit\r\n                            _performAutoFlush(!event.sync, _autoFlushBatchLimit > 0 && eventBatch[_DYN_COUNT /* @min:%2ecount */]() >= _autoFlushBatchLimit);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Direct events don't need auto flushing as they are scheduled (by default) for immediate delivery\r\n                        _immediateQueueSize++;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            function _dropEventWithLatencyOrLess(iKey, latency, currentLatency, dropNumber) {\r\n                while (currentLatency <= latency) {\r\n                    var eventBatch = _getEventBatch(iKey, latency, true);\r\n                    if (eventBatch && eventBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                        // Dropped oldest events from lowest possible latency\r\n                        var droppedEvents = eventBatch[_DYN_SPLIT /* @min:%2esplit */](0, dropNumber);\r\n                        var droppedCount = droppedEvents[_DYN_COUNT /* @min:%2ecount */]();\r\n                        if (droppedCount > 0) {\r\n                            if (currentLatency === 4 /* EventLatencyValue.Immediate */) {\r\n                                _immediateQueueSize -= droppedCount;\r\n                            }\r\n                            else {\r\n                                _queueSize -= droppedCount;\r\n                            }\r\n                            _notifyBatchEvents(strEventsDiscarded, [droppedEvents], EventsDiscardedReason.QueueFull);\r\n                            return true;\r\n                        }\r\n                    }\r\n                    currentLatency++;\r\n                }\r\n                // Unable to drop any events -- lets just make sure the queue counts are correct to avoid exhaustion\r\n                _resetQueueCounts();\r\n                return false;\r\n            }\r\n            /**\r\n             * Internal helper to reset the queue counts, used as a backstop to avoid future queue exhaustion errors\r\n             * that might occur because of counting issues.\r\n             */\r\n            function _resetQueueCounts() {\r\n                var immediateQueue = 0;\r\n                var normalQueue = 0;\r\n                var _loop_1 = function (latency) {\r\n                    var batchQueue = _batchQueues[latency];\r\n                    if (batchQueue && batchQueue[_DYN_BATCHES /* @min:%2ebatches */]) {\r\n                        arrForEach(batchQueue[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                            if (latency === 4 /* EventLatencyValue.Immediate */) {\r\n                                immediateQueue += theBatch[_DYN_COUNT /* @min:%2ecount */]();\r\n                            }\r\n                            else {\r\n                                normalQueue += theBatch[_DYN_COUNT /* @min:%2ecount */]();\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                for (var latency = 1 /* EventLatencyValue.Normal */; latency <= 4 /* EventLatencyValue.Immediate */; latency++) {\r\n                    _loop_1(latency);\r\n                }\r\n                _queueSize = normalQueue;\r\n                _immediateQueueSize = immediateQueue;\r\n            }\r\n            function _queueBatches(latency, sendType, sendReason) {\r\n                var eventsQueued = false;\r\n                var isAsync = sendType === 0 /* EventSendType.Batched */;\r\n                // Only queue batches (to the HttpManager) if this is a sync request or the httpManager has an idle connection\r\n                // Thus keeping the events within the PostChannel until the HttpManager has a connection available\r\n                // This is so we can drop \"old\" events if the queue is getting full because we can't successfully send events\r\n                if (!isAsync || _httpManager[_DYN_CAN_SEND_REQUEST /* @min:%2ecanSendRequest */]()) {\r\n                    doPerf(_self.core, function () { return \"PostChannel._queueBatches\"; }, function () {\r\n                        var droppedEvents = [];\r\n                        var latencyToProcess = 4 /* EventLatencyValue.Immediate */;\r\n                        while (latencyToProcess >= latency) {\r\n                            var batchQueue = _batchQueues[latencyToProcess];\r\n                            if (batchQueue && batchQueue.batches && batchQueue.batches[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                                arrForEach(batchQueue[_DYN_BATCHES /* @min:%2ebatches */], function (theBatch) {\r\n                                    // Add the batch to the http manager to send the requests\r\n                                    if (!_httpManager.addBatch(theBatch)) {\r\n                                        // The events from this iKey are being dropped (killed)\r\n                                        droppedEvents = droppedEvents[_DYN_CONCAT /* @min:%2econcat */](theBatch[_DYN_EVENTS /* @min:%2eevents */]());\r\n                                    }\r\n                                    else {\r\n                                        eventsQueued = eventsQueued || (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0);\r\n                                    }\r\n                                    if (latencyToProcess === 4 /* EventLatencyValue.Immediate */) {\r\n                                        _immediateQueueSize -= theBatch[_DYN_COUNT /* @min:%2ecount */]();\r\n                                    }\r\n                                    else {\r\n                                        _queueSize -= theBatch[_DYN_COUNT /* @min:%2ecount */]();\r\n                                    }\r\n                                });\r\n                                // Remove all batches from this Queue\r\n                                batchQueue[_DYN_BATCHES /* @min:%2ebatches */] = [];\r\n                                batchQueue.iKeyMap = {};\r\n                            }\r\n                            latencyToProcess--;\r\n                        }\r\n                        if (droppedEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                            _notifyEvents(strEventsDiscarded, droppedEvents, EventsDiscardedReason.KillSwitch);\r\n                        }\r\n                        if (eventsQueued && _delayedBatchSendLatency >= latency) {\r\n                            // We have queued events at the same level as the delayed values so clear the setting\r\n                            _delayedBatchSendLatency = -1;\r\n                            _delayedBatchReason = 0 /* SendRequestReason.Undefined */;\r\n                        }\r\n                    }, function () { return ({ latency: latency, sendType: sendType, sendReason: sendReason }); }, !isAsync);\r\n                }\r\n                else {\r\n                    // remember the min latency so that we can re-trigger later\r\n                    _delayedBatchSendLatency = _delayedBatchSendLatency >= 0 ? Math.min(_delayedBatchSendLatency, latency) : latency;\r\n                    _delayedBatchReason = Math.max(_delayedBatchReason, sendReason);\r\n                }\r\n                return eventsQueued;\r\n            }\r\n            /**\r\n             * This is the callback method is called as part of the manual flushing process.\r\n             * @param callback\r\n             * @param sendReason\r\n             */\r\n            function _flushImpl(callback, sendReason) {\r\n                // Add any additional queued events and cause all queued events to be sent asynchronously\r\n                _sendEventsForLatencyAndAbove(1 /* EventLatencyValue.Normal */, 0 /* EventSendType.Batched */, sendReason);\r\n                // All events (should) have been queue -- lets just make sure the queue counts are correct to avoid queue exhaustion (previous bug #9685112)\r\n                _resetQueueCounts();\r\n                _waitForIdleManager(function () {\r\n                    // Only called AFTER the httpManager does not have any outstanding requests\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                    if (_flushCallbackQueue[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                        _flushCallbackTimer = _createTimer(function () {\r\n                            _flushCallbackTimer = null;\r\n                            _flushImpl(_flushCallbackQueue.shift(), sendReason);\r\n                        }, 0);\r\n                    }\r\n                    else {\r\n                        // No more flush requests\r\n                        _flushCallbackTimer = null;\r\n                        // Restart the normal timer schedule\r\n                        _scheduleTimer();\r\n                    }\r\n                });\r\n            }\r\n            function _waitForIdleManager(callback) {\r\n                if (_httpManager[_DYN_IS_COMPLETELY_IDLE /* @min:%2eisCompletelyIdle */]()) {\r\n                    callback();\r\n                }\r\n                else {\r\n                    _flushCallbackTimer = _createTimer(function () {\r\n                        _flushCallbackTimer = null;\r\n                        _waitForIdleManager(callback);\r\n                    }, FlushCheckTimer);\r\n                }\r\n            }\r\n            /**\r\n             * Resets the transmit profiles to the default profiles of Real Time, Near Real Time\r\n             * and Best Effort. This removes all the custom profiles that were loaded.\r\n             */\r\n            function _resetTransmitProfiles() {\r\n                _clearScheduledTimer();\r\n                _initializeProfiles();\r\n                _currentProfile = RT_PROFILE;\r\n                _scheduleTimer();\r\n            }\r\n            function _initializeProfiles() {\r\n                _profiles = {};\r\n                _profiles[RT_PROFILE] = [2, 1, 0];\r\n                _profiles[NRT_PROFILE] = [6, 3, 0];\r\n                _profiles[BE_PROFILE] = [18, 9, 0];\r\n            }\r\n            /**\r\n             * The notification handler for requeue events\r\n             * @ignore\r\n             */\r\n            function _requeueEvents(batches, reason) {\r\n                var droppedEvents = [];\r\n                var maxSendAttempts = _maxEventSendAttempts;\r\n                if (_isPageUnloadTriggered) {\r\n                    // If a page unlaod has been triggered reduce the number of times we try to \"retry\"\r\n                    maxSendAttempts = _maxUnloadEventSendAttempts;\r\n                }\r\n                arrForEach(batches, function (theBatch) {\r\n                    if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                        arrForEach(theBatch[_DYN_EVENTS /* @min:%2eevents */](), function (theEvent) {\r\n                            if (theEvent) {\r\n                                // Check if the request being added back is for a sync event in which case mark it no longer a sync event\r\n                                if (theEvent[_DYN_SYNC /* @min:%2esync */]) {\r\n                                    theEvent[_DYN_LATENCY /* @min:%2elatency */] = 4 /* EventLatencyValue.Immediate */;\r\n                                    theEvent[_DYN_SYNC /* @min:%2esync */] = false;\r\n                                }\r\n                                if (theEvent[_DYN_SEND_ATTEMPT /* @min:%2esendAttempt */] < maxSendAttempts) {\r\n                                    // Reset the event timings\r\n                                    setProcessTelemetryTimings(theEvent, _self[_DYN_IDENTIFIER /* @min:%2eidentifier */]);\r\n                                    _addEventToQueues(theEvent, false);\r\n                                }\r\n                                else {\r\n                                    droppedEvents[_DYN_PUSH /* @min:%2epush */](theEvent);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                if (droppedEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _notifyEvents(strEventsDiscarded, droppedEvents, EventsDiscardedReason.NonRetryableStatus);\r\n                }\r\n                if (_isPageUnloadTriggered) {\r\n                    // Unload event has been received so we need to try and flush new events\r\n                    _releaseAllQueues(2 /* EventSendType.SendBeacon */, 2 /* SendRequestReason.Unload */);\r\n                }\r\n            }\r\n            function _callNotification(evtName, theArgs) {\r\n                var manager = (_notificationManager || {});\r\n                var notifyFunc = manager[evtName];\r\n                if (notifyFunc) {\r\n                    try {\r\n                        notifyFunc.apply(manager, theArgs);\r\n                    }\r\n                    catch (e) {\r\n                        _throwInternal(_self.diagLog(), 1 /* eLoggingSeverity.CRITICAL */, 74 /* _eInternalMessageId.NotificationException */, evtName + \" notification failed: \" + e);\r\n                    }\r\n                }\r\n            }\r\n            function _notifyEvents(evtName, theEvents) {\r\n                var extraArgs = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    extraArgs[_i - 2] = arguments[_i];\r\n                }\r\n                if (theEvents && theEvents[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _callNotification(evtName, [theEvents][_DYN_CONCAT /* @min:%2econcat */](extraArgs));\r\n                }\r\n            }\r\n            function _notifyBatchEvents(evtName, batches) {\r\n                var extraArgs = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    extraArgs[_i - 2] = arguments[_i];\r\n                }\r\n                if (batches && batches[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    arrForEach(batches, function (theBatch) {\r\n                        if (theBatch && theBatch[_DYN_COUNT /* @min:%2ecount */]() > 0) {\r\n                            _callNotification(evtName, [theBatch.events()][_DYN_CONCAT /* @min:%2econcat */](extraArgs));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            /**\r\n             * The notification handler for when batches are about to be sent\r\n             * @ignore\r\n             */\r\n            function _sendingEvent(batches, reason, isSyncRequest) {\r\n                if (batches && batches[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                    _callNotification(\"eventsSendRequest\", [(reason >= 1000 /* EventBatchNotificationReason.SendingUndefined */ && reason <= 1999 /* EventBatchNotificationReason.SendingEventMax */ ?\r\n                            reason - 1000 /* EventBatchNotificationReason.SendingUndefined */ :\r\n                            0 /* SendRequestReason.Undefined */), isSyncRequest !== true]);\r\n                }\r\n            }\r\n            /**\r\n             * This event represents that a batch of events have been successfully sent and a response received\r\n             * @param batches The notification handler for when the batches have been successfully sent\r\n             * @param reason For this event the reason will always be EventBatchNotificationReason.Complete\r\n             */\r\n            function _eventsSentEvent(batches, reason) {\r\n                _notifyBatchEvents(\"eventsSent\", batches, reason);\r\n                // Try and schedule the processing timer if we have events\r\n                _scheduleTimer();\r\n            }\r\n            function _eventsDropped(batches, reason) {\r\n                _notifyBatchEvents(strEventsDiscarded, batches, (reason >= 8000 /* EventBatchNotificationReason.EventsDropped */ && reason <= 8999 /* EventBatchNotificationReason.EventsDroppedMax */ ?\r\n                    reason - 8000 /* EventBatchNotificationReason.EventsDropped */ :\r\n                    EventsDiscardedReason.Unknown));\r\n            }\r\n            function _eventsResponseFail(batches) {\r\n                _notifyBatchEvents(strEventsDiscarded, batches, EventsDiscardedReason.NonRetryableStatus);\r\n                // Try and schedule the processing timer if we have events\r\n                _scheduleTimer();\r\n            }\r\n            function _otherEvent(batches, reason) {\r\n                _notifyBatchEvents(strEventsDiscarded, batches, EventsDiscardedReason.Unknown);\r\n                // Try and schedule the processing timer if we have events\r\n                _scheduleTimer();\r\n            }\r\n            function _setAutoLimits() {\r\n                if (!_disableAutoBatchFlushLimit) {\r\n                    _autoFlushBatchLimit = Math.max(MaxNumberEventPerBatch * (MaxConnections + 1), _queueSizeLimit / 6);\r\n                }\r\n                else {\r\n                    _autoFlushBatchLimit = 0;\r\n                }\r\n            }\r\n        });\r\n        return _this;\r\n    }\r\n// Removed Stub for PostChannel.prototype.initialize.\r\n// Removed Stub for PostChannel.prototype.processTelemetry.\r\n// Removed Stub for PostChannel.prototype.setEventQueueLimits.\r\n// Removed Stub for PostChannel.prototype.pause.\r\n// Removed Stub for PostChannel.prototype.resume.\r\n// Removed Stub for PostChannel.prototype.addResponseHandler.\r\n// Removed Stub for PostChannel.prototype.flush.\r\n// Removed Stub for PostChannel.prototype.setMsaAuthTicket.\r\n// Removed Stub for PostChannel.prototype.setAuthPluginHeader.\r\n// Removed Stub for PostChannel.prototype.removeAuthPluginHeader.\r\n// Removed Stub for PostChannel.prototype.hasEvents.\r\n// Removed Stub for PostChannel.prototype._loadTransmitProfiles.\r\n// Removed Stub for PostChannel.prototype._setTransmitProfile.\r\n// Removed Stub for PostChannel.prototype._backOffTransmission.\r\n// Removed Stub for PostChannel.prototype._clearBackOff.\r\n// Removed Stub for PostChannel.prototype.getOfflineSupport.\r\n    // This is a workaround for an IE bug when using dynamicProto() with classes that don't have any\n    // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n    PostChannel.__ieDyn=1;\n\n    return PostChannel;\r\n}(BaseTelemetryPlugin));\r\nexport { PostChannel };\r\n//# sourceMappingURL=PostChannel.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TargetPopulation = exports.Filters = exports.VSCodeFilterProvider = void 0;\nconst vscode = require(\"vscode\");\n/**\n * Here is where we are going to define the filters we will set.\n */\nclass VSCodeFilterProvider {\n    constructor(extensionName, extensionVersion, targetPopulation) {\n        this.extensionName = extensionName;\n        this.extensionVersion = extensionVersion;\n        this.targetPopulation = targetPopulation;\n    }\n    /**\n     * Returns a version string that can be parsed into a .NET Build object\n     * by removing the tag suffix (for example -dev).\n     *\n     * @param version Version string to be trimmed.\n     */\n    static trimVersionSuffix(version) {\n        const regex = /\\-[a-zA-Z0-9]+$/;\n        const result = version.split(regex);\n        return result[0];\n    }\n    getFilterValue(filter) {\n        switch (filter) {\n            case Filters.ApplicationVersion:\n                return VSCodeFilterProvider.trimVersionSuffix(vscode.version);\n            case Filters.Build:\n                return vscode.env.appName;\n            case Filters.ClientId:\n                return vscode.env.machineId;\n            case Filters.ExtensionName:\n                return this.extensionName;\n            case Filters.ExtensionVersion:\n                return VSCodeFilterProvider.trimVersionSuffix(this.extensionVersion);\n            case Filters.Language:\n                return vscode.env.language;\n            case Filters.TargetPopulation:\n                return this.targetPopulation;\n            default:\n                return '';\n        }\n    }\n    getFilters() {\n        let filters = new Map();\n        let filterValues = Object.values(Filters);\n        for (let value of filterValues) {\n            filters.set(value, this.getFilterValue(value));\n        }\n        return filters;\n    }\n}\nexports.VSCodeFilterProvider = VSCodeFilterProvider;\n/*\nBased upon the official VSCode currently existing filters in the\nExP backend for the VSCode cluster.\nhttps://experimentation.visualstudio.com/Analysis%20and%20Experimentation/_git/AnE.ExP.TAS.TachyonHost.Configuration?path=%2FConfigurations%2Fvscode%2Fvscode.json&version=GBmaster\n\"X-MSEdge-Market\": \"detection.market\",\n\"X-FD-Corpnet\": \"detection.corpnet\",\n\"X-VSCode–AppVersion\": \"appversion\",\n\"X-VSCode-Build\": \"build\",\n\"X-MSEdge-ClientId\": \"clientid\",\n\"X-VSCode-ExtensionName\": \"extensionname\",\n\"X-VSCode-ExtensionVersion\": \"extensionversion\",\n\"X-VSCode-TargetPopulation\": \"targetpopulation\",\n\"X-VSCode-Language\": \"language\"\n*/\n/**\n * All available filters, can be updated.\n */\nvar Filters;\n(function (Filters) {\n    /**\n     * The market in which the extension is distributed.\n     */\n    Filters[\"Market\"] = \"X-MSEdge-Market\";\n    /**\n     * The corporation network.\n     */\n    Filters[\"CorpNet\"] = \"X-FD-Corpnet\";\n    /**\n     * Version of the application which uses experimentation service.\n     */\n    Filters[\"ApplicationVersion\"] = \"X-VSCode-AppVersion\";\n    /**\n     * Insiders vs Stable.\n     */\n    Filters[\"Build\"] = \"X-VSCode-Build\";\n    /**\n     * Client Id which is used as primary unit for the experimentation.\n     */\n    Filters[\"ClientId\"] = \"X-MSEdge-ClientId\";\n    /**\n     * Extension header.\n     */\n    Filters[\"ExtensionName\"] = \"X-VSCode-ExtensionName\";\n    /**\n     * The version of the extension.\n     */\n    Filters[\"ExtensionVersion\"] = \"X-VSCode-ExtensionVersion\";\n    /**\n     * The language in use by VS Code\n     */\n    Filters[\"Language\"] = \"X-VSCode-Language\";\n    /**\n     * The target population.\n     * This is used to separate internal, early preview, GA, etc.\n     */\n    Filters[\"TargetPopulation\"] = \"X-VSCode-TargetPopulation\";\n})(Filters || (exports.Filters = Filters = {}));\n/**\n * Specifies the target population for the experimentation filter.\n */\nvar TargetPopulation;\n(function (TargetPopulation) {\n    TargetPopulation[\"Team\"] = \"team\";\n    TargetPopulation[\"Internal\"] = \"internal\";\n    TargetPopulation[\"Insiders\"] = \"insider\";\n    TargetPopulation[\"Public\"] = \"public\";\n})(TargetPopulation || (exports.TargetPopulation = TargetPopulation = {}));\n//# sourceMappingURL=VSCodeFilterProvider.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrAppend, arrForEach, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nvar _maxHooks;\r\nvar _hookAddMonitor;\r\n/**\r\n * Test hook for setting the maximum number of unload hooks and calling a monitor function when the hooks are added or removed\r\n * This allows for automatic test failure when the maximum number of unload hooks is exceeded\r\n * @param maxHooks - The maximum number of unload hooks\r\n * @param addMonitor - The monitor function to call when hooks are added or removed\r\n */\r\nexport function _testHookMaxUnloadHooksCb(maxHooks, addMonitor) {\r\n    _maxHooks = maxHooks;\r\n    _hookAddMonitor = addMonitor;\r\n}\r\n/**\r\n * Create a IUnloadHookContainer which can be used to remember unload hook functions to be executed during the component unloading\r\n * process.\r\n * @returns A new IUnloadHookContainer instance\r\n */\r\nexport function createUnloadHookContainer() {\r\n    var _hooks = [];\r\n    function _doUnload(logger) {\r\n        var oldHooks = _hooks;\r\n        _hooks = [];\r\n        // Remove all registered unload hooks\r\n        arrForEach(oldHooks, function (fn) {\r\n            // allow either rm or remove callback function\r\n            try {\r\n                (fn.rm || fn.remove).call(fn);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(logger, 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unloading:\" + dumpObj(e));\r\n            }\r\n        });\r\n        if (_maxHooks && oldHooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n            _hookAddMonitor ? _hookAddMonitor(\"doUnload\", oldHooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n        }\r\n    }\r\n    function _addHook(hooks) {\r\n        if (hooks) {\r\n            arrAppend(_hooks, hooks);\r\n            if (_maxHooks && _hooks[_DYN_LENGTH /* @min:%2elength */] > _maxHooks) {\r\n                _hookAddMonitor ? _hookAddMonitor(\"Add\", _hooks) : _throwInternal(null, 1 /* eLoggingSeverity.CRITICAL */, 48 /* _eInternalMessageId.MaxUnloadHookExceeded */, \"Max unload hooks exceeded. An excessive number of unload hooks has been detected.\");\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        run: _doUnload,\r\n        add: _addHook\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHookContainer.js.map","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass TelemetryDisabledExperimentationService {\n    constructor() {\n        this.initializePromise = Promise.resolve();\n        this.initialFetch = Promise.resolve();\n    }\n    isFlightEnabled(flight) {\n        return false;\n    }\n    isCachedFlightEnabled(flight) {\n        return Promise.resolve(false);\n    }\n    isFlightEnabledAsync(flight) {\n        return Promise.resolve(false);\n    }\n    getTreatmentVariable(configId, name) {\n        return undefined;\n    }\n    getTreatmentVariableAsync(configId, name) {\n        return Promise.resolve(undefined);\n    }\n}\nexports.default = TelemetryDisabledExperimentationService;\n//# sourceMappingURL=TelemetryDisabledExperimentationService.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { isArray, isPlainObject, objForEachKey, symbolFor, throwTypeError } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\n// Using Symbol.for so that if the same symbol was already created it would be returned\r\n// To handle multiple instances using potentially different versions we are not using\r\n// createUniqueNamespace()\r\nexport var CFG_HANDLER_LINK = symbolFor(\"[[ai_dynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects / arrays with if they should not be converted\r\n */\r\nvar BLOCK_DYNAMIC = symbolFor(\"[[ai_blkDynCfg_1]]\");\r\n/**\r\n * @internal\r\n * @ignore\r\n * The symbol to tag objects to indicate that when included into the configuration that\r\n * they should be converted into a trackable dynamic object.\r\n */\r\nvar FORCE_DYNAMIC = symbolFor(\"[[ai_frcDynCfg_1]]\");\r\nexport function _cfgDeepCopy(source) {\r\n    if (source) {\r\n        var target_1;\r\n        if (isArray(source)) {\r\n            target_1 = [];\r\n            target_1[_DYN_LENGTH /* @min:%2elength */] = source[_DYN_LENGTH /* @min:%2elength */];\r\n        }\r\n        else if (isPlainObject(source)) {\r\n            target_1 = {};\r\n        }\r\n        if (target_1) {\r\n            // Copying index values by property name as the extensionConfig can be an array or object\r\n            objForEachKey(source, function (key, value) {\r\n                // Perform a deep copy of the object\r\n                target_1[key] = _cfgDeepCopy(value);\r\n            });\r\n            return target_1;\r\n        }\r\n    }\r\n    return source;\r\n}\r\n/**\r\n * @internal\r\n * Get the dynamic config handler if the value is already dynamic\r\n * @param value\r\n * @returns\r\n */\r\nexport function getDynamicConfigHandler(value) {\r\n    if (value) {\r\n        var handler = value[CFG_HANDLER_LINK] || value;\r\n        if (handler.cfg && (handler.cfg === value || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n            return handler;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Mark the provided value so that if it's included into the configuration it will NOT have\r\n * its properties converted into a dynamic (reactive) object. If the object is not a plain object\r\n * or an array (ie. a class) this function has not affect as only Objects and Arrays are converted\r\n * into dynamic objects in the dynamic configuration.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * You should only need to use this function, if you are creating dynamic \"classes\" from objects\r\n * which confirm to the require interface. A common case for this is during unit testing where it's\r\n * easier to create mock extensions.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed\r\n *\r\n * @example\r\n * ```ts\r\n * // This is a valid \"extension\", but it is technically an object\r\n * // So when included in the config.extensions it WILL be cloned and then\r\n * // converted into a dynamic object, where all of its properties will become\r\n * // get/set object properties and will be tracked. While this WILL still\r\n * // function, when attempt to use a mocking framework on top of this the\r\n * // functions are now technically get accessors which return a function\r\n * // and this can cause some mocking frameworks to fail.\r\n * let mockChannel = {\r\n *      pause: () => { },\r\n*      resume: () => { },\r\n*      teardown: () => { },\r\n*      flush: (async: any, callBack: any) => { },\r\n*      processTelemetry: (env: any) => { },\r\n*      setNextPlugin: (next: any) => { },\r\n*      initialize: (config: any, core: any, extensions: any) => { },\r\n*      identifier: \"testChannel\",\r\n*      priority: 1003\r\n* };\r\n * ```\r\n * @param value - The object that you want to block from being converted into a\r\n * trackable dynamic object\r\n * @returns The original value\r\n */\r\nexport function blockDynamicConversion(value) {\r\n    if (value && (isPlainObject(value) || isArray(value))) {\r\n        try {\r\n            value[BLOCK_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * This is the reverse case of {@link blockDynamicConversion} in that this will tag an\r\n * object to indicate that it should always be converted into a dynamic trackable object\r\n * even when not an object or array. So all properties of this object will become\r\n * get / set accessor functions.\r\n *\r\n * When you have tagged a value as both {@link forceDynamicConversion} and blocked force will take precedence.\r\n *\r\n * If `value` is falsy (null / undefined / 0 / empty string etc) it will not be tagged and\r\n * if there is an exception adding the property to the value (because its frozen etc) the\r\n * exception will be swallowed.\r\n * @param value - The object that should be tagged and converted if included into a dynamic\r\n * configuration.\r\n * @returns The original value\r\n */\r\nexport function forceDynamicConversion(value) {\r\n    if (value) {\r\n        try {\r\n            value[FORCE_DYNAMIC] = true;\r\n        }\r\n        catch (e) {\r\n            // Don't throw for this case as it's an ask only\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * @internal\r\n * @ignore\r\n * Helper function to check whether an object can or should be converted into a dynamic\r\n * object.\r\n * @param value - The object to check whether it should be converted\r\n * @returns `true` if the value should be converted otherwise `false`.\r\n */\r\nexport function _canMakeDynamic(getFunc, state, value) {\r\n    var result = false;\r\n    // Object must exist and be truthy\r\n    if (value && !getFunc[state.blkVal]) {\r\n        // Tagged as always convert\r\n        result = value[FORCE_DYNAMIC];\r\n        // Check that it's not explicitly tagged as blocked\r\n        if (!result && !value[BLOCK_DYNAMIC]) {\r\n            // Only convert plain objects or arrays by default\r\n            result = isPlainObject(value) || isArray(value);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Throws an invalid access exception\r\n * @param message - The message to include in the exception\r\n */\r\nexport function throwInvalidAccess(message) {\r\n    throwTypeError(\"InvalidAccess:\" + message);\r\n}\r\n//# sourceMappingURL=DynamicSupport.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, createCustomError, dumpObj } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nvar aggregationErrorType;\r\n/**\r\n * Throws an Aggregation Error which includes all of the errors that led to this error occurring\r\n * @param message - The message describing the aggregation error (the sourceError details are added to this)\r\n * @param sourceErrors - An array of the errors that caused this situation\r\n */\r\nexport function throwAggregationError(message, sourceErrors) {\r\n    if (!aggregationErrorType) {\r\n        aggregationErrorType = createCustomError(\"AggregationError\", function (self, args) {\r\n            if (args[_DYN_LENGTH /* @min:%2elength */] > 1) {\r\n                // Save the provided errors\r\n                self.errors = args[1];\r\n            }\r\n        });\r\n    }\r\n    var theMessage = message || \"One or more errors occurred.\";\r\n    arrForEach(sourceErrors, function (srcError, idx) {\r\n        theMessage += \"\\n\".concat(idx, \" > \").concat(dumpObj(srcError));\r\n    });\r\n    throw new aggregationErrorType(theMessage, sourceErrors || []);\r\n}\r\n//# sourceMappingURL=AggregationError.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, isArray, objDefine, objDefineProp, objForEachKey, objGetOwnPropertyDescriptor } from \"@nevware21/ts-utils\";\r\nimport { UNDEFINED_VALUE } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_APPLY, _DYN_HDLR, _DYN_LOGGER, _DYN_PUSH, _DYN_SPLICE, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nimport { CFG_HANDLER_LINK, _canMakeDynamic, blockDynamicConversion, throwInvalidAccess } from \"./DynamicSupport\";\r\nvar arrayMethodsToPatch = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"splice\"\r\n];\r\nexport var _throwDynamicError = function (logger, name, desc, e) {\r\n    logger && logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](3 /* eLoggingSeverity.DEBUG */, 108 /* _eInternalMessageId.DynamicConfigException */, \"\".concat(desc, \" [\").concat(name, \"] failed - \") + dumpObj(e));\r\n};\r\nfunction _patchArray(state, target, name) {\r\n    if (isArray(target)) {\r\n        // Monkey Patch the methods that might change the array\r\n        arrForEach(arrayMethodsToPatch, function (method) {\r\n            var orgMethod = target[method];\r\n            target[method] = function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var result = orgMethod[_DYN_APPLY /* @min:%2eapply */](this, args);\r\n                // items may be added, removed or moved so need to make some new dynamic properties\r\n                _makeDynamicObject(state, target, name, \"Patching\");\r\n                return result;\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction _getOwnPropGetter(target, name) {\r\n    var propDesc = objGetOwnPropertyDescriptor(target, name);\r\n    return propDesc && propDesc.get;\r\n}\r\nfunction _createDynamicProperty(state, theConfig, name, value) {\r\n    // Does not appear to be dynamic so lets make it so\r\n    var detail = {\r\n        n: name,\r\n        h: [],\r\n        trk: function (handler) {\r\n            if (handler && handler.fn) {\r\n                if (arrIndexOf(detail.h, handler) === -1) {\r\n                    // Add this handler to the collection that should be notified when the value changes\r\n                    detail.h[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n                state.trk(handler, detail);\r\n            }\r\n        },\r\n        clr: function (handler) {\r\n            var idx = arrIndexOf(detail.h, handler);\r\n            if (idx !== -1) {\r\n                detail.h[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n            }\r\n        }\r\n    };\r\n    // Flag to optimize lookup response time by avoiding additional function calls\r\n    var checkDynamic = true;\r\n    var isObjectOrArray = false;\r\n    function _getProperty() {\r\n        if (checkDynamic) {\r\n            isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n            // Make sure that if it's an object that we make it dynamic\r\n            if (value && !value[CFG_HANDLER_LINK] && isObjectOrArray) {\r\n                // It doesn't look like it's already dynamic so lets make sure it's converted the object into a dynamic Config as well\r\n                value = _makeDynamicObject(state, value, name, \"Converting\");\r\n            }\r\n            // If it needed to be converted it now has been\r\n            checkDynamic = false;\r\n        }\r\n        // If there is an active handler then add it to the tracking set of handlers\r\n        var activeHandler = state.act;\r\n        if (activeHandler) {\r\n            detail.trk(activeHandler);\r\n        }\r\n        return value;\r\n    }\r\n    // Tag this getter as our dynamic property and provide shortcut for notifying a change\r\n    _getProperty[state.prop] = {\r\n        chng: function () {\r\n            state.add(detail);\r\n        }\r\n    };\r\n    function _setProperty(newValue) {\r\n        if (value !== newValue) {\r\n            if (!!_getProperty[state.ro] && !state.upd) {\r\n                // field is marked as readonly so return false\r\n                throwInvalidAccess(\"[\" + name + \"] is read-only:\" + dumpObj(theConfig));\r\n            }\r\n            if (checkDynamic) {\r\n                isObjectOrArray = isObjectOrArray || _canMakeDynamic(_getProperty, state, value);\r\n                checkDynamic = false;\r\n            }\r\n            // The value must be a plain object or an array to enforce the reference (in-place updates)\r\n            var isReferenced = isObjectOrArray && _getProperty[state.rf];\r\n            if (isObjectOrArray) {\r\n                // We are about to replace a plain object or an array\r\n                if (isReferenced) {\r\n                    // Reassign the properties from the current value to the same properties from the newValue\r\n                    // This will set properties not in the newValue to undefined\r\n                    objForEachKey(value, function (key) {\r\n                        value[key] = newValue ? newValue[key] : UNDEFINED_VALUE;\r\n                    });\r\n                    // Now assign / re-assign value with all of the keys from newValue\r\n                    try {\r\n                        objForEachKey(newValue, function (key, theValue) {\r\n                            _setDynamicProperty(state, value, key, theValue);\r\n                        });\r\n                        // Now drop newValue so when we assign value later it keeps the existing reference\r\n                        newValue = value;\r\n                    }\r\n                    catch (e) {\r\n                        // Unable to convert to dynamic property so just leave as non-dynamic\r\n                        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Assigning\", e);\r\n                        // Mark as not an object or array so we don't try and do this again\r\n                        isObjectOrArray = false;\r\n                    }\r\n                }\r\n                else if (value && value[CFG_HANDLER_LINK]) {\r\n                    // As we are replacing the value, if it's already dynamic then we need to notify the listeners\r\n                    // for every property it has already\r\n                    objForEachKey(value, function (key) {\r\n                        // Check if the value is dynamic\r\n                        var getter = _getOwnPropGetter(value, key);\r\n                        if (getter) {\r\n                            // And if it is tell it's listeners that the value has changed\r\n                            var valueState = getter[state.prop];\r\n                            valueState && valueState.chng();\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            if (newValue !== value) {\r\n                var newIsObjectOrArray = newValue && _canMakeDynamic(_getProperty, state, newValue);\r\n                if (!isReferenced && newIsObjectOrArray) {\r\n                    // As the newValue is an object/array lets preemptively make it dynamic\r\n                    newValue = _makeDynamicObject(state, newValue, name, \"Converting\");\r\n                }\r\n                // Now assign the internal \"value\" to the newValue\r\n                value = newValue;\r\n                isObjectOrArray = newIsObjectOrArray;\r\n            }\r\n            // Cause any listeners to be scheduled for notification\r\n            state.add(detail);\r\n        }\r\n    }\r\n    objDefine(theConfig, detail.n, { g: _getProperty, s: _setProperty });\r\n}\r\nexport function _setDynamicProperty(state, target, name, value) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        if (!isDynamic) {\r\n            _createDynamicProperty(state, target, name, value);\r\n        }\r\n        else {\r\n            // Looks like it's already dynamic just assign the new value\r\n            target[name] = value;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _setDynamicPropertyState(state, target, name, flags) {\r\n    if (target) {\r\n        // To be a dynamic property it needs to have a get function\r\n        var getter = _getOwnPropGetter(target, name);\r\n        var isDynamic = getter && !!getter[state.prop];\r\n        var inPlace = flags && flags[0 /* _eSetDynamicPropertyFlags.inPlace */];\r\n        var rdOnly = flags && flags[1 /* _eSetDynamicPropertyFlags.readOnly */];\r\n        var blkProp = flags && flags[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */];\r\n        if (!isDynamic) {\r\n            if (blkProp) {\r\n                try {\r\n                    // Attempt to mark the target as blocked from conversion\r\n                    blockDynamicConversion(target);\r\n                }\r\n                catch (e) {\r\n                    _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"Blocking\", e);\r\n                }\r\n            }\r\n            try {\r\n                // Make sure it's dynamic so that we can tag the property as per the state\r\n                _setDynamicProperty(state, target, name, target[name]);\r\n                getter = _getOwnPropGetter(target, name);\r\n            }\r\n            catch (e) {\r\n                // Unable to convert to dynamic property so just leave as non-dynamic\r\n                _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, \"State\", e);\r\n            }\r\n        }\r\n        // Assign the optional flags if true\r\n        if (inPlace) {\r\n            getter[state.rf] = inPlace;\r\n        }\r\n        if (rdOnly) {\r\n            getter[state.ro] = rdOnly;\r\n        }\r\n        if (blkProp) {\r\n            getter[state.blkVal] = true;\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexport function _makeDynamicObject(state, target, name, desc) {\r\n    try {\r\n        // Assign target with new value properties (converting into dynamic properties in the process)\r\n        objForEachKey(target, function (key, value) {\r\n            // Assign and/or make the property dynamic\r\n            _setDynamicProperty(state, target, key, value);\r\n        });\r\n        if (!target[CFG_HANDLER_LINK]) {\r\n            // Link the config back to the dynamic config details\r\n            objDefineProp(target, CFG_HANDLER_LINK, {\r\n                get: function () {\r\n                    return state[_DYN_HDLR /* @min:%2ehdlr */];\r\n                }\r\n            });\r\n            _patchArray(state, target, name);\r\n        }\r\n    }\r\n    catch (e) {\r\n        // Unable to convert to dynamic property so just leave as non-dynamic\r\n        _throwDynamicError((state.hdlr || {})[_DYN_LOGGER /* @min:%2elogger */], name, desc, e);\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=DynamicProperty.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { arrForEach, arrIndexOf, dumpObj, newSymbol, scheduleTimeout } from \"@nevware21/ts-utils\";\r\nimport { throwAggregationError } from \"../JavaScriptSDK/AggregationError\";\r\nimport { _DYN_BLK_VAL, _DYN_CANCEL, _DYN_HDLR, _DYN_LENGTH, _DYN_LOGGER, _DYN_NOTIFY, _DYN_PUSH, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL } from \"../__DynamicConstants\";\r\nvar symPrefix = \"[[ai_\";\r\nvar symPostfix = \"]]\";\r\nexport function _createState(cfgHandler) {\r\n    var _a;\r\n    var dynamicPropertySymbol = newSymbol(symPrefix + \"get\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReadOnly = newSymbol(symPrefix + \"ro\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyReferenced = newSymbol(symPrefix + \"rf\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyBlockValue = newSymbol(symPrefix + \"blkVal\" + cfgHandler.uid + symPostfix);\r\n    var dynamicPropertyDetail = newSymbol(symPrefix + \"dtl\" + cfgHandler.uid + symPostfix);\r\n    var _waitingHandlers = null;\r\n    var _watcherTimer = null;\r\n    var theState;\r\n    function _useHandler(activeHandler, callback) {\r\n        var prevWatcher = theState.act;\r\n        try {\r\n            theState.act = activeHandler;\r\n            if (activeHandler && activeHandler[dynamicPropertyDetail]) {\r\n                // Clear out the previously tracked details for this handler, so that access are re-evaluated\r\n                arrForEach(activeHandler[dynamicPropertyDetail], function (detail) {\r\n                    detail.clr(activeHandler);\r\n                });\r\n                activeHandler[dynamicPropertyDetail] = [];\r\n            }\r\n            callback({\r\n                cfg: cfgHandler.cfg,\r\n                set: cfgHandler.set.bind(cfgHandler),\r\n                setDf: cfgHandler[_DYN_SET_DF /* @min:%2esetDf */].bind(cfgHandler),\r\n                ref: cfgHandler.ref.bind(cfgHandler),\r\n                rdOnly: cfgHandler[_DYN_RD_ONLY /* @min:%2erdOnly */].bind(cfgHandler)\r\n            });\r\n        }\r\n        catch (e) {\r\n            var logger = cfgHandler[_DYN_LOGGER /* @min:%2elogger */];\r\n            if (logger) {\r\n                // Don't let one individual failure break everyone\r\n                logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](1 /* eLoggingSeverity.CRITICAL */, 107 /* _eInternalMessageId.ConfigWatcherException */, dumpObj(e));\r\n            }\r\n            // Re-throw the exception so that any true \"error\" is reported back to the called\r\n            throw e;\r\n        }\r\n        finally {\r\n            theState.act = prevWatcher || null;\r\n        }\r\n    }\r\n    function _notifyWatchers() {\r\n        if (_waitingHandlers) {\r\n            var notifyHandlers = _waitingHandlers;\r\n            _waitingHandlers = null;\r\n            // Stop any timer as we are running them now anyway\r\n            _watcherTimer && _watcherTimer[_DYN_CANCEL /* @min:%2ecancel */]();\r\n            _watcherTimer = null;\r\n            var watcherFailures_1 = [];\r\n            // Now run the handlers\r\n            arrForEach(notifyHandlers, function (handler) {\r\n                if (handler) {\r\n                    if (handler[dynamicPropertyDetail]) {\r\n                        arrForEach(handler[dynamicPropertyDetail], function (detail) {\r\n                            // Clear out this handler from  previously tracked details, so that access are re-evaluated\r\n                            detail.clr(handler);\r\n                        });\r\n                        handler[dynamicPropertyDetail] = null;\r\n                    }\r\n                    // The handler may have self removed as part of another handler so re-check\r\n                    if (handler.fn) {\r\n                        try {\r\n                            _useHandler(handler, handler.fn);\r\n                        }\r\n                        catch (e) {\r\n                            // Don't let a single failing watcher cause other watches to fail\r\n                            watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            // During notification we may have had additional updates -- so notify those updates as well\r\n            if (_waitingHandlers) {\r\n                try {\r\n                    _notifyWatchers();\r\n                }\r\n                catch (e) {\r\n                    watcherFailures_1[_DYN_PUSH /* @min:%2epush */](e);\r\n                }\r\n            }\r\n            if (watcherFailures_1[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n                throwAggregationError(\"Watcher error(s): \", watcherFailures_1);\r\n            }\r\n        }\r\n    }\r\n    function _addWatcher(detail) {\r\n        if (detail && detail.h[_DYN_LENGTH /* @min:%2elength */] > 0) {\r\n            if (!_waitingHandlers) {\r\n                _waitingHandlers = [];\r\n            }\r\n            if (!_watcherTimer) {\r\n                _watcherTimer = scheduleTimeout(function () {\r\n                    _watcherTimer = null;\r\n                    _notifyWatchers();\r\n                }, 0);\r\n            }\r\n            // Add all of the handlers for this detail (if not already present) - using normal for-loop for performance\r\n            for (var idx = 0; idx < detail.h[_DYN_LENGTH /* @min:%2elength */]; idx++) {\r\n                var handler = detail.h[idx];\r\n                // Add this handler to the collection of handlers to re-execute\r\n                if (handler && arrIndexOf(_waitingHandlers, handler) === -1) {\r\n                    _waitingHandlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function _trackHandler(handler, detail) {\r\n        if (handler) {\r\n            var details = handler[dynamicPropertyDetail] = handler[dynamicPropertyDetail] || [];\r\n            if (arrIndexOf(details, detail) === -1) {\r\n                // If this detail is not already listed as tracked then add it so that we re-evaluate it's usage\r\n                details[_DYN_PUSH /* @min:%2epush */](detail);\r\n            }\r\n        }\r\n    }\r\n    theState = (_a = {\r\n            prop: dynamicPropertySymbol,\r\n            ro: dynamicPropertyReadOnly,\r\n            rf: dynamicPropertyReferenced\r\n        },\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = dynamicPropertyBlockValue,\r\n        _a[_DYN_HDLR /* @min:hdlr */] = cfgHandler,\r\n        _a.add = _addWatcher,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.use = _useHandler,\r\n        _a.trk = _trackHandler,\r\n        _a);\r\n    return theState;\r\n}\r\n//# sourceMappingURL=DynamicState.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\nimport { dumpObj, isUndefined, objDefine, objForEachKey } from \"@nevware21/ts-utils\";\r\nimport { createUniqueNamespace } from \"../JavaScriptSDK/DataCacheHelper\";\r\nimport { STR_NOT_DYNAMIC_ERROR } from \"../JavaScriptSDK/InternalConstants\";\r\nimport { _DYN_BLK_VAL, _DYN_LOGGER, _DYN_NOTIFY, _DYN_RD_ONLY, _DYN_SET_DF, _DYN_THROW_INTERNAL, _DYN_WARN_TO_CONSOLE, _DYN_WATCH } from \"../__DynamicConstants\";\r\nimport { _applyDefaultValue } from \"./ConfigDefaults\";\r\nimport { _makeDynamicObject, _setDynamicProperty, _setDynamicPropertyState, _throwDynamicError } from \"./DynamicProperty\";\r\nimport { _createState } from \"./DynamicState\";\r\nimport { CFG_HANDLER_LINK, _cfgDeepCopy, getDynamicConfigHandler, throwInvalidAccess } from \"./DynamicSupport\";\r\n/**\r\n * Identifies a function which will be re-called whenever any of it's accessed configuration values\r\n * change.\r\n * @param configHandler - The callback that will be called for the initial request and then whenever any\r\n * accessed configuration changes are identified.\r\n */\r\nfunction _createAndUseHandler(state, configHandler) {\r\n    var handler = {\r\n        fn: configHandler,\r\n        rm: function () {\r\n            // Clear all references to the handler so it can be garbage collected\r\n            // This will also cause this handler to never get called and eventually removed\r\n            handler.fn = null;\r\n            state = null;\r\n            configHandler = null;\r\n        }\r\n    };\r\n    objDefine(handler, \"toJSON\", { v: function () { return \"WatcherHandler\" + (handler.fn ? \"\" : \"[X]\"); } });\r\n    state.use(handler, configHandler);\r\n    return handler;\r\n}\r\n/**\r\n * Creates the dynamic config handler and associates with the target config as the root object\r\n * @param target - The config that you want to be root of the dynamic config\r\n * @param inPlace - Should the passed config be converted in-place or a new proxy returned\r\n * @returns The existing dynamic handler or a new instance with the provided config values\r\n */\r\nfunction _createDynamicHandler(logger, target, inPlace) {\r\n    var _a;\r\n    var dynamicHandler = getDynamicConfigHandler(target);\r\n    if (dynamicHandler) {\r\n        // The passed config is already dynamic so return it's tracker\r\n        return dynamicHandler;\r\n    }\r\n    var uid = createUniqueNamespace(\"dyncfg\", true);\r\n    var newTarget = (target && inPlace !== false) ? target : _cfgDeepCopy(target);\r\n    var theState;\r\n    function _notifyWatchers() {\r\n        theState[_DYN_NOTIFY /* @min:%2enotify */]();\r\n    }\r\n    function _setValue(target, name, value) {\r\n        try {\r\n            target = _setDynamicProperty(theState, target, name, value);\r\n        }\r\n        catch (e) {\r\n            // Unable to convert to dynamic property so just leave as non-dynamic\r\n            _throwDynamicError(logger, name, \"Setting value\", e);\r\n        }\r\n        return target[name];\r\n    }\r\n    function _watch(configHandler) {\r\n        return _createAndUseHandler(theState, configHandler);\r\n    }\r\n    function _block(configHandler, allowUpdate) {\r\n        theState.use(null, function (details) {\r\n            var prevUpd = theState.upd;\r\n            try {\r\n                if (!isUndefined(allowUpdate)) {\r\n                    theState.upd = allowUpdate;\r\n                }\r\n                configHandler(details);\r\n            }\r\n            finally {\r\n                theState.upd = prevUpd;\r\n            }\r\n        });\r\n    }\r\n    function _ref(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as referenced with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[0 /* _eSetDynamicPropertyFlags.inPlace */] = true, _a))[name];\r\n    }\r\n    function _rdOnly(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[1 /* _eSetDynamicPropertyFlags.readOnly */] = true, _a))[name];\r\n    }\r\n    function _blkPropValue(target, name) {\r\n        var _a;\r\n        // Make sure it's dynamic and mark as readonly with it's current value\r\n        return _setDynamicPropertyState(theState, target, name, (_a = {}, _a[2 /* _eSetDynamicPropertyFlags.blockDynamicProperty */] = true, _a))[name];\r\n    }\r\n    function _applyDefaults(theConfig, defaultValues) {\r\n        if (defaultValues) {\r\n            // Resolve/apply the defaults\r\n            objForEachKey(defaultValues, function (name, value) {\r\n                // Sets the value and makes it dynamic (if it doesn't already exist)\r\n                _applyDefaultValue(cfgHandler, theConfig, name, value);\r\n            });\r\n        }\r\n        return theConfig;\r\n    }\r\n    var cfgHandler = (_a = {\r\n            uid: null,\r\n            cfg: newTarget\r\n        },\r\n        _a[_DYN_LOGGER /* @min:logger */] = logger,\r\n        _a[_DYN_NOTIFY /* @min:notify */] = _notifyWatchers,\r\n        _a.set = _setValue,\r\n        _a[_DYN_SET_DF /* @min:setDf */] = _applyDefaults,\r\n        _a[_DYN_WATCH /* @min:watch */] = _watch,\r\n        _a.ref = _ref,\r\n        _a[_DYN_RD_ONLY /* @min:rdOnly */] = _rdOnly,\r\n        _a[_DYN_BLK_VAL /* @min:blkVal */] = _blkPropValue,\r\n        _a._block = _block,\r\n        _a);\r\n    objDefine(cfgHandler, \"uid\", {\r\n        c: false,\r\n        e: false,\r\n        w: false,\r\n        v: uid\r\n    });\r\n    theState = _createState(cfgHandler);\r\n    // Setup tracking for all defined default keys\r\n    _makeDynamicObject(theState, newTarget, \"config\", \"Creating\");\r\n    return cfgHandler;\r\n}\r\n/**\r\n * Log an invalid access message to the console\r\n * @param message\r\n */\r\nfunction _logInvalidAccess(logger, message) {\r\n    if (logger) {\r\n        logger[_DYN_WARN_TO_CONSOLE /* @min:%2ewarnToConsole */](message);\r\n        logger[_DYN_THROW_INTERNAL /* @min:%2ethrowInternal */](2 /* eLoggingSeverity.WARNING */, 108 /* _eInternalMessageId.DynamicConfigException */, message);\r\n    }\r\n    else {\r\n        // We don't have a logger so just throw an exception\r\n        throwInvalidAccess(message);\r\n    }\r\n}\r\n/**\r\n * Create or return a dynamic version of the passed config, if it is not already dynamic\r\n * @param config - The config to be converted into a dynamic config\r\n * @param defaultConfig - The default values to apply on the config if the properties don't already exist\r\n * @param inPlace - Should the config be converted in-place into a dynamic config or a new instance returned, defaults to true\r\n * @returns The dynamic config handler for the config (whether new or existing)\r\n */\r\nexport function createDynamicConfig(config, defaultConfig, logger, inPlace) {\r\n    var dynamicHandler = _createDynamicHandler(logger, config || {}, inPlace);\r\n    if (defaultConfig) {\r\n        dynamicHandler[_DYN_SET_DF /* @min:%2esetDf */](dynamicHandler.cfg, defaultConfig);\r\n    }\r\n    return dynamicHandler;\r\n}\r\n/**\r\n * Watch and track changes for accesses to the current config, the provided config MUST already be\r\n * a dynamic config or a child accessed via the dynamic config\r\n * @param config\r\n * @param configHandler\r\n * @param logger - The logger instance to use if there is no existing handler\r\n * @returns A watcher handler instance that can be used to remove itself when being unloaded\r\n * @throws TypeError if the provided config is not a dynamic config instance\r\n */\r\nexport function onConfigChange(config, configHandler, logger) {\r\n    var handler = config[CFG_HANDLER_LINK] || config;\r\n    if (handler.cfg && (handler.cfg === config || handler.cfg[CFG_HANDLER_LINK] === handler)) {\r\n        return handler[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n    }\r\n    _logInvalidAccess(logger, STR_NOT_DYNAMIC_ERROR + dumpObj(config));\r\n    return createDynamicConfig(config, null, logger)[_DYN_WATCH /* @min:%2ewatch */](configHandler);\r\n}\r\n//# sourceMappingURL=DynamicConfig.js.map","/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nvar InstantiationStatus;\n(function (InstantiationStatus) {\n    InstantiationStatus[InstantiationStatus[\"NOT_INSTANTIATED\"] = 0] = \"NOT_INSTANTIATED\";\n    InstantiationStatus[InstantiationStatus[\"INSTANTIATING\"] = 1] = \"INSTANTIATING\";\n    InstantiationStatus[InstantiationStatus[\"INSTANTIATED\"] = 2] = \"INSTANTIATED\";\n})(InstantiationStatus || (InstantiationStatus = {}));\nexport class BaseTelemetrySender {\n    constructor(key, clientFactory) {\n        // Whether or not the client has been instantiated\n        this._instantiationStatus = InstantiationStatus.NOT_INSTANTIATED;\n        // Queues used to store events until the sender is ready\n        this._eventQueue = [];\n        this._exceptionQueue = [];\n        this._clientFactory = clientFactory;\n        this._key = key;\n    }\n    /**\n     * Sends the event to the passed in telemetry client\n     * The sender does no telemetry level checks as those are done by the reporter.\n     * @param eventName The name of the event to log\n     * @param data The data contanied in the event\n     */\n    sendEventData(eventName, data) {\n        if (!this._telemetryClient) {\n            if (this._instantiationStatus !== InstantiationStatus.INSTANTIATED) {\n                this._eventQueue.push({ eventName, data });\n            }\n            return;\n        }\n        this._telemetryClient.logEvent(eventName, data);\n    }\n    /**\n     * Sends an exception to the passed in telemetry client\n     * The sender does no telemetry level checks as those are done by the reporter.\n     * @param exception The exception to collect\n     * @param data Data associated with the exception\n     */\n    sendErrorData(exception, data) {\n        if (!this._telemetryClient) {\n            if (this._instantiationStatus !== InstantiationStatus.INSTANTIATED) {\n                this._exceptionQueue.push({ exception, data });\n            }\n            return;\n        }\n        const errorData = { stack: exception.stack, message: exception.message, name: exception.name };\n        if (data) {\n            const errorProperties = data.properties || data;\n            data.properties = { ...errorProperties, ...errorData };\n        }\n        else {\n            data = { properties: errorData };\n        }\n        this._telemetryClient.logEvent(\"unhandlederror\", data);\n    }\n    /**\n     * Flushes the buffered telemetry data\n     */\n    async flush() {\n        return this._telemetryClient?.flush();\n    }\n    async dispose() {\n        if (this._telemetryClient) {\n            await this._telemetryClient.dispose();\n            this._telemetryClient = undefined;\n        }\n        return;\n    }\n    /**\n     * Flushes the queued events that existed before the client was instantiated\n     */\n    _flushQueues() {\n        this._eventQueue.forEach(({ eventName, data }) => this.sendEventData(eventName, data));\n        this._eventQueue = [];\n        this._exceptionQueue.forEach(({ exception, data }) => this.sendErrorData(exception, data));\n        this._exceptionQueue = [];\n    }\n    /**\n     * Instantiates the telemetry client to make the sender \"active\"\n     */\n    instantiateSender() {\n        if (this._instantiationStatus !== InstantiationStatus.NOT_INSTANTIATED) {\n            return;\n        }\n        this._instantiationStatus = InstantiationStatus.INSTANTIATING;\n        // Call the client factory to get the client and then let it know it's instatntiated\n        this._clientFactory(this._key).then(client => {\n            this._telemetryClient = client;\n            this._instantiationStatus = InstantiationStatus.INSTANTIATED;\n            this._flushQueues();\n        }).catch(err => {\n            console.error(err);\n            // If it failed to instntiate, then we don't want to try again.\n            // So we mark it as instantiated. See #94\n            this._instantiationStatus = InstantiationStatus.INSTANTIATED;\n        });\n    }\n}\n//# sourceMappingURL=baseTelemetrySender.js.map","/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nexport class TelemetryUtil {\n    static applyReplacements(data, replacementOptions) {\n        for (const key of Object.keys(data)) {\n            for (const option of replacementOptions) {\n                if (option.lookup.test(key)) {\n                    if (option.replacementString !== undefined) {\n                        data[key] = option.replacementString;\n                    }\n                    else {\n                        delete data[key];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Given a key / connection string checks if it is a valid 1DS key\n     * @param key The key to check if it's a valid 1DS key\n     */\n    static shouldUseOneDataSystemSDK(key) {\n        // Simple to check to ensure the key is the right length and the dashes are in the right spot\n        return (key.length === 74 &&\n            key[32] === \"-\" &&\n            key[41] === \"-\" &&\n            key[46] === \"-\" &&\n            key[51] === \"-\" &&\n            key[56] === \"-\" &&\n            key[69] === \"-\");\n    }\n    // This also includes the common properties which core mixes in\n    // __GDPR__COMMON__ \"common.os\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.platformversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.extname\" : { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.extversion\" : { \"classification\": \"PublicNonPersonalData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodemachineid\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodesessionid\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.vscodeversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.uikind\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.remotename\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.isnewappinstall\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    // __GDPR__COMMON__ \"common.telemetryclientversion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n    static getAdditionalCommonProperties(osShim) {\n        return {\n            \"common.os\": osShim.platform,\n            \"common.nodeArch\": osShim.architecture,\n            \"common.platformversion\": (osShim.release || \"\").replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, \"$1$2$3\"),\n            // Do not change this string as it gets found and replaced upon packaging\n            \"common.telemetryclientversion\": \"0.9.8\"\n        };\n    }\n    // Get singleton instance of TelemetryUtil\n    static getInstance() {\n        if (!TelemetryUtil._instance) {\n            TelemetryUtil._instance = new TelemetryUtil();\n        }\n        return TelemetryUtil._instance;\n    }\n}\n//# sourceMappingURL=util.js.map","/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nexport class BaseTelemetryReporter {\n    constructor(telemetrySender, vscodeAPI, initializationOptions) {\n        this.telemetrySender = telemetrySender;\n        this.vscodeAPI = vscodeAPI;\n        this.userOptIn = false;\n        this.errorOptIn = false;\n        this.disposables = [];\n        this._onDidChangeTelemetryLevel = new this.vscodeAPI.EventEmitter();\n        this.onDidChangeTelemetryLevel = this._onDidChangeTelemetryLevel.event;\n        this.telemetryLogger = this.vscodeAPI.env.createTelemetryLogger(this.telemetrySender, initializationOptions);\n        // Keep track of the user's opt-in status\n        this.updateUserOptIn();\n        this.telemetryLogger.onDidChangeEnableStates(() => {\n            this.updateUserOptIn();\n        });\n    }\n    /**\n     * Updates the user's telemetry opt-in status\n     */\n    updateUserOptIn() {\n        this.errorOptIn = this.telemetryLogger.isErrorsEnabled;\n        this.userOptIn = this.telemetryLogger.isUsageEnabled;\n        // The sender is lazy loaded so if telemetry is off it's not loaded in\n        if (this.telemetryLogger.isErrorsEnabled || this.telemetryLogger.isUsageEnabled) {\n            this.telemetrySender.instantiateSender();\n        }\n        this._onDidChangeTelemetryLevel.fire(this.telemetryLevel);\n    }\n    get telemetryLevel() {\n        if (this.errorOptIn && this.userOptIn) {\n            return \"all\";\n        }\n        else if (this.errorOptIn) {\n            return \"error\";\n        }\n        else {\n            return \"off\";\n        }\n    }\n    /**\n     * Internal function which logs telemetry events and takes extra options.\n     * @param eventName The name of the event\n     * @param properties The properties of the event\n     * @param measurements The measurements (numeric values) to send with the event\n     * @param sanitize Whether or not to sanitize to the properties and measures\n     * @param dangerous Whether or not to ignore telemetry level\n     */\n    internalSendTelemetryEvent(eventName, properties, measurements, dangerous) {\n        // If it's dangerous we skip going through the logger as the logger checks opt-in status, etc.\n        if (dangerous) {\n            this.telemetrySender.sendEventData(eventName, { properties, measurements });\n        }\n        else {\n            this.telemetryLogger.logUsage(eventName, { properties, measurements });\n        }\n    }\n    /**\n     * Given an event name, some properties, and measurements sends a telemetry event.\n     * Properties are sanitized on best-effort basis to remove sensitive data prior to sending.\n     * @param eventName The name of the event\n     * @param properties The properties to send with the event\n     * @param measurements The measurements (numeric values) to send with the event\n     */\n    sendTelemetryEvent(eventName, properties, measurements) {\n        this.internalSendTelemetryEvent(eventName, properties, measurements, false);\n    }\n    /**\n     * Sends a raw (unsanitized) telemetry event with the given properties and measurements.\n     * NOTE: This will not be logged to the output channel due to API limitations.\n     * @param eventName The name of the event\n     * @param properties The set of properties to add to the event in the form of a string key value pair\n     * @param measurements The set of measurements to add to the event in the form of a string key  number value pair\n     */\n    sendRawTelemetryEvent(eventName, properties, measurements) {\n        const modifiedProperties = { ...properties };\n        for (const propertyKey of Object.keys(modifiedProperties ?? {})) {\n            const propertyValue = modifiedProperties[propertyKey];\n            if (typeof propertyKey === \"string\" && propertyValue !== undefined) {\n                // Trusted values are not sanitized, which is what we want for raw telemetry\n                modifiedProperties[propertyKey] = new this.vscodeAPI.TelemetryTrustedValue(typeof propertyValue === \"string\" ? propertyValue : propertyValue.value);\n            }\n        }\n        this.sendTelemetryEvent(eventName, modifiedProperties, measurements);\n    }\n    /**\n     * **DANGEROUS** Given an event name, some properties, and measurements sends a telemetry event without checking telemetry setting\n     * Do not use unless in a controlled environment i.e. sending telmetry from a CI pipeline or testing during development\n     * @param eventName The name of the event\n     * @param properties The properties to send with the event\n     * @param measurements The measurements (numeric values) to send with the event\n     * @param sanitize Whether or not to sanitize to the properties and measures, defaults to true\n     */\n    sendDangerousTelemetryEvent(eventName, properties, measurements) {\n        // Since telemetry is probably off when sending dangerously, we must start the sender\n        this.telemetrySender.instantiateSender();\n        this.internalSendTelemetryEvent(eventName, properties, measurements, true);\n    }\n    /**\n     * Internal function which logs telemetry error events and takes extra options.\n     * @param eventName The name of the event\n     * @param properties The properties of the event\n     * @param measurements The measurements (numeric values) to send with the event\n     * @param sanitize Whether or not to sanitize to the properties and measures\n     * @param dangerous Whether or not to ignore telemetry level\n     */\n    internalSendTelemetryErrorEvent(eventName, properties, measurements, dangerous) {\n        if (dangerous) {\n            this.telemetrySender.sendEventData(eventName, { properties, measurements });\n        }\n        else {\n            this.telemetryLogger.logError(eventName, { properties, measurements });\n        }\n    }\n    /**\n     * Given an event name, some properties, and measurements sends an error event\n     * @param eventName The name of the event\n     * @param properties The properties to send with the event\n     * @param measurements The measurements (numeric values) to send with the event\n     */\n    sendTelemetryErrorEvent(eventName, properties, measurements) {\n        this.internalSendTelemetryErrorEvent(eventName, properties, measurements, false);\n    }\n    /**\n     * **DANGEROUS** Given an event name, some properties, and measurements sends a telemetry error event without checking telemetry setting\n     * Do not use unless in a controlled environment i.e. sending telmetry from a CI pipeline or testing during development\n     * @param eventName The name of the event\n     * @param properties The properties to send with the event\n     * @param measurements The measurements (numeric values) to send with the event\n     * @param sanitize Whether or not to run the properties and measures through sanitiziation, defaults to true\n     */\n    sendDangerousTelemetryErrorEvent(eventName, properties, measurements) {\n        // Since telemetry is probably off when sending dangerously, we must start the sender\n        this.telemetrySender.instantiateSender();\n        this.internalSendTelemetryErrorEvent(eventName, properties, measurements, true);\n    }\n    /**\n     * Disposes of the telemetry reporter\n     */\n    async dispose() {\n        await this.telemetrySender.dispose();\n        this.telemetryLogger.dispose();\n        return Promise.all(this.disposables.map(d => d.dispose()));\n    }\n}\n//# sourceMappingURL=baseTelemetryReporter.js.map","/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\nimport * as vscode from \"vscode\";\nimport { oneDataSystemClientFactory } from \"../common/1dsClientFactory\";\nimport { appInsightsClientFactory } from \"../common/appInsightsClientFactory\";\nimport { BaseTelemetryReporter } from \"../common/baseTelemetryReporter\";\nimport { BaseTelemetrySender } from \"../common/baseTelemetrySender\";\nimport { TelemetryUtil } from \"../common/util\";\nfunction getBrowserRelease(navigator) {\n    if (navigator.userAgentData) {\n        const browser = navigator.userAgentData.brands[navigator.userAgentData.brands.length - 1];\n        return `${navigator.userAgentData.platform} - ${browser?.brand} v${browser?.version}}`;\n    }\n    else {\n        // clean the user agent using the logic from here:\n        // https://github.com/microsoft/vscode/blob/main/src/vs/workbench/services/telemetry/browser/workbenchCommonProperties.ts#L14C1-L21C2\n        return navigator.userAgent.replace(/(\\d+\\.\\d+)(\\.\\d+)+/g, \"$1\");\n    }\n}\nexport default class TelemetryReporter extends BaseTelemetryReporter {\n    constructor(connectionString, replacementOptions) {\n        let clientFactory = (connectionString) => appInsightsClientFactory(connectionString, vscode.env.machineId, vscode.env.sessionId, undefined, replacementOptions);\n        // If key is usable by 1DS use the 1DS SDk\n        if (TelemetryUtil.shouldUseOneDataSystemSDK(connectionString)) {\n            clientFactory = (key) => oneDataSystemClientFactory(key, vscode);\n        }\n        const osShim = {\n            release: getBrowserRelease(navigator),\n            platform: \"web\",\n            architecture: \"web\",\n        };\n        const sender = new BaseTelemetrySender(connectionString, clientFactory);\n        // AIF is no longer supported\n        if (connectionString && (connectionString.indexOf(\"AIF\") === 0)) {\n            throw new Error(\"AIF keys are no longer supported. Please switch to 1DS keys for 1st party extensions\");\n        }\n        super(sender, vscode, { additionalCommonProperties: TelemetryUtil.getAdditionalCommonProperties(osShim) });\n    }\n}\n//# sourceMappingURL=telemetryReporter.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BreezeChannelIdentifier } from \"@microsoft/applicationinsights-common\";\nimport { TelemetryUtil } from \"./util\";\nexport const appInsightsClientFactory = async (connectionString, machineId, sessionId, xhrOverride, replacementOptions) => {\n    let appInsightsClient;\n    try {\n        const basicAISDK = await import /* webpackMode: \"eager\" */(\"@microsoft/applicationinsights-web-basic\");\n        const extensionConfig = {};\n        if (xhrOverride) {\n            // Configure the channel to use a XHR Request override since it's not available in node\n            const channelConfig = {\n                alwaysUseXhrOverride: true,\n                httpXHROverride: xhrOverride\n            };\n            extensionConfig[BreezeChannelIdentifier] = channelConfig;\n        }\n        let instrumentationKey;\n        if (!connectionString.startsWith(\"InstrumentationKey=\")) {\n            instrumentationKey = connectionString;\n        }\n        const authConfig = instrumentationKey ? { instrumentationKey } : { connectionString };\n        appInsightsClient = new basicAISDK.ApplicationInsights({\n            ...authConfig,\n            disableAjaxTracking: true,\n            disableExceptionTracking: true,\n            disableFetchTracking: true,\n            disableCorrelationHeaders: true,\n            disableCookiesUsage: true,\n            autoTrackPageVisitTime: false,\n            emitLineDelimitedJson: false,\n            disableInstrumentationKeyValidation: true,\n            extensionConfig,\n        });\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // Sets the appinsights client into a standardized form\n    const telemetryClient = {\n        logEvent: (eventName, data) => {\n            const properties = { ...data?.properties, ...data?.measurements };\n            if (replacementOptions?.length) {\n                TelemetryUtil.applyReplacements(properties, replacementOptions);\n            }\n            appInsightsClient?.track({\n                name: eventName,\n                data: properties,\n                baseType: \"EventData\",\n                ext: { user: { id: machineId, authId: machineId }, app: { sesId: sessionId } },\n                baseData: { name: eventName, properties: data?.properties, measurements: data?.measurements }\n            });\n        },\n        flush: async () => {\n            appInsightsClient?.flush(false);\n        },\n        dispose: async () => {\n            const unloadPromise = new Promise((resolve) => {\n                appInsightsClient?.unload(true, () => {\n                    resolve();\n                    appInsightsClient = undefined;\n                }, 1000);\n            });\n            return unloadPromise;\n        }\n    };\n    return telemetryClient;\n};\n//# sourceMappingURL=appInsightsClientFactory.js.map","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Configures 1DS properly and returns the core client object\n * @param key The ingestion key\n * @param xhrOverride An optional override to use for requests instead of the XHTMLRequest object. Useful for node environments\n * @returns The AI core object\n */\nconst getAICore = async (key, vscodeAPI, xhrOverride) => {\n    const oneDs = await import(/* webpackMode: \"eager\" */ \"@microsoft/1ds-core-js\");\n    const postPlugin = await import(/* webpackMode: \"eager\" */ \"@microsoft/1ds-post-js\");\n    const appInsightsCore = new oneDs.AppInsightsCore();\n    const collectorChannelPlugin = new postPlugin.PostChannel();\n    // Configure the app insights core to send to collector++ and disable logging of debug info\n    const coreConfig = {\n        instrumentationKey: key,\n        endpointUrl: \"https://mobile.events.data.microsoft.com/OneCollector/1.0\",\n        loggingLevelTelemetry: 0,\n        loggingLevelConsole: 0,\n        disableCookiesUsage: true,\n        disableDbgExt: true,\n        disableInstrumentationKeyValidation: true,\n        channels: [[\n                collectorChannelPlugin\n            ]]\n    };\n    if (xhrOverride) {\n        coreConfig.extensionConfig = {};\n        // Configure the channel to use a XHR Request override since it's not available in node\n        const channelConfig = {\n            alwaysUseXhrOverride: true,\n            httpXHROverride: xhrOverride\n        };\n        coreConfig.extensionConfig[collectorChannelPlugin.identifier] = channelConfig;\n    }\n    const config = vscodeAPI.workspace.getConfiguration(\"telemetry\");\n    const internalTesting = config.get(\"internalTesting\");\n    appInsightsCore.initialize(coreConfig, []);\n    appInsightsCore.addTelemetryInitializer((envelope) => {\n        envelope[\"ext\"] = envelope[\"ext\"] ?? {};\n        envelope[\"ext\"][\"web\"] = envelope[\"ext\"][\"web\"] ?? {};\n        envelope[\"ext\"][\"web\"][\"consentDetails\"] = \"{\\\"GPC_DataSharingOptIn\\\":false}\";\n        // Only add the remaining flags when `telemetry.internalTesting` is enabled\n        if (!internalTesting) {\n            return;\n        }\n        envelope[\"ext\"][\"utc\"] = envelope[\"ext\"][\"utc\"] ?? {};\n        // Sets it to be internal only based on Windows UTC flagging\n        envelope[\"ext\"][\"utc\"][\"flags\"] = 0x0000811ECD;\n    });\n    return appInsightsCore;\n};\n/**\n * Configures and creates a telemetry client using the 1DS sdk\n * @param key The ingestion key\n * @param xhrOverride An optional override to use for requests instead of the XHTMLRequest object. Useful for node environments\n */\nexport const oneDataSystemClientFactory = async (key, vscodeAPI, xhrOverride) => {\n    let appInsightsCore = await getAICore(key, vscodeAPI, xhrOverride);\n    const flushOneDS = async () => {\n        try {\n            const flushPromise = new Promise((resolve, reject) => {\n                if (!appInsightsCore) {\n                    resolve();\n                    return;\n                }\n                appInsightsCore.flush(true, (completedFlush) => {\n                    if (!completedFlush) {\n                        reject(\"Failed to flush app 1DS!\");\n                        return;\n                    }\n                });\n            });\n            return flushPromise;\n        }\n        catch (e) {\n            throw new Error(\"Failed to flush 1DS!\\n\" + e.message);\n        }\n    };\n    // Shape the app insights core from 1DS into a standard format\n    const telemetryClient = {\n        logEvent: (eventName, data) => {\n            try {\n                appInsightsCore?.track({\n                    name: eventName,\n                    baseData: { name: eventName, properties: data?.properties, measurements: data?.measurements }\n                });\n            }\n            catch (e) {\n                throw new Error(\"Failed to log event to app insights!\\n\" + e.message);\n            }\n        },\n        flush: flushOneDS,\n        dispose: async () => {\n            const disposePromise = new Promise((resolve) => {\n                if (!appInsightsCore) {\n                    resolve();\n                    return;\n                }\n                appInsightsCore.unload(false, () => {\n                    resolve();\n                    appInsightsCore = undefined;\n                    return;\n                }, 1000);\n            });\n            return disposePromise;\n        }\n    };\n    return telemetryClient;\n};\n//# sourceMappingURL=1dsClientFactory.js.map","/*\n * Application Insights JavaScript SDK - Core, 3.3.4\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\r\n\r\n\"use strict\";\r\nimport { strShimUndefined } from \"@microsoft/applicationinsights-shims\";\r\nimport { strSubstr, strSubstring } from \"@nevware21/ts-utils\";\r\nimport { _DYN_LENGTH } from \"../__DynamicConstants\";\r\nimport { STR_EMPTY } from \"./InternalConstants\";\r\nimport { random32 } from \"./RandomHelper\";\r\n// Added to help with minfication\r\nexport var Undefined = strShimUndefined;\r\nexport function newGuid() {\r\n    var uuid = generateW3CId();\r\n    return strSubstring(uuid, 0, 8) + \"-\" + strSubstring(uuid, 8, 12) + \"-\" + strSubstring(uuid, 12, 16) + \"-\" + strSubstring(uuid, 16, 20) + \"-\" + strSubstring(uuid, 20);\r\n}\r\n/**\r\n * The strEndsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.\r\n * @param value - The value to check whether it ends with the search value.\r\n * @param search - The characters to be searched for at the end of the value.\r\n * @returns true if the given search value is found at the end of the string, otherwise false.\r\n */\r\nexport function strEndsWith(value, search) {\r\n    if (value && search) {\r\n        var len = value[_DYN_LENGTH /* @min:%2elength */];\r\n        var start = len - search[_DYN_LENGTH /* @min:%2elength */];\r\n        return strSubstring(value, start >= 0 ? start : 0, len) === search;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * generate W3C trace id\r\n */\r\nexport function generateW3CId() {\r\n    var hexValues = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\r\n    // rfc4122 version 4 UUID without dashes and with lowercase letters\r\n    var oct = STR_EMPTY, tmp;\r\n    for (var a = 0; a < 4; a++) {\r\n        tmp = random32();\r\n        oct +=\r\n            hexValues[tmp & 0xF] +\r\n                hexValues[tmp >> 4 & 0xF] +\r\n                hexValues[tmp >> 8 & 0xF] +\r\n                hexValues[tmp >> 12 & 0xF] +\r\n                hexValues[tmp >> 16 & 0xF] +\r\n                hexValues[tmp >> 20 & 0xF] +\r\n                hexValues[tmp >> 24 & 0xF] +\r\n                hexValues[tmp >> 28 & 0xF];\r\n    }\r\n    // \"Set the two most significant bits (bits 6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively\"\r\n    var clockSequenceHi = hexValues[8 + (random32() & 0x03) | 0];\r\n    return strSubstr(oct, 0, 8) + strSubstr(oct, 9, 4) + \"4\" + strSubstr(oct, 13, 3) + clockSequenceHi + strSubstr(oct, 16, 3) + strSubstr(oct, 19, 12);\r\n}\r\n//# sourceMappingURL=CoreUtils.js.map","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(5256);\n"],"names":["SampleRate","ProcessLegacy","HttpMethod","DEFAULT_BREEZE_ENDPOINT","DEFAULT_BREEZE_PATH","strNotSpecified","_DYN_INGESTIONENDPOINT","_DYN_TO_STRING","_DYN_MESSAGE","_DYN_STRINGIFY","_DYN_EXCEPTIONS","_DYN_PARSED_STACK","_DYN_PROPERTIES","_DYN_MEASUREMENTS","_DYN_SIZE_IN_BYTES","_DYN_TYPE_NAME","_DYN_SEVERITY_LEVEL","_DYN_PROBLEM_GROUP","_DYN_IS_MANUAL","_DYN__CREATE_FROM_INTERFA1","_DYN_ASSEMBLY","_DYN_FILE_NAME","_DYN_HAS_FULL_STACK","_DYN_LEVEL","_DYN_METHOD","_DYN_LINE","_DYN_DURATION","_DYN_RECEIVED_RESPONSE","dataSanitizeKeyAndAddUniqueness","logger","key","map","origLength","field","name","nameTrunc","dataSanitizeKey","i","uniqueField","undefined","dsPadNumber","dataSanitizeString","value","maxLength","valueTrunc","dataSanitizeUrl","url","dataSanitizeInput","dataSanitizeMessage","message","messageTrunc","dataSanitizeProperties","properties","tempProps_1","prop","e","exception","dataSanitizeMeasurements","measurements","tempMeasurements_1","measure","input","_msgId","inputTrunc","data","num","s","Event","this","aiDataContract","ver","_self","envelopeType","dataType","Trace","severityLevel","msToTimeSpan","totalms","isNaN","ms","Math","round","sec","floor","min","hour","days","PageView","durationMs","id","duration","dataSanitizeId","PageViewPerformance","unused","cs4BaseData","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","strError","strStack","strStackDetails","strErrorSrc","strMessage","strDescription","_stringify","convertToString","result","JSON","_formatMessage","theEvent","errorType","evtMessage","_isStackDetails","details","src","obj","_convertStackObj","errorStack","items","_getStackFromErrorObj","errorObj","errorMessage","stack","lines","lp","entry","_getOperaStack","reason","_getErrorType","typeName","results","exec","constructor","_formatErrorCode","Exception","exceptions","_isExceptionInternal","_ExceptionDetails","CreateAutoException","lineNumber","columnNumber","error","evt","errorSrc","_a","stackDetails","CreateFromInterface","ex","prototype","toInterface","_b","problemGroup","isManual","exceptionDetailsInterface","Array","CreateSimpleException","assembly","fileName","line","formatError","outerId","hasFullStack","parsedStack","_isExceptionDetailsInternal","frames","level_1","totalSizeInBytes_1","frame","theFrame","_StackFrame","regex","test","parsedFrame","left","right","size","acceptedLeft","acceptedRight","howMany","splice","_parseStack","exceptionTrunc","dataSanitizeException","_formatStackTrace","sourceFrame","level","method","matches","match","parseInt","sizeInBytes","baseSize","toString","DataPoint","kind","count","max","stdDev","Metric","metrics","dataPoint","_document","_htmlAnchorIdx","_htmlAnchorElement","urlParseHost","inclPort","fullHost","protocol","port","_internalEndpoints","isInternalApplicationInsightsEndpoint","endpointUrl","RemoteDependencyData","absoluteUrl","commandName","success","resultCode","requestAPI","correlationContext","target","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","anchorIdx","anchorCache","tempAnchor","parsedUrl","createElement","host","href","pathName","pathname","charAt","AjaxHelperParseDependencyPath","concat","_disableEvents","evtNamespace","LocalStorage","SessionStorage","_canUseSessionStorage","AI","AI_AND_W3C","W3C","Normal","Critical","_storagePrefix","_getVerifiedStorageObject","storageType","uid","Date","storage","name_1","setItem","fail","getItem","_getSessionStorageObject","utlCanUseSessionStorage","reset","utlGetSessionStorage","utlSetSessionStorage","requestContextHeader","requestContextTargetKey","requestContextAppIdFormat","requestIdHeader","traceParentHeader","traceStateHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","_aiNameFunc","baseName","aiName","_aiApplication","_aiDevice","_aiLocation","_aiOperation","_aiSession","_aiUser","_aiCloud","_aiInternal","ContextTagKeys","_super","call","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userAgent","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalNodeName","internalSdkVersion","internalAgentVersion","internalSnippet","internalSdkSrc","CtxTagKeys","Envelope","_this","sampleRate","tags","time","iKey","Data","baseType","baseData","STR_DURATION","_DYN_TAGS","_DYN_DEVICE_TYPE","_DYN_DATA","_DYN_TRACE_ID","_DYN_DATA_TYPE","_DYN_ENVELOPE_TYPE","_DYN__GET","_DYN_ENQUEUE","_DYN_EVENTS_LIMIT_IN_MEM","_DYN_ITEM","_DYN_EMIT_LINE_DELIMITED_0","_DYN_CLEAR","_DYN_CREATE_NEW","_DYN_MARK_AS_SENT","_DYN_CLEAR_SENT","_DYN_BUFFER_OVERRIDE","_DYN__BUFFER__KEY","_DYN__SENT__BUFFER__KEY","_DYN_CONCAT","_DYN__MAX__BUFFER__SIZE","_DYN_TRIGGER_SEND","_DYN_DIAG_LOG","_DYN_INITIALIZE","_DYN__SENDER","_DYN_ENDPOINT_URL","_DYN_INSTRUMENTATION_KEY","_DYN_CUSTOM_HEADERS","_DYN_MAX_BATCH_SIZE_IN_BY1","_DYN_ONUNLOAD_DISABLE_BEA2","_DYN_IS_BEACON_API_DISABL3","_DYN_ALWAYS_USE_XHR_OVERR4","_DYN_DISABLE_XHR","_DYN_ENABLE_SESSION_STORA5","_DYN__BUFFER","_DYN_ONUNLOAD_DISABLE_FET6","_DYN_DISABLE_SEND_BEACON_7","_DYN_ENABLE_SEND_PROMISE","_DYN_GET_SENDER_INST","_DYN_UNLOAD_TRANSPORTS","_DYN_CONVERT_UNDEFINED","_DYN_MAX_BATCH_INTERVAL","_DYN_SERIALIZE","_DYN__ON_ERROR","_DYN__ON_PARTIAL_SUCCESS","_DYN__ON_SUCCESS","_DYN_ITEMS_RECEIVED","_DYN_ITEMS_ACCEPTED","_DYN_ORI_PAYLOAD","_DYN_BASE_TYPE","_DYN_SAMPLE_RATE","_DYN_EVENTS_SEND_REQUEST","_DYN_GET_SAMPLING_SCORE","strBaseType","strBaseData","strProperties","strTrue","_setValueIf","_extractPropsAndMeasurements","_convertPropsUndefinedToCustomDefinedValue","customUndefinedValue","_createEnvelope","telemetryItem","envelope","startTime","iKeyNoDashes","replace","item","env","envTags","itmExt","ext","itmTags","extUser","user","authId","localId","extApp","app","sesId","extDevice","device","deviceClass","ip","model","web","browserLang","browserVer","browser","envData","envBaseData","envProps","domain","screenRes","userConsent","extOs","os","osVer","extTrace","trace","parentID","tgs","tg","theTags","EnvelopeCreator","Version","_extractPartAExtensions","EnvelopeCreatorInit","EventEnvelopeCreator","customProperties","customMeasurements","eventName","eventData","BaseSendBuffer","config","_buffer","_bufferFullMessageSent","_maxRetryCnt","maxRetryCnt","_set","buffer","payload","cnt","getItems","slice","batchPayloads","payloads","payloadStr_1","join","newLogger","newConfig","canUseSessionStorage","newBuffer","SessionStorageSendBuffer","ArraySendBuffer","__ieDyn","_base","PREVIOUS_KEYS","_namePrefix","namePrefix","bufferItems","_getBuffer","itemsInSentBuffer","previousItems","events","_getItemsFromPreviousKey","prefixEvents","_getPreviousEvents","notDeliveredItems","_removePayloadsFromBuffer","remaining","payloadStr","_getBufferBase","bufferJson","buffer_1","parse","_setBuffer","prefixedKey","transFormedItems_1","internalItem","utlRemoveSessionStorage","BUFFER_KEY","sentElements","unsentItems","sentItems","VERSION","SENT_BUFFER_KEY","MAX_BUFFER_SIZE","Serializer","_serializeObject","source","circularReferenceCheck","output","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isArray","isPresent","isObj","sources","expectedType","parseFloat","HashCodeScoreGenerator","getHashCodeScore","getHashCode","INT_MAX_VALUE","hash","charCodeAt","abs","SamplingScoreGenerator","hashCodeGenerator","keys","telemetryTrace","random","Sample","_logger","throwInternal","samplingRate","samplingScoreGenerator","isSampledIn","samplingPercentage","UNDEFINED_VALUE","_getResponseText","xhr","responseText","defaultAppInsightsChannelConfig","disableTelemetry","isRetryDisabled","httpXHROverride","isVal","sendPOST","v","transports","retryCodes","EnvelopeTypeCreator","props","currentContextId","bd","uri","refUri","pageType","isLoggedIn","pageTags","pageViewData","exData","baseMetricData","average","sampleCount","remoteDepData","responseCode","Sender","_consecutiveErrors","_retryAt","_paused","_timeoutHandle","_serializer","_stamp_specific_redirects","_headers","priority","identifier","_syncUnloadSender","_offlineListener","_evtNamespace","_endpointUrl","_orgEndpointUrl","_maxBatchSizeInBytes","_beaconSupported","_beaconOnUnloadSupported","_beaconNormalSupported","_customHeaders","_disableTelemetry","_instrumentationKey","_convertUndefined","_isRetryDisabled","_maxBatchInterval","_sessionStorageUsed","_bufferOverrideUsed","_enableSendPromise","_alwaysUseCustomSend","_disableXhr","_fetchKeepAlive","_xhrSend","_fallbackSend","_disableBeaconSplit","_sendPostMgr","_retryCodes","_syncFetchPayload","_xdrOnLoad","xdr","_xhrReadyStateChange","countOfItemsInPayload","readyState","_checkResponsStatus","status","responseURL","response","_getPayloadArr","arr","_validate","diagLogger","_sample","_getEnvelope","defaultEnvelopeIkey","aiEnvelope","constructEnvelope","doNotSendItem","callBack","_serialize","rlt","valid","_batch","_createPayload","headers","_getHeaders","urlString","_doSend","sendInterface","isAsync","markAsSent","payloadData","_getPayload","sendPostFunc","_onSuccess","_getOnComplete","batch","disableXhrSync","disableFetchKeepAlive","_checkMaxSize","incomingPayload","incomingSize","isOnline","responseUrl","res","_appId","appId","_checkAndUpdateEndPointUrl","_resendPayload","length","_isRetriable","_doUnloadSend","_isStringArr","_fetchKeepAliveSender","transport","payloadSize","getSyncFetchPayload","linearFactor","_i","payload_1","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","_setRetryTime","_setupTimer","retryInterval","timerValue","_clearScheduledTimer","cancel","statusCode","indexOf","_initDefaults","g","pause","resume","flush","sendReason","onunloadFlush","addHeader","core","extensions","pluginChain","isInitialized","diagLog","parentEvtNamespace","_navigator","_isListening","listenerList","rState","onLine","uState","_currentState","calCurrentState","_enableEvents","body","ononline","enabled","_setOnline","_setOffline","listnerNoticeCheck","newState","callback","offlineState","isListening","unload","win","addListener","rm","index","setOnlineState","createOfflineListener","_addHook","storagePrefix","cfg","senderConfig","getExtCfg","curExtUrl","coreUrl","activeStatus","PENDING","ACTIVE","customHeader","header","bufferOverride","shouldUpdate","instrumentationKey","disableValidation","disableInstrumentationKeyValidation","RegExp","_validateInstrumentationKey","sendPostConfig","onCompleteFuncs","xdrOnComplete","oncomplete","fetchOnComplete","onComplete","resValue","statusText","xhrOnComplete","request","beaconOnRetry","canSend","droppedPayload","thePayload","_onBeaconRetry","isOneDs","disableCredentials","disableBeacon","disableBeaconSync","senderOnCompleteCallBack","_getSendPostMgrConfig","SetConfig","SenderPostManager","customInterface","httpInterface","syncInterface","theTransports","xhrInterface","getFallbackInst","syncTransports","filter","processTelemetry","itemCtx","_getTelCtx","payloadItem","processNext","isCompletelyIdle","getOfflineListener","async","forcedSender","sendRequest","func","manager","_notifySendRequest","ieVer","getOfflineSupport","getUrl","createPayload","shouldProcess","_doTeardown","unloadCtx","unloadState","event","_onError","failed","retry","errors_1","errors","reverse","extracted","itemsReceived","_onPartialSuccess","orig","convertUndefined","BaseTelemetryPlugin","parseConnectionString","connectionString","kvPairs","fields","kv","kvParts","endpointsuffix","locationPrefix","location","_DYN_CONNECTION_STRING","_DYN_INSTRUMENTATIONKEY0","_DYN_USER_OVERRIDE_ENDPOI1","SeverityLevel","Verbose","Information","Warning","Error","defaultConfigValues","diagnosticLogInterval","extensionConfig","ApplicationInsights","_config","AppInsightsCore","_track","track","_initialize","cfgHandler","addUnloadHook","configCs","ikeyPromise","resolve","reject","curCs","ikey","rejected","urlPromise","ingest","cs","initialize","_pureAssign","func1","func2","_pureRef","_primitiveTypes","UNDEF_VALUE","NULL_VALUE","EMPTY","FUNCTION","OBJECT","PROTOTYPE","__PROTO__","UNDEFINED","CONSTRUCTOR","SYMBOL","POLYFILL_TAG","LENGTH","NAME","CALL","TO_STRING","ObjClass","Object","ObjProto","StrCls","String","StrProto","MathCls","ArrCls","ArrProto","ArrSlice","safe","argArray","apply","_createIs","theType","_createObjIs","theName","objToString","isTypeof","isUndefined","isNullOrUndefined","isDefined","arg","isString","isFunction","isObject","isDate","isNumber","isBoolean","isError","isPromiseLike","then","isNotTruthy","isTruthy","cb","defValue","objGetOwnPropertyDescriptor","objHasOwnProperty","hasOwnProperty","objHasOwn","polyObjHasOwn","objForEachKey","theObject","callbackfn","thisArg","propMap","c","w","_createProp","l","get","desc","set","newValue","objDefineProp","objDefineProperties","objDefineAccessors","getProp","setProp","configurable","enumerable","objDefine","propDesc","_createKeyValueMap","values","keyType","valueType","completeFn","writable","theMap","_assignMapValue","asString","ERROR_TYPE","dumpObj","object","format","propertyValueDump","objType","stringify","throwError","throwTypeError","TypeError","_objFreeze","_doNothing","_getProto","objAssign","objKeys","objDeepFreeze","objFreeze","objSeal","objGetPrototypeOf","createEnum","createEnumKeyMap","createTypeMap","mapClass","createSimpleMap","_globalCfg","_wellKnownSymbolMap","asyncIterator","hasInstance","isConcatSpreadable","iterator","matchAll","search","species","split","toPrimitive","toStringTag","unscopables","GLOBAL_CONFIG_KEY","_getGlobalValue","globalThis","self","window","global","_getGlobalConfig","gbl","_unwrapFunction","_unwrapFunctionWithPoly","funcName","clsProto","polyFunc","clsFn","theFunc","theArgs","arguments","_unwrapProp","propName","mathMax","strSlice","strSubstring","strSubstr","polyStrSubstr","start","strLeft","_polySymbols","_wellKnownSymbolCache","_globalLazyTestHooks","UNIQUE_REGISTRY_ID","polyNewSymbol","description","theSymbol","polySymbolFor","registry","gblCfg","gblSym","k","_globalSymbolRegistry","newSymbol_1","regId_1","_initTestHooks","getLazy","lazyValue","b","lzy","createCachedValue","toJSON","_cachedGlobal","WINDOW","_getGlobalInstFn","getFn","cachedValue","getGlobal","useCached","getInst","hasDocument","getDocument","hasWindow","getWindow","hasNavigator","getNavigator","hasHistory","getHistory","_symbol","_symbolFor","_iterSymbol$1","isNode","process","versions","node","_initSymbol","_getSymbolKey","hasSymbol","getSymbol","getKnownSymbol","noPoly","knownName","sym","polyGetKnownSymbol","newSymbol","symbolFor","isIterator","next","isIterable","isStrictNullOrUndefined","iterForOf","iter","err","iterResult","done","throw","return","fnApply","fn","arrAppend","elms","push","elm","arrForEach","theArray","len","idx","arrIndexOf","arrMap","arrSlice","end","polyArrIncludes","searchElement","fromIndex","_isProtoArray","arrIncludes","arrReduce","objCreate","polyObjCreate","tempFunc","objSetPrototypeOf","proto","d","_setName","baseClass","createCustomError","constructCb","errorBase","theBaseClass","orgName","captureFn","captureStackTrace","__","_createCustomError","orgProto","utcNow","now","polyUtcNow","getTime","_createTrimFn","exp","_fnToString","_objCtrFnString","_gblWindow","strTrim","isPlainObject","Function","_defaultDeepCopyHandler","plainObjDeepCopyHandler","defaultDeepCopyHandlers","copyTo","_deepCopy","visitMap","ctx","userHandler","handler","newPath","path","newCtx","isPlain","isPrim","isPrimitiveType","origin","copy","newKey","_copyProps","theEntry","newEntry","_getSetVisited","deepExtend","obj1","obj2","obj3","obj4","obj5","obj6","theArg","objCopyProps","_doExtend","_perf","getLength","getPerformance","perfNow","perf","strEndsWith","polyStrEndsWith","searchString","searchValue","strIndexOf","strStartsWith","polyStrStartsWith","position","pos","REF","UNREF","HAS_REF","ENABLED","_createTimeoutWith","startTimer","overrideFn","isArr","setFn","setTimeout","clearFn","clearTimeout","timerFn","dn","refreshFn","cancelFn","theTimerHandler","ref","timerId","_unref","_cancel","_refresh","refresh","h","_createTimerHandler","scheduleTimeout","timeout","scheduleTimeoutWith","createTimeout","context","serviceId","Logger","setToken","token","secrets","store","getToken","secret","Promise","deleteToken","delete","text","btoa","pluginStateData","_getPluginState","plugin","initializePlugins","processContext","pluginState","initPlugins","lastPlugin","proxy","thePlugin","getCfg","sortPlugins","plugins","sort","extA","extB","bHasProcess","createDistributedTraceContext","parentCtx","getName","setName","getTraceId","setTraceId","getSpanId","setSpanId","getTraceFlags","setTraceFlags","newTraceFlags","strHasOwnProperty","__assignFn","t","n","p","extendStaticsFn","__proto__","__extendsFn","__spreadArrayFn","to","from","il","j","createUnloadHandlerContainer","handlers","add","run","STR_EMPTY","_noResponseQs","STR_POST_METHOD","_isInitialized","_diagLog","_isOneDs","_onCompleteFuncs","_disableCredentials","_fetchCredentials","_fallbackInst","_disableBeacon","_disableBeaconSync","_disableFetchKeepAlive","_addNoResponse","_timeoutWrapper","_sendCredentials","_doOnComplete","_onNoPayloadUrl","_doBeaconSend","nav","plainTextBatch","Blob","sendBeacon","_beaconSender","sync","onRetry","_xhrSender","thePromise","resolveFunc","rejectFunc","endPointUrl","_doOnReadyFunc","onReadyFunc","headerName","onreadystatechange","onload","onerror","ontimeout","send","_doFetchSender","requestHeaders","Headers","batchLength","ignoreResponse","responseHandled","init","append","credentials","keepalive","Request","_handleError","_onFetchComplete","onCompleteFunc","fetch","response_1","ok","resp","_xdrSender","_window","XDomainRequest","onloadFunc","onprogress","hostingProtocol","endpoint","lastIndexOf","msg","open","fetchCredentials","enableSendPromise","disableXhr","timeWrapper","addNoResponse","location_1","getSenderInst","syncSupport","transportType","_transport","_isSync","_getSenderInterface","TIMED_OUT_ERROR","USER_CANCELLATION_ERROR","NETWORK_ERROR","CANCELLATION_ERROR","STR_DEFAULT_ENDPOINT_URL","STR_VERSION","STR_PROPERTIES","defaultConfig","S","propertyStorageOverride","getProperty","setProperty","notificationManager","logger_1","trackStart","latency","itemExt","sdk","itemProperties","pluginVersionString","ValueKind","NotSet","Pii_DistinguishedName","Pii_GenericData","Pii_IPV4Address","Pii_IPv6Address","Pii_MailSubject","Pii_PhoneNumber","Pii_QueryString","Pii_SipAddress","Pii_SmtpAddress","Pii_Identity","Pii_Uri","Pii_Fqdn","Pii_IPV4AddressLegacy","Pii_IPv6ScrubLastHextets","Pii_DropValue","CustomerContent_GenericContent","EventLatency","CostDeferred","RealTime","Immediate","EventPropertyType","Unspecified","Int32","UInt32","Int64","UInt64","Double","Bool","Guid","DateTime","EventPersistence","TraceLevel","NONE","ERROR","WARNING","INFORMATION","ValueSanitizer","fieldSanitizerProvider","_sanitizerMap","_sanitizers","_fieldSanitizers","_getFieldSanitizer","fieldLookup","canHandle","fieldHandler","_handleProperty","mapValue","fieldType","property","stringifyObjects","_callFieldSanitizer","_convertToProperty","fieldProvider","sanitizer","getSanitizer","propertyType","newValue_1","propValue","propKey","theValue","newProp","clearCache","addSanitizer","newSanitizer","addFieldSanitizer","fieldSanitizer","theSanitizer","theFieldSanitizer","isEmpty","subType","getFieldType","MinChannelPriorty","LoggingSeverity","DISABLED","CRITICAL","DEBUG","_isConfigDefaults","fb","_getDefault","dynamicHandler","theConfig","cfgDefaults","isDefaultValid","dfVal","fallbacks","fallback","fbValue","_resolveDefaultValue","_applyDefaultValue","defaultValue","isValid","mergeDf","reference","readOnly","blkDynamicValue","mrg","usingDefault","cfgValue","dfName","dfValue","parseResponse","itemsAccepted","AuthProviderType","UriEventHandler","vscode","EventEmitter","_pendingNonces","Map","_codeExchangePromises","handleUri","fire","waitForCode","scopes","nonce","existingNonces","codeExchangePromise","promiseFromEvent","handleEvent","race","promise","_","onCancellationRequested","query","URLSearchParams","code","includes","info","_sessionChangeEmitter","_githubServer","_telemetryReporter","_keychain","_accountsSeen","Set","_disposable","_sessionsPromise","uriHandler","ghesUri","aiKey","extension","packageJSON","ExperimentationTelemetry","githubEnterprise","github","Log","Keychain","authority","GitHubServer","extensionKind","readSessions","sessions","forEach","afterSessionLoad","supportedAuthorizationServers","Uri","joinPath","Disposable","authentication","registerAuthenticationProvider","friendlyName","supportsMultipleAccounts","onDidChange","checkForUpdates","dispose","onDidChangeSessions","getSessions","options","sortedScopes","accountFilteredSessions","account","session","label","finalSessions","arrayEquals","has","sendAdditionalTelemetryInfo","previousSessions","storedSessions","added","removed","some","changed","sessionData","seenNumberAccountId","scopesSeen","sessionPromises","scopesStr","userInfo","accountId","getUserInfo","accessToken","displayName","accountName","verifiedSessions","allSettled","Boolean","storeSessions","createSession","sendTelemetryEvent","provider","isSocialSignInProvider","extraAuthorizeParameters","entries","isGitHubAuthenticationProviderOptions","loginWith","signInProvider","scopeString","login","tokenToSession","sessionIndex","findIndex","showErrorMessage","l10n","crypto","getRandomValues","Uint32Array","reduce","prev","curr","removeSession","logout","defaultValues","perfEvtsSendAll","_runScheduledListeners","asyncNotifications","callbacks","_runListeners","listeners","listener","NotificationManager","unloadHandler","_listeners","_asyncNotifications","perfEvent","rn_1","waiting","_finishUnload","asyncUnload","module","exports","require","defineProperty","TargetPopulation","getExperimentationServiceAsync","getExperimentationService","VSCodeTasClient_1","VSCodeFilterProvider_1","ExperimentationServiceBase","MemoryKeyValueStorage_1","features","_features","telemetry","setSharedProperty","assignmentContextTelemetryPropertyName","assignmentContext","telemetryEventName","storageKey","featuresConsumed","cachedTelemetryEvents","configs","MemoryKeyValueStorage","loadCachePromise","loadCachedFeatureData","initializePromise","initialFetch","resolveInitialFetchPromise","getFeaturesAsync","overrideInMemoryFeatures","fetchPromise","featureProviders","all","getFeatures","featureResults","updateFeatures","feature","existingConfig","find","Id","Parameters","assign","setValue","cachedFeatureData","getValue","isFlightEnabled","flight","PostEventToTelemetry","isCachedFlightEnabled","isFlightEnabledAsync","getTreatmentVariable","configId","getTreatmentVariableAsync","checkCache","_featuresConsumed","postEvent","invokeInit","addFeatureProvider","providers","_DYN_LOGGER","_DYN_INDEX_OF","_DYN_TIMINGS","_DYN_POLL_INTERNAL_LOGS","_DYN_VALUE","_DYN_KIND","_DYN_LENGTH","_DYN_PROCESS_TELEMETRY_ST0","_DYN_HANDLE_FIELD","_DYN_RM_SANITIZER","_DYN_RM_FIELD_SANITIZER","_DYN_CAN_HANDLE","TRACE_PARENT_REGEX","DEFAULT_VERSION","INVALID_VERSION","INVALID_TRACE_ID","INVALID_SPAN_ID","SAMPLED_FLAG","_isValid","invalidValue","_formatValue","_formatFlags","createTraceParent","traceId","spanId","flags","version","isValidTraceId","isValidSpanId","traceFlags","parseTraceParent","selectIdx","isValidTraceParent","isSampledFlag","formatTraceParent","toLowerCase","findW3cTraceParent","traceParent","HttpClient","FetchError","responseReceived","responseOk","super","json","strTelemetryPluginChain","strHasRunFlags","strGetTelCtx","_chainId","_createInternalContext","telemetryChain","startAt","_nextProxy","_onComplete","createTelemetryProxyChain","_getNextProxyStart","_next","nextProxy","completeDetails","args","_getExtCfg","getConfig","extConfig","rootConfig","hasNext","getNext","setNext","nextPlugin","iterate","that","createIfMissing","idCfg","extCfg","createProcessTelemetryContext","internalContext","createProcessTelemetryUnloadContext","createProcessTelemetryUpdateContext","updateState","firstProxy","lastProxy_1","newProxy","chainId","hasProcessTelemetry","hasSetNext","proxyChain","getPlugin","_processChain","hasRun","pluginCore","update","updateCtx","_id","_setNext","processPluginFn","hasRunContext","nextId","hasNextRun","createTelemetryPluginProxy","ProcessTelemetryContext","_stringToBoolOrDefault","cfgDfMerge","cfgDfValidate","validator","fallBackName","cfgDfBoolean","tas_client_1","MementoKeyValueStorage_1","TelemetryDisabledExperimentationService_1","extensionName","extensionVersion","targetPopulation","memento","filterProviders","workspace","getConfiguration","isTelemetryEnabled","default","providerList","VSCodeFilterProvider","keyValueStorage","MementoKeyValueStorage","ExperimentationService","featuresTelemetryPropertyName","refetchInterval","experimentationService","TelemetryInitializerPlugin","_initializers","addTelemetryInitializer","telemetryInitializer","theInitializer","remove","initializer","_addInitializer","telemetryInitializersCount","_runInitializers","strValidationError","strSdkUnloadingError","cookieCfg","rdOnly","loggingLevelConsole","_createPerfManager","notificationMgr","PerfManager","_isPluginPresent","exists","_deepMergeConfig","newValues","merge","_findWatcher","newWatcher","theListener","_configHandler","_eventQueue","_notificationManager","_perfManager","_cfgPerfManager","_cookieManager","_pluginChain","_configExtensions","_channelConfig","_channels","_isUnloading","_telemetryInitializerPlugin","_internalLogsEventName","_unloadHandlers","_hookContainer","_debugListener","_traceCtx","_cfgListeners","_extensions","_pluginVersionStringArr","_pluginVersionString","_activeStatus","_endpoint","_initInMemoMaxSize","_isStatusSet","_internalLogPoller","_internalLogPollerListening","_forceStopInternalLogPoller","_setStatus","_releaseQueues","releaseQueue","_startLogPoller","alwaysStart","queue","_addUnloadHook","interval","isRunning","_flushInternalLogs","unref","_setPluginVersions","thePlugins","_addPluginVersions","channels","updateCfg","DiagnosticLogger","cfgExtensions","_createTelCtx","theCtx","_getPluginChain","_initPluginChain","theExtensions","channelPriority","allExtensions","coreExtensions","extPriorities","extPriority","_validateExtensions","rootCtx","_doUpdate","_getPlugin","pluginIdentifier","theExt","channelHosts","getChannel","setEnabled","isEnabled","removeCb","pluginsToRemove","_removePlugins","removeComplete","unloadChain","newConfigExtensions","newChannelConfig","newQueue","channel","logMessage","_flushChannels","cbTimeout","doneIterating","cbTimer","doCallback","handled_1","_updateHook","_logOrThrowError","_notifyInvalidEvent","hooks","_setPendingStatus","prevCfgPerfMgr","rootCfg","initInMemoMaxSize","promises","initTimeout","initTimeOut","allPromises","ikeyRes","endpointRes","configHandler","unloadContainer","debugListener","disableDbgExt","_initDebugListener","enablePerfMgr","createPerfMgr","teeController","unloadHdl","_registerDelayedCfgListener","getChannels","controls","getNotifyMgr","getCookieMgr","setCookieMgr","cookieMgr","setPerfMgr","perfMgr","eventCnt","eventQueue","unloadComplete","flushComplete","processUnloadCtx","_doUnload","addPlugin","replaceExisting","addCb","existingPlugin","_addPlugin","removedPlugins_1","mergeExisting","oldCfg","_block","getTraceCtx","createNew","setTraceCtx","traceCtx","onCfgChange","unloadHook","fnd","_createUnloadHook","getWParam","enableWParam","BreezeChannelIdentifier","ExperimentationService_1","PollingService","fetchInterval","StopPolling","clearInterval","intervalHandle","OnPollTick","onTick","StartPolling","pollImmediately","catch","setInterval","EventsDiscardedReason","Unknown","NonRetryableStatus","InvalidEvent","SizeLimitExceeded","KillSwitch","QueueFull","CleanStorage","MaxInStorageTimeExceeded","rCamelCase","rNormalizeInvalid","rLeadingNumeric","isNotNullOrUndefined","normalizeJsName","_all","letter","toUpperCase","strContains","toISOString","date","getExceptionName","valChk","srcChk","getSetValue","_createProxyFunction","srcFunc","originalArguments","proxyAssign","chkSet","_loop_1","proxyFunctionAs","overwriteTarget","proxyFunctions","functionsToProxy","theFuncName","createClassFromInterface","defaults","optimizeObject","objExtend","extended","argLen","deep","isArgArray","isArgObj","isNewArray","clone","getResponseText","formatErrorMessageXdr","formatErrorMessageXhr","prependTransports","newTransports","strDisabledPropertyName","strWithCredentials","strTimeout","openXhr","withCredentials","disabled","isSync","_wrapSetXhrProp","XMLHttpRequest","convertAllHeadersToMap","headersString","headersArray","headerEntry","substring","_appendHeader","theHeaders","STR_KILL_DURATION_HEADER","STR_KILL_DURATION_SECONDS_HEADER","STR_TIME_DELTA_HEADER","_getAllResponseHeaders","allFlows","flow","useFlow","supportsGitHubDotCom","supportsGitHubEnterpriseServer","supportsHostedGitHubEnterprise","extensionHost","supportsRemoteExtensionHost","supportsWebWorkerExtensionHost","Config","gitHubClientSecret","supportsNoClientSecret","isSupportedClient","supportsSupportedClients","supportsUnsupportedClients","generateRandomString","array","Uint8Array","padStart","generateCodeChallenge","codeVerifier","TextEncoder","encode","digest","subtle","fromCharCode","exchangeCodeForToken","endpointUri","redirectUri","enterpriseUri","clientSecret","gitHubClientId","fetching","retryFallbacks","expectJSON","Accept","access_token","trigger","baseUri","callbackUri","existingLogin","withProgress","ProgressLocation","Notification","title","comment","cancellable","codeChallenge","searchParams","loginUrl","with","server","LoopbackAuthServer","__dirname","codeToExchange","openExternal","encodeURIComponent","waitForOAuthResponse","stop","proxyEndpoints","commands","executeCommand","button","GitHubSocialSignInProviderLabels","showInformationMessage","user_code","modal","detail","clipboard","writeText","verification_uri","uriToOpen","asExternalUri","waitForDeviceCodeAccessToken","refreshTokenUri","device_code","attempts","isCancellationRequested","accessTokenResult","accessTokenJson","error_description","appName","showInputBox","placeHolder","prompt","ignoreFocusOut","appUri","isHostedGitHubEnterprise","scheme","tokenScopes","getScopes","every","scope","included","splitScopes","serverUri","Authorization","appHost","trim","STR_WARN_TO_CONSOLE","loggingLevelTelemetry","maxMessageLimit","enableDebug","_logFuncs","_sanitizeDiagnosticText","_logToConsole","theConsole","logFunc","_InternalLogMessage","msgId","isUserAct","strProps","diagnosticText","safeGetLogger","_loggingLevelConsole","_loggingLevelTelemetry","_maxInternalMessageLimit","_enableDebug","_unloadHandler","_messageCount","_messageLogged","_logInternalMessage","severity","messageKey","_debugExtMsg","throttleLimitMessage","throttleMessage","errorToConsole","dbgExt","_setDefaultsFromConfig","consoleLoggingLevel","debugToConsole","resetInternalMessageCount","_getLogger","_throwInternal","_warnToConsole","runTargetUnload","doUnloadAll","targets","resolved","FilteredFeatureProvider","BaseFeatureProvider_1","BaseFeatureProvider","getFilters","filters","filterHeaders","filterValue","jsonHeaders","instanceName","_dataUid","_canAcceptData","createUniqueNamespace","includeVersion","createElmNodeData","accept","addDefault","theCache","_getCache","kill","createEnumStyle","createValueMap","FullVersionString","ObjHasOwnProperty","_fieldTypeEventPropMap","uInt8ArraySupported","isDocumentObjectAvailable","isWindowObjectAvailable","isValueAssigned","getTenantId","apiKey","indexTenantId","isUint8ArrayAvailable","ua","isSafariOrFirefox","isLatency","sanitizeProperty","propType","isArrayValid","isValueKind","getCommonSchemaMetaData","encodedTypeValue","isDataType","getFieldValueType","getCookieValue","decode","cookieValue","decodeURIComponent","createGuid","style","theGuid","extend","arrayValue","arrayIndex","setProcessTelemetryTimings","isChromium","isGreaterThanZero","ActiveStatus","INACTIVE","createOutputChannel","log","debug","warn","_doc","strToGMTString","strToUTCString","strCookie","strExpires","strIsCookieUseDisabled","strDisableCookiesUsage","strConfigCookieMgr","_supportsCookies","_allowUaSameSite","_parsedCookieValue","_cookieCache","_globalCookieConfig","rootDefaultConfig","ignoreCookies","blockedCookies","cookieDomain","cookiePath","_getDoc","_isMgrEnabled","_isIgnoredCookie","cookieMgrCfg","_isCfgEnabled","cookieMgrConfig","isCfgEnabled","cookieEnabled","safeGetCookieMgr","createCookieMgr","inst","_gblCookieMgr","_path","_domain","_enabled","_getCookieFn","_setCookieFn","_delCookieFn","getCookie","_getCookieValue","setCookie","_setCookieValue","delCookie","areCookiesSupported","gblManager","maxAgeSec","_isBlockedCookie","_extractParts","_isIE","expireMs","expiry","setTime","_formatDate","uaDisallowsSameSiteNone","_formatCookieValue","del","purge","doc","parts","thePart","theDate","theCookie","TasApiFeatureProvider","TASAPI_FETCHERROR_EVENTNAME","FilteredFeatureProvider_1","httpClient","fetchError","responseData","Configs","featureName","AssignmentContext","subscriptions","registerUriHandler","GitHubAuthenticationProvider","before","githubEnterpriseAuthProvider","initGHES","onDidChangeConfiguration","affectsConfiguration","after","beforeFetchSetting","afterFetchSetting","settingNotSent","settingInvalid","NullAuthProvider","_errorMessage","_onDidChangeSessions","settingValue","strShimFunction","strShimObject","strShimUndefined","strShimPrototype","ExperimentationServiceAutoPolling","ExperimentationServiceBase_1","PollingService_1","refreshRateMs","pollingService","strOnPrefix","strAttachEvent","strAddEventHelper","strDetachEvent","strRemoveEventListener","strEvents","strVisibilityChangeEvt","strPageHide","strPageShow","strUnload","strBeforeUnload","strPageHideNamespace","strPageShowNamespace","rRemoveEmptyNs","rRemoveTrailingEmptyNs","_guid","elmNodeData","eventNamespace","_normalizeNamespace","_getEvtNamespace","theNamespace_1","parsedEvent","ns","__getRegisteredEvents","theEvents","eventCache","evtName","evtType","registeredEvents","_getRegisteredEvents","aiEvts","_doDetach","handlerRef","useCapture","_doUnregister","unRegFn","capture","mergeEvtNamespace","theNamespace","namespaces","eventOn","_doAttach","registeredEvent","guid","eventOff","evtName_1","found_1","_unregisterEvents","regEvent","attachEvent","eventNameWithoutOn","detachEvent","addEventHandler","removeEventHandler","_addEventListeners","excludeEvents","addEventListeners","removeEventListeners","addPageUnloadEventListener","removePageUnloadEventListener","addPageHideEventListener","newNamespaces","pageUnloadAdded","visibilityState","removePageHideEventListener","addPageShowEventListener","pageShowAdded","removePageShowEventListener","_DYN_TO_LOWER_CASE","_DYN_BLK_VAL","_DYN_RD_ONLY","_DYN_NOTIFY","_DYN_WARN_TO_CONSOLE","_DYN_THROW_INTERNAL","_DYN_SET_DF","_DYN_WATCH","_DYN_APPLY","_DYN_PUSH","_DYN_SPLICE","_DYN_HDLR","_DYN_CANCEL","_DYN_IDENTIFIER","_DYN_REMOVE_NOTIFICATION_0","_DYN_ADD_NOTIFICATION_LIS1","_DYN_IS_INITIALIZED","_DYN__INACTIVE","_DYN_GET_NOTIFY_MGR","_DYN_GET_PLUGIN","_DYN_NAME","_DYN_I_KEY","_DYN_TIME","_DYN_PROCESS_NEXT","_DYN_GET_PROCESS_TEL_CONT2","_DYN_ENABLED","_DYN_STOP_POLLING_INTERNA3","_DYN_UNLOAD","_DYN_ON_COMPLETE","_DYN_VERSION","_DYN_LOGGING_LEVEL_CONSOL4","_DYN_TEARDOWN","_DYN_MESSAGE_ID","_DYN_IS_ASYNC","_DYN__DO_TEARDOWN","_DYN_UPDATE","_DYN_GET_NEXT","_DYN_SET_NEXT_PLUGIN","_DYN_PROTOCOL","_DYN_USER_AGENT","_DYN_SPLIT","_DYN_NODE_TYPE","_DYN_REPLACE","_DYN_LOG_INTERNAL_MESSAGE","_DYN_TYPE","_DYN_HANDLER","_DYN_STATUS","_DYN_GET_RESPONSE_HEADER","_DYN_GET_ALL_RESPONSE_HEA5","_DYN_IS_CHILD_EVT","_DYN_GET_CTX","_DYN_SET_CTX","_DYN_COMPLETE","_DYN_URL_STRING","_DYN_SEND_POST","_DYN_HEADERS","_DYN_TIMEOUT","_DYN_SET_REQUEST_HEADER","_DYN_SPAN_ID","_DYN_TRACE_FLAGS","baseReporter","sharedProperties","experimentationServicePromise","createExperimentationService","uriScheme","Public","Insiders","Internal","Team","globalState","sendTelemetryErrorEvent","_measurements","STR_CHANNELS","STR_CORE","STR_CREATE_PERF_MGR","STR_DISABLED","STR_EXTENSION_CONFIG","STR_EXTENSIONS","STR_PROCESS_TELEMETRY","STR_PRIORITY","STR_EVENTS_SENT","STR_EVENTS_DISCARDED","STR_EVENTS_SEND_REQUEST","STR_PERF_EVENT","STR_OFFLINE_STORE","STR_OFFLINE_SENT","STR_OFFLINE_DROP","STR_GET_PERF_MGR","STR_DOMAIN","STR_PATH","STR_NOT_DYNAMIC_ERROR","UInt32Mask","MaxUInt32","SEED1","SEED2","_mwcSeeded","_mwcW","_mwcZ","_autoSeedMwc","seedValue","randomValue","maxValue","random32","signed","mwcRandom32","newId","number","chars","isFetching","thisArgs","disposables","adapter","passthrough","subscription","one","other","itemEquals","a","_startTime","_stopTime","elapsed","TasApiFeatureProvider_1","HttpClient_1","ExperimentationServiceAutoPolling_1","REFRESH_RATE_IN_MINUTES","strDocumentMode","strLocation","strConsole","strJSON","strCrypto","strMsCrypto","strReactNative","strMsie","strTrident","strXMLHttpRequest","_isTrident","_navUserAgentCheck","_enableMocks","_useXDomainRequest","_beaconsSupported","_hasProperty","theClass","supported","tmp","setEnableEnvMocks","getLocation","checkForMock","mockLocation","getConsole","console","hasJSON","getJSON","getCrypto","getMsCrypto","isReactNative","product","isIE","getIEVersion","userAgentStr","navigator_1","tridentVer","isBeaconsSupported","isFetchSupported","withKeepAlive","isSupported","useXDomainRequest","isXhrSupported","_getNamedValue","findMetaTag","querySelectorAll","content","findNamedServerTiming","navPerf","getEntriesByType","serverTiming","ChannelControllerPriority","DisabledPropertyName","listenerFuncs","_aiNamespace","_listenerProxyFunc","getDebugExt","getDebugListener","_uriHandler","_extensionKind","_ghesUri","_type","_redirectEndpoint","getRedirectEndpoint","URL","hostname","_isNoCorsEnvironment","isNoCorsEnvironment","userCancelled","yes","no","promptToContinue","mode","showWarningMessage","supportedClient","supportedTarget","isSupportedTarget","isNodeEnvironment","flows","getFlows","ExtensionKind","UI","processLoginError","startsWith","authHeader","base64Encode","getServerUri","apiUri","checkUserDetails","checkEnterpriseVersion","edu","student","faculty","isEdu","isManaged","installed_version","VALID_DESKTOP_CALLBACK_SCHEMES","gheUri","mementoGlobalStorage","strExecutionContextKey","strParentContextKey","strChildrenContextKey","_defaultPerfManager","PerfEvent","payloadDetails","theDetails_1","childTime","childEvts","childEvt","exTime","ParentContextKey","ChildrenContextKey","create","doPerfActiveKey","doPerf","mgrSource","getSource","perfEvt","currentActive","children","getGblPerfMgr","_debugState","_debugResult","_debugHandled","STR_PROMISE","REJECTED","doAwaitResponse","doAwait","resolveFn","rejectFn","finallyFn","finally","doFinally","_hasInitEvent","_promiseDebugEnabled","STRING_STATES","DISPATCH_EVENT","_hasInitEventFn","createEvent","initEvent","_hasPromiseRejectionEvent","_promiseCls","_allSyncSettledCreator","_promiseCreator","NODE_UNHANDLED_REJECTION","UNHANDLED_REJECTION","_currentPromiseId","_uniquePromiseId","_unhandledRejectionTimeout","dumpFnObj","_createPromise","newPromise","processor","executor","_settledValue","_thePromise","additionalArgs","_state","_hasResolved","_queue","_parentId","_handled","_unHandledRejectionHandler","_then","onResolved","onRejected","_processQueue","pop","_strState","pending","_createSettleIfFn","allowState","_notifyUnhandledRejection","emit","populateEvent","useNewEvent","theEvt","emitEvent","onFinally","thenFinally","catchFinally","stateFn","_addDebugState$1","_rejectFn","_createAllPromise","values_1","pending_1","syncItemProcessor","createAsyncPromise","callbackTimeout","timeoutItemProcessor","createNativePromise","PrmCls","createSyncPromise","createSyncAllSettledPromise","processItem","createPromise","createAllPromise","strGetPlugin","_isinitialized","_rootCtx","_nextPlugin","_unloadHandlerContainer","currentCtx","_setDefaults","unloadDone","theUnloadCtx","theUnloadState","_unloadCallback","updateDone","theUpdateCtx","theUpdateState","_updateCallback","setInitialized","Constructor","Prototype","strFunction","DynInstFuncTable","DynProxyTag","DynClassName","DynClassNamePrefix","DynInstChkTag","DynAllowInstChkTag","DynProtoDefaultOptions","UnknownValue","str__Proto","DynProtoBaseProto","DynProtoGlobalSettings","DynProtoCurrent","strUseBaseInst","strSetInstFuncs","Obj","_objGetPrototypeOf","_objGetOwnProps","_gbl","_gblInst","o","_isObjectOrArrayPrototype","_isObjectArrayOrFunctionPrototype","_getObjProto","newProto","curProto","_forEachProp","_isDynamicCandidate","skipOwn","_throwTypeError","_hasVisited","_populatePrototype","className","baseInstFuncs","setInstanceFunc","instFuncTable","instFuncs_1","dynProtoProxy","instFunc","currentDynProtoProxy","canAddInst","objProto","visited","protoFunc","_getInstFunc","_getProtoFunc","_createDynamicPrototype","_getObjName","unknownValue","dynamicProto","delegateFunc","classProto","thisTarget","thisProto","_checkPrototype","perfOptions","useBaseInst","instFuncs","_getInstanceFuncs","baseFuncs","_instFuncProxy","funcHost","baseProto","_getBaseFuncs","RT_PROFILE","NRT_PROFILE","BE_PROFILE","STR_DROPPED","STR_REQUEUE","DEFAULT_CACHE_CONTROL","DEFAULT_CONTENT_TYPE","STR_CACHE_CONTROL","STR_CONTENT_TYPE_HEADER","STR_CLIENT_VERSION","STR_CLIENT_ID","STR_TIME_DELTA_TO_APPLY","STR_UPLOAD_TIME","STR_API_KEY","STR_MSA_DEVICE_TICKET","STR_AUTH_WEB_TOKEN","STR_AUTH_XTOKEN","STR_MSFPC","STR_TRACE","STR_USER","_DYN_ALLOW_REQUEST_SENDIN0","_DYN_FIRST_REQUEST_SENT","_DYN_SHOULD_ADD_CLOCK_SKE1","_DYN_GET_CLOCK_SKEW_HEADE2","_DYN_SET_CLOCK_SKEW","_DYN_COUNT","_DYN_EVENTS","_DYN_HDRS","_DYN_USE_HDRS","_DYN_SET_TIMEOUT_OVERRIDE","_DYN_CLEAR_TIMEOUT_OVERRI3","_DYN_OVERRIDE_ENDPOINT_UR4","_DYN_AVOID_OPTIONS","_DYN_ENABLE_COMPOUND_KEY","_DYN_DISABLE_XHR_SYNC","_DYN_DISABLE_FETCH_KEEP_A6","_DYN_USE_SEND_BEACON","_DYN_FETCH_CREDENTIALS","_DYN_ALWAYS_USE_XHR_OVERR7","_DYN_SERIALIZE_OFFLINE_EV8","_DYN_GET_OFFLINE_REQUEST_9","_DYN_CREATE_PAYLOAD","_DYN_CREATE_ONE_DSPAYLOAD","_DYN_PAYLOAD_BLOB","_DYN__THE_PAYLOAD","_DYN_BATCHES","_DYN_SEND_TYPE","_DYN_ADD_HEADER","_DYN_CAN_SEND_REQUEST","_DYN_SEND_QUEUED_REQUESTS","_DYN_IS_COMPLETELY_IDLE","_DYN_SET_UNLOADING","_DYN_RESUME","_DYN_SEND_SYNCHRONOUS_BAT10","_DYN__TRANSPORT","_DYN_GET_WPARAM","_DYN_IS_BEACON","_DYN_IS_TEARDOWN","_DYN_IS_SYNC","_DYN__SEND_REASON","_DYN_SET_KILL_SWITCH_TENA11","_DYN__BACK_OFF_TRANSMISSI12","_DYN_AUTO_FLUSH_EVENTS_LI14","_DYN_BASE_DATA","_DYN_SEND_ATTEMPT","_DYN_LATENCY","_DYN_SYNC","_getEventMsfpc","intWeb","_getMsfpc","msfpc","EventBatch","addEvents","_msfpc","Msfpc","addEvent","fromEvent","numEvents","ClockSkewManager","_allowRequestSending","_shouldAddClockSkewHeaders","_isFirstRequest","_clockSkewHeaderValue","_clockSkewSet","timeDeltaInMillis","_killedTokenDictionary","killTokens","killDuration","killedTokens","tenantToken","killDictionary","retryPolicyGetMillisToBackoffForRetry","retriesSoFar","waitDuration","randomBackoff","BaseBackoff","MaxRecordSize","MaxBeaconRecordSize","metadata","f","rCheckDot","perfManager","valueSanitizer","enableCompoundKey","getEncodedTypeOverride","excludeCsMetaData","strData","_checkForCompoundkey","_processSubKeys","_theSanitizer","_isReservedCache","_excludeCsMetaData","_getEncodedType","_processPathKeys","srcObj","thePath","checkReserved","metadataPathKeys","metadataCallback","processSubKeys","srcValue","theMetaPathKeys","destObj","subKeys","keyLen","subKey","isReserved","_isReservedField","handleField","retryCnt","isTeardown","isReducedPayload","sendType","apiKeys","payloadBlob","overflow","sizeExceed","failedEvts","batches","isBeacon","appendPayload","theBatch","maxEventsPerBatch","canAddEvents","payloadEvents","eventsAdded","sizeExceeded","isBeaconPayload","requestMaxSize","recordMaxSize","joinCount","eventBlob","getEventBlob","blobLength","evts","serializedEvent","_addMetadataCallback","serializedExt","pathKeys","getEncodedType","propKeys","propertyValue","metaData","metaTarget","newTarget","_addJSONPropertyMetaData","eventExt","serializedData","serializedBaseData","createTimeoutWrapper","argSetTimeout","argClearTimeout","strSendAttempt","UrlQueryString","_eventActionMap","_collectorQsHeaders","_collectorHeaderToQs","_addCollectorHeaderQsMapping","qsName","allowQs","_hasHeader","hasHeader","lowerHeader","_addRequestDetails","useHeaders","HttpManager","maxConnections","maxRequestRetriesBeforeBackoff","actions","_urlString","_killSwitch","_clockSkewManager","_outstandingRequests","_postManager","_sendInterfaces","_core","_customHttpInterface","_queryStringParameters","_batchQueue","_enableEventTimings","_cookieMgr","_useHeaders","_xhrTimeout","_disableXhrSync","_canHaveReducedPayload","_unloadHooks","_sendHook","_sendListener","_responseHandlers","_useBeacons","_xdrOncomplete","_fetchOnComplete","_xhrOnComplete","_handleCollectorResponse","headerMap","handleResponse","theUrl","nav_1","persistStorage","droppedBatches_1","sentBatches_1","sentEvts","_sendBatchesNotification","_isBeaconPayload","_adjustSendType","_hasIdleConnection","_clearQueue","theQueue","_canSendPayload","theBatches","_createDebugBatches","_sendBatches","retryCount","orgBatches_1","isSynchronous_1","droppedBatches","serializationStart","sendTransport","shift","isTenantKilled","_doPayloadSend","isSynchronous","useSendBeacon","_buildRequestDetails","requestDetails","hdrs","useHdrs","apiQsKeys","wParam","_setTimingValue","timings","serializationCompleted","useSendHook_1","sendInterface_1","useHeaders_1","requestDetails_1","sendEventStart_1","batchLp","evtLp","orgPayloadData","_thePayload","_sendReason","sender","httpStatusCode","isRetrying","backOffTrans","shouldRetry","killToken","removedEvents","retryCount_1","_doAction","batchReason","_clearBackOff","sendEventCompleted_1","sendEventCompleted","_addEventCompletedTimings","_addCompleteTimings","sendQueuedRequests","_handleRequestFinished","_retryRequestIfNeeded","hookData_1","senderCalled_1","responseHandlers","webResult","sendSync","theAction_1","action","isSyncRequest_1","undefValue","postChannel","coreConfig","channelConfig","anonCookieName","qsParams","_addQueryStringParameter","_removeQueryStringParameter","payloadListener","xhrTimeout","syncHttpInterface","beaconHttpInterface","fetchSyncHttpInterface","beaconUnloadTransports","addResponseHandler","responseHandler","optimize","theBatches_1","removeHeader","addBatch","teardown","hook","MaxEventsLimitInMem","strEventsDiscarded","defaultPostChannelConfig","eventsLimitInMem","immediateEventLimit","autoFlushEventsLimit","disableAutoBatchFlushLimit","overrideInstrumentationKey","overrideEndpointUrl","ignoreMc1Ms0CookieProcessing","setTimeoutOverride","clearTimeoutOverride","payloadPreprocessor","disableEventTimings","disableOptimizeObj","unloadTransports","avoidOptions","alwaysUseXhrOverride","maxEventRetryAttempts","maxUnloadEventRetryAttempts","PostChannel","_postConfig","_flushCallbackTimer","_immediateQueueSizeLimit","_queueSizeLimit","_scheduledTimer","_immediateTimer","_currentBackoffCount","_timerCount","_httpManager","_batchQueues","_autoFlushEventsLimit","_autoFlushBatchLimit","_delayedBatchSendLatency","_delayedBatchReason","_optimizeObject","_isPageUnloadTriggered","_maxEventSendAttempts","_maxUnloadEventSendAttempts","_ignoreMc1Ms0CookieProcessing","_disableAutoBatchFlushLimit","_unloadHandlersAdded","_overrideInstrumentationKey","_isTeardownCalled","_flushCallbackQueue","_immediateQueueSize","_queueSize","_profiles","_currentProfile","_removeUnloadHandlers","_cleanEvent","_handleUnloadEvents","_releaseAllQueues","_handleShowEvents","_addEventToQueues","evtLatency","queueSize","queueLimit","eventDropped","_addEventToProperQueue","dropLatency","dropNumber","currentLatency","eventBatch","_getEventBatch","droppedEvents","droppedCount","_notifyBatchEvents","_resetQueueCounts","_dropEventWithLatencyOrLess","_notifyEvents","_sendEventsForLatencyAndAbove","queued","_queueBatches","_hasEvents","_scheduleTimer","immediateTimeOut","_createTimer","timeOut","requeue","_requeueEvents","_sendingEvent","sent","_eventsSentEvent","drop","_eventsDropped","rspFail","_eventsResponseFail","oth","_otherEvent","_initializeProfiles","iKeyMap","_setAutoLimits","theTimerFunc","timerMultiplier","batchQueue","_performAutoFlush","doFlush","immediateQueue","normalQueue","eventsQueued","latencyToProcess","_flushImpl","_waitForIdleManager","maxSendAttempts","_callNotification","notifyFunc","extraArgs","isSyncRequest","MaxNumberEventPerBatch","existingGetWParamMethod","wparam","_hookWParam","excludePageUnloadEvents","disablePageUnloadEvents","disablePageShowEvents","ev","details_1","serialize","createOneDSPayload","setEventQueueLimits","eventLimit","autoFlushLimit","_loadTransmitProfiles","profiles","profileName","profileValue","profLen","directValue","ceil","cleared","setMsaAuthTicket","ticket","setAuthPluginHeader","removeAuthPluginHeader","hasEvents","_setTransmitProfile","Filters","trimVersionSuffix","getFilterValue","ApplicationVersion","Build","ClientId","machineId","ExtensionName","ExtensionVersion","Language","language","filterValues","_maxHooks","_hookAddMonitor","_testHookMaxUnloadHooksCb","maxHooks","addMonitor","createUnloadHookContainer","_hooks","oldHooks","CFG_HANDLER_LINK","BLOCK_DYNAMIC","FORCE_DYNAMIC","_cfgDeepCopy","target_1","getDynamicConfigHandler","blockDynamicConversion","forceDynamicConversion","_canMakeDynamic","getFunc","state","blkVal","throwInvalidAccess","aggregationErrorType","arrayMethodsToPatch","_throwDynamicError","_getOwnPropGetter","_setDynamicProperty","getter","trk","clr","checkDynamic","isObjectOrArray","_getProperty","_makeDynamicObject","activeHandler","act","chng","ro","upd","isReferenced","rf","hdlr","valueState","newIsObjectOrArray","_createDynamicProperty","_setDynamicPropertyState","isDynamic","inPlace","blkProp","orgMethod","_patchArray","symPrefix","symPostfix","_createDynamicHandler","theState","use","_createAndUseHandler","allowUpdate","prevUpd","dynamicPropertySymbol","dynamicPropertyReadOnly","dynamicPropertyReferenced","dynamicPropertyBlockValue","dynamicPropertyDetail","_waitingHandlers","_watcherTimer","_useHandler","prevWatcher","bind","setDf","_notifyWatchers","notifyHandlers","watcherFailures_1","sourceErrors","theMessage","srcError","throwAggregationError","_createState","createDynamicConfig","onConfigChange","_logInvalidAccess","InstantiationStatus","TelemetryUtil","applyReplacements","replacementOptions","option","lookup","replacementString","shouldUseOneDataSystemSDK","getAdditionalCommonProperties","osShim","platform","architecture","release","getInstance","_instance","BaseTelemetryReporter","telemetrySender","vscodeAPI","initializationOptions","userOptIn","errorOptIn","_onDidChangeTelemetryLevel","onDidChangeTelemetryLevel","telemetryLogger","createTelemetryLogger","updateUserOptIn","onDidChangeEnableStates","isErrorsEnabled","isUsageEnabled","instantiateSender","telemetryLevel","internalSendTelemetryEvent","dangerous","sendEventData","logUsage","sendRawTelemetryEvent","modifiedProperties","propertyKey","TelemetryTrustedValue","sendDangerousTelemetryEvent","internalSendTelemetryErrorEvent","logError","sendDangerousTelemetryErrorEvent","BaseTelemetrySender","clientFactory","_instantiationStatus","NOT_INSTANTIATED","_exceptionQueue","_clientFactory","_key","_telemetryClient","logEvent","INSTANTIATED","sendErrorData","errorData","errorProperties","_flushQueues","INSTANTIATING","client","getBrowserRelease","navigator","userAgentData","brands","brand","TelemetryReporter","xhrOverride","appInsightsClient","basicAISDK","authConfig","disableAjaxTracking","disableExceptionTracking","disableFetchTracking","disableCorrelationHeaders","disableCookiesUsage","autoTrackPageVisitTime","emitLineDelimitedJson","appInsightsClientFactory","appInsightsCore","oneDs","postPlugin","collectorChannelPlugin","internalTesting","getAICore","completedFlush","oneDataSystemClientFactory","additionalCommonProperties","newGuid","uuid","generateW3CId","hexValues","oct","clockSequenceHi","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSeparator","joined","relative","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","dir","root","base","_format","ret","delimiter","win32","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","r","Symbol","__webpack_exports__"],"sourceRoot":""}