{"version":3,"file":"extension.js","mappings":"65BAKA,kBAEA,SAEA,MAAaA,EAMFC,SACAC,UALDC,MACAC,aAAuB,gBAEhC,WAAAC,CACUJ,EACAC,GADA,KAAAD,SAAAA,EACA,KAAAC,UAAAA,EAETI,KAAKH,MAAsB,eAAdD,EACVK,EAAOC,KAAKC,EAAE,iBACdF,EAAOC,KAAKC,EAAE,cAClB,CAEA,aAAMC,GAEL,MAAMC,QAAcC,QAAQF,QAAQH,EAAOM,SAASC,eAA2C,8BAA+BR,KAAKL,SAASc,IAAKT,KAAKL,SAASe,MAAMC,QAC/JC,EAAQ,IAAIC,EAAWb,KAAKJ,UAAWS,GAAS,IAChDS,EAAW,IAAIC,EAAqBH,GAE1C,GAA2B,IAAvBA,EAAMI,MAAMC,OAIhB,MAAO,CACNH,WACA,WAAII,GAAY,OAA8B,IAAvBN,EAAMI,MAAMC,OAAehB,EAAOC,KAAKC,EAAE,oBAAiBgB,CAAW,EAC5FC,WAAYR,EACZS,WAAYT,EACZU,IAAKV,EACL,OAAAW,GACCT,EAASS,SACV,EAEF,CAEA,KAAK5B,GACJ,OAAO,IAAID,EAAeC,EAAUK,KAAKJ,UAC1C,EAtCD,mBAgDA,MAAa4B,EAKFZ,MACAa,KACAC,OALVC,SAEA,WAAA5B,CACUa,EACAa,EACAC,GAFA,KAAAd,MAAAA,EACA,KAAAa,KAAAA,EACA,KAAAC,OAAAA,CACN,CAEJ,MAAAE,GACC5B,KAAKY,MAAMgB,OAAO5B,KACnB,EAZD,aAeA,MAAMa,EAOgBjB,UALZoB,MAAoB,GAEZa,aAAe,IAAI5B,EAAO6B,aAClCC,YAAc/B,KAAK6B,aAAaG,MAEzC,WAAAjC,CAAqBH,EAAmCS,GAAnC,KAAAT,UAAAA,EACpBI,KAAKgB,MAAQX,EAAM4B,IAAIR,GAAQ,IAAID,EAASxB,KAAMyB,OAAMN,GACzD,CAEQ,mBAAMe,CAAcC,GAC3B,GAAuB,eAAnBnC,KAAKJ,UAAiD,CACzD,MAAMwC,QAAcnC,EAAOM,SAASC,eAA2C,2BAA4B2B,EAAYV,MACvH,OAAOW,EAAQA,EAAMH,IAAIR,GAAQ,IAAID,EAASxB,KAAMyB,EAAMU,IAAgB,EAC3E,CAAO,CACN,MAAMC,QAAcnC,EAAOM,SAASC,eAA2C,yBAA0B2B,EAAYV,MACrH,OAAOW,EAAQA,EAAMH,IAAIR,GAAQ,IAAID,EAASxB,KAAMyB,EAAMU,IAAgB,EAC3E,CACD,CAEA,qBAAME,CAAgBZ,GAIrB,OAHKA,EAAKE,WACTF,EAAKE,eAAiB3B,KAAKkC,cAAcT,IAEnCA,EAAKE,QACb,CAIA,UAAAW,CAAWb,GACV,OAAO,IAAAc,eAAcd,EAAKA,KAAKhB,IAAKgB,EAAKA,KAAKf,MAC/C,CAIA,QAAAf,CAASwC,GACR,OAAO,IAAIlC,EAAOuC,SAASL,EAAYV,KAAKhB,IAAK0B,EAAYV,KAAKf,MACnE,CAEA,OAAA+B,CAAQhC,EAAiBiC,GACxB,OAAO1C,KAAKgB,MAAM2B,KAAKlB,GAAQA,EAAKA,KAAKhB,IAAImC,aAAenC,EAAImC,aAAe5C,KAAKgB,MAAM,EAC3F,CAEA,IAAA6B,CAAKC,GACJ,OAAO9C,KAAK+C,MAAMD,GAAM,IAASA,CAClC,CAEA,QAAAE,CAASF,GACR,OAAO9C,KAAK+C,MAAMD,GAAM,IAAUA,CACnC,CAEQ,KAAAC,CAAMtB,EAAgBwB,GAC7B,GAAIxB,EAAKE,UAAUV,OAClB,OAAOgC,EAAMxB,EAAKE,SAAS,IAAK,IAAAuB,MAAKzB,EAAKE,UAE3C,MAAMwB,EAAQnD,KAAKgB,MAAMoC,SAAS3B,GAAQzB,KAAKgB,MAAQS,EAAKC,QAAQC,SACpE,GAAIwB,GAAOlC,OAAQ,CAClB,MAAMoC,EAAMF,EAAMG,QAAQ7B,GAE1B,OAAO0B,EAAME,GADCJ,EAAM,GAAK,GACEE,EAAMlC,OAASkC,EAAMlC,OACjD,CACD,CAIA,mBAAAsC,CAAoBpB,EAAuB1B,GAC1C,OAAO0B,EAAYV,KAAKhB,IAAImC,aAAenC,EAAImC,WAAa,CAACT,EAAYV,KAAK+B,qBAAkBrC,CACjG,CAEA,MAAAS,CAAOH,GACN,MACMgC,EADWzD,KAAKgB,MAAMoC,SAAS3B,GACTzB,KAAKgB,MAAQS,EAAKC,QAAQC,SAClD8B,KACH,IAAAC,KAAID,EAAUhC,GACdzB,KAAK6B,aAAa8B,KAAK3D,MAEzB,EAGD,MAAMe,EAOe6C,OALHC,SAAW,IAAI5D,EAAO6B,aAC9BgC,oBAAsB9D,KAAK6D,SAAS7B,MAE5B+B,eAEjB,WAAAhE,CAAoB6D,GAAA,KAAAA,OAAAA,EACnB5D,KAAK+D,eAAiBH,EAAO7B,YAAYiC,GAAKhE,KAAK6D,SAASF,KAAKK,aAAaxC,EAAWwC,OAAI7C,GAC9F,CAEA,OAAAI,GACCvB,KAAK6D,SAAStC,UACdvB,KAAK+D,eAAexC,SACrB,CAEA,WAAA0C,CAAYC,GAEX,MAAMzC,EAAO,IAAIxB,EAAOkE,SAASD,EAAQzC,KAAK2C,MAa9C,OAZA3C,EAAK4C,YAAcH,EAAQzC,KAAK6C,OAChC7C,EAAK3B,aAAe,YACpB2B,EAAK8C,UAAW,IAAAC,cAAaN,EAAQzC,KAAKgD,MAC1ChD,EAAKiD,QAAU,CACdA,QAAS,cACT7E,MAAOI,EAAOC,KAAKC,EAAE,aACrBwE,UAAW,CACVT,EAAQzC,KAAKhB,IACb,CAAEmE,UAAWV,EAAQzC,KAAK+B,eAAeqB,KAAK,CAAEC,IAAKZ,EAAQzC,KAAK+B,eAAe7C,WAGnFc,EAAKsD,iBAAmB9E,EAAO+E,yBAAyBC,UACjDxD,CACR,CAEA,WAAAyD,CAAYhB,GACX,OAAOA,EACJlE,KAAK4D,OAAOvB,gBAAgB6B,GAC5BlE,KAAK4D,OAAO5C,KAChB,CAEA,SAAAmE,CAAUjB,GACT,OAAOA,EAAQxC,MAChB,E,43BC7LD,kBAGA,yBAY8B0D,MAA4CC,UAVxDC,gBAAkBrF,EAAOsF,OAAOC,+BAA+B,CAC/EC,gBAAiB,IAAIxF,EAAOyF,WAAW,uCACvCC,cAAe1F,EAAO2F,wBAAwBC,aAC9CC,kBAAmB7F,EAAO8F,kBAAkBC,OAC5CC,mBAAoB,IAAIhG,EAAOyF,WAAW,yCAG1BQ,YAAmC,GACnCC,QAAU,IAAIC,IAE/B,WAAArG,CAA6BqF,EAA4CC,GAA5C,KAAAD,MAAAA,EAA4C,KAAAC,UAAAA,EACxErF,KAAKkG,YAAYG,KAChBpG,EAAOqG,UAAUC,wBAAwBvC,GAAKhE,KAAKmG,QAAQK,IAAIxC,EAAEyC,SAAShG,IAAImC,aAC9E3C,EAAOsF,OAAOmB,4BAA4B,IAAMtB,EAAMuB,SAAW3G,KAAK4G,UACtExB,EAAMyB,sBAAsB7C,GAAKA,EAAE2C,QAAU3G,KAAK8G,QAAU9G,KAAK+G,SACjE3B,EAAM4B,qBAAqB,KACtB5B,EAAMuB,SACT3G,KAAK4G,YAIR5G,KAAK8G,OACN,CAEA,OAAAvF,GACCtB,EAAOgH,WAAWnE,QAAQ9C,KAAKkG,aAAa3E,UAC5C,IAAK,MAAM2F,KAAUjH,EAAOsF,OAAO4B,mBAClCD,EAAOE,eAAepH,KAAKsF,gBAAiB,GAE9C,CAEQ,KAAAwB,GACP,MAAQO,iBAAkBH,GAAWjH,EAAOsF,OAC5C,IAAK2B,IAAWA,EAAOI,WACtB,OAED,GAAItH,KAAKmG,QAAQoB,IAAIL,EAAOT,SAAShG,IAAImC,YACxC,OAED,MAAO4E,GAAUxH,KAAKoF,MAAMR,UAC5B,IAAK4C,EACJ,OAED,MAAMC,EAASzH,KAAKqF,UAAU9B,oBAAoBiE,EAAQN,EAAOT,SAAShG,KACtEgH,GACHP,EAAOE,eAAepH,KAAKsF,gBAAiBmC,EAE9C,CAEQ,KAAAV,GACP,IAAK,MAAMG,KAAUjH,EAAOsF,OAAO4B,mBAClCD,EAAOE,eAAepH,KAAKsF,gBAAiB,GAE9C,CAEA,MAAAsB,GACC5G,KAAK+G,QACL/G,KAAK8G,OACN,E,s3BC/DD,kBAEA,SAEA,mBAO8B1B,MALZsC,aAAoC,GACpCC,gBAAkB,IAAI,EAAAC,WAAoB,+BAEnDvC,UAER,WAAAtF,CAA6BqF,GAAA,KAAAA,MAAAA,EAC5BpF,KAAK0H,aAAarB,KACjBpG,EAAOM,SAASsH,gBAAgB,uBAAwB,IAAM7H,KAAK6C,MAAK,IACxE5C,EAAOM,SAASsH,gBAAgB,uBAAwB,IAAM7H,KAAKgD,UAAS,IAE9E,CAEA,OAAAzB,GACCtB,EAAOgH,WAAWnE,QAAQ9C,KAAK0H,cAAcnG,SAC9C,CAEA,MAAAqF,CAAOkB,GACN9H,KAAKqF,UAAYyC,EACjB9H,KAAK2H,gBAAgBI,IAAIC,QAAQhI,KAAKqF,WACvC,CAEQ,OAAA4C,GACP,IAAKjI,KAAKqF,UACT,OAED,MAAO6C,GAAOlI,KAAKoF,MAAMR,UACzB,OAAIsD,IAGCjI,EAAOsF,OAAO8B,iBAGZrH,KAAKqF,UAAU5C,QAAQxC,EAAOsF,OAAO8B,iBAAiBZ,SAAShG,IAAKR,EAAOsF,OAAO8B,iBAAiBzC,UAAUuD,aAHpH,EAID,CAEQ,KAAAC,CAAMC,EAAsBC,GACnCrI,EAAOM,SAASC,eAAe,cAAe6H,EAAI5H,IAAK,CACtDmE,UAAW,IAAI3E,EAAOsI,UAAUF,EAAI3H,MAAMC,MAAO0H,EAAI3H,MAAMC,OAC3D2H,iBAEF,CAEA,QAAAtF,CAASsF,GACR,IAAKtI,KAAKqF,UACT,OAED,MAAM5D,EAAOzB,KAAKiI,UAClB,IAAKxG,EACJ,OAED,MAAM+G,EAAUxI,KAAKqF,UAAUrC,SAASvB,GAClCgH,EAAczI,KAAKqF,UAAU1F,SAAS6I,GACxCC,IACHzI,KAAKoF,MAAMsD,OAAOF,EAAS,CAAEG,QAAQ,EAAMC,OAAO,IAClD5I,KAAKoI,MAAMK,EAAaH,GAE1B,CAEA,IAAAzF,CAAKyF,GACJ,IAAKtI,KAAKqF,UACT,OAED,MAAM5D,EAAOzB,KAAKiI,UAClB,IAAKxG,EACJ,OAED,MAAM+G,EAAUxI,KAAKqF,UAAUxC,KAAKpB,GAC9BgH,EAAczI,KAAKqF,UAAU1F,SAAS6I,GACxCC,IACHzI,KAAKoF,MAAMsD,OAAOF,EAAS,CAAEG,QAAQ,EAAMC,OAAO,IAClD5I,KAAKoI,MAAMK,EAAaH,GAE1B,E,s4BC9ED,kBAEA,SAEA,MAAaO,EAMFlJ,SACAC,UALDC,MACAC,aAAuB,gBAEhC,WAAAC,CACUJ,EACAC,GADA,KAAAD,SAAAA,EACA,KAAAC,UAAAA,EAETI,KAAKH,MAAsB,IAAdD,EACVK,EAAOC,KAAKC,EAAE,cACdF,EAAOC,KAAKC,EAAE,aAClB,CAEA,aAAMC,GAEL,MAAMC,QAAcC,QAAQF,QAAQH,EAAOM,SAASC,eAA2C,8BAA+BR,KAAKL,SAASc,IAAKT,KAAKL,SAASe,MAAMC,QAC/JC,EAAQ,IAAIkI,EAAW9I,KAAKJ,UAAWS,GAAS,IAChDS,EAAW,IAAIiI,EAAqBnI,GAE1C,GAA2B,IAAvBA,EAAMI,MAAMC,OAIhB,MAAO,CACNH,WACA,WAAII,GAAY,OAA8B,IAAvBN,EAAMI,MAAMC,OAAehB,EAAOC,KAAKC,EAAE,oBAAiBgB,CAAW,EAC5FC,WAAYR,EACZS,WAAYT,EACZU,IAAKV,EACL,OAAAW,GACCT,EAASS,SACV,EAEF,CAEA,KAAK5B,GACJ,OAAO,IAAIkJ,EAAelJ,EAAUK,KAAKJ,UAC1C,EAtCD,mBAiDA,MAAaoJ,EAKFpI,MACAa,KACAC,OACAuH,UANVtH,SAEA,WAAA5B,CACUa,EACAa,EACAC,EACAuH,GAHA,KAAArI,MAAAA,EACA,KAAAa,KAAAA,EACA,KAAAC,OAAAA,EACA,KAAAuH,UAAAA,CACN,CAEJ,MAAArH,GACC5B,KAAKY,MAAMgB,OAAO5B,KACnB,EAbD,aAgBA,MAAM8I,EAOgBlJ,UALZoB,MAAoB,GAEZa,aAAe,IAAI5B,EAAO6B,aAClCC,YAAc/B,KAAK6B,aAAaG,MAEzC,WAAAjC,CAAqBH,EAA2BS,GAA3B,KAAAT,UAAAA,EACpBI,KAAKgB,MAAQX,EAAM4B,IAAIR,GAAQ,IAAIuH,EAAShJ,KAAMyB,OAAMN,OAAWA,GACpE,CAEQ,mBAAM+H,CAAcC,GAC3B,GAAuB,IAAnBnJ,KAAKJ,UAAuC,CAC/C,MAAMwJ,QAAcnJ,EAAOM,SAASC,eAAmD,8BAA+B2I,EAAK1H,MAC3H,OAAO2H,EAAQA,EAAMnH,IAAIR,GAAQ,IAAIuH,EAAShJ,KAAMyB,EAAKqB,KAAMqG,EAAM1H,EAAK4H,WAAWpH,IAAIvB,GAAS,IAAIT,EAAOuC,SAASf,EAAKqB,KAAKrC,IAAKC,MAAY,EAClJ,CAAO,CACN,MAAM0I,QAAcnJ,EAAOM,SAASC,eAAmD,8BAA+B2I,EAAK1H,MAC3H,OAAO2H,EAAQA,EAAMnH,IAAIR,GAAQ,IAAIuH,EAAShJ,KAAMyB,EAAK6H,GAAIH,EAAM1H,EAAK4H,WAAWpH,IAAIvB,GAAS,IAAIT,EAAOuC,SAAS2G,EAAK1H,KAAKhB,IAAKC,MAAY,EAChJ,CACD,CAEA,qBAAM6I,CAAgBJ,GAIrB,OAHKA,EAAKxH,WACTwH,EAAKxH,eAAiB3B,KAAKkJ,cAAcC,IAEnCA,EAAKxH,QACb,CAIA,QAAAhC,CAAS8B,GACR,OAAO,IAAIxB,EAAOuC,SAASf,EAAKA,KAAKhB,IAAKgB,EAAKA,KAAKf,MACrD,CAEA,OAAA+B,CAAQhC,EAAiBiC,GACxB,OAAO1C,KAAKgB,MAAM2B,KAAKlB,GAAQA,EAAKA,KAAKhB,IAAImC,aAAenC,EAAImC,aAAe5C,KAAKgB,MAAM,EAC3F,CAEA,IAAA6B,CAAKC,GACJ,OAAO9C,KAAK+C,MAAMD,GAAM,IAASA,CAClC,CAEA,QAAAE,CAASF,GACR,OAAO9C,KAAK+C,MAAMD,GAAM,IAAUA,CACnC,CAEQ,KAAAC,CAAMtB,EAAgBwB,GAC7B,GAAIxB,EAAKE,UAAUV,OAClB,OAAOgC,EAAMxB,EAAKE,SAAS,IAAK,IAAAuB,MAAKzB,EAAKE,UAE3C,MAAMwB,EAAQnD,KAAKgB,MAAMoC,SAAS3B,GAAQzB,KAAKgB,MAAQS,EAAKC,QAAQC,SACpE,GAAIwB,GAAOlC,OAAQ,CAClB,MAAMoC,EAAMF,EAAMG,QAAQ7B,GAE1B,OAAO0B,EAAME,GADCJ,EAAM,GAAK,GACEE,EAAMlC,OAASkC,EAAMlC,OACjD,CACD,CAIA,UAAAqB,CAAWb,GACV,OAAO,IAAAc,eAAcd,EAAKA,KAAKhB,IAAKgB,EAAKA,KAAKf,MAC/C,CAIA,mBAAA6C,CAAoB9B,EAAgBhB,GACnC,OAAKgB,EAAKwH,UAGHxH,EAAKwH,UACVO,OAAOnB,GAAOA,EAAI5H,IAAImC,aAAenC,EAAImC,YACzCX,IAAIoG,GAAOA,EAAI3H,OAJTe,EAAKA,KAAKhB,IAAImC,aAAenC,EAAImC,WAAa,CAACnB,EAAKA,KAAK+B,qBAAkBrC,CAKpF,CAEA,MAAAS,CAAOH,GACN,MACMgC,EADWzD,KAAKgB,MAAMoC,SAAS3B,GACTzB,KAAKgB,MAAQS,EAAKC,QAAQC,SAClD8B,KACH,IAAAC,KAAID,EAAUhC,GACdzB,KAAK6B,aAAa8B,KAAK3D,MAEzB,EAGD,MAAM+I,EAOenF,OALHC,SAAW,IAAI5D,EAAO6B,aAC9BgC,oBAAsB9D,KAAK6D,SAAS7B,MAE5B+B,eAEjB,WAAAhE,CAAoB6D,GAAA,KAAAA,OAAAA,EACnB5D,KAAK+D,eAAiBH,EAAO7B,YAAYiC,GAAKhE,KAAK6D,SAASF,KAAKK,aAAagF,EAAWhF,OAAI7C,GAC9F,CAEA,OAAAI,GACCvB,KAAK6D,SAAStC,UACdvB,KAAK+D,eAAexC,SACrB,CAEA,WAAA0C,CAAYC,GAEX,MAAMzC,EAAO,IAAIxB,EAAOkE,SAASD,EAAQzC,KAAK2C,MAO9C,IAAIqF,EAEJ,GARAhI,EAAK4C,YAAcH,EAAQzC,KAAK6C,OAChC7C,EAAKiI,QAAUjI,EAAKkI,OAASzF,EAAQzC,KAAK6C,OAAS,GAAG7C,EAAKkI,WAAWzF,EAAQzC,KAAK6C,SAAW7C,EAAKkI,MAAQ,GAAGlI,EAAKkI,QAAUzF,EAAQzC,KAAK6C,OAC1I7C,EAAK3B,aAAe,YACpB2B,EAAK8C,UAAW,IAAAC,cAAaN,EAAQzC,KAAKgD,MAKV,IAA5BP,EAAQtD,MAAMhB,UAEjB6J,EAAW,CAACvF,EAAQzC,KAAKhB,IAAK,CAAEmE,UAAWV,EAAQzC,KAAK+B,eAAeqB,KAAK,CAAEC,IAAKZ,EAAQzC,KAAK+B,eAAe7C,cAEzG,CAEN,IAAIiJ,EACJ,GAAI1F,EAAQ+E,UACX,IAAK,MAAMZ,KAAOnE,EAAQ+E,UACrBZ,EAAI5H,IAAImC,aAAesB,EAAQzC,KAAKhB,IAAImC,aAC3CgH,EAAoBA,GAAmBC,SAASxB,EAAI3H,MAAMC,OAASiJ,EAAoBvB,EAAI3H,MAAMC,OAI/FiJ,IACJA,EAAoB1F,EAAQzC,KAAK+B,eAAe7C,OAEjD8I,EAAW,CAACvF,EAAQzC,KAAKhB,IAAK,CAAEmE,UAAW,IAAI3E,EAAO6J,MAAMF,EAAmBA,IAChF,CAQA,OANAnI,EAAKiD,QAAU,CACdA,QAAS,cACT7E,MAAOI,EAAOC,KAAKC,EAAE,aACrBwE,UAAW8E,GAEZhI,EAAKsD,iBAAmB9E,EAAO+E,yBAAyBC,UACjDxD,CACR,CAEA,WAAAyD,CAAYhB,GACX,OAAOA,EACJlE,KAAK4D,OAAO2F,gBAAgBrF,GAC5BlE,KAAK4D,OAAO5C,KAChB,CAEA,SAAAmE,CAAUjB,GACT,OAAOA,EAAQxC,MAChB,E,m2BCrND,oBAAyBqI,EAAmBC,GAE3C,MAAMpK,EAAY,IAAIqK,EAAmBD,EAAQE,eAAgB,YASjE,SAASC,EAA0BC,EAA+B5C,GAGjE,IAAI6C,EAFJzK,EAAUwK,MAAQA,EAGlB,MAAME,EAAWP,EAAKQ,WAClB/C,aAAkB,EAAAhG,SACrB6I,EAAW,IAAI,EAAA3K,eAAe,IAAIO,EAAOuC,SAASgF,EAAO/F,KAAKhB,IAAK+G,EAAO/F,KAAK+B,eAAe7C,OAAQf,EAAUwK,OACtG5C,aAAkBvH,EAAOuC,SACnC6H,EAAW,IAAI,EAAA3K,eAAe8H,EAAQ5H,EAAUwK,OACtCE,aAAoB,EAAA5K,iBAC9B2K,EAAW,IAAI,EAAA3K,eAAe4K,EAAS3K,SAAUC,EAAUwK,QAExDC,GACHN,EAAKS,SAASH,EAEhB,CAEAL,EAAQS,cAAcpE,KACrBpG,EAAOM,SAASsH,gBAAgB,oCAzBjC,WACC,GAAI5H,EAAOsF,OAAO8B,iBAAkB,CACnC,MAAMqD,EAAQ,IAAI,EAAAhL,eAAe,IAAIO,EAAOuC,SAASvC,EAAOsF,OAAO8B,iBAAiBZ,SAAShG,IAAKR,EAAOsF,OAAO8B,iBAAiBzC,UAAUuD,QAASvI,EAAUwK,OAC9JL,EAAKS,SAASE,EACf,CACD,GAqBCzK,EAAOM,SAASsH,gBAAgB,iCAAmCpG,GAA+C0I,EAA0B,aAAmC1I,IAC/KxB,EAAOM,SAASsH,gBAAgB,+BAAiCpG,GAA+C0I,EAA0B,WAAiC1I,IAC3KxB,EAAOM,SAASsH,gBAAgB,iCAAkC8C,GAEpE,EAvCA,kBAEA,SACA,QAsCA,SAASA,EAAelJ,GACnBA,aAAgB,EAAAD,UACnBC,EAAKG,QAEP,CAEA,MAAMqI,EAOIW,KACAC,OANDC,YAAc,oCAEdC,SAAW,IAAI,EAAAnD,WAAmC,qCAE1D,WAAA7H,CACS6K,EACAC,EAAA,YADA,KAAAD,KAAAA,EACA,KAAAC,OAAAA,EAER,MAAMG,EAAMJ,EAAKK,IAA4BhB,EAAmBiB,MAE/DlL,KAAKoK,MADa,iBAARY,EACGA,EAEAH,CAEf,CAEA,SAAIT,GACH,OAAOpK,KAAK6K,MACb,CAEA,SAAIT,CAAMA,GACTpK,KAAK6K,OAAST,EACdpK,KAAK+K,SAAShD,IAAIqC,GAClBpK,KAAK4K,KAAKhE,OAAOqD,EAAmBiB,KAAMd,EAC3C,E,m2BClED,oBAAyBJ,GAExB,MAAMD,EAAO,IAAI,EAAAoB,YAcjB,OAZAC,EAAWC,SAAStB,EAAMC,GAC1BZ,EAAMiC,SAAStB,EAAMC,GACrB5H,EAAMiJ,SAAStB,EAAMC,GAUd,CAAEQ,SART,SAAkBE,GACjBX,EAAKS,SAASE,EACf,EAMmBH,SAJnB,WACC,OAAOR,EAAKQ,UACb,EAGD,EAvBA,kBACA,YAEA,SACA,W,o4BCHA,eAAuBpH,EAAYa,GAClC,MAAMX,EAAMF,EAAMG,QAAQU,GACtBX,GAAO,GACVF,EAAMmI,OAAOjI,EAAK,EAEpB,EAEA,gBAAwBF,GACvB,OAAOA,EAAMA,EAAMlC,OAAS,EAC7B,EAEA,yBAA8BR,EAAiBC,GAC9C,OAAOD,EAAIoE,KAAK,CAAE0G,SAAU,IAAI,EAAI7K,EAAMC,MAAM6K,QAAQ,EAAI9K,EAAMC,MAAM8K,aAAa,EAAI/K,EAAMoE,IAAI0G,QAAQ,EAAI9K,EAAMoE,IAAI2G,aAC1H,EAEA,yBAAOC,eAAsCjL,EAAiBkL,GAC7D,MAAMC,QAAY3L,EAAOqG,UAAUuF,iBAAiBpL,GACpD,IAAIC,EAAQkL,EAAIE,uBAAuBH,GAIvC,OAHKjL,IACJA,EAAQkL,EAAIE,uBAAuBH,EAAU,WAEvC3D,QAAQtH,EAChB,EAEA,4BAAiCkL,EAA0BlL,EAAqBqL,EAAoB,EAAGC,GAAgB,GACtH,MAAMC,EAAevL,EAAMC,MAAMkE,KAAK,CAAE4G,UAAWS,KAAKC,IAAI,EAAGzL,EAAMC,MAAM8K,UAAYM,KACjFK,EAAYR,EAAIE,uBAAuBG,GAC7C,IAAII,EAAST,EAAIU,QAAQ,IAAIrM,EAAO6J,MAAMsC,EAAYA,EAAUzL,MAAQsL,EAAcvL,EAAMC,QAC5F,MAAM4L,EAASX,EAAIU,QAAQ5L,GACrB8L,EAAa9L,EAAMoE,IAAI2H,UAAU,EAAG,KAC1C,IAAIC,EAAQd,EAAIU,QAAQ,IAAIrM,EAAO6J,MAAMpJ,EAAMoE,IAAK0H,IAKpD,OAJIR,IACHK,EAASA,EAAOM,QAAQ,QAAS,IACjCD,EAAQA,EAAMC,QAAQ,QAAS,KAEzB,CAAEN,SAAQE,SAAQG,QAC1B,EAyFA,wBAA6BjI,GAC5B,MAAMmI,EAAKC,EAAcpI,GACzB,OAAOmI,EAAK,IAAI3M,EAAO6M,UAAUF,QAAMzL,CACxC,EAlIA,kBAwCA,mBAEsBiD,KAArB,WAAArE,CAAqBqE,GAAA,KAAAA,KAAAA,CAAgB,CAErC,SAAM2D,CAAIqC,SACHnK,EAAOM,SAASC,eAAe,aAAcR,KAAKoE,KAAMgG,EAC/D,CAEA,WAAM2C,SACC9M,EAAOM,SAASC,eAAe,aAAcR,KAAKoE,UAAMjD,EAC/D,GAGD,mBAK8B6L,KAA4CtK,UAHxDuK,SACAC,MAEjB,WAAAnN,CAA6BiN,EAA4CtK,GAA5C,KAAAsK,KAAAA,EAA4C,KAAAtK,UAAAA,EACxE1C,KAAKiN,SAAWD,EAAKG,QACrBnN,KAAKkN,MAAQlN,KAAKoN,eAAeJ,EAAMtK,EACxC,CAEQ,cAAA0K,CAAexB,EAA0ByB,GAChD,MAAM3M,EAAQkL,EAAIE,uBAAuBuB,IAAQzB,EAAIE,uBAAuBuB,EAAK,UACjF,OAAO3M,GAASkL,EAAIU,QAAQ5L,EAC7B,CAEA,sBAAA4M,GAEC,IAAKtN,KAAKkN,MACT,OAAOlN,KAAK0C,UAIb,GAAI1C,KAAKiN,WAAajN,KAAKgN,KAAKG,QAC/B,OAAOnN,KAAK0C,UAIb,MAAM6K,EAAUvN,KAAKoN,eAAepN,KAAKgN,KAAMhN,KAAK0C,WACpD,GAAI1C,KAAKkN,QAAUK,EAClB,OAAOvN,KAAK0C,UAIb,MAAM8K,EAAYxN,KAAK0C,UAAU8I,KACjC,IACIA,EACAiC,EAFAC,EAAI,EAGR,EAAG,CAIF,GAHAD,GAAU,EAEVjC,EAAOgC,EAAYE,EACflC,EAAOxL,KAAKgN,KAAKW,UAAW,CAC/BF,GAAU,EACV,MAAMG,EAAK5N,KAAKgN,KAAKa,OAAOrC,GAAMsC,KAAKxK,QAAQtD,KAAKkN,OACpD,GAAIU,GAAM,EACT,OAAO,IAAI3N,EAAO8N,SAASvC,EAAMoC,EAEnC,CAIA,GAHAF,GAAK,EAELlC,EAAOgC,EAAYE,EACflC,GAAQ,EAAG,CACdiC,GAAU,EACV,MAAMG,EAAK5N,KAAKgN,KAAKa,OAAOrC,GAAMsC,KAAKxK,QAAQtD,KAAKkN,OACpD,GAAIU,GAAM,EACT,OAAO,IAAI3N,EAAO8N,SAASvC,EAAMoC,EAEnC,CACD,OAASF,EAAI,KAAOD,GAGpB,OAAOzN,KAAK0C,SACb,GAID,MAAMmK,EAAgB,CACrB,cAAe,gBAAiB,mBAAoB,iBAAkB,eAAgB,gBACtF,kBAAmB,eAAgB,qBAAsB,cAAe,mBACxE,kBAAmB,kBAAmB,kBAAmB,gBAAiB,gBAAiB,iBAC3F,eAAgB,gBAAiB,aAAc,cAAe,qBAAsB,gBACpF,eAAgB,kBAAmB,wB,UCjIpCmB,EAAOC,QAAUC,QAAQ,S,m2BCSzB,oBAAyBnE,EAAmBC,GAE3C,SAASmE,EAActO,EAAe6E,GACrC,GAAIzE,EAAOsF,OAAO8B,iBAAkB,CACnC,MAAMqD,EAAQ,IAAI,EAAA0D,oBAAoBvO,EAAO,IAAII,EAAOuC,SAASvC,EAAOsF,OAAO8B,iBAAiBZ,SAAShG,IAAKR,EAAOsF,OAAO8B,iBAAiBzC,UAAUuD,QAASzD,GAChKqF,EAAKS,SAASE,EACf,CACD,CAgBA,IAAI2D,EAdJrE,EAAQS,cAAcpE,KACrBpG,EAAOM,SAASsH,gBAAgB,iCAAkC,IAAMsG,EAAc,aAAc,oCACpGlO,EAAOM,SAASsH,gBAAgB,sCAAuC,IAAMsG,EAAc,kBAAmB,yCAE9GlO,EAAOM,SAASsH,gBAAgB,uBAAwB,IAAIyG,IAAgBrO,EAAOM,SAASC,eAAe,oCAAqC8N,IAChJrO,EAAOM,SAASsH,gBAAgB,sCAAuC0G,GACvEtO,EAAOM,SAASsH,gBAAgB,uBAAwB2G,GACxDvO,EAAOM,SAASsH,gBAAgB,0BAA2B4G,GAC3DxO,EAAOM,SAASsH,gBAAgB,2BAA4B6G,IAO7D,MAAMC,EAAS,+BACf,SAASC,EAAqB5M,GAC7B,GAAIA,IAAUA,EAAM6M,qBAAqBF,GACxC,OAED,MAAMvE,EAAQnK,EAAOqG,UAAUwI,mBAAmB7D,IAAY0D,GAE9DN,GAA0B9M,UAC1B8M,OAA2BlN,EAEb,SAAViJ,IACHiE,EAA2BpO,EAAOM,SAASsH,gBAAgB,+BAAgC6D,MAAOjL,EAAiBkL,EAA2B1C,KAC7I,MAAMyB,EAAQ,IAAI,EAAA0D,oBAAoBnO,EAAOC,KAAKC,EAAE,cAAe,IAAIF,EAAOuC,SAAS/B,EAAKkL,GAAW,kCAAmC1C,GAC1Ic,EAAKS,SAASE,KAGjB,CACAV,EAAQS,cAAcpE,KAAKpG,EAAOqG,UAAUyI,yBAAyBH,IACrE5E,EAAQS,cAAcpE,KAAK,CAAE9E,QAAS,IAAM8M,GAA0B9M,YACtEqN,GACD,EAhDA,kBAEA,SAgDMH,EAAiB/C,MAAOjK,IACzBA,aAAgB,EAAAuN,cACnBR,EAAY/M,EAAKwN,KAAKrO,OACZa,aAAgB,EAAAyN,UAC1BV,EAAY/M,EAAKb,QAInB,SAAS2N,EAAoB9M,IACxBA,aAAgB,EAAAyN,UAETzN,aAAgB,EAAAuN,gBAD1BvN,EAAKG,QAIP,CAGA8J,eAAe8C,EAAY/M,GAC1B,IAAI0N,GACA1N,aAAgB,EAAA2N,iBAET3N,aAAgB,EAAAuN,eAEhBvN,aAAgB,EAAAyN,YAH1BC,QAAY1N,EAAK4N,cAMdF,SACGlP,EAAOqP,IAAIC,UAAUC,UAAUL,EAEvC,CAEAzD,eAAegD,EAAgBjN,GAC1BA,aAAgB,EAAAyN,WACK,SAApBzN,EAAKhB,IAAIgP,OACZxP,EAAOqP,IAAIC,UAAUC,UAAU/N,EAAKhB,IAAIiP,QAExCzP,EAAOqP,IAAIC,UAAUC,UAAU/N,EAAKhB,IAAImC,UAAS,IAGpD,C,m2BCpFA,oBAAyBmH,EAAmBC,GAE3C,MAAMpK,EAAY,IAAI+P,EAAmB3F,EAAQE,eAAgB,GASjE,SAAS0F,EAAkBxF,EAAuB5C,GAGjD,IAAI6C,EAFJzK,EAAUwK,MAAQA,EAGlB,MAAME,EAAWP,EAAKQ,WAClB/C,aAAkB,EAAAwB,SACrBqB,EAAW,IAAI,EAAAxB,eAAe,IAAI5I,EAAOuC,SAASgF,EAAO/F,KAAKhB,IAAK+G,EAAO/F,KAAK+B,eAAe7C,OAAQf,EAAUwK,OACtGE,aAAoB,EAAAzB,iBAC9BwB,EAAW,IAAI,EAAAxB,eAAeyB,EAAS3K,SAAUC,EAAUwK,QAExDC,GACHN,EAAKS,SAASH,EAEhB,CAEAL,EAAQS,cAAcpE,KACrBpG,EAAOM,SAASsH,gBAAgB,oCAvBjC,WACC,GAAI5H,EAAOsF,OAAO8B,iBAAkB,CACnC,MAAMqD,EAAQ,IAAI,EAAA7B,eAAe,IAAI5I,EAAOuC,SAASvC,EAAOsF,OAAO8B,iBAAiBZ,SAAShG,IAAKR,EAAOsF,OAAO8B,iBAAiBzC,UAAUuD,QAASvI,EAAUwK,OAC9JL,EAAKS,SAASE,EACf,CACD,GAmBCzK,EAAOM,SAASsH,gBAAgB,oCAAsCpG,GAA6BmO,EAAkB,EAAyBnO,IAC9IxB,EAAOM,SAASsH,gBAAgB,oCAAsCpG,GAA6BmO,EAAkB,EAAyBnO,IAC9IxB,EAAOM,SAASsH,gBAAgB,iCAAkCgI,GAEpE,EArCA,kBAEA,SACA,SAoCA,SAASA,EAAepO,GACnBA,aAAgB,EAAAuH,UACnBvH,EAAKG,QAEP,CAEA,MAAM+N,EAOI/E,KACAC,OANDC,YAAc,oCAEdC,SAAW,IAAI,EAAAnD,WAA4C,qCAEnE,WAAA7H,CACS6K,EACAC,EAAA,GADA,KAAAD,KAAAA,EACA,KAAAC,OAAAA,EAER,MAAMG,EAAMJ,EAAKK,IAAY0E,EAAmBzE,MAE/ClL,KAAKoK,MADa,iBAARY,GAAoBA,GAAO,GAAKA,GAAO,EACpCA,EAEAH,CAEf,CAEA,SAAIT,GACH,OAAOpK,KAAK6K,MACb,CAEA,SAAIT,CAAMA,GACTpK,KAAK6K,OAAST,EACdpK,KAAK+K,SAAShD,IAAoB,IAAhB/H,KAAK6K,OAAqC,eAAiB,gBAC7E7K,KAAK4K,KAAKhE,OAAO+I,EAAmBzE,KAAMd,EAC3C,E,w3BCvED,kBACA,QACA,QAEA,SAGA,oBAEU0F,OAAS,uBAEDC,aAAe,IAAI,EAAAnI,WAAoB,2BACvCoI,cAAgB,IAAI,EAAApI,WAAoB,4BACxCqI,gBAAkB,IAAI,EAAArI,WAAmB,yBAEzCsI,SAAW,IAAIC,EAAiBnQ,MAChCoQ,UAAY,IAAIC,EAChBC,KAAO,IAAIC,EACXC,MACAC,YAETC,OACAC,mBAER,WAAA5Q,GACCC,KAAKwQ,MAAQvQ,EAAOsF,OAAOqL,eAAwB5Q,KAAK8P,OAAQ,CAC/De,iBAAkB7Q,KAAKoQ,UACvBU,iBAAiB,EACjBC,sBAAuB/Q,KAAKsQ,OAE7BtQ,KAAKyQ,YAAc,IAAI,EAAAO,WAAWhR,KAAKwQ,MACxC,CAEA,OAAAjP,GACCvB,KAAKkQ,SAAS3O,UACdvB,KAAKwQ,MAAMjP,UACXvB,KAAK2Q,oBAAoBpP,SAC1B,CAEA,QAAAgJ,GACC,OAAOvK,KAAK0Q,MACb,CAEA,cAAMlG,CAASE,GAEd,UAAW,IAAAuG,wBAAuBvG,EAAM/K,SAASc,IAAKiK,EAAM/K,SAASe,MAAMC,OAE1E,YADAX,KAAKkR,aAINlR,KAAKiQ,gBAAgBlI,IAAI2C,EAAM5K,cAC/BE,KAAK+P,aAAahI,KAAI,GACtB/H,KAAKgQ,cAAcjI,KAAI,GACvB9H,EAAOM,SAASC,eAAe,GAAGR,KAAK8P,gBAEvC,MAAMqB,GAAgBnR,KAAK0Q,QAAUU,OAAOC,eAAerR,KAAK0Q,UAAYU,OAAOC,eAAe3G,GAClG1K,KAAK0Q,OAAShG,EACd1K,KAAK2Q,oBAAoBpP,UAEzBvB,KAAKwQ,MAAM3Q,MAAQ6K,EAAM7K,MACzBG,KAAKwQ,MAAMtP,QAAUiQ,OAAehQ,EAAYnB,KAAKwQ,MAAMtP,QAE3D,MAAMoQ,EAAehR,QAAQF,QAAQsK,EAAMtK,WAG3CJ,KAAKoQ,UAAUxJ,OAAO0K,EAAaC,KAAK3Q,GAASA,GAAOE,UAAYd,KAAKkQ,WACzElQ,KAAKsQ,KAAK1J,OAAO0K,EAAaC,KAAK3Q,GAASA,GAAOU,MAEnD,MAAMV,QAAc0Q,EACpB,GAAItR,KAAK0Q,SAAWhG,EACnB,OAGD,IAAK9J,EAEJ,YADAZ,KAAKkR,aAINlR,KAAKkQ,SAAS1J,IAAIkE,GAClB1K,KAAKwQ,MAAMtP,QAAUN,EAAMM,QAG3BlB,KAAKyQ,YAAY7J,OAAOhG,EAAMQ,YAG9B,MAAMwD,EAAYhE,EAAMQ,YAAYqB,QAAQiI,EAAM/K,SAASc,IAAKiK,EAAM/K,SAASe,MAAMC,OACjFiE,GAAa5E,KAAKwQ,MAAM7J,eACrB3G,KAAKwQ,MAAM9H,OAAO9D,EAAW,CAAE+D,QAAQ,EAAMC,OAAO,EAAM4I,QAAQ,IAGzE,MAAMtL,EAAmC,GAGzC,IAAI7E,EACAT,EAAMS,aACTA,EAAa,IAAI,EAAAoQ,iBAAiBzR,KAAKwQ,MAAO5P,EAAMS,YACpD6E,EAAYG,KAAKhF,IAIdT,EAAME,SAASgD,qBAClBoC,EAAYG,KAAKzF,EAAME,SAASgD,oBAAoB,KACnD9D,KAAKwQ,MAAM3Q,MAAQ6K,EAAM7K,MACzBG,KAAKwQ,MAAMtP,QAAUN,EAAMM,QAC3BG,GAAYuF,YAGe,mBAAlBhG,EAAMW,SAChB2E,EAAYG,KAAK,IAAIpG,EAAOgH,WAAW,IAAMrG,EAAMW,YAEpDvB,KAAK2Q,mBAAqB1Q,EAAOgH,WAAWnE,QAAQoD,EACrD,CAEA,UAAAgL,GACClR,KAAK2Q,oBAAoBpP,UACzBvB,KAAK0Q,YAASvP,EACdnB,KAAKgQ,cAAcjI,KAAI,GACvB/H,KAAKiQ,gBAAgBlD,QACrB/M,KAAKwQ,MAAM3Q,MAAQI,EAAOC,KAAKC,EAAE,cACjCH,KAAKwQ,MAAMtP,QAAiC,IAAvBlB,KAAKkQ,SAASwB,KAChCzR,EAAOC,KAAKC,EAAE,eACdF,EAAOC,KAAKC,EAAE,oDACjBH,KAAKoQ,UAAUxJ,OAAOtG,QAAQF,QAAQJ,KAAKkQ,UAC5C,GASD,MAAMG,EAELvP,SAEQ6Q,mBACA9P,aAAe,IAAI5B,EAAO6B,aAEzBgC,oBAAsB9D,KAAK6B,aAAaG,MAEjD,MAAA4E,CAAO9F,GAENd,KAAK2R,oBAAoBpQ,UACzBvB,KAAK2R,wBAAqBxQ,EAE1BnB,KAAK6B,aAAa8B,UAAKxC,GAEvBnB,KAAKc,SAAWA,EAEhBA,EAASyQ,KAAKnH,IACTpK,KAAKc,WAAaA,GAAYsJ,EAAMtG,sBACvC9D,KAAK2R,mBAAqBvH,EAAMtG,oBAAoB9D,KAAK6B,aAAa8B,KAAM3D,KAAK6B,iBAEhF+P,MAAMC,IACR7R,KAAKc,cAAWK,EAChB2Q,QAAQC,MAAMF,IAEhB,CAEA,iBAAM5N,CAAYC,GAEjB,OADAlE,KAAKgS,yBACShS,KAAKc,UAAUmD,YAAYC,EAC1C,CAEA,iBAAMgB,CAAYxD,GAEjB,OADA1B,KAAKgS,yBACShS,KAAKc,UAAUoE,YAAYxD,EAC1C,CAEA,eAAMyD,CAAUjB,GACflE,KAAKgS,kBACL,MAAMlR,QAAiBd,KAAKc,SAC5B,OAAOA,EAASqE,UAAYrE,EAASqE,UAAUjB,QAAW/C,CAC3D,CAEQ,eAAA6Q,GACP,IAAKhS,KAAKc,SACT,MAAM,IAAImR,MAAM,mBAElB,EAKD,MAAM1B,EAEGlL,UAEC6M,cAA0B,GAE1BC,cAA0B,CAAC,iBAEpC,MAAAvL,CAAOkB,GACN9H,KAAKqF,eAAYlE,EACjB2G,EAASyJ,KAAKnH,GAASpK,KAAKqF,UAAY+E,EACzC,CAEA,UAAAgI,CAAWC,EAAqBC,GAC/B,GAAItS,KAAKqF,UAAW,CACnB,MAAMkN,EAAiB,GACvB,IAAK,MAAM9Q,KAAQ4Q,EAAQ,CAC1B,MAAM5R,EAAMT,KAAKqF,UAAU/C,WAAWb,GAClChB,GACH8R,EAAKlM,KAAK5F,EAAImC,WAEhB,CACI2P,EAAKtR,OAAS,GACjBqR,EAAKvK,IAAI,gBAAiB,IAAI9H,EAAOuS,iBAAiBD,EAAKE,KAAK,SAElE,CACD,CAEA,UAAAC,GACC,MAAM,IAAIT,MAAM,0BACjB,EAKD,MAAMU,EAKKC,IACAC,KACArL,OACAkD,MANDrG,YAET,WAAAtE,CACU6S,EACAC,EACArL,EACAkD,GAHA,KAAAkI,IAAAA,EACA,KAAAC,KAAAA,EACA,KAAArL,OAAAA,EACA,KAAAkD,MAAAA,EAET1K,KAAKqE,YAAc,GAAGpE,EAAOqG,UAAUwM,eAAepI,EAAM/K,SAASc,UAAUiK,EAAM7K,MAAMkT,qBAC5F,EAGD,MAAM5C,EASwBK,MAPZwC,qBAAuB,IAAI/S,EAAO6B,aAC1CgC,oBAAsB9D,KAAKgT,qBAAqBhR,MAExC0F,aAAoC,GACpCuL,eAAiB,IAAI,EAAArL,WAAoB,6BACzCsL,QAAU,IAAIC,IAE/B,WAAApT,CAA6ByQ,GAAA,KAAAA,MAAAA,EAE5BxQ,KAAK0H,aAAarB,KACjBpG,EAAOM,SAASsH,gBAAgB,wBAAyB,IAAM2I,EAAMU,cACrEjR,EAAOM,SAASsH,gBAAgB,+BAAgC,KAC/D7H,KAAKoT,QACL5C,EAAMU,eAEPjR,EAAOM,SAASsH,gBAAgB,yBAA2BpG,IACtDA,aAAgBkR,GACnB3S,KAAKqT,kBAAkB5R,KAGzBxB,EAAOM,SAASsH,gBAAgB,0BAA2B,KAC1D,MAAMpG,EAAO6R,MAAMxQ,KAAK9C,KAAKkT,QAAQK,UAAUC,MAC3C/R,GACHzB,KAAKqT,kBAAkB5R,KAGzBxB,EAAOM,SAASsH,gBAAgB,mCAAoC6D,MAAOjK,IAC1E,GAAIA,aAAgBkR,EAAa,CAChC,MAAMhH,EAAWlK,EAAK+F,OAAO8F,0BAA4B7L,EAAKiJ,MAAM/K,SAASe,MAAMC,YAC7EV,EAAOM,SAASC,eAAe,cAAeiB,EAAKiJ,MAAM/K,SAASc,IAAK,CAAEmE,UAAW,IAAI3E,EAAO6J,MAAM6B,EAAUA,IACtH,IAED1L,EAAOM,SAASsH,gBAAgB,kCAAmC6D,UAIlE,MACM+H,SADgBzT,KAAKkF,eACLjD,IAAKR,IAAsB,CAChDkI,MAAOlI,EAAKoR,KACZxO,YAAa5C,EAAK4C,YAClB5C,UAEKiS,QAAazT,EAAOsF,OAAOoO,cAAcF,EAAO,CAAEG,YAAa3T,EAAOC,KAAKC,EAAE,sCAC/EuT,GACH1T,KAAKqT,kBAAkBK,EAAKjS,QAIhC,CAEA,OAAAF,GACCtB,EAAOgH,WAAWnE,QAAQ9C,KAAK0H,cAAcnG,UAC7CvB,KAAKgT,qBAAqBzR,SAC3B,CAEQ,iBAAA8R,CAAkB5R,GACzBzB,KAAKkT,QAAQW,OAAOpS,EAAKmR,KACzB,MAAMkB,EAAcrS,EAAK+F,OAAO8F,yBAChC,IAAIjD,EAAW5I,EAAKiJ,MAGhBoJ,IAAgBrS,EAAKiJ,MAAM/K,SAASe,MAAMC,MAAMoT,QAAQD,KAC3DzJ,EAAW5I,EAAKiJ,MAAM7F,KAAK,IAAI5E,EAAOuC,SAASf,EAAKiJ,MAAM/K,SAASc,IAAKqT,KAEzE9T,KAAKwQ,MAAMhG,SAASH,EACrB,CAEA,SAAM7D,CAAIkE,GAET,MAAMkB,QAAY3L,EAAOqG,UAAUuF,iBAAiBnB,EAAM/K,SAASc,KAE7D+G,EAAS,IAAI,EAAAwM,WAAWpI,EAAKlB,EAAM/K,SAASe,MAAMC,OAClDD,EAAQkL,EAAIE,uBAAuBpB,EAAM/K,SAASe,MAAMC,QAAUiL,EAAIE,uBAAuBpB,EAAM/K,SAASe,MAAMC,MAAO,UACzHkS,EAAOnS,EAAQkL,EAAIU,QAAQ5L,GAAS,MAEpCe,EAAO,IAAIkR,EAAYsB,KAAKC,UAAU,CAACxT,GAAOC,OAAS+J,EAAM/K,SAASe,MAAMC,MAAO+J,EAAM/K,SAASc,IAAKiK,EAAM7K,QAASgT,EAAMrL,EAAQkD,GAE1I1K,KAAKkT,QAAQW,OAAOpS,EAAKmR,KACzB5S,KAAKkT,QAAQnL,IAAItG,EAAKmR,IAAKnR,GAC3BzB,KAAKiT,eAAelL,KAAI,EACzB,CAEA,KAAAqL,GACCpT,KAAKkT,QAAQE,QACbpT,KAAKiT,eAAelL,KAAI,GACxB/H,KAAKgT,qBAAqBrP,UAAKxC,EAChC,CAEA,QAAIuQ,GACH,OAAO1R,KAAKkT,QAAQxB,IACrB,CAIA,WAAAzN,CAAYxC,GACX,MAAM0S,EAAS,IAAIlU,EAAOkE,SAAS1C,EAAKoR,MAKxC,OAJAsB,EAAO9P,YAAc5C,EAAK4C,YAC1B8P,EAAOzP,QAAU,CAAEA,QAAS,mCAAoCC,UAAW,CAAClD,GAAO5B,MAAOI,EAAOC,KAAKC,EAAE,UACxGgU,EAAOpP,iBAAmB9E,EAAO+E,yBAAyBoP,KAC1DD,EAAOrU,aAAe,eACfqU,CACR,CAEA,WAAAjP,GACC,OAAO5E,QAAQ+T,IAAI,IAAIrU,KAAKkT,QAAQK,UAAUe,UAC/C,CAEA,SAAAnP,GAEA,E,66BCzVD,kBAEA,SAEA,MAAaiJ,EAKFvO,MACAF,SACQ4U,SACAC,QANT1U,aAET,WAAAC,CACUF,EACAF,EACQ4U,EACAC,GAHR,KAAA3U,MAAAA,EACA,KAAAF,SAAAA,EACQ,KAAA4U,SAAAA,EACA,KAAAC,QAAAA,EAEjBxU,KAAKF,aAAeyU,CACrB,CAEA,aAAMnU,GAEL,IAAIQ,EACJ,GAAIZ,KAAKwU,QACR5T,EAAQ,IAAIwO,EAAgBpP,KAAKwU,aAC3B,CACN,MAAMC,QAAcnU,QAAQF,QAAQH,EAAOM,SAASC,eAA0DR,KAAKuU,SAAUvU,KAAKL,SAASc,IAAKT,KAAKL,SAASe,MAAMC,QACpKC,EAAQ,IAAIwO,EAAgBqF,GAAS,GACtC,CAEA,GAA2B,IAAvB7T,EAAMP,MAAMY,OACf,OAGD,MAAMH,EAAW,IAAI4T,EAA2B9T,GAChD,MAAO,CACNE,WACA,WAAII,GAAY,OAAON,EAAMM,OAAS,EACtCE,WAAYR,EACZS,WAAYT,EACZU,IAAKV,EACL,OAAAW,GACCT,EAASS,SACV,EAEF,CAEA,KAAK5B,GACJ,OAAO,IAAIyO,EAAoBpO,KAAKH,MAAOF,EAAUK,KAAKuU,SAC3D,EA1CD,wBA6CA,MAAanF,EAEJvN,aAAe,IAAI5B,EAAO6B,aACzBgC,oBAAsB9D,KAAK6B,aAAaG,MAExC3B,MAAoB,GAE7B,WAAAN,CAAYkJ,GACX,IAAI0L,EACJ,IAAK,MAAMlT,KAAQwH,EAAU2L,KAAKxF,EAAgByF,mBAAoB,CACrE,MAAMxM,EAAM5G,aAAgBxB,EAAOuC,SAChCf,EACA,IAAIxB,EAAOuC,SAASf,EAAKqT,UAAWrT,EAAKsT,aAEvCJ,GAAyE,IAAjEvF,EAAgB4F,0BAA0BL,EAAKlU,IAAK4H,EAAI5H,OACpEkU,EAAO,IAAIzF,EAAS7G,EAAI5H,IAAIoE,KAAK,CAAE0G,SAAU,KAAO,GAAIvL,MACxDA,KAAKK,MAAMgG,KAAKsO,IAEjBA,EAAKvJ,WAAW/E,KAAK,IAAI2I,EAAc3G,EAAKsM,GAC7C,CACD,CAEQ,gCAAOK,CAA0BC,EAAeC,GACvD,MAAMC,EAAOF,EAAEpQ,KAAK,CAAE0G,SAAU,KAAM3I,WAChCwS,EAAOF,EAAErQ,KAAK,CAAE0G,SAAU,KAAM3I,WACtC,OAAIuS,EAAOC,GACF,EACED,EAAOC,EACV,EAED,CACR,CAEQ,wBAAOP,CAAkBI,EAA0CC,GAC1E,MAAMG,EAAOJ,aAAahV,EAAOuC,SAAWyS,EAAExU,IAAMwU,EAAEH,UAChDQ,EAAOJ,aAAajV,EAAOuC,SAAW0S,EAAEzU,IAAMyU,EAAEJ,UACtD,GAAIO,EAAKzS,WAAa0S,EAAK1S,WAC1B,OAAQ,EACF,GAAIyS,EAAKzS,WAAa0S,EAAK1S,WACjC,OAAO,EAGR,MAAM2S,EAASN,aAAahV,EAAOuC,SAAWyS,EAAEvU,MAAQuU,EAAEF,YACpDS,EAASN,aAAajV,EAAOuC,SAAW0S,EAAExU,MAAQwU,EAAEH,YAC1D,OAAIQ,EAAO5U,MAAMkJ,SAAS2L,EAAO7U,QACxB,EACE4U,EAAO5U,MAAM8U,QAAQD,EAAO7U,OAC/B,EAEA,CAET,CAIA,WAAIO,GACH,GAA0B,IAAtBlB,KAAKK,MAAMY,OACd,OAAOhB,EAAOC,KAAKC,EAAE,eAEtB,MAAMuV,EAAQ1V,KAAKK,MAAMsV,OAAO,CAACC,EAAMC,IAAQD,EAAOC,EAAIzK,WAAWnK,OAAQ,GACvE6U,EAAQ9V,KAAKK,MAAMY,OACzB,OAAc,IAAVyU,GAAyB,IAAVI,EACX7V,EAAOC,KAAKC,EAAE,yBAA0BuV,EAAOI,GAClC,IAAVJ,EACHzV,EAAOC,KAAKC,EAAE,0BAA2BuV,EAAOI,GACnC,IAAVA,EACH7V,EAAOC,KAAKC,EAAE,0BAA2BuV,EAAOI,GAEhD7V,EAAOC,KAAKC,EAAE,2BAA4BuV,EAAOI,EAE1D,CAEA,QAAAnW,CAAS8B,GACR,OAAOA,aAAgBuN,EACpBvN,EAAK9B,SACL,IAAIM,EAAOuC,SAASf,EAAKhB,IAAKgB,EAAK2J,WAAW,IAAIzL,SAASe,OAAS,IAAIT,EAAO8N,SAAS,EAAG,GAC/F,CAEA,OAAAtL,CAAQhC,EAAiBkL,GAExB,GAA0B,IAAtB3L,KAAKK,MAAMY,OACd,OAGD,IAAK,MAAMQ,KAAQzB,KAAKK,MACvB,GAAIoB,EAAKhB,IAAImC,aAAenC,EAAImC,WAAY,CAE3C,IAAK,MAAMmT,KAAOtU,EAAK2J,WACtB,GAAI2K,EAAIpW,SAASe,MAAMsV,SAASrK,GAC/B,OAAOoK,EAIT,IAAIE,EACJ,IAAK,MAAMF,KAAOtU,EAAK2J,WAAY,CAClC,GAAI2K,EAAIpW,SAASe,MAAMoE,IAAI2Q,QAAQ9J,GAClC,OAAOoK,EAERE,EAAaF,CACd,CACA,GAAIE,EACH,OAAOA,EAGR,KACD,CAID,IAAIC,EAAO,EACX,MAAMC,EAAY/G,EAAgBgH,WAAWpW,KAAKK,MAAM6V,GAAMtT,WAAYnC,EAAImC,YAE9E,IAAK,IAAI8K,EAAI,EAAGA,EAAI1N,KAAKK,MAAMY,OAAQyM,IACxB0B,EAAgBgH,WAAWpW,KAAKK,MAAMqN,GAAGjN,IAAImC,WAAYnC,EAAImC,YAC/DuT,IACXD,EAAOxI,GAIT,OAAO1N,KAAKK,MAAM6V,GAAM9K,WAAW,EACpC,CAEQ,iBAAOgL,CAAWnB,EAAWC,GACpC,IAAI7H,EAAM,EACV,KAAOA,EAAM4H,EAAEhU,QAAUoM,EAAM6H,EAAEjU,QAAUgU,EAAEoB,WAAWhJ,KAAS6H,EAAEmB,WAAWhJ,IAC7EA,GAAO,EAER,OAAOA,CACR,CAEA,IAAAxK,CAAKpB,GACJ,OAAOzB,KAAK+C,MAAMtB,GAAM,IAASA,CAClC,CAEA,QAAAuB,CAASvB,GACR,OAAOzB,KAAK+C,MAAMtB,GAAM,IAAUA,CACnC,CAEQ,KAAAsB,CAAMtB,EAAgCwB,GAE7C,MAAMqT,EAAQrT,EAAM,GAAM,EAEpBF,EAAStB,IACd,MAAM4B,GAAOrD,KAAKK,MAAMiD,QAAQ7B,GAAQ6U,EAAQtW,KAAKK,MAAMY,QAAUjB,KAAKK,MAAMY,OAChF,OAAOjB,KAAKK,MAAMgD,IAGnB,GAAI5B,aAAgByN,EACnB,OAAIjM,EACIF,EAAMtB,GAAM2J,WAAW,IAEvB,IAAAlI,MAAKH,EAAMtB,GAAM2J,YAI1B,GAAI3J,aAAgBuN,EAAe,CAClC,MAAM3L,EAAM5B,EAAKwN,KAAK7D,WAAW9H,QAAQ7B,GAAQ6U,EACjD,OAAIjT,EAAM,GACF,IAAAH,MAAKH,EAAMtB,EAAKwN,MAAM7D,YACnB/H,GAAO5B,EAAKwN,KAAK7D,WAAWnK,OAC/B8B,EAAMtB,EAAKwN,MAAM7D,WAAW,GAE5B3J,EAAKwN,KAAK7D,WAAW/H,EAE9B,CACD,CAEA,mBAAAE,CAAoBgT,EAAiC9V,GACpD,MAAMwO,EAAOjP,KAAKK,MAAMsC,KAAKsM,GAAQA,EAAKxO,IAAImC,aAAenC,EAAImC,YACjE,OAAOqM,GAAM7D,WAAWnJ,IAAI8T,GAAOA,EAAIpW,SAASe,MACjD,CAEA,MAAAkB,CAAOH,GACFA,aAAgByN,IACnB,IAAAxL,KAAI1D,KAAKK,MAAOoB,GAChBzB,KAAK6B,aAAa8B,UAAKxC,MAEvB,IAAAuC,KAAIjC,EAAKwN,KAAK7D,WAAY3J,GACU,IAAhCA,EAAKwN,KAAK7D,WAAWnK,SACxB,IAAAyC,KAAI1D,KAAKK,MAAOoB,EAAKwN,MACrBjP,KAAK6B,aAAa8B,UAAKxC,IAEvBnB,KAAK6B,aAAa8B,KAAKlC,EAAKwN,MAG/B,CAEA,gBAAMI,GACL,IAAI8E,EAAS,GACb,IAAK,MAAM1S,KAAQzB,KAAKK,MACvB8T,GAAU,SAAS1S,EAAK4N,iBAEzB,OAAO8E,CACR,CAEA,UAAA7R,CAAWb,GACV,OAAIA,aAAgByN,EACZzN,EAAKhB,KAEL,IAAA8B,eAAcd,EAAKwN,KAAKxO,IAAKgB,EAAK9B,SAASe,MAEpD,EAzMD,oBA4MA,MAAMgU,EAOwB9Q,OALZ4S,UACA3U,aAAe,IAAI5B,EAAO6B,aAElCgC,oBAAsB9D,KAAK6B,aAAaG,MAEjD,WAAAjC,CAA6B6D,GAAA,KAAAA,OAAAA,EAC5B5D,KAAKwW,UAAY5S,EAAOE,oBAAoB,IAAM9D,KAAK6B,aAAa8B,UAAKxC,GAC1E,CAEA,OAAAI,GACCvB,KAAK6B,aAAaN,UAClBvB,KAAKwW,UAAUjV,SAChB,CAEA,iBAAM0C,CAAYC,GACjB,GAAIA,aAAmBgL,EAAU,CAEhC,MAAMiF,EAAS,IAAIlU,EAAOkE,SAASD,EAAQzD,KAK3C,OAJA0T,EAAOrU,aAAe,YACtBqU,EAAO9P,aAAc,EACrB8P,EAAO5P,SAAWtE,EAAO6M,UAAU2J,KACnCtC,EAAOpP,iBAAmB9E,EAAO+E,yBAAyBC,UACnDkP,CAER,CAAO,CAEN,MAAM,MAAEzT,GAAUwD,EAAQvE,SACpBiM,QAAY1H,EAAQwS,aAAY,IAChC,OAAErK,EAAM,OAAEE,EAAM,MAAEG,IAAU,IAAAiK,kBAAiB/K,EAAKlL,GAElDiJ,EAA8B,CACnCA,MAAO0C,EAASE,EAASG,EACzBrL,WAAY,CAAC,CAACgL,EAAOpL,OAAQoL,EAAOpL,OAASsL,EAAOtL,UAG/CkT,EAAS,IAAIlU,EAAOkE,SAASwF,GAWnC,OAVAwK,EAAOpP,iBAAmB9E,EAAO+E,yBAAyBoP,KAC1DD,EAAOrU,aAAe,iBACtBqU,EAAOzP,QAAU,CAChBA,QAAS,cACT7E,MAAOI,EAAOC,KAAKC,EAAE,kBACrBwE,UAAW,CACVT,EAAQvE,SAASc,IACjB,CAAEmE,UAAWlE,EAAMmE,KAAK,CAAEC,IAAKpE,EAAMC,WAGhCwT,CACR,CACD,CAEA,iBAAMjP,CAAYhB,GACjB,OAAKA,EAGDA,aAAmBgL,EACfhL,EAAQkH,gBADhB,EAFQpL,KAAK4D,OAAOvD,KAMrB,CAEA,SAAA8E,CAAUjB,GACT,OAAOA,aAAmB8K,EAAgB9K,EAAQ+K,UAAO9N,CAC1D,EAGD,MAAa+N,EAGFzO,IACA2K,WACAxK,MAHV,WAAAb,CACUU,EACA2K,EACAxK,GAFA,KAAAH,IAAAA,EACA,KAAA2K,WAAAA,EACA,KAAAxK,MAAAA,CACN,CAIJ,MAAAgB,GACC5B,KAAKY,MAAMgB,OAAO5B,KACnB,CAEA,gBAAMqP,GACL,IAAI8E,EAAS,GAAGlU,EAAOqG,UAAUwM,eAAe9S,KAAKS,SACrD,IAAK,MAAMsV,KAAO/V,KAAKoL,WACtB+I,GAAU,WAAW4B,EAAI1G,iBAE1B,OAAO8E,CACR,EApBD,aAuBA,MAAanF,EAKFrP,SACAsP,KAJF2H,UAER,WAAA7W,CACUJ,EACAsP,GADA,KAAAtP,SAAAA,EACA,KAAAsP,KAAAA,CACN,CAEJ,iBAAMyH,CAAYG,GAIjB,GAHK7W,KAAK4W,YACT5W,KAAK4W,UAAY3W,EAAOqG,UAAUuF,iBAAiB7L,KAAKL,SAASc,MAE9DoW,EAAY,CAEf,MAAMhU,EAAO7C,KAAKiP,KAAKrO,MAAMiC,KAAK7C,KAAKiP,MACnCpM,aAAgBqM,GAAYrM,IAAS7C,KAAKiP,KAC7ChP,EAAOqG,UAAUuF,iBAAiBhJ,EAAKpC,KAC7BoC,aAAgBmM,GAC1B/O,EAAOqG,UAAUuF,iBAAiBhJ,EAAKlD,SAASc,IAElD,CACA,OAAOT,KAAK4W,SACb,CAIA,MAAAhV,GACC5B,KAAKiP,KAAKrO,MAAMgB,OAAO5B,KACxB,CAEA,gBAAMqP,GACL,MAAMzD,QAAY5L,KAAK0W,cACjBI,GAAS,IAAAH,kBAAiB/K,EAAK5L,KAAKL,SAASe,MAAO,IAAI,GAC9D,MAAO,GAAGV,KAAKL,SAASe,MAAMC,MAAM6K,KAAO,MAAMxL,KAAKL,SAASe,MAAMC,MAAM8K,UAAY,MAAMqL,EAAOzK,OAASyK,EAAOvK,OAASuK,EAAOpK,OACrI,EAnCD,iB,GC3VIqK,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqB/V,IAAjBgW,EACH,OAAOA,EAAalJ,QAGrB,IAAID,EAAS+I,EAAyBG,GAAY,CAGjDjJ,QAAS,CAAC,GAOX,OAHAmJ,EAAoBF,GAAU/N,KAAK6E,EAAOC,QAASD,EAAQA,EAAOC,QAASgJ,GAGpEjJ,EAAOC,OACf,CCnB0BgJ,CAAoB,K","sources":["webpack://references-view/./src/types/model.ts","webpack://references-view/./src/highlights.ts","webpack://references-view/./src/navigation.ts","webpack://references-view/./src/calls/model.ts","webpack://references-view/./src/types/index.ts","webpack://references-view/./src/extension.ts","webpack://references-view/./src/utils.ts","webpack://references-view/external commonjs \"vscode\"","webpack://references-view/./src/references/index.ts","webpack://references-view/./src/calls/index.ts","webpack://references-view/./src/tree.ts","webpack://references-view/./src/references/model.ts","webpack://references-view/webpack/bootstrap","webpack://references-view/webpack/startup"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { asResourceUrl, del, getThemeIcon, tail } from '../utils';\n\nexport class TypesTreeInput implements SymbolTreeInput<TypeItem> {\n\n\treadonly title: string;\n\treadonly contextValue: string = 'typeHierarchy';\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly direction: TypeHierarchyDirection,\n\t) {\n\t\tthis.title = direction === TypeHierarchyDirection.Supertypes\n\t\t\t? vscode.l10n.t('Supertypes Of')\n\t\t\t: vscode.l10n.t('Subtypes Of');\n\t}\n\n\tasync resolve() {\n\n\t\tconst items = await Promise.resolve(vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.prepareTypeHierarchy', this.location.uri, this.location.range.start));\n\t\tconst model = new TypesModel(this.direction, items ?? []);\n\t\tconst provider = new TypeItemDataProvider(model);\n\n\t\tif (model.roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.roots.length === 0 ? vscode.l10n.t('No results.') : undefined; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose() {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): TypesTreeInput {\n\t\treturn new TypesTreeInput(location, this.direction);\n\t}\n}\n\n\nexport const enum TypeHierarchyDirection {\n\tSubtypes = 'subtypes',\n\tSupertypes = 'supertypes'\n}\n\n\nexport class TypeItem {\n\n\tchildren?: TypeItem[];\n\n\tconstructor(\n\t\treadonly model: TypesModel,\n\t\treadonly item: vscode.TypeHierarchyItem,\n\t\treadonly parent: TypeItem | undefined,\n\t) { }\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n}\n\nclass TypesModel implements SymbolItemNavigation<TypeItem>, SymbolItemEditorHighlights<TypeItem>, SymbolItemDragAndDrop<TypeItem> {\n\n\treadonly roots: TypeItem[] = [];\n\n\tprivate readonly _onDidChange = new vscode.EventEmitter<TypesModel>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(readonly direction: TypeHierarchyDirection, items: vscode.TypeHierarchyItem[]) {\n\t\tthis.roots = items.map(item => new TypeItem(this, item, undefined));\n\t}\n\n\tprivate async _resolveTypes(currentType: TypeItem): Promise<TypeItem[]> {\n\t\tif (this.direction === TypeHierarchyDirection.Supertypes) {\n\t\t\tconst types = await vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.provideSupertypes', currentType.item);\n\t\t\treturn types ? types.map(item => new TypeItem(this, item, currentType)) : [];\n\t\t} else {\n\t\t\tconst types = await vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.provideSubtypes', currentType.item);\n\t\t\treturn types ? types.map(item => new TypeItem(this, item, currentType)) : [];\n\t\t}\n\t}\n\n\tasync getTypeChildren(item: TypeItem): Promise<TypeItem[]> {\n\t\tif (!item.children) {\n\t\t\titem.children = await this._resolveTypes(item);\n\t\t}\n\t\treturn item.children;\n\t}\n\n\t// -- dnd\n\n\tgetDragUri(item: TypeItem): vscode.Uri | undefined {\n\t\treturn asResourceUrl(item.item.uri, item.item.range);\n\t}\n\n\t// -- navigation\n\n\tlocation(currentType: TypeItem) {\n\t\treturn new vscode.Location(currentType.item.uri, currentType.item.range);\n\t}\n\n\tnearest(uri: vscode.Uri, _position: vscode.Position): TypeItem | undefined {\n\t\treturn this.roots.find(item => item.item.uri.toString() === uri.toString()) ?? this.roots[0];\n\t}\n\n\tnext(from: TypeItem): TypeItem {\n\t\treturn this._move(from, true) ?? from;\n\t}\n\n\tprevious(from: TypeItem): TypeItem {\n\t\treturn this._move(from, false) ?? from;\n\t}\n\n\tprivate _move(item: TypeItem, fwd: boolean): TypeItem | void {\n\t\tif (item.children?.length) {\n\t\t\treturn fwd ? item.children[0] : tail(item.children);\n\t\t}\n\t\tconst array = this.roots.includes(item) ? this.roots : item.parent?.children;\n\t\tif (array?.length) {\n\t\t\tconst idx = array.indexOf(item);\n\t\t\tconst delta = fwd ? 1 : -1;\n\t\t\treturn array[idx + delta + array.length % array.length];\n\t\t}\n\t}\n\n\t// --- highlights\n\n\tgetEditorHighlights(currentType: TypeItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\treturn currentType.item.uri.toString() === uri.toString() ? [currentType.item.selectionRange] : undefined;\n\t}\n\n\tremove(item: TypeItem) {\n\t\tconst isInRoot = this.roots.includes(item);\n\t\tconst siblings = isInRoot ? this.roots : item.parent?.children;\n\t\tif (siblings) {\n\t\t\tdel(siblings, item);\n\t\t\tthis._onDidChange.fire(this);\n\t\t}\n\t}\n}\n\nclass TypeItemDataProvider implements vscode.TreeDataProvider<TypeItem> {\n\n\tprivate readonly _emitter = new vscode.EventEmitter<TypeItem | undefined>();\n\treadonly onDidChangeTreeData = this._emitter.event;\n\n\tprivate readonly _modelListener: vscode.Disposable;\n\n\tconstructor(private _model: TypesModel) {\n\t\tthis._modelListener = _model.onDidChange(e => this._emitter.fire(e instanceof TypeItem ? e : undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._emitter.dispose();\n\t\tthis._modelListener.dispose();\n\t}\n\n\tgetTreeItem(element: TypeItem): vscode.TreeItem {\n\n\t\tconst item = new vscode.TreeItem(element.item.name);\n\t\titem.description = element.item.detail;\n\t\titem.contextValue = 'type-item';\n\t\titem.iconPath = getThemeIcon(element.item.kind);\n\t\titem.command = {\n\t\t\tcommand: 'vscode.open',\n\t\t\ttitle: vscode.l10n.t('Open Type'),\n\t\t\targuments: [\n\t\t\t\telement.item.uri,\n\t\t\t\t{ selection: element.item.selectionRange.with({ end: element.item.selectionRange.start }) } satisfies vscode.TextDocumentShowOptions\n\t\t\t]\n\t\t};\n\t\titem.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\treturn item;\n\t}\n\n\tgetChildren(element?: TypeItem | undefined) {\n\t\treturn element\n\t\t\t? this._model.getTypeChildren(element)\n\t\t\t: this._model.roots;\n\t}\n\n\tgetParent(element: TypeItem) {\n\t\treturn element.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemEditorHighlights } from './references-view';\n\nexport class EditorHighlights<T> {\n\n\tprivate readonly _decorationType = vscode.window.createTextEditorDecorationType({\n\t\tbackgroundColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t\trangeBehavior: vscode.DecorationRangeBehavior.ClosedClosed,\n\t\toverviewRulerLane: vscode.OverviewRulerLane.Center,\n\t\toverviewRulerColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t});\n\n\tprivate readonly disposables: vscode.Disposable[] = [];\n\tprivate readonly _ignore = new Set<string>();\n\n\tconstructor(private readonly _view: vscode.TreeView<T>, private readonly _delegate: SymbolItemEditorHighlights<T>) {\n\t\tthis.disposables.push(\n\t\t\tvscode.workspace.onDidChangeTextDocument(e => this._ignore.add(e.document.uri.toString())),\n\t\t\tvscode.window.onDidChangeActiveTextEditor(() => _view.visible && this.update()),\n\t\t\t_view.onDidChangeVisibility(e => e.visible ? this._show() : this._hide()),\n\t\t\t_view.onDidChangeSelection(() => {\n\t\t\t\tif (_view.visible) {\n\t\t\t\t\tthis.update();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis._show();\n\t}\n\n\tdispose() {\n\t\tvscode.Disposable.from(...this.disposables).dispose();\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this._decorationType, []);\n\t\t}\n\t}\n\n\tprivate _show(): void {\n\t\tconst { activeTextEditor: editor } = vscode.window;\n\t\tif (!editor || !editor.viewColumn) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._ignore.has(editor.document.uri.toString())) {\n\t\t\treturn;\n\t\t}\n\t\tconst [anchor] = this._view.selection;\n\t\tif (!anchor) {\n\t\t\treturn;\n\t\t}\n\t\tconst ranges = this._delegate.getEditorHighlights(anchor, editor.document.uri);\n\t\tif (ranges) {\n\t\t\teditor.setDecorations(this._decorationType, ranges);\n\t\t}\n\t}\n\n\tprivate _hide(): void {\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this._decorationType, []);\n\t\t}\n\t}\n\n\tupdate(): void {\n\t\tthis._hide();\n\t\tthis._show();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemNavigation } from './references-view';\nimport { ContextKey } from './utils';\n\nexport class Navigation {\n\n\tprivate readonly _disposables: vscode.Disposable[] = [];\n\tprivate readonly _ctxCanNavigate = new ContextKey<boolean>('references-view.canNavigate');\n\n\tprivate _delegate?: SymbolItemNavigation<unknown>;\n\n\tconstructor(private readonly _view: vscode.TreeView<unknown>) {\n\t\tthis._disposables.push(\n\t\t\tvscode.commands.registerCommand('references-view.next', () => this.next(false)),\n\t\t\tvscode.commands.registerCommand('references-view.prev', () => this.previous(false)),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this._disposables).dispose();\n\t}\n\n\tupdate(delegate: SymbolItemNavigation<unknown> | undefined) {\n\t\tthis._delegate = delegate;\n\t\tthis._ctxCanNavigate.set(Boolean(this._delegate));\n\t}\n\n\tprivate _anchor(): undefined | unknown {\n\t\tif (!this._delegate) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst [sel] = this._view.selection;\n\t\tif (sel) {\n\t\t\treturn sel;\n\t\t}\n\t\tif (!vscode.window.activeTextEditor) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._delegate.nearest(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active);\n\t}\n\n\tprivate _open(loc: vscode.Location, preserveFocus: boolean) {\n\t\tvscode.commands.executeCommand('vscode.open', loc.uri, {\n\t\t\tselection: new vscode.Selection(loc.range.start, loc.range.start),\n\t\t\tpreserveFocus\n\t\t});\n\t}\n\n\tprevious(preserveFocus: boolean): void {\n\t\tif (!this._delegate) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this._anchor();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this._delegate.previous(item);\n\t\tconst newLocation = this._delegate.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis._view.reveal(newItem, { select: true, focus: true });\n\t\t\tthis._open(newLocation, preserveFocus);\n\t\t}\n\t}\n\n\tnext(preserveFocus: boolean): void {\n\t\tif (!this._delegate) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this._anchor();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this._delegate.next(item);\n\t\tconst newLocation = this._delegate.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis._view.reveal(newItem, { select: true, focus: true });\n\t\t\tthis._open(newLocation, preserveFocus);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { asResourceUrl, del, getThemeIcon, tail } from '../utils';\n\nexport class CallsTreeInput implements SymbolTreeInput<CallItem> {\n\n\treadonly title: string;\n\treadonly contextValue: string = 'callHierarchy';\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly direction: CallsDirection,\n\t) {\n\t\tthis.title = direction === CallsDirection.Incoming\n\t\t\t? vscode.l10n.t('Callers Of')\n\t\t\t: vscode.l10n.t('Calls From');\n\t}\n\n\tasync resolve() {\n\n\t\tconst items = await Promise.resolve(vscode.commands.executeCommand<vscode.CallHierarchyItem[]>('vscode.prepareCallHierarchy', this.location.uri, this.location.range.start));\n\t\tconst model = new CallsModel(this.direction, items ?? []);\n\t\tconst provider = new CallItemDataProvider(model);\n\n\t\tif (model.roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.roots.length === 0 ? vscode.l10n.t('No results.') : undefined; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose() {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): CallsTreeInput {\n\t\treturn new CallsTreeInput(location, this.direction);\n\t}\n}\n\n\nexport const enum CallsDirection {\n\tIncoming,\n\tOutgoing\n}\n\n\n\nexport class CallItem {\n\n\tchildren?: CallItem[];\n\n\tconstructor(\n\t\treadonly model: CallsModel,\n\t\treadonly item: vscode.CallHierarchyItem,\n\t\treadonly parent: CallItem | undefined,\n\t\treadonly locations: vscode.Location[] | undefined\n\t) { }\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n}\n\nclass CallsModel implements SymbolItemNavigation<CallItem>, SymbolItemEditorHighlights<CallItem>, SymbolItemDragAndDrop<CallItem> {\n\n\treadonly roots: CallItem[] = [];\n\n\tprivate readonly _onDidChange = new vscode.EventEmitter<CallsModel>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(readonly direction: CallsDirection, items: vscode.CallHierarchyItem[]) {\n\t\tthis.roots = items.map(item => new CallItem(this, item, undefined, undefined));\n\t}\n\n\tprivate async _resolveCalls(call: CallItem): Promise<CallItem[]> {\n\t\tif (this.direction === CallsDirection.Incoming) {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyIncomingCall[]>('vscode.provideIncomingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new CallItem(this, item.from, call, item.fromRanges.map(range => new vscode.Location(item.from.uri, range)))) : [];\n\t\t} else {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyOutgoingCall[]>('vscode.provideOutgoingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new CallItem(this, item.to, call, item.fromRanges.map(range => new vscode.Location(call.item.uri, range)))) : [];\n\t\t}\n\t}\n\n\tasync getCallChildren(call: CallItem): Promise<CallItem[]> {\n\t\tif (!call.children) {\n\t\t\tcall.children = await this._resolveCalls(call);\n\t\t}\n\t\treturn call.children;\n\t}\n\n\t// -- navigation\n\n\tlocation(item: CallItem) {\n\t\treturn new vscode.Location(item.item.uri, item.item.range);\n\t}\n\n\tnearest(uri: vscode.Uri, _position: vscode.Position): CallItem | undefined {\n\t\treturn this.roots.find(item => item.item.uri.toString() === uri.toString()) ?? this.roots[0];\n\t}\n\n\tnext(from: CallItem): CallItem {\n\t\treturn this._move(from, true) ?? from;\n\t}\n\n\tprevious(from: CallItem): CallItem {\n\t\treturn this._move(from, false) ?? from;\n\t}\n\n\tprivate _move(item: CallItem, fwd: boolean): CallItem | void {\n\t\tif (item.children?.length) {\n\t\t\treturn fwd ? item.children[0] : tail(item.children);\n\t\t}\n\t\tconst array = this.roots.includes(item) ? this.roots : item.parent?.children;\n\t\tif (array?.length) {\n\t\t\tconst idx = array.indexOf(item);\n\t\t\tconst delta = fwd ? 1 : -1;\n\t\t\treturn array[idx + delta + array.length % array.length];\n\t\t}\n\t}\n\n\t// --- dnd\n\n\tgetDragUri(item: CallItem): vscode.Uri | undefined {\n\t\treturn asResourceUrl(item.item.uri, item.item.range);\n\t}\n\n\t// --- highlights\n\n\tgetEditorHighlights(item: CallItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tif (!item.locations) {\n\t\t\treturn item.item.uri.toString() === uri.toString() ? [item.item.selectionRange] : undefined;\n\t\t}\n\t\treturn item.locations\n\t\t\t.filter(loc => loc.uri.toString() === uri.toString())\n\t\t\t.map(loc => loc.range);\n\t}\n\n\tremove(item: CallItem) {\n\t\tconst isInRoot = this.roots.includes(item);\n\t\tconst siblings = isInRoot ? this.roots : item.parent?.children;\n\t\tif (siblings) {\n\t\t\tdel(siblings, item);\n\t\t\tthis._onDidChange.fire(this);\n\t\t}\n\t}\n}\n\nclass CallItemDataProvider implements vscode.TreeDataProvider<CallItem> {\n\n\tprivate readonly _emitter = new vscode.EventEmitter<CallItem | undefined>();\n\treadonly onDidChangeTreeData = this._emitter.event;\n\n\tprivate readonly _modelListener: vscode.Disposable;\n\n\tconstructor(private _model: CallsModel) {\n\t\tthis._modelListener = _model.onDidChange(e => this._emitter.fire(e instanceof CallItem ? e : undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._emitter.dispose();\n\t\tthis._modelListener.dispose();\n\t}\n\n\tgetTreeItem(element: CallItem): vscode.TreeItem {\n\n\t\tconst item = new vscode.TreeItem(element.item.name);\n\t\titem.description = element.item.detail;\n\t\titem.tooltip = item.label && element.item.detail ? `${item.label} - ${element.item.detail}` : item.label ? `${item.label}` : element.item.detail;\n\t\titem.contextValue = 'call-item';\n\t\titem.iconPath = getThemeIcon(element.item.kind);\n\n\t\ttype OpenArgs = [vscode.Uri, vscode.TextDocumentShowOptions];\n\t\tlet openArgs: OpenArgs;\n\n\t\tif (element.model.direction === CallsDirection.Outgoing) {\n\n\t\t\topenArgs = [element.item.uri, { selection: element.item.selectionRange.with({ end: element.item.selectionRange.start }) }];\n\n\t\t} else {\n\t\t\t// incoming call -> reveal first call instead of caller\n\t\t\tlet firstLoctionStart: vscode.Position | undefined;\n\t\t\tif (element.locations) {\n\t\t\t\tfor (const loc of element.locations) {\n\t\t\t\t\tif (loc.uri.toString() === element.item.uri.toString()) {\n\t\t\t\t\t\tfirstLoctionStart = firstLoctionStart?.isBefore(loc.range.start) ? firstLoctionStart : loc.range.start;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!firstLoctionStart) {\n\t\t\t\tfirstLoctionStart = element.item.selectionRange.start;\n\t\t\t}\n\t\t\topenArgs = [element.item.uri, { selection: new vscode.Range(firstLoctionStart, firstLoctionStart) }];\n\t\t}\n\n\t\titem.command = {\n\t\t\tcommand: 'vscode.open',\n\t\t\ttitle: vscode.l10n.t('Open Call'),\n\t\t\targuments: openArgs\n\t\t};\n\t\titem.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\treturn item;\n\t}\n\n\tgetChildren(element?: CallItem | undefined) {\n\t\treturn element\n\t\t\t? this._model.getCallChildren(element)\n\t\t\t: this._model.roots;\n\t}\n\n\tgetParent(element: CallItem) {\n\t\treturn element.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { ContextKey } from '../utils';\nimport { TypeHierarchyDirection, TypeItem, TypesTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tconst direction = new RichTypesDirection(context.workspaceState, TypeHierarchyDirection.Subtypes);\n\n\tfunction showTypeHierarchy() {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new TypesTreeInput(new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), direction.value);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tfunction setTypeHierarchyDirection(value: TypeHierarchyDirection, anchor: TypeItem | vscode.Location | unknown) {\n\t\tdirection.value = value;\n\n\t\tlet newInput: TypesTreeInput | undefined;\n\t\tconst oldInput = tree.getInput();\n\t\tif (anchor instanceof TypeItem) {\n\t\t\tnewInput = new TypesTreeInput(new vscode.Location(anchor.item.uri, anchor.item.selectionRange.start), direction.value);\n\t\t} else if (anchor instanceof vscode.Location) {\n\t\t\tnewInput = new TypesTreeInput(anchor, direction.value);\n\t\t} else if (oldInput instanceof TypesTreeInput) {\n\t\t\tnewInput = new TypesTreeInput(oldInput.location, direction.value);\n\t\t}\n\t\tif (newInput) {\n\t\t\ttree.setInput(newInput);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.showTypeHierarchy', showTypeHierarchy),\n\t\tvscode.commands.registerCommand('references-view.showSupertypes', (item: TypeItem | vscode.Location | unknown) => setTypeHierarchyDirection(TypeHierarchyDirection.Supertypes, item)),\n\t\tvscode.commands.registerCommand('references-view.showSubtypes', (item: TypeItem | vscode.Location | unknown) => setTypeHierarchyDirection(TypeHierarchyDirection.Subtypes, item)),\n\t\tvscode.commands.registerCommand('references-view.removeTypeItem', removeTypeItem)\n\t);\n}\n\nfunction removeTypeItem(item: TypeItem | unknown): void {\n\tif (item instanceof TypeItem) {\n\t\titem.remove();\n\t}\n}\n\nclass RichTypesDirection {\n\n\tprivate static _key = 'references-view.typeHierarchyMode';\n\n\tprivate _ctxMode = new ContextKey<TypeHierarchyDirection>('references-view.typeHierarchyMode');\n\n\tconstructor(\n\t\tprivate _mem: vscode.Memento,\n\t\tprivate _value: TypeHierarchyDirection = TypeHierarchyDirection.Subtypes,\n\t) {\n\t\tconst raw = _mem.get<TypeHierarchyDirection>(RichTypesDirection._key);\n\t\tif (typeof raw === 'string') {\n\t\t\tthis.value = raw;\n\t\t} else {\n\t\t\tthis.value = _value;\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: TypeHierarchyDirection) {\n\t\tthis._value = value;\n\t\tthis._ctxMode.set(value);\n\t\tthis._mem.update(RichTypesDirection._key, value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as calls from './calls';\nimport * as references from './references';\nimport { SymbolTree, SymbolTreeInput } from './references-view';\nimport { SymbolsTree } from './tree';\nimport * as types from './types';\n\nexport function activate(context: vscode.ExtensionContext): SymbolTree {\n\n\tconst tree = new SymbolsTree();\n\n\treferences.register(tree, context);\n\tcalls.register(tree, context);\n\ttypes.register(tree, context);\n\n\tfunction setInput(input: SymbolTreeInput<unknown>) {\n\t\ttree.setInput(input);\n\t}\n\n\tfunction getInput(): SymbolTreeInput<unknown> | undefined {\n\t\treturn tree.getInput();\n\t}\n\n\treturn { setInput, getInput };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nexport function del<T>(array: T[], e: T): void {\n\tconst idx = array.indexOf(e);\n\tif (idx >= 0) {\n\t\tarray.splice(idx, 1);\n\t}\n}\n\nexport function tail<T>(array: T[]): T | undefined {\n\treturn array[array.length - 1];\n}\n\nexport function asResourceUrl(uri: vscode.Uri, range: vscode.Range): vscode.Uri {\n\treturn uri.with({ fragment: `L${1 + range.start.line},${1 + range.start.character}-${1 + range.end.line},${1 + range.end.character}` });\n}\n\nexport async function isValidRequestPosition(uri: vscode.Uri, position: vscode.Position) {\n\tconst doc = await vscode.workspace.openTextDocument(uri);\n\tlet range = doc.getWordRangeAtPosition(position);\n\tif (!range) {\n\t\trange = doc.getWordRangeAtPosition(position, /[^\\s]+/);\n\t}\n\treturn Boolean(range);\n}\n\nexport function getPreviewChunks(doc: vscode.TextDocument, range: vscode.Range, beforeLen: number = 8, trim: boolean = true) {\n\tconst previewStart = range.start.with({ character: Math.max(0, range.start.character - beforeLen) });\n\tconst wordRange = doc.getWordRangeAtPosition(previewStart);\n\tlet before = doc.getText(new vscode.Range(wordRange ? wordRange.start : previewStart, range.start));\n\tconst inside = doc.getText(range);\n\tconst previewEnd = range.end.translate(0, 331);\n\tlet after = doc.getText(new vscode.Range(range.end, previewEnd));\n\tif (trim) {\n\t\tbefore = before.replace(/^\\s*/g, '');\n\t\tafter = after.replace(/\\s*$/g, '');\n\t}\n\treturn { before, inside, after };\n}\n\nexport class ContextKey<V> {\n\n\tconstructor(readonly name: string) { }\n\n\tasync set(value: V) {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, value);\n\t}\n\n\tasync reset() {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, undefined);\n\t}\n}\n\nexport class WordAnchor {\n\n\tprivate readonly _version: number;\n\tprivate readonly _word: string | undefined;\n\n\tconstructor(private readonly _doc: vscode.TextDocument, private readonly _position: vscode.Position) {\n\t\tthis._version = _doc.version;\n\t\tthis._word = this._getAnchorWord(_doc, _position);\n\t}\n\n\tprivate _getAnchorWord(doc: vscode.TextDocument, pos: vscode.Position): string | undefined {\n\t\tconst range = doc.getWordRangeAtPosition(pos) || doc.getWordRangeAtPosition(pos, /[^\\s]+/);\n\t\treturn range && doc.getText(range);\n\t}\n\n\tguessedTrackedPosition(): vscode.Position | undefined {\n\t\t// funky entry\n\t\tif (!this._word) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// no changes\n\t\tif (this._version === this._doc.version) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// no changes here...\n\t\tconst wordNow = this._getAnchorWord(this._doc, this._position);\n\t\tif (this._word === wordNow) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// changes: search _word downwards and upwards\n\t\tconst startLine = this._position.line;\n\t\tlet i = 0;\n\t\tlet line: number;\n\t\tlet checked: boolean;\n\t\tdo {\n\t\t\tchecked = false;\n\t\t\t// nth line down\n\t\t\tline = startLine + i;\n\t\t\tif (line < this._doc.lineCount) {\n\t\t\t\tchecked = true;\n\t\t\t\tconst ch = this._doc.lineAt(line).text.indexOf(this._word);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t\ti += 1;\n\t\t\t// nth line up\n\t\t\tline = startLine - i;\n\t\t\tif (line >= 0) {\n\t\t\t\tchecked = true;\n\t\t\t\tconst ch = this._doc.lineAt(line).text.indexOf(this._word);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t} while (i < 100 && checked);\n\n\t\t// fallback\n\t\treturn this._position;\n\t}\n}\n\n// vscode.SymbolKind.File === 0, Module === 1, etc...\nconst _themeIconIds = [\n\t'symbol-file', 'symbol-module', 'symbol-namespace', 'symbol-package', 'symbol-class', 'symbol-method',\n\t'symbol-property', 'symbol-field', 'symbol-constructor', 'symbol-enum', 'symbol-interface',\n\t'symbol-function', 'symbol-variable', 'symbol-constant', 'symbol-string', 'symbol-number', 'symbol-boolean',\n\t'symbol-array', 'symbol-object', 'symbol-key', 'symbol-null', 'symbol-enum-member', 'symbol-struct',\n\t'symbol-event', 'symbol-operator', 'symbol-type-parameter'\n];\n\nexport function getThemeIcon(kind: vscode.SymbolKind): vscode.ThemeIcon | undefined {\n\tconst id = _themeIconIds[kind];\n\treturn id ? new vscode.ThemeIcon(id) : undefined;\n}\n","module.exports = require(\"vscode\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { FileItem, ReferenceItem, ReferencesModel, ReferencesTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tfunction findLocations(title: string, command: string) {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new ReferencesTreeInput(title, new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), command);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.findReferences', () => findLocations('References', 'vscode.executeReferenceProvider')),\n\t\tvscode.commands.registerCommand('references-view.findImplementations', () => findLocations('Implementations', 'vscode.executeImplementationProvider')),\n\t\t// --- legacy name\n\t\tvscode.commands.registerCommand('references-view.find', (...args: any[]) => vscode.commands.executeCommand('references-view.findReferences', ...args)),\n\t\tvscode.commands.registerCommand('references-view.removeReferenceItem', removeReferenceItem),\n\t\tvscode.commands.registerCommand('references-view.copy', copyCommand),\n\t\tvscode.commands.registerCommand('references-view.copyAll', copyAllCommand),\n\t\tvscode.commands.registerCommand('references-view.copyPath', copyPathCommand),\n\t);\n\n\n\t// --- references.preferredLocation setting\n\n\tlet showReferencesDisposable: vscode.Disposable | undefined;\n\tconst config = 'references.preferredLocation';\n\tfunction updateShowReferences(event?: vscode.ConfigurationChangeEvent) {\n\t\tif (event && !event.affectsConfiguration(config)) {\n\t\t\treturn;\n\t\t}\n\t\tconst value = vscode.workspace.getConfiguration().get<string>(config);\n\n\t\tshowReferencesDisposable?.dispose();\n\t\tshowReferencesDisposable = undefined;\n\n\t\tif (value === 'view') {\n\t\t\tshowReferencesDisposable = vscode.commands.registerCommand('editor.action.showReferences', async (uri: vscode.Uri, position: vscode.Position, locations: vscode.Location[]) => {\n\t\t\t\tconst input = new ReferencesTreeInput(vscode.l10n.t('References'), new vscode.Location(uri, position), 'vscode.executeReferenceProvider', locations);\n\t\t\t\ttree.setInput(input);\n\t\t\t});\n\t\t}\n\t}\n\tcontext.subscriptions.push(vscode.workspace.onDidChangeConfiguration(updateShowReferences));\n\tcontext.subscriptions.push({ dispose: () => showReferencesDisposable?.dispose() });\n\tupdateShowReferences();\n}\n\nconst copyAllCommand = async (item: ReferenceItem | FileItem | unknown) => {\n\tif (item instanceof ReferenceItem) {\n\t\tcopyCommand(item.file.model);\n\t} else if (item instanceof FileItem) {\n\t\tcopyCommand(item.model);\n\t}\n};\n\nfunction removeReferenceItem(item: FileItem | ReferenceItem | unknown) {\n\tif (item instanceof FileItem) {\n\t\titem.remove();\n\t} else if (item instanceof ReferenceItem) {\n\t\titem.remove();\n\t}\n}\n\n\nasync function copyCommand(item: ReferencesModel | ReferenceItem | FileItem | unknown) {\n\tlet val: string | undefined;\n\tif (item instanceof ReferencesModel) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof ReferenceItem) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof FileItem) {\n\t\tval = await item.asCopyText();\n\t}\n\tif (val) {\n\t\tawait vscode.env.clipboard.writeText(val);\n\t}\n}\n\nasync function copyPathCommand(item: FileItem | unknown) {\n\tif (item instanceof FileItem) {\n\t\tif (item.uri.scheme === 'file') {\n\t\t\tvscode.env.clipboard.writeText(item.uri.fsPath);\n\t\t} else {\n\t\t\tvscode.env.clipboard.writeText(item.uri.toString(true));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { ContextKey } from '../utils';\nimport { CallItem, CallsDirection, CallsTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tconst direction = new RichCallsDirection(context.workspaceState, CallsDirection.Incoming);\n\n\tfunction showCallHierarchy() {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new CallsTreeInput(new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), direction.value);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tfunction setCallsDirection(value: CallsDirection, anchor: CallItem | unknown) {\n\t\tdirection.value = value;\n\n\t\tlet newInput: CallsTreeInput | undefined;\n\t\tconst oldInput = tree.getInput();\n\t\tif (anchor instanceof CallItem) {\n\t\t\tnewInput = new CallsTreeInput(new vscode.Location(anchor.item.uri, anchor.item.selectionRange.start), direction.value);\n\t\t} else if (oldInput instanceof CallsTreeInput) {\n\t\t\tnewInput = new CallsTreeInput(oldInput.location, direction.value);\n\t\t}\n\t\tif (newInput) {\n\t\t\ttree.setInput(newInput);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.showCallHierarchy', showCallHierarchy),\n\t\tvscode.commands.registerCommand('references-view.showOutgoingCalls', (item: CallItem | unknown) => setCallsDirection(CallsDirection.Outgoing, item)),\n\t\tvscode.commands.registerCommand('references-view.showIncomingCalls', (item: CallItem | unknown) => setCallsDirection(CallsDirection.Incoming, item)),\n\t\tvscode.commands.registerCommand('references-view.removeCallItem', removeCallItem)\n\t);\n}\n\nfunction removeCallItem(item: CallItem | unknown): void {\n\tif (item instanceof CallItem) {\n\t\titem.remove();\n\t}\n}\n\nclass RichCallsDirection {\n\n\tprivate static _key = 'references-view.callHierarchyMode';\n\n\tprivate _ctxMode = new ContextKey<'showIncoming' | 'showOutgoing'>('references-view.callHierarchyMode');\n\n\tconstructor(\n\t\tprivate _mem: vscode.Memento,\n\t\tprivate _value: CallsDirection = CallsDirection.Outgoing,\n\t) {\n\t\tconst raw = _mem.get<number>(RichCallsDirection._key);\n\t\tif (typeof raw === 'number' && raw >= 0 && raw <= 1) {\n\t\t\tthis.value = raw;\n\t\t} else {\n\t\t\tthis.value = _value;\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: CallsDirection) {\n\t\tthis._value = value;\n\t\tthis._ctxMode.set(this._value === CallsDirection.Incoming ? 'showIncoming' : 'showOutgoing');\n\t\tthis._mem.update(RichCallsDirection._key, value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { EditorHighlights } from './highlights';\nimport { Navigation } from './navigation';\nimport { SymbolItemDragAndDrop, SymbolTreeInput } from './references-view';\nimport { ContextKey, isValidRequestPosition, WordAnchor } from './utils';\n\n\nexport class SymbolsTree {\n\n\treadonly viewId = 'references-view.tree';\n\n\tprivate readonly _ctxIsActive = new ContextKey<boolean>('reference-list.isActive');\n\tprivate readonly _ctxHasResult = new ContextKey<boolean>('reference-list.hasResult');\n\tprivate readonly _ctxInputSource = new ContextKey<string>('reference-list.source');\n\n\tprivate readonly _history = new TreeInputHistory(this);\n\tprivate readonly _provider = new TreeDataProviderDelegate();\n\tprivate readonly _dnd = new TreeDndDelegate();\n\tprivate readonly _tree: vscode.TreeView<unknown>;\n\tprivate readonly _navigation: Navigation;\n\n\tprivate _input?: SymbolTreeInput<unknown>;\n\tprivate _sessionDisposable?: vscode.Disposable;\n\n\tconstructor() {\n\t\tthis._tree = vscode.window.createTreeView<unknown>(this.viewId, {\n\t\t\ttreeDataProvider: this._provider,\n\t\t\tshowCollapseAll: true,\n\t\t\tdragAndDropController: this._dnd\n\t\t});\n\t\tthis._navigation = new Navigation(this._tree);\n\t}\n\n\tdispose(): void {\n\t\tthis._history.dispose();\n\t\tthis._tree.dispose();\n\t\tthis._sessionDisposable?.dispose();\n\t}\n\n\tgetInput(): SymbolTreeInput<unknown> | undefined {\n\t\treturn this._input;\n\t}\n\n\tasync setInput(input: SymbolTreeInput<unknown>) {\n\n\t\tif (!await isValidRequestPosition(input.location.uri, input.location.range.start)) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._ctxInputSource.set(input.contextValue);\n\t\tthis._ctxIsActive.set(true);\n\t\tthis._ctxHasResult.set(true);\n\t\tvscode.commands.executeCommand(`${this.viewId}.focus`);\n\n\t\tconst newInputKind = !this._input || Object.getPrototypeOf(this._input) !== Object.getPrototypeOf(input);\n\t\tthis._input = input;\n\t\tthis._sessionDisposable?.dispose();\n\n\t\tthis._tree.title = input.title;\n\t\tthis._tree.message = newInputKind ? undefined : this._tree.message;\n\n\t\tconst modelPromise = Promise.resolve(input.resolve());\n\n\t\t// set promise to tree data provider to trigger tree loading UI\n\t\tthis._provider.update(modelPromise.then(model => model?.provider ?? this._history));\n\t\tthis._dnd.update(modelPromise.then(model => model?.dnd));\n\n\t\tconst model = await modelPromise;\n\t\tif (this._input !== input) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!model) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._history.add(input);\n\t\tthis._tree.message = model.message;\n\n\t\t// navigation\n\t\tthis._navigation.update(model.navigation);\n\n\t\t// reveal & select\n\t\tconst selection = model.navigation?.nearest(input.location.uri, input.location.range.start);\n\t\tif (selection && this._tree.visible) {\n\t\t\tawait this._tree.reveal(selection, { select: true, focus: true, expand: true });\n\t\t}\n\n\t\tconst disposables: vscode.Disposable[] = [];\n\n\t\t// editor highlights\n\t\tlet highlights: EditorHighlights<unknown> | undefined;\n\t\tif (model.highlights) {\n\t\t\thighlights = new EditorHighlights(this._tree, model.highlights);\n\t\t\tdisposables.push(highlights);\n\t\t}\n\n\t\t// listener\n\t\tif (model.provider.onDidChangeTreeData) {\n\t\t\tdisposables.push(model.provider.onDidChangeTreeData(() => {\n\t\t\t\tthis._tree.title = input.title;\n\t\t\t\tthis._tree.message = model.message;\n\t\t\t\thighlights?.update();\n\t\t\t}));\n\t\t}\n\t\tif (typeof model.dispose === 'function') {\n\t\t\tdisposables.push(new vscode.Disposable(() => model.dispose!()));\n\t\t}\n\t\tthis._sessionDisposable = vscode.Disposable.from(...disposables);\n\t}\n\n\tclearInput(): void {\n\t\tthis._sessionDisposable?.dispose();\n\t\tthis._input = undefined;\n\t\tthis._ctxHasResult.set(false);\n\t\tthis._ctxInputSource.reset();\n\t\tthis._tree.title = vscode.l10n.t('References');\n\t\tthis._tree.message = this._history.size === 0\n\t\t\t? vscode.l10n.t('No results.')\n\t\t\t: vscode.l10n.t('No results. Try running a previous search again:');\n\t\tthis._provider.update(Promise.resolve(this._history));\n\t}\n}\n\n// --- tree data\n\ninterface ActiveTreeDataProviderWrapper {\n\tprovider: Promise<vscode.TreeDataProvider<any>>;\n}\n\nclass TreeDataProviderDelegate implements vscode.TreeDataProvider<undefined> {\n\n\tprovider?: Promise<vscode.TreeDataProvider<any>>;\n\n\tprivate _sessionDispoables?: vscode.Disposable;\n\tprivate _onDidChange = new vscode.EventEmitter<any>();\n\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\tupdate(provider: Promise<vscode.TreeDataProvider<any>>) {\n\n\t\tthis._sessionDispoables?.dispose();\n\t\tthis._sessionDispoables = undefined;\n\n\t\tthis._onDidChange.fire(undefined);\n\n\t\tthis.provider = provider;\n\n\t\tprovider.then(value => {\n\t\t\tif (this.provider === provider && value.onDidChangeTreeData) {\n\t\t\t\tthis._sessionDispoables = value.onDidChangeTreeData(this._onDidChange.fire, this._onDidChange);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.provider = undefined;\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tasync getTreeItem(element: unknown) {\n\t\tthis._assertProvider();\n\t\treturn (await this.provider).getTreeItem(element);\n\t}\n\n\tasync getChildren(parent?: unknown | undefined) {\n\t\tthis._assertProvider();\n\t\treturn (await this.provider).getChildren(parent);\n\t}\n\n\tasync getParent(element: unknown) {\n\t\tthis._assertProvider();\n\t\tconst provider = await this.provider;\n\t\treturn provider.getParent ? provider.getParent(element) : undefined;\n\t}\n\n\tprivate _assertProvider(): asserts this is ActiveTreeDataProviderWrapper {\n\t\tif (!this.provider) {\n\t\t\tthrow new Error('MISSING provider');\n\t\t}\n\t}\n}\n\n// --- tree dnd\n\nclass TreeDndDelegate implements vscode.TreeDragAndDropController<undefined> {\n\n\tprivate _delegate: SymbolItemDragAndDrop<undefined> | undefined;\n\n\treadonly dropMimeTypes: string[] = [];\n\n\treadonly dragMimeTypes: string[] = ['text/uri-list'];\n\n\tupdate(delegate: Promise<SymbolItemDragAndDrop<unknown> | undefined>) {\n\t\tthis._delegate = undefined;\n\t\tdelegate.then(value => this._delegate = value);\n\t}\n\n\thandleDrag(source: undefined[], data: vscode.DataTransfer) {\n\t\tif (this._delegate) {\n\t\t\tconst urls: string[] = [];\n\t\t\tfor (const item of source) {\n\t\t\t\tconst uri = this._delegate.getDragUri(item);\n\t\t\t\tif (uri) {\n\t\t\t\t\turls.push(uri.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (urls.length > 0) {\n\t\t\t\tdata.set('text/uri-list', new vscode.DataTransferItem(urls.join('\\r\\n')));\n\t\t\t}\n\t\t}\n\t}\n\n\thandleDrop(): void | Thenable<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\n// --- history\n\nclass HistoryItem {\n\n\treadonly description: string;\n\n\tconstructor(\n\t\treadonly key: string,\n\t\treadonly word: string,\n\t\treadonly anchor: WordAnchor,\n\t\treadonly input: SymbolTreeInput<unknown>,\n\t) {\n\t\tthis.description = `${vscode.workspace.asRelativePath(input.location.uri)} • ${input.title.toLocaleLowerCase()}`;\n\t}\n}\n\nclass TreeInputHistory implements vscode.TreeDataProvider<HistoryItem> {\n\n\tprivate readonly _onDidChangeTreeData = new vscode.EventEmitter<HistoryItem | undefined>();\n\treadonly onDidChangeTreeData = this._onDidChangeTreeData.event;\n\n\tprivate readonly _disposables: vscode.Disposable[] = [];\n\tprivate readonly _ctxHasHistory = new ContextKey<boolean>('reference-list.hasHistory');\n\tprivate readonly _inputs = new Map<string, HistoryItem>();\n\n\tconstructor(private readonly _tree: SymbolsTree) {\n\n\t\tthis._disposables.push(\n\t\t\tvscode.commands.registerCommand('references-view.clear', () => _tree.clearInput()),\n\t\t\tvscode.commands.registerCommand('references-view.clearHistory', () => {\n\t\t\t\tthis.clear();\n\t\t\t\t_tree.clearInput();\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refind', (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tthis._reRunHistoryItem(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refresh', () => {\n\t\t\t\tconst item = Array.from(this._inputs.values()).pop();\n\t\t\t\tif (item) {\n\t\t\t\t\tthis._reRunHistoryItem(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('_references-view.showHistoryItem', async (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tconst position = item.anchor.guessedTrackedPosition() ?? item.input.location.range.start;\n\t\t\t\t\tawait vscode.commands.executeCommand('vscode.open', item.input.location.uri, { selection: new vscode.Range(position, position) });\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.pickFromHistory', async () => {\n\t\t\t\tinterface HistoryPick extends vscode.QuickPickItem {\n\t\t\t\t\titem: HistoryItem;\n\t\t\t\t}\n\t\t\t\tconst entries = await this.getChildren();\n\t\t\t\tconst picks = entries.map((item): HistoryPick => ({\n\t\t\t\t\tlabel: item.word,\n\t\t\t\t\tdescription: item.description,\n\t\t\t\t\titem\n\t\t\t\t}));\n\t\t\t\tconst pick = await vscode.window.showQuickPick(picks, { placeHolder: vscode.l10n.t('Select previous reference search') });\n\t\t\t\tif (pick) {\n\t\t\t\t\tthis._reRunHistoryItem(pick.item);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this._disposables).dispose();\n\t\tthis._onDidChangeTreeData.dispose();\n\t}\n\n\tprivate _reRunHistoryItem(item: HistoryItem): void {\n\t\tthis._inputs.delete(item.key);\n\t\tconst newPosition = item.anchor.guessedTrackedPosition();\n\t\tlet newInput = item.input;\n\t\t// create a new input when having a tracked position which is\n\t\t// different than the original position.\n\t\tif (newPosition && !item.input.location.range.start.isEqual(newPosition)) {\n\t\t\tnewInput = item.input.with(new vscode.Location(item.input.location.uri, newPosition));\n\t\t}\n\t\tthis._tree.setInput(newInput);\n\t}\n\n\tasync add(input: SymbolTreeInput<unknown>) {\n\n\t\tconst doc = await vscode.workspace.openTextDocument(input.location.uri);\n\n\t\tconst anchor = new WordAnchor(doc, input.location.range.start);\n\t\tconst range = doc.getWordRangeAtPosition(input.location.range.start) ?? doc.getWordRangeAtPosition(input.location.range.start, /[^\\s]+/);\n\t\tconst word = range ? doc.getText(range) : '???';\n\n\t\tconst item = new HistoryItem(JSON.stringify([range?.start ?? input.location.range.start, input.location.uri, input.title]), word, anchor, input);\n\t\t// use filo-ordering of native maps\n\t\tthis._inputs.delete(item.key);\n\t\tthis._inputs.set(item.key, item);\n\t\tthis._ctxHasHistory.set(true);\n\t}\n\n\tclear(): void {\n\t\tthis._inputs.clear();\n\t\tthis._ctxHasHistory.set(false);\n\t\tthis._onDidChangeTreeData.fire(undefined);\n\t}\n\n\tget size() {\n\t\treturn this._inputs.size;\n\t}\n\n\t// --- tree data provider\n\n\tgetTreeItem(item: HistoryItem): vscode.TreeItem {\n\t\tconst result = new vscode.TreeItem(item.word);\n\t\tresult.description = item.description;\n\t\tresult.command = { command: '_references-view.showHistoryItem', arguments: [item], title: vscode.l10n.t('Rerun') };\n\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\tresult.contextValue = 'history-item';\n\t\treturn result;\n\t}\n\n\tgetChildren() {\n\t\treturn Promise.all([...this._inputs.values()].reverse());\n\t}\n\n\tgetParent() {\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput, SymbolTreeModel } from '../references-view';\nimport { asResourceUrl, del, getPreviewChunks, tail } from '../utils';\n\nexport class ReferencesTreeInput implements SymbolTreeInput<FileItem | ReferenceItem> {\n\n\treadonly contextValue: string;\n\n\tconstructor(\n\t\treadonly title: string,\n\t\treadonly location: vscode.Location,\n\t\tprivate readonly _command: string,\n\t\tprivate readonly _result?: vscode.Location[] | vscode.LocationLink[]\n\t) {\n\t\tthis.contextValue = _command;\n\t}\n\n\tasync resolve(): Promise<SymbolTreeModel<FileItem | ReferenceItem> | undefined> {\n\n\t\tlet model: ReferencesModel;\n\t\tif (this._result) {\n\t\t\tmodel = new ReferencesModel(this._result);\n\t\t} else {\n\t\t\tconst resut = await Promise.resolve(vscode.commands.executeCommand<vscode.Location[] | vscode.LocationLink[]>(this._command, this.location.uri, this.location.range.start));\n\t\t\tmodel = new ReferencesModel(resut ?? []);\n\t\t}\n\n\t\tif (model.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = new ReferencesTreeDataProvider(model);\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.message; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose(): void {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): ReferencesTreeInput {\n\t\treturn new ReferencesTreeInput(this.title, location, this._command);\n\t}\n}\n\nexport class ReferencesModel implements SymbolItemNavigation<FileItem | ReferenceItem>, SymbolItemEditorHighlights<FileItem | ReferenceItem>, SymbolItemDragAndDrop<FileItem | ReferenceItem> {\n\n\tprivate _onDidChange = new vscode.EventEmitter<FileItem | ReferenceItem | undefined>();\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\treadonly items: FileItem[] = [];\n\n\tconstructor(locations: vscode.Location[] | vscode.LocationLink[]) {\n\t\tlet last: FileItem | undefined;\n\t\tfor (const item of locations.sort(ReferencesModel._compareLocations)) {\n\t\t\tconst loc = item instanceof vscode.Location\n\t\t\t\t? item\n\t\t\t\t: new vscode.Location(item.targetUri, item.targetRange);\n\n\t\t\tif (!last || ReferencesModel._compareUriIgnoreFragment(last.uri, loc.uri) !== 0) {\n\t\t\t\tlast = new FileItem(loc.uri.with({ fragment: '' }), [], this);\n\t\t\t\tthis.items.push(last);\n\t\t\t}\n\t\t\tlast.references.push(new ReferenceItem(loc, last));\n\t\t}\n\t}\n\n\tprivate static _compareUriIgnoreFragment(a: vscode.Uri, b: vscode.Uri): number {\n\t\tconst aStr = a.with({ fragment: '' }).toString();\n\t\tconst bStr = b.with({ fragment: '' }).toString();\n\t\tif (aStr < bStr) {\n\t\t\treturn -1;\n\t\t} else if (aStr > bStr) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate static _compareLocations(a: vscode.Location | vscode.LocationLink, b: vscode.Location | vscode.LocationLink): number {\n\t\tconst aUri = a instanceof vscode.Location ? a.uri : a.targetUri;\n\t\tconst bUri = b instanceof vscode.Location ? b.uri : b.targetUri;\n\t\tif (aUri.toString() < bUri.toString()) {\n\t\t\treturn -1;\n\t\t} else if (aUri.toString() > bUri.toString()) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tconst aRange = a instanceof vscode.Location ? a.range : a.targetRange;\n\t\tconst bRange = b instanceof vscode.Location ? b.range : b.targetRange;\n\t\tif (aRange.start.isBefore(bRange.start)) {\n\t\t\treturn -1;\n\t\t} else if (aRange.start.isAfter(bRange.start)) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// --- adapter\n\n\tget message() {\n\t\tif (this.items.length === 0) {\n\t\t\treturn vscode.l10n.t('No results.');\n\t\t}\n\t\tconst total = this.items.reduce((prev, cur) => prev + cur.references.length, 0);\n\t\tconst files = this.items.length;\n\t\tif (total === 1 && files === 1) {\n\t\t\treturn vscode.l10n.t('{0} result in {1} file', total, files);\n\t\t} else if (total === 1) {\n\t\t\treturn vscode.l10n.t('{0} result in {1} files', total, files);\n\t\t} else if (files === 1) {\n\t\t\treturn vscode.l10n.t('{0} results in {1} file', total, files);\n\t\t} else {\n\t\t\treturn vscode.l10n.t('{0} results in {1} files', total, files);\n\t\t}\n\t}\n\n\tlocation(item: FileItem | ReferenceItem) {\n\t\treturn item instanceof ReferenceItem\n\t\t\t? item.location\n\t\t\t: new vscode.Location(item.uri, item.references[0]?.location.range ?? new vscode.Position(0, 0));\n\t}\n\n\tnearest(uri: vscode.Uri, position: vscode.Position): FileItem | ReferenceItem | undefined {\n\n\t\tif (this.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\t// NOTE: this.items is sorted by location (uri/range)\n\t\tfor (const item of this.items) {\n\t\t\tif (item.uri.toString() === uri.toString()) {\n\t\t\t\t// (1) pick the item at the request position\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.contains(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// (2) pick the first item after or last before the request position\n\t\t\t\tlet lastBefore: ReferenceItem | undefined;\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.end.isAfter(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t\tlastBefore = ref;\n\t\t\t\t}\n\t\t\t\tif (lastBefore) {\n\t\t\t\t\treturn lastBefore;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// (3) pick the file with the longest common prefix\n\t\tlet best = 0;\n\t\tconst bestValue = ReferencesModel._prefixLen(this.items[best].toString(), uri.toString());\n\n\t\tfor (let i = 1; i < this.items.length; i++) {\n\t\t\tconst value = ReferencesModel._prefixLen(this.items[i].uri.toString(), uri.toString());\n\t\t\tif (value > bestValue) {\n\t\t\t\tbest = i;\n\t\t\t}\n\t\t}\n\n\t\treturn this.items[best].references[0];\n\t}\n\n\tprivate static _prefixLen(a: string, b: string): number {\n\t\tlet pos = 0;\n\t\twhile (pos < a.length && pos < b.length && a.charCodeAt(pos) === b.charCodeAt(pos)) {\n\t\t\tpos += 1;\n\t\t}\n\t\treturn pos;\n\t}\n\n\tnext(item: FileItem | ReferenceItem): FileItem | ReferenceItem {\n\t\treturn this._move(item, true) ?? item;\n\t}\n\n\tprevious(item: FileItem | ReferenceItem): FileItem | ReferenceItem {\n\t\treturn this._move(item, false) ?? item;\n\t}\n\n\tprivate _move(item: FileItem | ReferenceItem, fwd: boolean): ReferenceItem | void {\n\n\t\tconst delta = fwd ? +1 : -1;\n\n\t\tconst _move = (item: FileItem): FileItem => {\n\t\t\tconst idx = (this.items.indexOf(item) + delta + this.items.length) % this.items.length;\n\t\t\treturn this.items[idx];\n\t\t};\n\n\t\tif (item instanceof FileItem) {\n\t\t\tif (fwd) {\n\t\t\t\treturn _move(item).references[0];\n\t\t\t} else {\n\t\t\t\treturn tail(_move(item).references);\n\t\t\t}\n\t\t}\n\n\t\tif (item instanceof ReferenceItem) {\n\t\t\tconst idx = item.file.references.indexOf(item) + delta;\n\t\t\tif (idx < 0) {\n\t\t\t\treturn tail(_move(item.file).references);\n\t\t\t} else if (idx >= item.file.references.length) {\n\t\t\t\treturn _move(item.file).references[0];\n\t\t\t} else {\n\t\t\t\treturn item.file.references[idx];\n\t\t\t}\n\t\t}\n\t}\n\n\tgetEditorHighlights(_item: FileItem | ReferenceItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tconst file = this.items.find(file => file.uri.toString() === uri.toString());\n\t\treturn file?.references.map(ref => ref.location.range);\n\t}\n\n\tremove(item: FileItem | ReferenceItem) {\n\t\tif (item instanceof FileItem) {\n\t\t\tdel(this.items, item);\n\t\t\tthis._onDidChange.fire(undefined);\n\t\t} else {\n\t\t\tdel(item.file.references, item);\n\t\t\tif (item.file.references.length === 0) {\n\t\t\t\tdel(this.items, item.file);\n\t\t\t\tthis._onDidChange.fire(undefined);\n\t\t\t} else {\n\t\t\t\tthis._onDidChange.fire(item.file);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = '';\n\t\tfor (const item of this.items) {\n\t\t\tresult += `${await item.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetDragUri(item: FileItem | ReferenceItem): vscode.Uri | undefined {\n\t\tif (item instanceof FileItem) {\n\t\t\treturn item.uri;\n\t\t} else {\n\t\t\treturn asResourceUrl(item.file.uri, item.location.range);\n\t\t}\n\t}\n}\n\nclass ReferencesTreeDataProvider implements vscode.TreeDataProvider<FileItem | ReferenceItem> {\n\n\tprivate readonly _listener: vscode.Disposable;\n\tprivate readonly _onDidChange = new vscode.EventEmitter<FileItem | ReferenceItem | undefined>();\n\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\tconstructor(private readonly _model: ReferencesModel) {\n\t\tthis._listener = _model.onDidChangeTreeData(() => this._onDidChange.fire(undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis._listener.dispose();\n\t}\n\n\tasync getTreeItem(element: FileItem | ReferenceItem) {\n\t\tif (element instanceof FileItem) {\n\t\t\t// files\n\t\t\tconst result = new vscode.TreeItem(element.uri);\n\t\t\tresult.contextValue = 'file-item';\n\t\t\tresult.description = true;\n\t\t\tresult.iconPath = vscode.ThemeIcon.File;\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\t\treturn result;\n\n\t\t} else {\n\t\t\t// references\n\t\t\tconst { range } = element.location;\n\t\t\tconst doc = await element.getDocument(true);\n\t\t\tconst { before, inside, after } = getPreviewChunks(doc, range);\n\n\t\t\tconst label: vscode.TreeItemLabel = {\n\t\t\t\tlabel: before + inside + after,\n\t\t\t\thighlights: [[before.length, before.length + inside.length]]\n\t\t\t};\n\n\t\t\tconst result = new vscode.TreeItem(label);\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\t\tresult.contextValue = 'reference-item';\n\t\t\tresult.command = {\n\t\t\t\tcommand: 'vscode.open',\n\t\t\t\ttitle: vscode.l10n.t('Open Reference'),\n\t\t\t\targuments: [\n\t\t\t\t\telement.location.uri,\n\t\t\t\t\t{ selection: range.with({ end: range.start }) } satisfies vscode.TextDocumentShowOptions\n\t\t\t\t]\n\t\t\t};\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tasync getChildren(element?: FileItem | ReferenceItem) {\n\t\tif (!element) {\n\t\t\treturn this._model.items;\n\t\t}\n\t\tif (element instanceof FileItem) {\n\t\t\treturn element.references;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetParent(element: FileItem | ReferenceItem) {\n\t\treturn element instanceof ReferenceItem ? element.file : undefined;\n\t}\n}\n\nexport class FileItem {\n\n\tconstructor(\n\t\treadonly uri: vscode.Uri,\n\t\treadonly references: Array<ReferenceItem>,\n\t\treadonly model: ReferencesModel\n\t) { }\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = `${vscode.workspace.asRelativePath(this.uri)}\\n`;\n\t\tfor (const ref of this.references) {\n\t\t\tresult += `  ${await ref.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class ReferenceItem {\n\n\tprivate _document: Thenable<vscode.TextDocument> | undefined;\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly file: FileItem,\n\t) { }\n\n\tasync getDocument(warmUpNext?: boolean) {\n\t\tif (!this._document) {\n\t\t\tthis._document = vscode.workspace.openTextDocument(this.location.uri);\n\t\t}\n\t\tif (warmUpNext) {\n\t\t\t// load next document once this document has been loaded\n\t\t\tconst next = this.file.model.next(this.file);\n\t\t\tif (next instanceof FileItem && next !== this.file) {\n\t\t\t\tvscode.workspace.openTextDocument(next.uri);\n\t\t\t} else if (next instanceof ReferenceItem) {\n\t\t\t\tvscode.workspace.openTextDocument(next.location.uri);\n\t\t\t}\n\t\t}\n\t\treturn this._document;\n\t}\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.file.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tconst doc = await this.getDocument();\n\t\tconst chunks = getPreviewChunks(doc, this.location.range, 21, false);\n\t\treturn `${this.location.range.start.line + 1}, ${this.location.range.start.character + 1}: ${chunks.before + chunks.inside + chunks.after}`;\n\t}\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(256);\n"],"names":["TypesTreeInput","location","direction","title","contextValue","constructor","this","vscode","l10n","t","resolve","items","Promise","commands","executeCommand","uri","range","start","model","TypesModel","provider","TypeItemDataProvider","roots","length","message","undefined","navigation","highlights","dnd","dispose","TypeItem","item","parent","children","remove","_onDidChange","EventEmitter","onDidChange","event","map","_resolveTypes","currentType","types","getTypeChildren","getDragUri","asResourceUrl","Location","nearest","_position","find","toString","next","from","_move","previous","fwd","tail","array","includes","idx","indexOf","getEditorHighlights","selectionRange","siblings","del","fire","_model","_emitter","onDidChangeTreeData","_modelListener","e","getTreeItem","element","TreeItem","name","description","detail","iconPath","getThemeIcon","kind","command","arguments","selection","with","end","collapsibleState","TreeItemCollapsibleState","Collapsed","getChildren","getParent","_view","_delegate","_decorationType","window","createTextEditorDecorationType","backgroundColor","ThemeColor","rangeBehavior","DecorationRangeBehavior","ClosedClosed","overviewRulerLane","OverviewRulerLane","Center","overviewRulerColor","disposables","_ignore","Set","push","workspace","onDidChangeTextDocument","add","document","onDidChangeActiveTextEditor","visible","update","onDidChangeVisibility","_show","_hide","onDidChangeSelection","Disposable","editor","visibleTextEditors","setDecorations","activeTextEditor","viewColumn","has","anchor","ranges","_disposables","_ctxCanNavigate","ContextKey","registerCommand","delegate","set","Boolean","_anchor","sel","active","_open","loc","preserveFocus","Selection","newItem","newLocation","reveal","select","focus","CallsTreeInput","CallsModel","CallItemDataProvider","CallItem","locations","_resolveCalls","call","calls","fromRanges","to","getCallChildren","filter","openArgs","tooltip","label","firstLoctionStart","isBefore","Range","tree","context","RichTypesDirection","workspaceState","setTypeHierarchyDirection","value","newInput","oldInput","getInput","setInput","subscriptions","input","removeTypeItem","_mem","_value","static","_ctxMode","raw","get","_key","SymbolsTree","references","register","splice","fragment","line","character","async","position","doc","openTextDocument","getWordRangeAtPosition","beforeLen","trim","previewStart","Math","max","wordRange","before","getText","inside","previewEnd","translate","after","replace","id","_themeIconIds","ThemeIcon","reset","_doc","_version","_word","version","_getAnchorWord","pos","guessedTrackedPosition","wordNow","startLine","checked","i","lineCount","ch","lineAt","text","Position","module","exports","require","findLocations","ReferencesTreeInput","showReferencesDisposable","args","removeReferenceItem","copyCommand","copyAllCommand","copyPathCommand","config","updateShowReferences","affectsConfiguration","getConfiguration","onDidChangeConfiguration","ReferenceItem","file","FileItem","val","ReferencesModel","asCopyText","env","clipboard","writeText","scheme","fsPath","RichCallsDirection","setCallsDirection","removeCallItem","viewId","_ctxIsActive","_ctxHasResult","_ctxInputSource","_history","TreeInputHistory","_provider","TreeDataProviderDelegate","_dnd","TreeDndDelegate","_tree","_navigation","_input","_sessionDisposable","createTreeView","treeDataProvider","showCollapseAll","dragAndDropController","Navigation","isValidRequestPosition","clearInput","newInputKind","Object","getPrototypeOf","modelPromise","then","expand","EditorHighlights","size","_sessionDispoables","catch","err","console","error","_assertProvider","Error","dropMimeTypes","dragMimeTypes","handleDrag","source","data","urls","DataTransferItem","join","handleDrop","HistoryItem","key","word","asRelativePath","toLocaleLowerCase","_onDidChangeTreeData","_ctxHasHistory","_inputs","Map","clear","_reRunHistoryItem","Array","values","pop","picks","pick","showQuickPick","placeHolder","delete","newPosition","isEqual","WordAnchor","JSON","stringify","result","None","all","reverse","_command","_result","resut","ReferencesTreeDataProvider","last","sort","_compareLocations","targetUri","targetRange","_compareUriIgnoreFragment","a","b","aStr","bStr","aUri","bUri","aRange","bRange","isAfter","total","reduce","prev","cur","files","ref","contains","lastBefore","best","bestValue","_prefixLen","charCodeAt","delta","_item","_listener","File","getDocument","getPreviewChunks","_document","warmUpNext","chunks","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}