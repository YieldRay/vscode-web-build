{"version":3,"file":"npmBrowserMain.js","mappings":"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","sources":["webpack://npm/./src/npmBrowserMain.ts","webpack://npm/external commonjs \"vscode\"","webpack://npm/./src/features/packageJSONContribution.ts","webpack://npm/./src/features/jsonContributions.ts","webpack://npm/./node_modules/request-light/lib/browser/main.js","webpack://npm/./node_modules/jsonc-parser/lib/esm/impl/scanner.js","webpack://npm/./node_modules/jsonc-parser/lib/esm/impl/parser.js","webpack://npm/./node_modules/jsonc-parser/lib/esm/impl/format.js","webpack://npm/./node_modules/jsonc-parser/lib/esm/impl/edit.js","webpack://npm/./node_modules/jsonc-parser/lib/esm/main.js","webpack://npm/../../node_modules/path-browserify/index.js","webpack://npm/./src/features/date.ts","webpack://npm/webpack/bootstrap","webpack://npm/webpack/runtime/define property getters","webpack://npm/webpack/runtime/hasOwnProperty shorthand","webpack://npm/webpack/runtime/make namespace object","webpack://npm/webpack/startup"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as httpRequest from 'request-light';\nimport * as vscode from 'vscode';\nimport { addJSONProviders } from './features/jsonContributions';\n\nexport async function activate(context: vscode.ExtensionContext): Promise<void> {\n\tcontext.subscriptions.push(addJSONProviders(httpRequest.xhr, undefined));\n}\n\nexport function deactivate(): void {\n}\n","module.exports = require(\"vscode\");","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CompletionItemKind, CompletionItem, DocumentSelector, SnippetString, workspace, MarkdownString, Uri, l10n } from 'vscode';\nimport { IJSONContribution, ISuggestionsCollector } from './jsonContributions';\nimport { XHRRequest } from 'request-light';\nimport { Location } from 'jsonc-parser';\n\nimport * as cp from 'child_process';\nimport { dirname } from 'path';\nimport { fromNow } from './date';\n\nconst LIMIT = 40;\n\nconst USER_AGENT = 'Visual Studio Code';\n\nexport class PackageJSONContribution implements IJSONContribution {\n\n\tprivate mostDependedOn = ['lodash', 'async', 'underscore', 'request', 'commander', 'express', 'debug', 'chalk', 'colors', 'q', 'coffee-script',\n\t\t'mkdirp', 'optimist', 'through2', 'yeoman-generator', 'moment', 'bluebird', 'glob', 'gulp-util', 'minimist', 'cheerio', 'pug', 'redis', 'node-uuid',\n\t\t'socket', 'io', 'uglify-js', 'winston', 'through', 'fs-extra', 'handlebars', 'body-parser', 'rimraf', 'mime', 'semver', 'mongodb', 'jquery',\n\t\t'grunt', 'connect', 'yosay', 'underscore', 'string', 'xml2js', 'ejs', 'mongoose', 'marked', 'extend', 'mocha', 'superagent', 'js-yaml', 'xtend',\n\t\t'shelljs', 'gulp', 'yargs', 'browserify', 'minimatch', 'react', 'less', 'prompt', 'inquirer', 'ws', 'event-stream', 'inherits', 'mysql', 'esprima',\n\t\t'jsdom', 'stylus', 'when', 'readable-stream', 'aws-sdk', 'concat-stream', 'chai', 'Thenable', 'wrench'];\n\n\tprivate knownScopes = ['@types', '@angular', '@babel', '@nuxtjs', '@vue', '@bazel'];\n\n\tpublic getDocumentSelector(): DocumentSelector {\n\t\treturn [{ language: 'json', scheme: '*', pattern: '**/package.json' }];\n\t}\n\n\tpublic constructor(private xhr: XHRRequest, private npmCommandPath: string | undefined) {\n\t}\n\n\tpublic collectDefaultSuggestions(_resource: Uri, result: ISuggestionsCollector): Thenable<any> {\n\t\tconst defaultValue = {\n\t\t\t'name': '${1:name}',\n\t\t\t'description': '${2:description}',\n\t\t\t'authors': '${3:author}',\n\t\t\t'version': '${4:1.0.0}',\n\t\t\t'main': '${5:pathToMain}',\n\t\t\t'dependencies': {}\n\t\t};\n\t\tconst proposal = new CompletionItem(l10n.t(\"Default package.json\"));\n\t\tproposal.kind = CompletionItemKind.Module;\n\t\tproposal.insertText = new SnippetString(JSON.stringify(defaultValue, null, '\\t'));\n\t\tresult.add(proposal);\n\t\treturn Promise.resolve(null);\n\t}\n\n\tprivate isEnabled() {\n\t\treturn this.npmCommandPath || this.onlineEnabled();\n\t}\n\n\tprivate onlineEnabled() {\n\t\treturn !!workspace.getConfiguration('npm').get('fetchOnlinePackageInfo');\n\t}\n\n\tpublic collectPropertySuggestions(\n\t\t_resource: Uri,\n\t\tlocation: Location,\n\t\tcurrentWord: string,\n\t\taddValue: boolean,\n\t\tisLast: boolean,\n\t\tcollector: ISuggestionsCollector\n\t): Thenable<any> | null {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ((location.matches(['dependencies']) || location.matches(['devDependencies']) || location.matches(['optionalDependencies']) || location.matches(['peerDependencies']))) {\n\t\t\tlet queryUrl: string;\n\t\t\tif (currentWord.length > 0) {\n\t\t\t\tif (currentWord[0] === '@') {\n\t\t\t\t\tif (currentWord.indexOf('/') !== -1) {\n\t\t\t\t\t\treturn this.collectScopedPackages(currentWord, addValue, isLast, collector);\n\t\t\t\t\t}\n\t\t\t\t\tfor (const scope of this.knownScopes) {\n\t\t\t\t\t\tconst proposal = new CompletionItem(scope);\n\t\t\t\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\t\t\t\tproposal.insertText = new SnippetString().appendText(`\"${scope}/`).appendTabstop().appendText('\"');\n\t\t\t\t\t\tproposal.filterText = JSON.stringify(scope);\n\t\t\t\t\t\tproposal.documentation = '';\n\t\t\t\t\t\tproposal.command = {\n\t\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\t\tcommand: 'editor.action.triggerSuggest'\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcollector.add(proposal);\n\t\t\t\t\t}\n\t\t\t\t\tcollector.setAsIncomplete();\n\t\t\t\t}\n\n\t\t\t\tqueryUrl = `https://registry.npmjs.org/-/v1/search?size=${LIMIT}&text=${encodeURIComponent(currentWord)}`;\n\t\t\t\treturn this.xhr({\n\t\t\t\t\turl: queryUrl,\n\t\t\t\t\theaders: { agent: USER_AGENT }\n\t\t\t\t}).then((success) => {\n\t\t\t\t\tif (success.status === 200) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst obj = JSON.parse(success.responseText);\n\t\t\t\t\t\t\tif (obj && obj.objects && Array.isArray(obj.objects)) {\n\t\t\t\t\t\t\t\tconst results = <{ package: SearchPackageInfo }[]>obj.objects;\n\t\t\t\t\t\t\t\tfor (const result of results) {\n\t\t\t\t\t\t\t\t\tthis.processPackage(result.package, addValue, isLast, collector);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcollector.setAsIncomplete();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcollector.error(l10n.t(\"Request to the NPM repository failed: {0}\", success.responseText));\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t\treturn undefined;\n\t\t\t\t}, (error) => {\n\t\t\t\t\tcollector.error(l10n.t(\"Request to the NPM repository failed: {0}\", error.responseText));\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.mostDependedOn.forEach((name) => {\n\t\t\t\t\tconst insertText = new SnippetString().appendText(JSON.stringify(name));\n\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\tinsertText.appendText(': \"').appendTabstop().appendText('\"');\n\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\tinsertText.appendText(',');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst proposal = new CompletionItem(name);\n\t\t\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\t\t\tproposal.insertText = insertText;\n\t\t\t\t\tproposal.filterText = JSON.stringify(name);\n\t\t\t\t\tproposal.documentation = '';\n\t\t\t\t\tcollector.add(proposal);\n\t\t\t\t});\n\t\t\t\tthis.collectScopedPackages(currentWord, addValue, isLast, collector);\n\t\t\t\tcollector.setAsIncomplete();\n\t\t\t\treturn Promise.resolve(null);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate collectScopedPackages(currentWord: string, addValue: boolean, isLast: boolean, collector: ISuggestionsCollector): Thenable<any> {\n\t\tconst segments = currentWord.split('/');\n\t\tif (segments.length === 2 && segments[0].length > 1) {\n\t\t\tconst scope = segments[0].substr(1);\n\t\t\tlet name = segments[1];\n\t\t\tif (name.length < 4) {\n\t\t\t\tname = '';\n\t\t\t}\n\t\t\tconst queryUrl = `https://registry.npmjs.com/-/v1/search?text=scope:${scope}%20${name}&size=250`;\n\t\t\treturn this.xhr({\n\t\t\t\turl: queryUrl,\n\t\t\t\theaders: { agent: USER_AGENT }\n\t\t\t}).then((success) => {\n\t\t\t\tif (success.status === 200) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst obj = JSON.parse(success.responseText);\n\t\t\t\t\t\tif (obj && Array.isArray(obj.objects)) {\n\t\t\t\t\t\t\tconst objects = <{ package: SearchPackageInfo }[]>obj.objects;\n\t\t\t\t\t\t\tfor (const object of objects) {\n\t\t\t\t\t\t\t\tthis.processPackage(object.package, addValue, isLast, collector);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t}\n\t\t\t\t\tcollector.setAsIncomplete();\n\t\t\t\t} else {\n\t\t\t\t\tcollector.error(l10n.t(\"Request to the NPM repository failed: {0}\", success.responseText));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(null);\n\t}\n\n\tpublic async collectValueSuggestions(resource: Uri, location: Location, result: ISuggestionsCollector): Promise<any> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ((location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']) || location.matches(['optionalDependencies', '*']) || location.matches(['peerDependencies', '*']))) {\n\t\t\tconst currentKey = location.path[location.path.length - 1];\n\t\t\tif (typeof currentKey === 'string') {\n\t\t\t\tconst info = await this.fetchPackageInfo(currentKey, resource);\n\t\t\t\tif (info && info.version) {\n\n\t\t\t\t\tlet name = JSON.stringify(info.version);\n\t\t\t\t\tlet proposal = new CompletionItem(name);\n\t\t\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\t\t\tproposal.insertText = name;\n\t\t\t\t\tproposal.documentation = l10n.t(\"The currently latest version of the package\");\n\t\t\t\t\tresult.add(proposal);\n\n\t\t\t\t\tname = JSON.stringify('^' + info.version);\n\t\t\t\t\tproposal = new CompletionItem(name);\n\t\t\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\t\t\tproposal.insertText = name;\n\t\t\t\t\tproposal.documentation = l10n.t(\"Matches the most recent major version (1.x.x)\");\n\t\t\t\t\tresult.add(proposal);\n\n\t\t\t\t\tname = JSON.stringify('~' + info.version);\n\t\t\t\t\tproposal = new CompletionItem(name);\n\t\t\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\t\t\tproposal.insertText = name;\n\t\t\t\t\tproposal.documentation = l10n.t(\"Matches the most recent minor version (1.2.x)\");\n\t\t\t\t\tresult.add(proposal);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getDocumentation(description: string | undefined, version: string | undefined, time: string | undefined, homepage: string | undefined): MarkdownString {\n\t\tconst str = new MarkdownString();\n\t\tif (description) {\n\t\t\tstr.appendText(description);\n\t\t}\n\t\tif (version) {\n\t\t\tstr.appendText('\\n\\n');\n\t\t\tstr.appendText(time ? l10n.t(\"Latest version: {0} published {1}\", version, fromNow(Date.parse(time), true, true)) : l10n.t(\"Latest version: {0}\", version));\n\t\t}\n\t\tif (homepage) {\n\t\t\tstr.appendText('\\n\\n');\n\t\t\tstr.appendText(homepage);\n\t\t}\n\t\treturn str;\n\t}\n\n\tpublic resolveSuggestion(resource: Uri | undefined, item: CompletionItem): Thenable<CompletionItem | null> | null {\n\t\tif (item.kind === CompletionItemKind.Property && !item.documentation) {\n\n\t\t\tlet name = item.label;\n\t\t\tif (typeof name !== 'string') {\n\t\t\t\tname = name.label;\n\t\t\t}\n\n\t\t\treturn this.fetchPackageInfo(name, resource).then(info => {\n\t\t\t\tif (info) {\n\t\t\t\t\titem.documentation = this.getDocumentation(info.description, info.version, info.time, info.homepage);\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate isValidNPMName(name: string): boolean {\n\t\t// following rules from https://github.com/npm/validate-npm-package-name,\n\t\t// leading slash added as additional security measure\n\t\tif (!name || name.length > 214 || name.match(/^[-_.\\s]/)) {\n\t\t\treturn false;\n\t\t}\n\t\tconst match = name.match(/^(?:@([^/~\\s)('!*]+?)[/])?([^/~)('!*\\s]+?)$/);\n\t\tif (match) {\n\t\t\tconst scope = match[1];\n\t\t\tif (scope && encodeURIComponent(scope) !== scope) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst name = match[2];\n\t\t\treturn encodeURIComponent(name) === name;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async fetchPackageInfo(pack: string, resource: Uri | undefined): Promise<ViewPackageInfo | undefined> {\n\t\tif (!this.isValidNPMName(pack)) {\n\t\t\treturn undefined; // avoid unnecessary lookups\n\t\t}\n\t\tlet info: ViewPackageInfo | undefined;\n\t\tif (this.npmCommandPath) {\n\t\t\tinfo = await this.npmView(this.npmCommandPath, pack, resource);\n\t\t}\n\t\tif (!info && this.onlineEnabled()) {\n\t\t\tinfo = await this.npmjsView(pack);\n\t\t}\n\t\treturn info;\n\t}\n\n\tprivate npmView(npmCommandPath: string, pack: string, resource: Uri | undefined): Promise<ViewPackageInfo | undefined> {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\tconst args = ['view', '--json', '--', pack, 'description', 'dist-tags.latest', 'homepage', 'version', 'time'];\n\t\t\tconst cwd = resource && resource.scheme === 'file' ? dirname(resource.fsPath) : undefined;\n\n\t\t\t// corepack npm wrapper would automatically update package.json. disable that behavior.\n\t\t\t// COREPACK_ENABLE_AUTO_PIN disables the package.json overwrite, and\n\t\t\t// COREPACK_ENABLE_PROJECT_SPEC makes the npm view command succeed\n\t\t\t//   even if packageManager specified a package manager other than npm.\n\t\t\tconst env = { ...process.env, COREPACK_ENABLE_AUTO_PIN: '0', COREPACK_ENABLE_PROJECT_SPEC: '0' };\n\t\t\tlet options: cp.ExecFileOptions = { cwd, env };\n\t\t\tlet commandPath: string = npmCommandPath;\n\t\t\tif (process.platform === 'win32') {\n\t\t\t\toptions = { cwd, env, shell: true };\n\t\t\t\tcommandPath = `\"${npmCommandPath}\"`;\n\t\t\t}\n\t\t\tcp.execFile(commandPath, args, options, (error, stdout) => {\n\t\t\t\tif (!error) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst content = JSON.parse(stdout);\n\t\t\t\t\t\tconst version = content['dist-tags.latest'] || content['version'];\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tdescription: content['description'],\n\t\t\t\t\t\t\tversion,\n\t\t\t\t\t\t\ttime: content.time?.[version],\n\t\t\t\t\t\t\thomepage: content['homepage']\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresolve(undefined);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async npmjsView(pack: string): Promise<ViewPackageInfo | undefined> {\n\t\tconst queryUrl = 'https://registry.npmjs.org/' + encodeURIComponent(pack);\n\t\ttry {\n\t\t\tconst success = await this.xhr({\n\t\t\t\turl: queryUrl,\n\t\t\t\theaders: { agent: USER_AGENT }\n\t\t\t});\n\t\t\tconst obj = JSON.parse(success.responseText);\n\t\t\tconst version = obj['dist-tags']?.latest || Object.keys(obj.versions).pop() || '';\n\t\t\treturn {\n\t\t\t\tdescription: obj.description || '',\n\t\t\t\tversion,\n\t\t\t\ttime: obj.time?.[version],\n\t\t\t\thomepage: obj.homepage || ''\n\t\t\t};\n\t\t}\n\t\tcatch (e) {\n\t\t\t//ignore\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic getInfoContribution(resource: Uri, location: Location): Thenable<MarkdownString[] | null> | null {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn null;\n\t\t}\n\t\tif ((location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']) || location.matches(['optionalDependencies', '*']) || location.matches(['peerDependencies', '*']))) {\n\t\t\tconst pack = location.path[location.path.length - 1];\n\t\t\tif (typeof pack === 'string') {\n\t\t\t\treturn this.fetchPackageInfo(pack, resource).then(info => {\n\t\t\t\t\tif (info) {\n\t\t\t\t\t\treturn [this.getDocumentation(info.description, info.version, info.time, info.homepage)];\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate processPackage(pack: SearchPackageInfo, addValue: boolean, isLast: boolean, collector: ISuggestionsCollector) {\n\t\tif (pack && pack.name) {\n\t\t\tconst name = pack.name;\n\t\t\tconst insertText = new SnippetString().appendText(JSON.stringify(name));\n\t\t\tif (addValue) {\n\t\t\t\tinsertText.appendText(': \"');\n\t\t\t\tif (pack.version) {\n\t\t\t\t\tinsertText.appendVariable('version', pack.version);\n\t\t\t\t} else {\n\t\t\t\t\tinsertText.appendTabstop();\n\t\t\t\t}\n\t\t\t\tinsertText.appendText('\"');\n\t\t\t\tif (!isLast) {\n\t\t\t\t\tinsertText.appendText(',');\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst proposal = new CompletionItem(name);\n\t\t\tproposal.kind = CompletionItemKind.Property;\n\t\t\tproposal.insertText = insertText;\n\t\t\tproposal.filterText = JSON.stringify(name);\n\t\t\tproposal.documentation = this.getDocumentation(pack.description, pack.version, undefined, pack?.links?.homepage);\n\t\t\tcollector.add(proposal);\n\t\t}\n\t}\n}\n\ninterface SearchPackageInfo {\n\tname: string;\n\tdescription?: string;\n\tversion?: string;\n\tlinks?: { homepage?: string };\n}\n\ninterface ViewPackageInfo {\n\tdescription: string;\n\tversion?: string;\n\ttime?: string;\n\thomepage?: string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Location, getLocation, createScanner, SyntaxKind, ScanError, JSONScanner } from 'jsonc-parser';\nimport { PackageJSONContribution } from './packageJSONContribution';\nimport { XHRRequest } from 'request-light';\n\nimport {\n\tCompletionItem, CompletionItemProvider, CompletionList, TextDocument, Position, Hover, HoverProvider,\n\tCancellationToken, Range, DocumentSelector, languages, Disposable, Uri, MarkdownString\n} from 'vscode';\n\nexport interface ISuggestionsCollector {\n\tadd(suggestion: CompletionItem): void;\n\terror(message: string): void;\n\tlog(message: string): void;\n\tsetAsIncomplete(): void;\n}\n\nexport interface IJSONContribution {\n\tgetDocumentSelector(): DocumentSelector;\n\tgetInfoContribution(resourceUri: Uri, location: Location): Thenable<MarkdownString[] | null> | null;\n\tcollectPropertySuggestions(resourceUri: Uri, location: Location, currentWord: string, addValue: boolean, isLast: boolean, result: ISuggestionsCollector): Thenable<any> | null;\n\tcollectValueSuggestions(resourceUri: Uri, location: Location, result: ISuggestionsCollector): Thenable<any> | null;\n\tcollectDefaultSuggestions(resourceUri: Uri, result: ISuggestionsCollector): Thenable<any>;\n\tresolveSuggestion?(resourceUri: Uri | undefined, item: CompletionItem): Thenable<CompletionItem | null> | null;\n}\n\nexport function addJSONProviders(xhr: XHRRequest, npmCommandPath: string | undefined): Disposable {\n\tconst contributions = [new PackageJSONContribution(xhr, npmCommandPath)];\n\tconst subscriptions: Disposable[] = [];\n\tcontributions.forEach(contribution => {\n\t\tconst selector = contribution.getDocumentSelector();\n\t\tsubscriptions.push(languages.registerCompletionItemProvider(selector, new JSONCompletionItemProvider(contribution), '\"', ':'));\n\t\tsubscriptions.push(languages.registerHoverProvider(selector, new JSONHoverProvider(contribution)));\n\t});\n\treturn Disposable.from(...subscriptions);\n}\n\nexport class JSONHoverProvider implements HoverProvider {\n\n\tconstructor(private jsonContribution: IJSONContribution) {\n\t}\n\n\tpublic provideHover(document: TextDocument, position: Position, _token: CancellationToken): Thenable<Hover> | null {\n\t\tconst offset = document.offsetAt(position);\n\t\tconst location = getLocation(document.getText(), offset);\n\t\tif (!location.previousNode) {\n\t\t\treturn null;\n\t\t}\n\t\tconst node = location.previousNode;\n\t\tif (node && node.offset <= offset && offset <= node.offset + node.length) {\n\t\t\tconst promise = this.jsonContribution.getInfoContribution(document.uri, location);\n\t\t\tif (promise) {\n\t\t\t\treturn promise.then(htmlContent => {\n\t\t\t\t\tconst range = new Range(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n\t\t\t\t\tconst result: Hover = {\n\t\t\t\t\t\tcontents: htmlContent || [],\n\t\t\t\t\t\trange: range\n\t\t\t\t\t};\n\t\t\t\t\treturn result;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport class JSONCompletionItemProvider implements CompletionItemProvider {\n\n\tprivate lastResource: Uri | undefined;\n\n\tconstructor(private jsonContribution: IJSONContribution) {\n\t}\n\n\tpublic resolveCompletionItem(item: CompletionItem, _token: CancellationToken): Thenable<CompletionItem | null> {\n\t\tif (this.jsonContribution.resolveSuggestion) {\n\t\t\tconst resolver = this.jsonContribution.resolveSuggestion(this.lastResource, item);\n\t\t\tif (resolver) {\n\t\t\t\treturn resolver;\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(item);\n\t}\n\n\tpublic provideCompletionItems(document: TextDocument, position: Position, _token: CancellationToken): Thenable<CompletionList | null> | null {\n\t\tthis.lastResource = document.uri;\n\n\n\t\tconst currentWord = this.getCurrentWord(document, position);\n\t\tlet overwriteRange: Range;\n\n\t\tconst items: CompletionItem[] = [];\n\t\tlet isIncomplete = false;\n\n\t\tconst offset = document.offsetAt(position);\n\t\tconst location = getLocation(document.getText(), offset);\n\n\t\tconst node = location.previousNode;\n\t\tif (node && node.offset <= offset && offset <= node.offset + node.length && (node.type === 'property' || node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n\t\t\toverwriteRange = new Range(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n\t\t} else {\n\t\t\toverwriteRange = new Range(document.positionAt(offset - currentWord.length), position);\n\t\t}\n\n\t\tconst proposed: { [key: string]: boolean } = {};\n\t\tconst collector: ISuggestionsCollector = {\n\t\t\tadd: (suggestion: CompletionItem) => {\n\t\t\t\tconst key = typeof suggestion.label === 'string'\n\t\t\t\t\t? suggestion.label\n\t\t\t\t\t: suggestion.label.label;\n\t\t\t\tif (!proposed[key]) {\n\t\t\t\t\tproposed[key] = true;\n\t\t\t\t\tsuggestion.range = { replacing: overwriteRange, inserting: new Range(overwriteRange.start, overwriteRange.start) };\n\t\t\t\t\titems.push(suggestion);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsetAsIncomplete: () => isIncomplete = true,\n\t\t\terror: (message: string) => console.error(message),\n\t\t\tlog: (message: string) => console.log(message)\n\t\t};\n\n\t\tlet collectPromise: Thenable<any> | null = null;\n\n\t\tif (location.isAtPropertyKey) {\n\t\t\tconst scanner = createScanner(document.getText(), true);\n\t\t\tconst addValue = !location.previousNode || !this.hasColonAfter(scanner, location.previousNode.offset + location.previousNode.length);\n\t\t\tconst isLast = this.isLast(scanner, document.offsetAt(position));\n\t\t\tcollectPromise = this.jsonContribution.collectPropertySuggestions(document.uri, location, currentWord, addValue, isLast, collector);\n\t\t} else {\n\t\t\tif (location.path.length === 0) {\n\t\t\t\tcollectPromise = this.jsonContribution.collectDefaultSuggestions(document.uri, collector);\n\t\t\t} else {\n\t\t\t\tcollectPromise = this.jsonContribution.collectValueSuggestions(document.uri, location, collector);\n\t\t\t}\n\t\t}\n\t\tif (collectPromise) {\n\t\t\treturn collectPromise.then(() => {\n\t\t\t\tif (items.length > 0 || isIncomplete) {\n\t\t\t\t\treturn new CompletionList(items, isIncomplete);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getCurrentWord(document: TextDocument, position: Position) {\n\t\tlet i = position.character - 1;\n\t\tconst text = document.lineAt(position.line).text;\n\t\twhile (i >= 0 && ' \\t\\n\\r\\v\":{[,'.indexOf(text.charAt(i)) === -1) {\n\t\t\ti--;\n\t\t}\n\t\treturn text.substring(i + 1, position.character);\n\t}\n\n\tprivate isLast(scanner: JSONScanner, offset: number): boolean {\n\t\tscanner.setPosition(offset);\n\t\tlet nextToken = scanner.scan();\n\t\tif (nextToken === SyntaxKind.StringLiteral && scanner.getTokenError() === ScanError.UnexpectedEndOfString) {\n\t\t\tnextToken = scanner.scan();\n\t\t}\n\t\treturn nextToken === SyntaxKind.CloseBraceToken || nextToken === SyntaxKind.EOF;\n\t}\n\tprivate hasColonAfter(scanner: JSONScanner, offset: number): boolean {\n\t\tscanner.setPosition(offset);\n\t\treturn scanner.scan() === SyntaxKind.ColonToken;\n\t}\n\n}\n\nexport const xhrDisabled = () => Promise.reject({ responseText: 'Use of online resources is disabled.' });\n","(()=>{\"use strict\";var e={};(()=>{var r=e;Object.defineProperty(r,\"__esModule\",{value:!0}),r.getErrorStatusDescription=r.xhr=r.configure=void 0,r.configure=(e,r)=>{},r.xhr=async e=>{const r=new Headers;if(e.headers)for(const t in e.headers){const o=e.headers[t];Array.isArray(o)?o.forEach((e=>r.set(t,e))):r.set(t,o)}e.user&&e.password&&r.set(\"Authorization\",\"Basic \"+btoa(e.user+\":\"+e.password));const t={method:e.type,redirect:e.followRedirects>0?\"follow\":\"manual\",mode:\"cors\",headers:r};if(e.data&&(t.body=e.data),e.token){const r=new AbortController;e.token.isCancellationRequested&&r.abort(),e.token.onCancellationRequested((()=>{r.abort()})),t.signal=r.signal}const o=new Request(e.url,t),s=await fetch(o),a={};s.headers.forEach(((e,r)=>{a[r]=e}));const n=await s.arrayBuffer();return new class{constructor(){this.status=s.status,this.headers=a}get responseText(){return(new TextDecoder).decode(n)}get body(){return new Uint8Array(n)}}},r.getErrorStatusDescription=function(e){return String(e)}})();var r=exports;for(var t in e)r[t]=e[t];e.__esModule&&Object.defineProperty(r,\"__esModule\",{value:!0})})();","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia = false) {\n    const len = text.length;\n    let pos = 0, value = '', tokenOffset = 0, token = 16 /* SyntaxKind.Unknown */, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0 /* ScanError.None */;\n    function scanHexDigits(count, exact) {\n        let digits = 0;\n        let value = 0;\n        while (digits < count || !exact) {\n            let ch = text.charCodeAt(pos);\n            if (ch >= 48 /* CharacterCodes._0 */ && ch <= 57 /* CharacterCodes._9 */) {\n                value = value * 16 + ch - 48 /* CharacterCodes._0 */;\n            }\n            else if (ch >= 65 /* CharacterCodes.A */ && ch <= 70 /* CharacterCodes.F */) {\n                value = value * 16 + ch - 65 /* CharacterCodes.A */ + 10;\n            }\n            else if (ch >= 97 /* CharacterCodes.a */ && ch <= 102 /* CharacterCodes.f */) {\n                value = value * 16 + ch - 97 /* CharacterCodes.a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* SyntaxKind.Unknown */;\n        scanError = 0 /* ScanError.None */;\n    }\n    function scanNumber() {\n        let start = pos;\n        if (text.charCodeAt(pos) === 48 /* CharacterCodes._0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* CharacterCodes.dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* ScanError.UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        let end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* CharacterCodes.E */ || text.charCodeAt(pos) === 101 /* CharacterCodes.e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* CharacterCodes.plus */ || text.charCodeAt(pos) === 45 /* CharacterCodes.minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* ScanError.UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        let result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* ScanError.UnexpectedEndOfString */;\n                break;\n            }\n            const ch = text.charCodeAt(pos);\n            if (ch === 34 /* CharacterCodes.doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* CharacterCodes.backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* ScanError.UnexpectedEndOfString */;\n                    break;\n                }\n                const ch2 = text.charCodeAt(pos++);\n                switch (ch2) {\n                    case 34 /* CharacterCodes.doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* CharacterCodes.backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* CharacterCodes.slash */:\n                        result += '/';\n                        break;\n                    case 98 /* CharacterCodes.b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* CharacterCodes.f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* CharacterCodes.n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* CharacterCodes.r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* CharacterCodes.t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* CharacterCodes.u */:\n                        const ch3 = scanHexDigits(4, true);\n                        if (ch3 >= 0) {\n                            result += String.fromCharCode(ch3);\n                        }\n                        else {\n                            scanError = 4 /* ScanError.InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* ScanError.InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* ScanError.UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* ScanError.InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* ScanError.None */;\n        tokenOffset = pos;\n        lineStartOffset = lineNumber;\n        prevTokenLineStartOffset = tokenLineStartOffset;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* SyntaxKind.EOF */;\n        }\n        let code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* SyntaxKind.Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* CharacterCodes.carriageReturn */ && text.charCodeAt(pos) === 10 /* CharacterCodes.lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            lineNumber++;\n            tokenLineStartOffset = pos;\n            return token = 14 /* SyntaxKind.LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* CharacterCodes.openBrace */:\n                pos++;\n                return token = 1 /* SyntaxKind.OpenBraceToken */;\n            case 125 /* CharacterCodes.closeBrace */:\n                pos++;\n                return token = 2 /* SyntaxKind.CloseBraceToken */;\n            case 91 /* CharacterCodes.openBracket */:\n                pos++;\n                return token = 3 /* SyntaxKind.OpenBracketToken */;\n            case 93 /* CharacterCodes.closeBracket */:\n                pos++;\n                return token = 4 /* SyntaxKind.CloseBracketToken */;\n            case 58 /* CharacterCodes.colon */:\n                pos++;\n                return token = 6 /* SyntaxKind.ColonToken */;\n            case 44 /* CharacterCodes.comma */:\n                pos++;\n                return token = 5 /* SyntaxKind.CommaToken */;\n            // strings\n            case 34 /* CharacterCodes.doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* SyntaxKind.StringLiteral */;\n            // comments\n            case 47 /* CharacterCodes.slash */:\n                const start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* CharacterCodes.slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* SyntaxKind.LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* CharacterCodes.asterisk */) {\n                    pos += 2;\n                    const safeLength = len - 1; // For lookahead.\n                    let commentClosed = false;\n                    while (pos < safeLength) {\n                        const ch = text.charCodeAt(pos);\n                        if (ch === 42 /* CharacterCodes.asterisk */ && text.charCodeAt(pos + 1) === 47 /* CharacterCodes.slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                        if (isLineBreak(ch)) {\n                            if (ch === 13 /* CharacterCodes.carriageReturn */ && text.charCodeAt(pos) === 10 /* CharacterCodes.lineFeed */) {\n                                pos++;\n                            }\n                            lineNumber++;\n                            tokenLineStartOffset = pos;\n                        }\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* ScanError.UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* SyntaxKind.BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* SyntaxKind.Unknown */;\n            // numbers\n            case 45 /* CharacterCodes.minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* SyntaxKind.Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* CharacterCodes._0 */:\n            case 49 /* CharacterCodes._1 */:\n            case 50 /* CharacterCodes._2 */:\n            case 51 /* CharacterCodes._3 */:\n            case 52 /* CharacterCodes._4 */:\n            case 53 /* CharacterCodes._5 */:\n            case 54 /* CharacterCodes._6 */:\n            case 55 /* CharacterCodes._7 */:\n            case 56 /* CharacterCodes._8 */:\n            case 57 /* CharacterCodes._9 */:\n                value += scanNumber();\n                return token = 11 /* SyntaxKind.NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* SyntaxKind.TrueKeyword */;\n                        case 'false': return token = 9 /* SyntaxKind.FalseKeyword */;\n                        case 'null': return token = 7 /* SyntaxKind.NullKeyword */;\n                    }\n                    return token = 16 /* SyntaxKind.Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* SyntaxKind.Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* CharacterCodes.closeBrace */:\n            case 93 /* CharacterCodes.closeBracket */:\n            case 123 /* CharacterCodes.openBrace */:\n            case 91 /* CharacterCodes.openBracket */:\n            case 34 /* CharacterCodes.doubleQuote */:\n            case 58 /* CharacterCodes.colon */:\n            case 44 /* CharacterCodes.comma */:\n            case 47 /* CharacterCodes.slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        let result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* SyntaxKind.LineCommentTrivia */ && result <= 15 /* SyntaxKind.Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: () => pos,\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: () => token,\n        getTokenValue: () => value,\n        getTokenOffset: () => tokenOffset,\n        getTokenLength: () => pos - tokenOffset,\n        getTokenStartLine: () => lineStartOffset,\n        getTokenStartCharacter: () => tokenOffset - prevTokenLineStartOffset,\n        getTokenError: () => scanError,\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* CharacterCodes.space */ || ch === 9 /* CharacterCodes.tab */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* CharacterCodes.lineFeed */ || ch === 13 /* CharacterCodes.carriageReturn */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* CharacterCodes._0 */ && ch <= 57 /* CharacterCodes._9 */;\n}\nvar CharacterCodes;\n(function (CharacterCodes) {\n    CharacterCodes[CharacterCodes[\"lineFeed\"] = 10] = \"lineFeed\";\n    CharacterCodes[CharacterCodes[\"carriageReturn\"] = 13] = \"carriageReturn\";\n    CharacterCodes[CharacterCodes[\"space\"] = 32] = \"space\";\n    CharacterCodes[CharacterCodes[\"_0\"] = 48] = \"_0\";\n    CharacterCodes[CharacterCodes[\"_1\"] = 49] = \"_1\";\n    CharacterCodes[CharacterCodes[\"_2\"] = 50] = \"_2\";\n    CharacterCodes[CharacterCodes[\"_3\"] = 51] = \"_3\";\n    CharacterCodes[CharacterCodes[\"_4\"] = 52] = \"_4\";\n    CharacterCodes[CharacterCodes[\"_5\"] = 53] = \"_5\";\n    CharacterCodes[CharacterCodes[\"_6\"] = 54] = \"_6\";\n    CharacterCodes[CharacterCodes[\"_7\"] = 55] = \"_7\";\n    CharacterCodes[CharacterCodes[\"_8\"] = 56] = \"_8\";\n    CharacterCodes[CharacterCodes[\"_9\"] = 57] = \"_9\";\n    CharacterCodes[CharacterCodes[\"a\"] = 97] = \"a\";\n    CharacterCodes[CharacterCodes[\"b\"] = 98] = \"b\";\n    CharacterCodes[CharacterCodes[\"c\"] = 99] = \"c\";\n    CharacterCodes[CharacterCodes[\"d\"] = 100] = \"d\";\n    CharacterCodes[CharacterCodes[\"e\"] = 101] = \"e\";\n    CharacterCodes[CharacterCodes[\"f\"] = 102] = \"f\";\n    CharacterCodes[CharacterCodes[\"g\"] = 103] = \"g\";\n    CharacterCodes[CharacterCodes[\"h\"] = 104] = \"h\";\n    CharacterCodes[CharacterCodes[\"i\"] = 105] = \"i\";\n    CharacterCodes[CharacterCodes[\"j\"] = 106] = \"j\";\n    CharacterCodes[CharacterCodes[\"k\"] = 107] = \"k\";\n    CharacterCodes[CharacterCodes[\"l\"] = 108] = \"l\";\n    CharacterCodes[CharacterCodes[\"m\"] = 109] = \"m\";\n    CharacterCodes[CharacterCodes[\"n\"] = 110] = \"n\";\n    CharacterCodes[CharacterCodes[\"o\"] = 111] = \"o\";\n    CharacterCodes[CharacterCodes[\"p\"] = 112] = \"p\";\n    CharacterCodes[CharacterCodes[\"q\"] = 113] = \"q\";\n    CharacterCodes[CharacterCodes[\"r\"] = 114] = \"r\";\n    CharacterCodes[CharacterCodes[\"s\"] = 115] = \"s\";\n    CharacterCodes[CharacterCodes[\"t\"] = 116] = \"t\";\n    CharacterCodes[CharacterCodes[\"u\"] = 117] = \"u\";\n    CharacterCodes[CharacterCodes[\"v\"] = 118] = \"v\";\n    CharacterCodes[CharacterCodes[\"w\"] = 119] = \"w\";\n    CharacterCodes[CharacterCodes[\"x\"] = 120] = \"x\";\n    CharacterCodes[CharacterCodes[\"y\"] = 121] = \"y\";\n    CharacterCodes[CharacterCodes[\"z\"] = 122] = \"z\";\n    CharacterCodes[CharacterCodes[\"A\"] = 65] = \"A\";\n    CharacterCodes[CharacterCodes[\"B\"] = 66] = \"B\";\n    CharacterCodes[CharacterCodes[\"C\"] = 67] = \"C\";\n    CharacterCodes[CharacterCodes[\"D\"] = 68] = \"D\";\n    CharacterCodes[CharacterCodes[\"E\"] = 69] = \"E\";\n    CharacterCodes[CharacterCodes[\"F\"] = 70] = \"F\";\n    CharacterCodes[CharacterCodes[\"G\"] = 71] = \"G\";\n    CharacterCodes[CharacterCodes[\"H\"] = 72] = \"H\";\n    CharacterCodes[CharacterCodes[\"I\"] = 73] = \"I\";\n    CharacterCodes[CharacterCodes[\"J\"] = 74] = \"J\";\n    CharacterCodes[CharacterCodes[\"K\"] = 75] = \"K\";\n    CharacterCodes[CharacterCodes[\"L\"] = 76] = \"L\";\n    CharacterCodes[CharacterCodes[\"M\"] = 77] = \"M\";\n    CharacterCodes[CharacterCodes[\"N\"] = 78] = \"N\";\n    CharacterCodes[CharacterCodes[\"O\"] = 79] = \"O\";\n    CharacterCodes[CharacterCodes[\"P\"] = 80] = \"P\";\n    CharacterCodes[CharacterCodes[\"Q\"] = 81] = \"Q\";\n    CharacterCodes[CharacterCodes[\"R\"] = 82] = \"R\";\n    CharacterCodes[CharacterCodes[\"S\"] = 83] = \"S\";\n    CharacterCodes[CharacterCodes[\"T\"] = 84] = \"T\";\n    CharacterCodes[CharacterCodes[\"U\"] = 85] = \"U\";\n    CharacterCodes[CharacterCodes[\"V\"] = 86] = \"V\";\n    CharacterCodes[CharacterCodes[\"W\"] = 87] = \"W\";\n    CharacterCodes[CharacterCodes[\"X\"] = 88] = \"X\";\n    CharacterCodes[CharacterCodes[\"Y\"] = 89] = \"Y\";\n    CharacterCodes[CharacterCodes[\"Z\"] = 90] = \"Z\";\n    CharacterCodes[CharacterCodes[\"asterisk\"] = 42] = \"asterisk\";\n    CharacterCodes[CharacterCodes[\"backslash\"] = 92] = \"backslash\";\n    CharacterCodes[CharacterCodes[\"closeBrace\"] = 125] = \"closeBrace\";\n    CharacterCodes[CharacterCodes[\"closeBracket\"] = 93] = \"closeBracket\";\n    CharacterCodes[CharacterCodes[\"colon\"] = 58] = \"colon\";\n    CharacterCodes[CharacterCodes[\"comma\"] = 44] = \"comma\";\n    CharacterCodes[CharacterCodes[\"dot\"] = 46] = \"dot\";\n    CharacterCodes[CharacterCodes[\"doubleQuote\"] = 34] = \"doubleQuote\";\n    CharacterCodes[CharacterCodes[\"minus\"] = 45] = \"minus\";\n    CharacterCodes[CharacterCodes[\"openBrace\"] = 123] = \"openBrace\";\n    CharacterCodes[CharacterCodes[\"openBracket\"] = 91] = \"openBracket\";\n    CharacterCodes[CharacterCodes[\"plus\"] = 43] = \"plus\";\n    CharacterCodes[CharacterCodes[\"slash\"] = 47] = \"slash\";\n    CharacterCodes[CharacterCodes[\"formFeed\"] = 12] = \"formFeed\";\n    CharacterCodes[CharacterCodes[\"tab\"] = 9] = \"tab\";\n})(CharacterCodes || (CharacterCodes = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    const segments = []; // strings or numbers\n    const earlyReturnException = new Object();\n    let previousNode = undefined;\n    const previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: undefined\n    };\n    let isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = undefined;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: (name, offset, length) => {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onArrayBegin: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.push(0);\n            },\n            onArrayEnd: (offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = undefined;\n                segments.pop();\n            },\n            onLiteralValue: (value, offset, length) => {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: (sep, offset, length) => {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = undefined;\n                }\n                else if (sep === ',') {\n                    const last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = undefined;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode,\n        isAtPropertyKey,\n        matches: (pattern) => {\n            let k = 0;\n            for (let i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors = [], options = ParseOptions.DEFAULT) {\n    let currentProperty = null;\n    let currentParent = [];\n    const previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty !== null) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    const visitor = {\n        onObjectBegin: () => {\n            const object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: (name) => {\n            currentProperty = name;\n        },\n        onObjectEnd: () => {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: () => {\n            const array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: () => {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: (error, offset, length) => {\n            errors.push({ error, offset, length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors = [], options = ParseOptions.DEFAULT) {\n    let currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    const visitor = {\n        onObjectBegin: (offset) => {\n            currentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: (name, offset, length) => {\n            currentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset, length, parent: currentParent });\n        },\n        onObjectEnd: (offset, length) => {\n            ensurePropertyComplete(offset + length); // in case of a missing value for a property: make sure property is complete\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: (offset, length) => {\n            currentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: (offset, length) => {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: (value, offset, length) => {\n            onValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: (sep, offset, length) => {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: (error, offset, length) => {\n            errors.push({ error, offset, length });\n        }\n    };\n    visit(text, visitor, options);\n    const result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return undefined;\n    }\n    let node = root;\n    for (let segment of path) {\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return undefined;\n            }\n            let found = false;\n            for (const propertyNode of node.children) {\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment && propertyNode.children.length === 2) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return undefined;\n            }\n        }\n        else {\n            const index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return undefined;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    const path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        const key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        const index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            const obj = Object.create(null);\n            for (let prop of node.children) {\n                const valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return undefined;\n    }\n}\nexport function contains(node, offset, includeRightBound = false) {\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound = false) {\n    if (contains(node, offset, includeRightBound)) {\n        const children = node.children;\n        if (Array.isArray(children)) {\n            for (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n                const item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return undefined;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options = ParseOptions.DEFAULT) {\n    const _scanner = createScanner(text, false);\n    // Important: Only pass copies of this to visitor functions to prevent accidental modification, and\n    // to not affect visitor functions which stored a reference to a previous JSONPath\n    const _jsonPath = [];\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n    }\n    function toNoArgVisitWithPath(visitFunction) {\n        return visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter()) : () => true;\n    }\n    function toOneArgVisitWithPath(visitFunction) {\n        return visitFunction ? (arg) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength(), _scanner.getTokenStartLine(), _scanner.getTokenStartCharacter(), () => _jsonPath.slice()) : () => true;\n    }\n    const onObjectBegin = toNoArgVisitWithPath(visitor.onObjectBegin), onObjectProperty = toOneArgVisitWithPath(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisitWithPath(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisitWithPath(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    const disallowComments = options && options.disallowComments;\n    const allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            const token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* ScanError.InvalidUnicode */:\n                    handleError(14 /* ParseErrorCode.InvalidUnicode */);\n                    break;\n                case 5 /* ScanError.InvalidEscapeCharacter */:\n                    handleError(15 /* ParseErrorCode.InvalidEscapeCharacter */);\n                    break;\n                case 3 /* ScanError.UnexpectedEndOfNumber */:\n                    handleError(13 /* ParseErrorCode.UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* ScanError.UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* ParseErrorCode.UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* ScanError.UnexpectedEndOfString */:\n                    handleError(12 /* ParseErrorCode.UnexpectedEndOfString */);\n                    break;\n                case 6 /* ScanError.InvalidCharacter */:\n                    handleError(16 /* ParseErrorCode.InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* SyntaxKind.LineCommentTrivia */:\n                case 13 /* SyntaxKind.BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* ParseErrorCode.InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* SyntaxKind.Unknown */:\n                    handleError(1 /* ParseErrorCode.InvalidSymbol */);\n                    break;\n                case 15 /* SyntaxKind.Trivia */:\n                case 14 /* SyntaxKind.LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter = [], skipUntil = []) {\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            let token = _scanner.getToken();\n            while (token !== 17 /* SyntaxKind.EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        const value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n            // add property name afterwards\n            _jsonPath.push(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* SyntaxKind.NumericLiteral */:\n                const tokenValue = _scanner.getTokenValue();\n                let value = Number(tokenValue);\n                if (isNaN(value)) {\n                    handleError(2 /* ParseErrorCode.InvalidNumberFormat */);\n                    value = 0;\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* SyntaxKind.NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* SyntaxKind.TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* SyntaxKind.FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* SyntaxKind.StringLiteral */) {\n            handleError(3 /* ParseErrorCode.PropertyNameExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* SyntaxKind.ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ParseErrorCode.ValueExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ParseErrorCode.ColonExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n        }\n        _jsonPath.pop(); // remove processed property name\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        let needsComma = false;\n        while (_scanner.getToken() !== 2 /* SyntaxKind.CloseBraceToken */ && _scanner.getToken() !== 17 /* SyntaxKind.EOF */) {\n            if (_scanner.getToken() === 5 /* SyntaxKind.CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* SyntaxKind.CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* ParseErrorCode.CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ParseErrorCode.ValueExpected */, [], [2 /* SyntaxKind.CloseBraceToken */, 5 /* SyntaxKind.CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* SyntaxKind.CloseBraceToken */) {\n            handleError(7 /* ParseErrorCode.CloseBraceExpected */, [2 /* SyntaxKind.CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        let isFirstElement = true;\n        let needsComma = false;\n        while (_scanner.getToken() !== 4 /* SyntaxKind.CloseBracketToken */ && _scanner.getToken() !== 17 /* SyntaxKind.EOF */) {\n            if (_scanner.getToken() === 5 /* SyntaxKind.CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* SyntaxKind.CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* ParseErrorCode.CommaExpected */, [], []);\n            }\n            if (isFirstElement) {\n                _jsonPath.push(0);\n                isFirstElement = false;\n            }\n            else {\n                _jsonPath[_jsonPath.length - 1]++;\n            }\n            if (!parseValue()) {\n                handleError(4 /* ParseErrorCode.ValueExpected */, [], [4 /* SyntaxKind.CloseBracketToken */, 5 /* SyntaxKind.CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (!isFirstElement) {\n            _jsonPath.pop(); // remove array index\n        }\n        if (_scanner.getToken() !== 4 /* SyntaxKind.CloseBracketToken */) {\n            handleError(8 /* ParseErrorCode.CloseBracketExpected */, [4 /* SyntaxKind.CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* SyntaxKind.OpenBracketToken */:\n                return parseArray();\n            case 1 /* SyntaxKind.OpenBraceToken */:\n                return parseObject();\n            case 10 /* SyntaxKind.StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* SyntaxKind.EOF */) {\n        if (options.allowEmptyContent) {\n            return true;\n        }\n        handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n        return false;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ParseErrorCode.ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* SyntaxKind.EOF */) {\n        handleError(9 /* ParseErrorCode.EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    let _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* SyntaxKind.LineCommentTrivia */:\n            case 13 /* SyntaxKind.BlockCommentTrivia */:\n            case 17 /* SyntaxKind.EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== undefined) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* SyntaxKind.EOF */);\n    return parts.join('');\n}\nexport function getNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        case 'object': {\n            if (!value) {\n                return 'null';\n            }\n            else if (Array.isArray(value)) {\n                return 'array';\n            }\n            return 'object';\n        }\n        default: return 'null';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner';\nexport function format(documentText, range, options) {\n    let initialIndentLevel;\n    let formatText;\n    let formatTextStart;\n    let rangeStart;\n    let rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        let endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    const eol = getEOL(options, documentText);\n    let numberLineBreaks = 0;\n    let indentLevel = 0;\n    let indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    let scanner = createScanner(formatText, false);\n    let hasError = false;\n    function newLinesAndIndent() {\n        if (numberLineBreaks > 1) {\n            return repeat(eol, numberLineBreaks) + repeat(indentValue, initialIndentLevel + indentLevel);\n        }\n        else {\n            return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n        }\n    }\n    function scanNext() {\n        let token = scanner.scan();\n        numberLineBreaks = 0;\n        while (token === 15 /* SyntaxKind.Trivia */ || token === 14 /* SyntaxKind.LineBreakTrivia */) {\n            if (token === 14 /* SyntaxKind.LineBreakTrivia */ && options.keepLines) {\n                numberLineBreaks += 1;\n            }\n            else if (token === 14 /* SyntaxKind.LineBreakTrivia */) {\n                numberLineBreaks = 1;\n            }\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* SyntaxKind.Unknown */ || scanner.getTokenError() !== 0 /* ScanError.None */;\n        return token;\n    }\n    const editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && (!range || (startOffset < rangeEnd && endOffset > rangeStart)) && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    let firstToken = scanNext();\n    if (options.keepLines && numberLineBreaks > 0) {\n        addEdit(repeat(eol, numberLineBreaks), 0, 0);\n    }\n    if (firstToken !== 17 /* SyntaxKind.EOF */) {\n        let firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        let initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* SyntaxKind.EOF */) {\n        let firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        let secondToken = scanNext();\n        let replaceContent = '';\n        let needsLineBreak = false;\n        while (numberLineBreaks === 0 && (secondToken === 12 /* SyntaxKind.LineCommentTrivia */ || secondToken === 13 /* SyntaxKind.BlockCommentTrivia */)) {\n            let commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            needsLineBreak = secondToken === 12 /* SyntaxKind.LineCommentTrivia */;\n            replaceContent = needsLineBreak ? newLinesAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* SyntaxKind.CloseBraceToken */) {\n            if (firstToken !== 1 /* SyntaxKind.OpenBraceToken */) {\n                indentLevel--;\n            }\n            ;\n            if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 1 /* SyntaxKind.OpenBraceToken */) {\n                replaceContent = newLinesAndIndent();\n            }\n            else if (options.keepLines) {\n                replaceContent = ' ';\n            }\n        }\n        else if (secondToken === 4 /* SyntaxKind.CloseBracketToken */) {\n            if (firstToken !== 3 /* SyntaxKind.OpenBracketToken */) {\n                indentLevel--;\n            }\n            ;\n            if (options.keepLines && numberLineBreaks > 0 || !options.keepLines && firstToken !== 3 /* SyntaxKind.OpenBracketToken */) {\n                replaceContent = newLinesAndIndent();\n            }\n            else if (options.keepLines) {\n                replaceContent = ' ';\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* SyntaxKind.OpenBracketToken */:\n                case 1 /* SyntaxKind.OpenBraceToken */:\n                    indentLevel++;\n                    if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else {\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 5 /* SyntaxKind.CommaToken */:\n                    if (options.keepLines && numberLineBreaks > 0 || !options.keepLines) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else {\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 12 /* SyntaxKind.LineCommentTrivia */:\n                    replaceContent = newLinesAndIndent();\n                    break;\n                case 13 /* SyntaxKind.BlockCommentTrivia */:\n                    if (numberLineBreaks > 0) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else if (!needsLineBreak) {\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* SyntaxKind.ColonToken */:\n                    if (options.keepLines && numberLineBreaks > 0) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else if (!needsLineBreak) {\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 10 /* SyntaxKind.StringLiteral */:\n                    if (options.keepLines && numberLineBreaks > 0) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else if (secondToken === 6 /* SyntaxKind.ColonToken */ && !needsLineBreak) {\n                        replaceContent = '';\n                    }\n                    break;\n                case 7 /* SyntaxKind.NullKeyword */:\n                case 8 /* SyntaxKind.TrueKeyword */:\n                case 9 /* SyntaxKind.FalseKeyword */:\n                case 11 /* SyntaxKind.NumericLiteral */:\n                case 2 /* SyntaxKind.CloseBraceToken */:\n                case 4 /* SyntaxKind.CloseBracketToken */:\n                    if (options.keepLines && numberLineBreaks > 0) {\n                        replaceContent = newLinesAndIndent();\n                    }\n                    else {\n                        if ((secondToken === 12 /* SyntaxKind.LineCommentTrivia */ || secondToken === 13 /* SyntaxKind.BlockCommentTrivia */) && !needsLineBreak) {\n                            replaceContent = ' ';\n                        }\n                        else if (secondToken !== 5 /* SyntaxKind.CommaToken */ && secondToken !== 17 /* SyntaxKind.EOF */) {\n                            hasError = true;\n                        }\n                    }\n                    break;\n                case 16 /* SyntaxKind.Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (numberLineBreaks > 0 && (secondToken === 12 /* SyntaxKind.LineCommentTrivia */ || secondToken === 13 /* SyntaxKind.BlockCommentTrivia */)) {\n                replaceContent = newLinesAndIndent();\n            }\n        }\n        if (secondToken === 17 /* SyntaxKind.EOF */) {\n            if (options.keepLines && numberLineBreaks > 0) {\n                replaceContent = newLinesAndIndent();\n            }\n            else {\n                replaceContent = options.insertFinalNewline ? eol : '';\n            }\n        }\n        const secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    let result = '';\n    for (let i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    let i = 0;\n    let nChars = 0;\n    const tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        let ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format';\nimport { parseTree, findNodeAtLocation } from './parser';\nexport function removeProperty(text, path, options) {\n    return setProperty(text, path, void 0, options);\n}\nexport function setProperty(text, originalPath, value, options) {\n    const path = originalPath.slice();\n    const errors = [];\n    const root = parseTree(text, errors);\n    let parent = void 0;\n    let lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = { [lastSegment]: value };\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) { // delete\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, options);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        const existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) { // delete\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                const propertyIndex = parent.children.indexOf(existing.parent);\n                let removeBegin;\n                let removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    let previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        let next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, options);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, options);\n            }\n        }\n        else {\n            if (value === void 0) { // delete\n                return []; // property does not exist, nothing to do\n            }\n            const newProperty = `${JSON.stringify(lastSegment)}: ${JSON.stringify(value)}`;\n            const index = options.getInsertionIndex ? options.getInsertionIndex(parent.children.map(p => p.children[0].value)) : parent.children.length;\n            let edit;\n            if (index > 0) {\n                let previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, options);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        const insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            const newProperty = `${JSON.stringify(value)}`;\n            let edit;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                const previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, options);\n        }\n        else if (value === void 0 && parent.children.length >= 0) {\n            // Removal\n            const removalIndex = lastSegment;\n            const toRemove = parent.children[removalIndex];\n            let edit;\n            if (parent.children.length === 1) {\n                // only item\n                edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n            }\n            else if (parent.children.length - 1 === removalIndex) {\n                // last item\n                let previous = parent.children[removalIndex - 1];\n                let offset = previous.offset + previous.length;\n                let parentEndOffset = parent.offset + parent.length;\n                edit = { offset, length: parentEndOffset - 2 - offset, content: '' };\n            }\n            else {\n                edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n            }\n            return withFormatting(text, edit, options);\n        }\n        else if (value !== void 0) {\n            let edit;\n            const newProperty = `${JSON.stringify(value)}`;\n            if (!options.isArrayInsertion && parent.children.length > lastSegment) {\n                const toModify = parent.children[lastSegment];\n                edit = { offset: toModify.offset, length: toModify.length, content: newProperty };\n            }\n            else if (parent.children.length === 0 || lastSegment === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: parent.children.length === 0 ? newProperty : newProperty + ',' };\n            }\n            else {\n                const index = lastSegment > parent.children.length ? parent.children.length : lastSegment;\n                const previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, options);\n        }\n        else {\n            throw new Error(`Can not ${value === void 0 ? 'remove' : (options.isArrayInsertion ? 'insert' : 'modify')} Array index ${insertIndex} as length is not sufficient`);\n        }\n    }\n    else {\n        throw new Error(`Can not add ${typeof lastSegment !== 'number' ? 'index' : 'property'} to parent of type ${parent.type}`);\n    }\n}\nfunction withFormatting(text, edit, options) {\n    if (!options.formattingOptions) {\n        return [edit];\n    }\n    // apply the edit\n    let newText = applyEdit(text, edit);\n    // format the new text\n    let begin = edit.offset;\n    let end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) { // insert or remove\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    const edits = format(newText, { offset: begin, length: end - begin }, { ...options.formattingOptions, keepLines: false });\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (let i = edits.length - 1; i >= 0; i--) {\n        const edit = edits[i];\n        newText = applyEdit(newText, edit);\n        begin = Math.min(begin, edit.offset);\n        end = Math.max(end, edit.offset + edit.length);\n        end += edit.content.length - edit.length;\n    }\n    // create a single edit with all changes\n    const editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format';\nimport * as edit from './impl/edit';\nimport * as scanner from './impl/scanner';\nimport * as parser from './impl/parser';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport const createScanner = scanner.createScanner;\nexport var ScanError;\n(function (ScanError) {\n    ScanError[ScanError[\"None\"] = 0] = \"None\";\n    ScanError[ScanError[\"UnexpectedEndOfComment\"] = 1] = \"UnexpectedEndOfComment\";\n    ScanError[ScanError[\"UnexpectedEndOfString\"] = 2] = \"UnexpectedEndOfString\";\n    ScanError[ScanError[\"UnexpectedEndOfNumber\"] = 3] = \"UnexpectedEndOfNumber\";\n    ScanError[ScanError[\"InvalidUnicode\"] = 4] = \"InvalidUnicode\";\n    ScanError[ScanError[\"InvalidEscapeCharacter\"] = 5] = \"InvalidEscapeCharacter\";\n    ScanError[ScanError[\"InvalidCharacter\"] = 6] = \"InvalidCharacter\";\n})(ScanError || (ScanError = {}));\nexport var SyntaxKind;\n(function (SyntaxKind) {\n    SyntaxKind[SyntaxKind[\"OpenBraceToken\"] = 1] = \"OpenBraceToken\";\n    SyntaxKind[SyntaxKind[\"CloseBraceToken\"] = 2] = \"CloseBraceToken\";\n    SyntaxKind[SyntaxKind[\"OpenBracketToken\"] = 3] = \"OpenBracketToken\";\n    SyntaxKind[SyntaxKind[\"CloseBracketToken\"] = 4] = \"CloseBracketToken\";\n    SyntaxKind[SyntaxKind[\"CommaToken\"] = 5] = \"CommaToken\";\n    SyntaxKind[SyntaxKind[\"ColonToken\"] = 6] = \"ColonToken\";\n    SyntaxKind[SyntaxKind[\"NullKeyword\"] = 7] = \"NullKeyword\";\n    SyntaxKind[SyntaxKind[\"TrueKeyword\"] = 8] = \"TrueKeyword\";\n    SyntaxKind[SyntaxKind[\"FalseKeyword\"] = 9] = \"FalseKeyword\";\n    SyntaxKind[SyntaxKind[\"StringLiteral\"] = 10] = \"StringLiteral\";\n    SyntaxKind[SyntaxKind[\"NumericLiteral\"] = 11] = \"NumericLiteral\";\n    SyntaxKind[SyntaxKind[\"LineCommentTrivia\"] = 12] = \"LineCommentTrivia\";\n    SyntaxKind[SyntaxKind[\"BlockCommentTrivia\"] = 13] = \"BlockCommentTrivia\";\n    SyntaxKind[SyntaxKind[\"LineBreakTrivia\"] = 14] = \"LineBreakTrivia\";\n    SyntaxKind[SyntaxKind[\"Trivia\"] = 15] = \"Trivia\";\n    SyntaxKind[SyntaxKind[\"Unknown\"] = 16] = \"Unknown\";\n    SyntaxKind[SyntaxKind[\"EOF\"] = 17] = \"EOF\";\n})(SyntaxKind || (SyntaxKind = {}));\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport const getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore, always check the errors list to find out if the input was valid.\n */\nexport const parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport const parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport const findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the innermost node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport const findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport const getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport const getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport const visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport const stripComments = parser.stripComments;\nexport var ParseErrorCode;\n(function (ParseErrorCode) {\n    ParseErrorCode[ParseErrorCode[\"InvalidSymbol\"] = 1] = \"InvalidSymbol\";\n    ParseErrorCode[ParseErrorCode[\"InvalidNumberFormat\"] = 2] = \"InvalidNumberFormat\";\n    ParseErrorCode[ParseErrorCode[\"PropertyNameExpected\"] = 3] = \"PropertyNameExpected\";\n    ParseErrorCode[ParseErrorCode[\"ValueExpected\"] = 4] = \"ValueExpected\";\n    ParseErrorCode[ParseErrorCode[\"ColonExpected\"] = 5] = \"ColonExpected\";\n    ParseErrorCode[ParseErrorCode[\"CommaExpected\"] = 6] = \"CommaExpected\";\n    ParseErrorCode[ParseErrorCode[\"CloseBraceExpected\"] = 7] = \"CloseBraceExpected\";\n    ParseErrorCode[ParseErrorCode[\"CloseBracketExpected\"] = 8] = \"CloseBracketExpected\";\n    ParseErrorCode[ParseErrorCode[\"EndOfFileExpected\"] = 9] = \"EndOfFileExpected\";\n    ParseErrorCode[ParseErrorCode[\"InvalidCommentToken\"] = 10] = \"InvalidCommentToken\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfComment\"] = 11] = \"UnexpectedEndOfComment\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfString\"] = 12] = \"UnexpectedEndOfString\";\n    ParseErrorCode[ParseErrorCode[\"UnexpectedEndOfNumber\"] = 13] = \"UnexpectedEndOfNumber\";\n    ParseErrorCode[ParseErrorCode[\"InvalidUnicode\"] = 14] = \"InvalidUnicode\";\n    ParseErrorCode[ParseErrorCode[\"InvalidEscapeCharacter\"] = 15] = \"InvalidEscapeCharacter\";\n    ParseErrorCode[ParseErrorCode[\"InvalidCharacter\"] = 16] = \"InvalidCharacter\";\n})(ParseErrorCode || (ParseErrorCode = {}));\nexport function printParseErrorCode(code) {\n    switch (code) {\n        case 1 /* ParseErrorCode.InvalidSymbol */: return 'InvalidSymbol';\n        case 2 /* ParseErrorCode.InvalidNumberFormat */: return 'InvalidNumberFormat';\n        case 3 /* ParseErrorCode.PropertyNameExpected */: return 'PropertyNameExpected';\n        case 4 /* ParseErrorCode.ValueExpected */: return 'ValueExpected';\n        case 5 /* ParseErrorCode.ColonExpected */: return 'ColonExpected';\n        case 6 /* ParseErrorCode.CommaExpected */: return 'CommaExpected';\n        case 7 /* ParseErrorCode.CloseBraceExpected */: return 'CloseBraceExpected';\n        case 8 /* ParseErrorCode.CloseBracketExpected */: return 'CloseBracketExpected';\n        case 9 /* ParseErrorCode.EndOfFileExpected */: return 'EndOfFileExpected';\n        case 10 /* ParseErrorCode.InvalidCommentToken */: return 'InvalidCommentToken';\n        case 11 /* ParseErrorCode.UnexpectedEndOfComment */: return 'UnexpectedEndOfComment';\n        case 12 /* ParseErrorCode.UnexpectedEndOfString */: return 'UnexpectedEndOfString';\n        case 13 /* ParseErrorCode.UnexpectedEndOfNumber */: return 'UnexpectedEndOfNumber';\n        case 14 /* ParseErrorCode.InvalidUnicode */: return 'InvalidUnicode';\n        case 15 /* ParseErrorCode.InvalidEscapeCharacter */: return 'InvalidEscapeCharacter';\n        case 16 /* ParseErrorCode.InvalidCharacter */: return 'InvalidCharacter';\n    }\n    return '<unknown ParseErrorCode>';\n}\n/**\n * Computes the edit operations needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns The edit operations describing the formatting changes to the original document following the format described in {@linkcode EditResult}.\n * To apply the edit operations to the input, use {@linkcode applyEdits}.\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edit operations needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns The edit operations describing the changes to the original document, following the format described in {@linkcode EditResult}.\n * To apply the edit operations to the input, use {@linkcode applyEdits}.\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options);\n}\n/**\n * Applies edits to an input string.\n * @param text The input text\n * @param edits Edit operations following the format described in {@linkcode EditResult}.\n * @returns The text with the applied edits.\n * @throws An error if the edit operations are not well-formed as described in {@linkcode EditResult}.\n */\nexport function applyEdits(text, edits) {\n    let sortedEdits = edits.slice(0).sort((a, b) => {\n        const diff = a.offset - b.offset;\n        if (diff === 0) {\n            return a.length - b.length;\n        }\n        return diff;\n    });\n    let lastModifiedOffset = text.length;\n    for (let i = sortedEdits.length - 1; i >= 0; i--) {\n        let e = sortedEdits[i];\n        if (e.offset + e.length <= lastModifiedOffset) {\n            text = edit.applyEdit(text, e);\n        }\n        else {\n            throw new Error('Overlapping edit');\n        }\n        lastModifiedOffset = e.offset;\n    }\n    return text;\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { l10n } from 'vscode';\n\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\n/**\n * Create a localized of the time between now and the specified date.\n * @param date The date to generate the difference from.\n * @param appendAgoLabel Whether to append the \" ago\" to the end.\n * @param useFullTimeWords Whether to use full words (eg. seconds) instead of\n * shortened (eg. secs).\n * @param disallowNow Whether to disallow the string \"now\" when the difference\n * is less than 30 seconds.\n */\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean, useFullTimeWords?: boolean, disallowNow?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn l10n.t('in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (!disallowNow && seconds < 30) {\n\t\treturn l10n.t('now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} second ago', value)\n\t\t\t\t\t: l10n.t('{0} sec ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} seconds ago', value)\n\t\t\t\t\t: l10n.t('{0} secs ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} second', value)\n\t\t\t\t\t: l10n.t('{0} sec', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} seconds', value)\n\t\t\t\t\t: l10n.t('{0} secs', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} minute ago', value)\n\t\t\t\t\t: l10n.t('{0} min ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} minutes ago', value)\n\t\t\t\t\t: l10n.t('{0} mins ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} minute', value)\n\t\t\t\t\t: l10n.t('{0} min', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} minutes', value)\n\t\t\t\t\t: l10n.t('{0} mins', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} hour ago', value)\n\t\t\t\t\t: l10n.t('{0} hr ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} hours ago', value)\n\t\t\t\t\t: l10n.t('{0} hrs ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} hour', value)\n\t\t\t\t\t: l10n.t('{0} hr', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} hours', value)\n\t\t\t\t\t: l10n.t('{0} hrs', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? l10n.t('{0} day ago', value)\n\t\t\t\t: l10n.t('{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? l10n.t('{0} day', value)\n\t\t\t\t: l10n.t('{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} week ago', value)\n\t\t\t\t\t: l10n.t('{0} wk ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} weeks ago', value)\n\t\t\t\t\t: l10n.t('{0} wks ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} week', value)\n\t\t\t\t\t: l10n.t('{0} wk', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} weeks', value)\n\t\t\t\t\t: l10n.t('{0} wks', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} month ago', value)\n\t\t\t\t\t: l10n.t('{0} mo ago', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} months ago', value)\n\t\t\t\t\t: l10n.t('{0} mos ago', value);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === 1) {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} month', value)\n\t\t\t\t\t: l10n.t('{0} mo', value);\n\t\t\t} else {\n\t\t\t\treturn useFullTimeWords\n\t\t\t\t\t? l10n.t('{0} months', value)\n\t\t\t\t\t: l10n.t('{0} mos', value);\n\t\t\t}\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\tif (value === 1) {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? l10n.t('{0} year ago', value)\n\t\t\t\t: l10n.t('{0} yr ago', value);\n\t\t} else {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? l10n.t('{0} years ago', value)\n\t\t\t\t: l10n.t('{0} yrs ago', value);\n\t\t}\n\t} else {\n\t\tif (value === 1) {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? l10n.t('{0} year', value)\n\t\t\t\t: l10n.t('{0} yr', value);\n\t\t} else {\n\t\t\treturn useFullTimeWords\n\t\t\t\t? l10n.t('{0} years', value)\n\t\t\t\t: l10n.t('{0} yrs', value);\n\t\t}\n\t}\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(303);\n"],"names":["async","context","subscriptions","push","addJSONProviders","httpRequest","xhr","undefined","module","exports","require","USER_AGENT","npmCommandPath","mostDependedOn","knownScopes","getDocumentSelector","language","scheme","pattern","collectDefaultSuggestions","_resource","result","proposal","CompletionItem","l10n","t","kind","CompletionItemKind","Module","insertText","SnippetString","JSON","stringify","add","Promise","resolve","isEnabled","this","onlineEnabled","workspace","getConfiguration","get","collectPropertySuggestions","location","currentWord","addValue","isLast","collector","matches","queryUrl","length","indexOf","collectScopedPackages","scope","Property","appendText","appendTabstop","filterText","documentation","command","title","setAsIncomplete","encodeURIComponent","url","headers","agent","then","success","status","error","responseText","obj","parse","objects","Array","isArray","results","processPackage","package","e","forEach","name","segments","split","substr","object","collectValueSuggestions","resource","currentKey","path","info","fetchPackageInfo","version","getDocumentation","description","time","homepage","str","MarkdownString","fromNow","Date","resolveSuggestion","item","label","isValidNPMName","match","pack","npmView","npmjsView","_reject","args","options","cwd","dirname","fsPath","env","COREPACK_ENABLE_AUTO_PIN","COREPACK_ENABLE_PROJECT_SPEC","commandPath","cp","execFile","stdout","content","latest","Object","keys","versions","pop","getInfoContribution","appendVariable","links","contributions","PackageJSONContribution","contribution","selector","languages","registerCompletionItemProvider","JSONCompletionItemProvider","registerHoverProvider","JSONHoverProvider","Disposable","from","jsonContribution","constructor","provideHover","document","position","_token","offset","offsetAt","getLocation","getText","previousNode","node","promise","uri","htmlContent","contents","range","Range","positionAt","lastResource","resolveCompletionItem","resolver","provideCompletionItems","getCurrentWord","overwriteRange","items","isIncomplete","type","proposed","suggestion","key","replacing","inserting","start","message","console","log","collectPromise","isAtPropertyKey","scanner","createScanner","hasColonAfter","CompletionList","i","character","text","lineAt","line","charAt","substring","setPosition","nextToken","scan","getTokenError","xhrDisabled","reject","r","defineProperty","value","getErrorStatusDescription","configure","Headers","o","set","user","password","btoa","method","redirect","followRedirects","mode","data","body","token","AbortController","isCancellationRequested","abort","onCancellationRequested","signal","Request","s","fetch","a","n","arrayBuffer","TextDecoder","decode","Uint8Array","String","__esModule","ignoreTrivia","len","pos","tokenOffset","lineNumber","lineStartOffset","tokenLineStartOffset","prevTokenLineStartOffset","scanError","scanHexDigits","count","exact","digits","ch","charCodeAt","scanNext","code","isWhiteSpace","fromCharCode","isLineBreak","ch3","scanString","safeLength","commentClosed","isDigit","end","scanNumber","isUnknownContentCharacter","newPosition","getPosition","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenStartLine","getTokenStartCharacter","CharacterCodes","ParseOptions","format","documentText","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","isEOL","endOffset","nChars","tabSize","Math","floor","computeIndentLevel","eol","getEOL","indentValue","numberLineBreaks","indentLevel","insertSpaces","repeat","hasError","newLinesAndIndent","keepLines","editOperations","addEdit","startOffset","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","needsLineBreak","insertFinalNewline","parseTree","errors","DEFAULT","currentParent","children","parent","ensurePropertyComplete","onValue","valueNode","visit","onObjectBegin","onObjectProperty","onObjectEnd","onArrayBegin","onArrayEnd","onLiteralValue","getNodeType","onSeparator","sep","colonOffset","onError","findNodeAtLocation","root","segment","found","propertyNode","index","visitor","_scanner","_jsonPath","toNoArgVisit","visitFunction","toNoArgVisitWithPath","slice","toOneArgVisit","arg","toOneArgVisitWithPath","onComment","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseProperty","parseValue","isFirstElement","needsComma","parseArray","parseObject","tokenValue","Number","isNaN","parseLiteral","allowEmptyContent","withFormatting","edit","formattingOptions","newText","applyEdit","begin","edits","min","max","ScanError","SyntaxKind","earlyReturnException","previousNodeInst","setPreviousNode","last","k","currentProperty","previousParents","array","findNodeAtOffset","includeRightBound","contains","getNodePath","getNodeValue","map","create","prop","replaceCh","parts","replace","join","ParseErrorCode","printParseErrorCode","modify","originalPath","lastSegment","existing","Error","propertyIndex","removeBegin","removeEnd","previous","newProperty","getInsertionIndex","p","insertIndex","removalIndex","toRemove","isArrayInsertion","toModify","applyEdits","sortedEdits","sort","b","diff","lastModifiedOffset","assertPath","TypeError","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","posix","resolvedPath","resolvedAbsolute","arguments","process","normalize","isAbsolute","trailingSeparator","joined","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","hasRoot","matchedSlash","basename","ext","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","dir","base","_format","ret","delimiter","win32","date","appendAgoLabel","useFullTimeWords","disallowNow","getTime","seconds","round","minute","hour","day","week","month","year","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call","d","definition","enumerable","prototype","hasOwnProperty","Symbol","toStringTag","__webpack_exports__"],"sourceRoot":""}